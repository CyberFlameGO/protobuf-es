v8-version,10,2,154,13,-node.11,0
v8-platform,macos,macos
shared-library,/Users/sayers/.nvm/versions/node/v18.8.0/bin/node,0x1049f0000,0x105ce370c,77512704
shared-library,/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation,0x1a4ec1fc0,0x1a50a5040,615825408
shared-library,/usr/lib/libobjc.A.dylib,0x1a4cf87c0,0x1a4d25d08,615825408
shared-library,/usr/lib/liboah.dylib,0x1af9b2e78,0x1af9b7e78,615825408
shared-library,/usr/lib/libfakelink.dylib,0x1af9e3fd8,0x1af9e6ba0,615825408
shared-library,/usr/lib/libicucore.A.dylib,0x1a72f9ab0,0x1a7547390,615825408
shared-library,/usr/lib/libSystem.B.dylib,0x1af9e24fc,0x1af9e2b0c,615825408
shared-library,/System/Library/PrivateFrameworks/SoftLinking.framework/Versions/A/SoftLinking,0x1af9e7be4,0x1af9e7e50,615825408
shared-library,/usr/lib/libc++abi.dylib,0x1a4e22764,0x1a4e35dc8,615825408
shared-library,/usr/lib/libc++.1.dylib,0x1a4dbf220,0x1a4e16564,615825408
shared-library,/usr/lib/system/libcache.dylib,0x1af9dc6d0,0x1af9df390,615825408
shared-library,/usr/lib/system/libcommonCrypto.dylib,0x1af999a6c,0x1af9a4ad4,615825408
shared-library,/usr/lib/system/libcompiler_rt.dylib,0x1af9c2980,0x1af9c5864,615825408
shared-library,/usr/lib/system/libcopyfile.dylib,0x1af9b9990,0x1af9c0040,615825408
shared-library,/usr/lib/system/libcorecrypto.dylib,0x1a4bfcc40,0x1a4c68044,615825408
shared-library,/usr/lib/system/libdispatch.dylib,0x1a4cb1be4,0x1a4cee208,615825408
shared-library,/usr/lib/system/libdyld.dylib,0x1a4e7eca0,0x1a4e8a0a8,615825408
shared-library,/usr/lib/system/libkeymgr.dylib,0x1af9d1764,0x1af9d1e50,615825408
shared-library,/usr/lib/system/libmacho.dylib,0x1af978690,0x1af97c9bc,615825408
shared-library,/usr/lib/system/libquarantine.dylib,0x1af064d2c,0x1af066bb8,615825408
shared-library,/usr/lib/system/libremovefile.dylib,0x1af9cf560,0x1af9d0c60,615825408
shared-library,/usr/lib/system/libsystem_asl.dylib,0x1a9ff7368,0x1aa00c010,615825408
shared-library,/usr/lib/system/libsystem_blocks.dylib,0x1a4b9e4c4,0x1a4b9ec68,615825408
shared-library,/usr/lib/system/libsystem_c.dylib,0x1a4d398ac,0x1a4db2b50,615825408
shared-library,/usr/lib/system/libsystem_collections.dylib,0x1af9c6904,0x1af9ca960,615825408
shared-library,/usr/lib/system/libsystem_configuration.dylib,0x1ae4fa534,0x1ae4fd6e8,615825408
shared-library,/usr/lib/system/libsystem_containermanager.dylib,0x1ad753700,0x1ad76b2e8,615825408
shared-library,/usr/lib/system/libsystem_coreservices.dylib,0x1af6d2884,0x1af6d62a8,615825408
shared-library,/usr/lib/system/libsystem_darwin.dylib,0x1a75b049c,0x1a75b7220,615825408
shared-library,/usr/lib/system/libsystem_dnssd.dylib,0x1af9d3900,0x1af9d9168,615825408
shared-library,/usr/lib/system/libsystem_featureflags.dylib,0x1a4d35cfc,0x1a4d37ad8,615825408
shared-library,/usr/lib/system/libsystem_info.dylib,0x1a4e94b9c,0x1a4ebb3c0,615825408
shared-library,/usr/lib/system/libsystem_m.dylib,0x1af93c7c0,0x1af9649a8,615825408
shared-library,/usr/lib/system/libsystem_malloc.dylib,0x1a4c8607c,0x1a4caa4a0,615825408
shared-library,/usr/lib/system/libsystem_networkextension.dylib,0x1a9f85a2c,0x1a9f98b20,615825408
shared-library,/usr/lib/system/libsystem_notify.dylib,0x1a7a098c8,0x1a7a16c00,615825408
shared-library,/usr/lib/system/libsystem_product_info_filter.dylib,0x1b5d36000,0x1b5d36000,615825408
shared-library,/usr/lib/system/libsystem_sandbox.dylib,0x1ae4fe8f4,0x1ae5020f0,615825408
shared-library,/usr/lib/system/libsystem_secinit.dylib,0x1af9cbb38,0x1af9cd318,615825408
shared-library,/usr/lib/system/libsystem_kernel.dylib,0x1a4e3a500,0x1a4e6a894,615825408
shared-library,/usr/lib/system/libsystem_platform.dylib,0x1a4e8c4a0,0x1a4e92308,615825408
shared-library,/usr/lib/system/libsystem_pthread.dylib,0x1a4e71da0,0x1a4e7c8f0,615825408
shared-library,/usr/lib/system/libsystem_symptoms.dylib,0x1ab75b740,0x1ab7612ac,615825408
shared-library,/usr/lib/system/libsystem_trace.dylib,0x1a4be2e28,0x1a4bf8200,615825408
shared-library,/usr/lib/system/libunwind.dylib,0x1af9aac9c,0x1af9b040c,615825408
shared-library,/usr/lib/system/libxpc.dylib,0x1a4ba03cc,0x1a4bd6a78,615825408
shared-library-end
tick,0x1a4e3a8ec,375,0,0x0,6
profiler,begin,1000
new,CodeRange,0x109c44000,0
new,MemoryChunk,0x152b3600000,262144
new,MemoryChunk,0xe2358a80000,262144
new,MemoryChunk,0x30fa23380000,262144
new,MemoryChunk,0x14a0cebc0000,262144
new,MemoryChunk,0x1b40fffc0000,262144
heap-capacity,1030976
heap-available,4346312320
new,MemoryChunk,0x3492b5ac0000,262144
tick,0x1a4e727cc,1666,0,0x0,6
new,MemoryChunk,0x130e98300000,262144
new,MemoryChunk,0x3d9b80180000,262144
new,MemoryChunk,0xa0ae21c0000,262144
new,MemoryChunk,0x111f698c0000,262144
new,MemoryChunk,0x25eb221c0000,262144
new,MemoryChunk,0x3b46b2000000,262144
new,MemoryChunk,0xd141ccc0000,262144
new,MemoryChunk,0x1e055ae40000,262144
new,MemoryChunk,0x1e27ac640000,262144
tick,0x1a4e8ee8c,2916,0,0x0,1
new,MemoryChunk,0x109c80000,262144
new,MemoryChunk,0x2fcdfef80000,262144
code-creation,Builtin,2,3458,0x1053c8000,824,DeoptimizationEntry_Eager
code-creation,Builtin,2,3500,0x1053c8340,824,DeoptimizationEntry_Lazy
code-creation,Builtin,2,3500,0x1053c8680,824,DeoptimizationEntry_Unused
code-creation,Builtin,2,3500,0x1053c89c0,980,RecordWriteEmitRememberedSetSaveFP
code-creation,Builtin,2,3500,0x1053c8da0,352,RecordWriteOmitRememberedSetSaveFP
code-creation,Builtin,2,3500,0x1053c8f20,692,RecordWriteEmitRememberedSetIgnoreFP
code-creation,Builtin,2,3500,0x1053c91e0,256,RecordWriteOmitRememberedSetIgnoreFP
code-creation,Builtin,2,3500,0x1053c9300,280,EphemeronKeyBarrierSaveFP
code-creation,Builtin,2,3500,0x1053c9420,184,EphemeronKeyBarrierIgnoreFP
code-creation,Builtin,2,3500,0x1053c94e0,76,AdaptorWithBuiltinExitFrame
code-creation,Builtin,2,3500,0x1053c9540,360,CallFunction_ReceiverIsNullOrUndefined
code-creation,Builtin,2,3541,0x1053c96c0,436,CallFunction_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,3541,0x1053c9880,476,CallFunction_ReceiverIsAny
code-creation,Builtin,2,3541,0x1053c9a60,232,CallBoundFunction
code-creation,Builtin,2,3541,0x1053c9b60,828,CallWrappedFunction
code-creation,Builtin,2,3541,0x1053c9ea0,192,Call_ReceiverIsNullOrUndefined
code-creation,Builtin,2,3541,0x1053c9f80,192,Call_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,3541,0x1053ca060,192,Call_ReceiverIsAny
code-creation,Builtin,2,3541,0x1053ca140,848,Call_ReceiverIsNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,3541,0x1053ca4a0,844,Call_ReceiverIsNullOrUndefined_Baseline
code-creation,Builtin,2,3541,0x1053ca800,996,Call_ReceiverIsNotNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,3541,0x1053cac00,992,Call_ReceiverIsNotNullOrUndefined_Baseline
code-creation,Builtin,2,3583,0x1053cb000,996,Call_ReceiverIsAny_Baseline_Compact
code-creation,Builtin,2,3583,0x1053cb400,992,Call_ReceiverIsAny_Baseline
code-creation,Builtin,2,3583,0x1053cb800,820,Call_ReceiverIsNullOrUndefined_WithFeedback
code-creation,Builtin,2,3583,0x1053cbb40,820,Call_ReceiverIsNotNullOrUndefined_WithFeedback
code-creation,Builtin,2,3583,0x1053cbe80,820,Call_ReceiverIsAny_WithFeedback
code-creation,Builtin,2,3583,0x1053cc1c0,780,CallProxy
code-creation,Builtin,2,3583,0x1053cc4e0,156,CallVarargs
code-creation,Builtin,2,3583,0x1053cc580,1148,CallWithSpread
code-creation,Builtin,2,3583,0x1053cca00,1928,CallWithSpread_Baseline
code-creation,Builtin,2,3583,0x1053cd1a0,1984,CallWithSpread_WithFeedback
code-creation,Builtin,2,3583,0x1053cd980,1160,CallWithArrayLike
code-creation,Builtin,2,3625,0x1053cde20,1960,CallWithArrayLike_WithFeedback
code-creation,Builtin,2,3625,0x1053ce5e0,184,CallForwardVarargs
code-creation,Builtin,2,3625,0x1053ce6a0,184,CallFunctionForwardVarargs
code-creation,Builtin,2,3625,0x1053ce760,156,CallFunctionTemplate_CheckAccess
code-creation,Builtin,2,3625,0x1053ce800,240,CallFunctionTemplate_CheckCompatibleReceiver
code-creation,Builtin,2,3625,0x1053ce900,328,CallFunctionTemplate_CheckAccessAndCompatibleReceiver
code-creation,Builtin,2,3666,0x1053cea60,24,ConstructFunction
code-creation,Builtin,2,3666,0x1053cea80,236,ConstructBoundFunction
code-creation,Builtin,2,3666,0x1053ceb80,44,ConstructedNonConstructable
code-creation,Builtin,2,3666,0x1053cebc0,88,Construct
code-creation,Builtin,2,3666,0x1053cec20,156,ConstructVarargs
code-creation,Builtin,2,3666,0x1053cecc0,1176,ConstructWithSpread
code-creation,Builtin,2,3666,0x1053cf160,1932,ConstructWithSpread_Baseline
code-creation,Builtin,2,3666,0x1053cf900,1912,ConstructWithSpread_WithFeedback
code-creation,Builtin,2,3666,0x1053d0080,1288,ConstructWithArrayLike
code-creation,Builtin,2,3666,0x1053d05a0,2020,ConstructWithArrayLike_WithFeedback
code-creation,Builtin,2,3708,0x1053d0da0,236,ConstructForwardVarargs
code-creation,Builtin,2,3708,0x1053d0ea0,236,ConstructFunctionForwardVarargs
code-creation,Builtin,2,3708,0x1053d0fa0,732,Construct_Baseline
code-creation,Builtin,2,3708,0x1053d1280,736,Construct_WithFeedback
code-creation,Builtin,2,3708,0x1053d1580,564,JSConstructStubGeneric
code-creation,Builtin,2,3708,0x1053d17c0,472,JSBuiltinsConstructStub
code-creation,Builtin,2,3708,0x1053d19a0,692,FastNewObject
code-creation,Builtin,2,3708,0x1053d1c60,332,FastNewClosure
code-creation,Builtin,2,3708,0x1053d1dc0,764,ConstructProxy
code-creation,Builtin,2,3708,0x1053d20c0,264,JSEntry
code-creation,Builtin,2,3708,0x1053d21e0,264,JSConstructEntry
code-creation,Builtin,2,3750,0x1053d2300,264,JSRunMicrotasksEntry
code-creation,Builtin,2,3750,0x1053d2420,188,JSEntryTrampoline
code-creation,Builtin,2,3750,0x1053d24e0,188,JSConstructEntryTrampoline
code-creation,Builtin,2,3750,0x1053d25a0,380,ResumeGeneratorTrampoline
code-creation,Builtin,2,3750,0x1053d2720,1636,StringFromCodePointAt
code-creation,Builtin,2,3750,0x1053d2da0,592,StringEqual
code-creation,Builtin,2,3750,0x1053d3000,320,StringGreaterThan
code-creation,Builtin,2,3750,0x1053d3160,320,StringGreaterThanOrEqual
code-creation,Builtin,2,3750,0x1053d32c0,320,StringLessThan
code-creation,Builtin,2,3750,0x1053d3420,320,StringLessThanOrEqual
code-creation,Builtin,2,3750,0x1053d3580,2708,StringSubstring
code-creation,Builtin,2,3750,0x1053d4020,116,OrderedHashTableHealIndex
code-creation,Builtin,2,3791,0x1053d40a0,1252,InterpreterEntryTrampoline
code-creation,Builtin,2,3791,0x1053d45a0,124,InterpreterPushArgsThenCall
code-creation,Builtin,2,3791,0x1053d4620,132,InterpreterPushUndefinedAndArgsThenCall
code-creation,Builtin,2,3791,0x1053d46c0,132,InterpreterPushArgsThenCallWithFinalSpread
code-creation,Builtin,2,3791,0x1053d4760,132,InterpreterPushArgsThenConstruct
code-creation,Builtin,2,3791,0x1053d4800,132,InterpreterPushArgsThenConstructArrayFunction
code-creation,Builtin,2,3791,0x1053d48a0,140,InterpreterPushArgsThenConstructWithFinalSpread
code-creation,Builtin,2,3791,0x1053d4940,92,InterpreterEnterAtBytecode
code-creation,Builtin,2,3791,0x1053d49a0,220,InterpreterEnterAtNextBytecode
code-creation,Builtin,2,3791,0x1053d4a80,80,InterpreterOnStackReplacement
code-creation,Builtin,2,3833,0x1053d4ae0,596,BaselineOutOfLinePrologue
code-creation,Builtin,2,3833,0x1053d4d40,76,BaselineOnStackReplacement
code-creation,Builtin,2,3833,0x1053d4da0,104,BaselineLeaveFrame
code-creation,Builtin,2,3833,0x1053d4e20,232,BaselineOrInterpreterEnterAtBytecode
code-creation,Builtin,2,3833,0x1053d4f20,236,BaselineOrInterpreterEnterAtNextBytecode
code-creation,Builtin,2,3833,0x1053d5020,208,InterpreterOnStackReplacement_ToBaseline
code-creation,Builtin,2,3833,0x1053d5100,1240,CompileLazy
code-creation,Builtin,2,3833,0x1053d55e0,76,CompileLazyDeoptimizedCode
code-creation,Builtin,2,3833,0x1053d5640,316,InstantiateAsmJs
code-creation,Builtin,2,3833,0x1053d5780,44,NotifyDeoptimized
code-creation,Builtin,2,3875,0x1053d57c0,88,ContinueToCodeStubBuiltin
code-creation,Builtin,2,3875,0x1053d5820,92,ContinueToCodeStubBuiltinWithResult
code-creation,Builtin,2,3875,0x1053d5880,92,ContinueToJavaScriptBuiltin
code-creation,Builtin,2,3875,0x1053d58e0,108,ContinueToJavaScriptBuiltinWithResult
code-creation,Builtin,2,3875,0x1053d5960,396,CallApiCallback
code-creation,Builtin,2,3875,0x1053d5b00,372,CallApiGetter
code-creation,Builtin,2,3875,0x1053d5c80,8,HandleApiCall
code-creation,Builtin,2,3875,0x1053d5ca0,8,HandleApiCallAsFunction
code-creation,Builtin,2,3875,0x1053d5cc0,8,HandleApiCallAsConstructor
code-creation,Builtin,2,3875,0x1053d5ce0,56,AllocateInYoungGeneration
code-creation,Builtin,2,3916,0x1053d5d20,52,AllocateRegularInYoungGeneration
code-creation,Builtin,2,3916,0x1053d5d60,56,AllocateInOldGeneration
code-creation,Builtin,2,3916,0x1053d5da0,52,AllocateRegularInOldGeneration
code-creation,Builtin,2,3916,0x1053d5de0,416,CopyFastSmiOrObjectElements
code-creation,Builtin,2,3916,0x1053d5fa0,540,GrowFastDoubleElements
code-creation,Builtin,2,3916,0x1053d61c0,424,GrowFastSmiOrObjectElements
code-creation,Builtin,2,3916,0x1053d6380,484,DebugBreakTrampoline
code-creation,Builtin,2,3916,0x1053d6580,220,ToNumber
code-creation,Builtin,2,3916,0x1053d6660,328,ToNumber_Baseline
code-creation,Builtin,2,3916,0x1053d67c0,392,ToNumeric_Baseline
code-creation,Builtin,2,3916,0x1053d6960,140,PlainPrimitiveToNumber
code-creation,Builtin,2,3958,0x1053d6a00,260,ToNumberConvertBigInt
code-creation,Builtin,2,3958,0x1053d6b20,152,Typeof
code-creation,Builtin,2,3958,0x1053d6bc0,140,BigIntToI64
code-creation,Builtin,2,3958,0x1053d6c60,8,BigIntToI32Pair
code-creation,Builtin,2,3958,0x1053d6c80,264,I64ToBigInt
code-creation,Builtin,2,3958,0x1053d6da0,8,I32PairToBigInt
code-creation,Builtin,2,3958,0x1053d6dc0,136,ToBooleanLazyDeoptContinuation
code-creation,Builtin,2,3958,0x1053d6e60,3944,KeyedLoadIC_PolymorphicName
code-creation,Builtin,2,3958,0x1053d7de0,14344,KeyedStoreIC_Megamorphic
code-creation,Builtin,2,3958,0x1053db600,11192,DefineKeyedOwnIC_Megamorphic
code-creation,Builtin,2,3958,0x1053de1c0,500,LoadGlobalIC_NoFeedback
code-creation,Builtin,2,4000,0x1053de3c0,84,LoadIC_FunctionPrototype
code-creation,Builtin,2,4000,0x1053de420,16,LoadIC_StringLength
code-creation,Builtin,2,4000,0x1053de440,20,LoadIC_StringWrapperLength
code-creation,Builtin,2,4000,0x1053de460,3120,LoadIC_NoFeedback
code-creation,Builtin,2,4000,0x1053df0a0,44,StoreGlobalIC_Slow
code-creation,Builtin,2,4000,0x1053df0e0,5952,StoreIC_NoFeedback
code-creation,Builtin,2,4000,0x1053e0840,2924,DefineNamedOwnIC_NoFeedback
code-creation,Builtin,2,4000,0x1053e13c0,220,KeyedLoadIC_SloppyArguments
code-creation,Builtin,2,4000,0x1053e14a0,68,LoadIndexedInterceptorIC
code-creation,Builtin,2,4000,0x1053e1500,288,KeyedStoreIC_SloppyArguments_Standard
code-creation,Builtin,2,4000,0x1053e1640,288,KeyedStoreIC_SloppyArguments_GrowNoTransitionHandleCOW
code-creation,Builtin,2,4000,0x1053e1780,288,KeyedStoreIC_SloppyArguments_NoTransitionIgnoreOOB
code-creation,Builtin,2,4041,0x1053e18c0,288,KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW
code-creation,Builtin,2,4041,0x1053e1a00,12112,StoreFastElementIC_Standard
code-creation,Builtin,2,4041,0x1053e4960,10640,StoreFastElementIC_GrowNoTransitionHandleCOW
code-creation,Builtin,2,4041,0x1053e7300,11532,StoreFastElementIC_NoTransitionIgnoreOOB
code-creation,Builtin,2,4041,0x1053ea020,5584,StoreFastElementIC_NoTransitionHandleCOW
code-creation,Builtin,2,4041,0x1053eb600,8192,ElementsTransitionAndStore_Standard
code-creation,Builtin,2,4041,0x1053ed620,21212,ElementsTransitionAndStore_GrowNoTransitionHandleCOW
code-creation,Builtin,2,4041,0x1053f2900,8192,ElementsTransitionAndStore_NoTransitionIgnoreOOB
code-creation,Builtin,2,4041,0x1053f4920,11136,ElementsTransitionAndStore_NoTransitionHandleCOW
code-creation,Builtin,2,4083,0x1053f74c0,772,KeyedHasIC_PolymorphicName
code-creation,Builtin,2,4083,0x1053f77e0,200,KeyedHasIC_SloppyArguments
code-creation,Builtin,2,4083,0x1053f78c0,68,HasIndexedInterceptorIC
code-creation,Builtin,2,4083,0x1053f7920,164,EnqueueMicrotask
code-creation,Builtin,2,4083,0x1053f79e0,8,RunMicrotasksTrampoline
code-creation,Builtin,2,4083,0x1053f7a00,3532,RunMicrotasks
code-creation,Builtin,2,4083,0x1053f87e0,2716,HasProperty
code-creation,Builtin,2,4083,0x1053f9280,1060,DeleteProperty
code-creation,Builtin,2,4083,0x1053f96c0,2204,CopyDataProperties
code-creation,Builtin,2,4083,0x1053f9f60,8728,SetDataProperties
code-creation,Builtin,2,4125,0x1053fc180,2964,CopyDataPropertiesWithExcludedPropertiesOnStack
code-creation,Builtin,2,4125,0x1053fcd20,76,CopyDataPropertiesWithExcludedProperties
code-creation,Builtin,2,4125,0x1053fcd80,32,Abort
code-creation,Builtin,2,4125,0x1053fcdc0,32,AbortCSADcheck
code-creation,Builtin,2,4125,0x1053fce00,8,EmptyFunction
code-creation,Builtin,2,4125,0x1053fce20,8,Illegal
code-creation,Builtin,2,4125,0x1053fce40,8,StrictPoisonPillThrower
code-creation,Builtin,2,4125,0x1053fce60,8,UnsupportedThrower
code-creation,Builtin,2,4166,0x1053fce80,80,ReturnReceiver
code-creation,Builtin,2,4166,0x1053fcee0,36,ArrayConstructor
code-creation,Builtin,2,4166,0x1053fcf20,460,ArrayConstructorImpl
code-creation,Builtin,2,4166,0x1053fd100,240,ArrayNoArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,4166,0x1053fd200,240,ArrayNoArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,4166,0x1053fd300,200,ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,4166,0x1053fd3e0,200,ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,4166,0x1053fd4c0,200,ArrayNoArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,4208,0x1053fd5a0,200,ArrayNoArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,4208,0x1053fd680,204,ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,4208,0x1053fd760,204,ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,4208,0x1053fd840,500,ArraySingleArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,4208,0x1053fda40,484,ArraySingleArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,4208,0x1053fdc40,424,ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,4208,0x1053fde00,408,ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,4208,0x1053fdfa0,424,ArraySingleArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,4250,0x1053fe160,408,ArraySingleArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,4250,0x1053fe300,428,ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,4250,0x1053fe4c0,412,ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,4250,0x1053fe660,60,ArrayNArgumentsConstructor
code-creation,Builtin,2,4250,0x1053fe6a0,8,ArrayConcat
code-creation,Builtin,2,4250,0x1053fe6c0,8,ArrayPrototypeFill
code-creation,Builtin,2,4250,0x1053fe6e0,1040,ArrayIncludesSmiOrObject
code-creation,Builtin,2,4250,0x1053feb00,176,ArrayIncludesPackedDoubles
code-creation,Builtin,2,4250,0x1053febc0,256,ArrayIncludesHoleyDoubles
code-creation,Builtin,2,4250,0x1053fece0,592,ArrayIncludes
code-creation,Builtin,2,4291,0x1053fef40,944,ArrayIndexOfSmiOrObject
code-creation,Builtin,2,4291,0x1053ff300,128,ArrayIndexOfPackedDoubles
code-creation,Builtin,2,4291,0x1053ff3a0,128,ArrayIndexOfHoleyDoubles
code-creation,Builtin,2,4291,0x1053ff440,592,ArrayIndexOf
code-creation,Builtin,2,4291,0x1053ff6a0,8,ArrayPop
code-creation,Builtin,2,4291,0x1053ff6c0,620,ArrayPrototypePop
code-creation,Builtin,2,4291,0x1053ff940,8,ArrayPrototypeGroupBy
code-creation,Builtin,2,4291,0x1053ff960,8,ArrayPrototypeGroupByToMap
code-creation,Builtin,2,4291,0x1053ff980,8,ArrayPush
code-creation,Builtin,2,4291,0x1053ff9a0,2404,ArrayPrototypePush
code-creation,Builtin,2,4291,0x105400320,8,ArrayShift
code-creation,Builtin,2,4333,0x105400340,8,ArrayUnshift
code-creation,Builtin,2,4333,0x105400360,912,CloneFastJSArray
code-creation,Builtin,2,4333,0x105400700,2060,CloneFastJSArrayFillingHoles
code-creation,Builtin,2,4333,0x105400f20,940,ExtractFastJSArray
code-creation,Builtin,2,4333,0x1054012e0,268,ArrayPrototypeEntries
code-creation,Builtin,2,4333,0x105401400,264,ArrayPrototypeKeys
code-creation,Builtin,2,4333,0x105401520,268,ArrayPrototypeValues
code-creation,Builtin,2,4333,0x105401640,4196,ArrayIteratorPrototypeNext
code-creation,Builtin,2,4333,0x1054026c0,4048,FlattenIntoArray
code-creation,Builtin,2,4333,0x1054036a0,4028,FlatMapIntoArray
code-creation,Builtin,2,4333,0x105404660,412,ArrayPrototypeFlat
code-creation,Builtin,2,4333,0x105404800,472,ArrayPrototypeFlatMap
code-creation,Builtin,2,4375,0x1054049e0,8,ArrayBufferConstructor
code-creation,Builtin,2,4375,0x105404a00,8,ArrayBufferConstructor_DoNotInitialize
code-creation,Builtin,2,4375,0x105404a20,8,ArrayBufferPrototypeSlice
code-creation,Builtin,2,4375,0x105404a40,8,ArrayBufferPrototypeResize
code-creation,Builtin,2,4375,0x105404a60,960,AsyncFunctionEnter
code-creation,Builtin,2,4375,0x105404e40,96,AsyncFunctionReject
code-creation,Builtin,2,4375,0x105404ec0,92,AsyncFunctionResolve
code-creation,Builtin,2,4375,0x105404f20,16,AsyncFunctionLazyDeoptContinuation
code-creation,Builtin,2,4375,0x105404f40,1824,AsyncFunctionAwaitCaught
code-creation,Builtin,2,4416,0x105405680,1824,AsyncFunctionAwaitUncaught
code-creation,Builtin,2,4416,0x105405dc0,208,AsyncFunctionAwaitRejectClosure
code-creation,Builtin,2,4416,0x105405ea0,208,AsyncFunctionAwaitResolveClosure
code-creation,Builtin,2,4416,0x105405f80,8,BigIntConstructor
code-creation,Builtin,2,4416,0x105405fa0,8,BigIntAsUintN
code-creation,Builtin,2,4416,0x105405fc0,8,BigIntAsIntN
code-creation,Builtin,2,4416,0x105405fe0,8,BigIntPrototypeToLocaleString
code-creation,Builtin,2,4416,0x105406000,8,BigIntPrototypeToString
code-creation,Builtin,2,4416,0x105406020,8,BigIntPrototypeValueOf
code-creation,Builtin,2,4416,0x105406040,8,CallSitePrototypeGetColumnNumber
code-creation,Builtin,2,4416,0x105406060,8,CallSitePrototypeGetEnclosingColumnNumber
tick,0x1a4e3ea90,4458,0,0x0,6
code-creation,Builtin,2,4458,0x105406080,8,CallSitePrototypeGetEnclosingLineNumber
code-creation,Builtin,2,4458,0x1054060a0,8,CallSitePrototypeGetEvalOrigin
code-creation,Builtin,2,4458,0x1054060c0,8,CallSitePrototypeGetFileName
code-creation,Builtin,2,4458,0x1054060e0,8,CallSitePrototypeGetFunction
code-creation,Builtin,2,4458,0x105406100,8,CallSitePrototypeGetFunctionName
code-creation,Builtin,2,4458,0x105406120,8,CallSitePrototypeGetLineNumber
code-creation,Builtin,2,4458,0x105406140,8,CallSitePrototypeGetMethodName
code-creation,Builtin,2,4500,0x105406160,8,CallSitePrototypeGetPosition
code-creation,Builtin,2,4500,0x105406180,8,CallSitePrototypeGetPromiseIndex
code-creation,Builtin,2,4500,0x1054061a0,8,CallSitePrototypeGetScriptNameOrSourceURL
code-creation,Builtin,2,4500,0x1054061c0,8,CallSitePrototypeGetThis
code-creation,Builtin,2,4500,0x1054061e0,8,CallSitePrototypeGetTypeName
code-creation,Builtin,2,4500,0x105406200,8,CallSitePrototypeIsAsync
code-creation,Builtin,2,4500,0x105406220,8,CallSitePrototypeIsConstructor
code-creation,Builtin,2,4500,0x105406240,8,CallSitePrototypeIsEval
code-creation,Builtin,2,4500,0x105406260,8,CallSitePrototypeIsNative
code-creation,Builtin,2,4500,0x105406280,8,CallSitePrototypeIsPromiseAll
code-creation,Builtin,2,4500,0x1054062a0,8,CallSitePrototypeIsToplevel
code-creation,Builtin,2,4541,0x1054062c0,8,CallSitePrototypeToString
code-creation,Builtin,2,4541,0x1054062e0,8,ConsoleDebug
code-creation,Builtin,2,4541,0x105406300,8,ConsoleError
code-creation,Builtin,2,4541,0x105406320,8,ConsoleInfo
code-creation,Builtin,2,4541,0x105406340,8,ConsoleLog
code-creation,Builtin,2,4541,0x105406360,8,ConsoleWarn
code-creation,Builtin,2,4541,0x105406380,8,ConsoleDir
code-creation,Builtin,2,4541,0x1054063a0,8,ConsoleDirXml
code-creation,Builtin,2,4541,0x1054063c0,8,ConsoleTable
code-creation,Builtin,2,4541,0x1054063e0,8,ConsoleTrace
code-creation,Builtin,2,4541,0x105406400,8,ConsoleGroup
code-creation,Builtin,2,4541,0x105406420,8,ConsoleGroupCollapsed
code-creation,Builtin,2,4541,0x105406440,8,ConsoleGroupEnd
code-creation,Builtin,2,4583,0x105406460,8,ConsoleClear
code-creation,Builtin,2,4583,0x105406480,8,ConsoleCount
code-creation,Builtin,2,4583,0x1054064a0,8,ConsoleCountReset
code-creation,Builtin,2,4583,0x1054064c0,8,ConsoleAssert
code-creation,Builtin,2,4583,0x1054064e0,8,ConsoleProfile
code-creation,Builtin,2,4583,0x105406500,8,ConsoleProfileEnd
code-creation,Builtin,2,4583,0x105406520,8,ConsoleTime
code-creation,Builtin,2,4583,0x105406540,8,ConsoleTimeLog
code-creation,Builtin,2,4583,0x105406560,8,ConsoleTimeEnd
code-creation,Builtin,2,4583,0x105406580,8,ConsoleTimeStamp
code-creation,Builtin,2,4583,0x1054065a0,8,ConsoleContext
code-creation,Builtin,2,4583,0x1054065c0,8,DataViewConstructor
code-creation,Builtin,2,4625,0x1054065e0,8,DateConstructor
code-creation,Builtin,2,4625,0x105406600,208,DatePrototypeGetDate
code-creation,Builtin,2,4625,0x1054066e0,208,DatePrototypeGetDay
code-creation,Builtin,2,4625,0x1054067c0,208,DatePrototypeGetFullYear
code-creation,Builtin,2,4625,0x1054068a0,208,DatePrototypeGetHours
code-creation,Builtin,2,4625,0x105406980,180,DatePrototypeGetMilliseconds
code-creation,Builtin,2,4625,0x105406a40,208,DatePrototypeGetMinutes
code-creation,Builtin,2,4625,0x105406b20,208,DatePrototypeGetMonth
code-creation,Builtin,2,4625,0x105406c00,208,DatePrototypeGetSeconds
code-creation,Builtin,2,4625,0x105406ce0,144,DatePrototypeGetTime
code-creation,Builtin,2,4666,0x105406d80,180,DatePrototypeGetTimezoneOffset
code-creation,Builtin,2,4666,0x105406e40,180,DatePrototypeGetUTCDate
code-creation,Builtin,2,4666,0x105406f00,180,DatePrototypeGetUTCDay
code-creation,Builtin,2,4666,0x105406fc0,180,DatePrototypeGetUTCFullYear
code-creation,Builtin,2,4666,0x105407080,180,DatePrototypeGetUTCHours
code-creation,Builtin,2,4666,0x105407140,180,DatePrototypeGetUTCMilliseconds
code-creation,Builtin,2,4666,0x105407200,180,DatePrototypeGetUTCMinutes
code-creation,Builtin,2,4666,0x1054072c0,180,DatePrototypeGetUTCMonth
code-creation,Builtin,2,4666,0x105407380,180,DatePrototypeGetUTCSeconds
code-creation,Builtin,2,4666,0x105407440,144,DatePrototypeValueOf
code-creation,Builtin,2,4666,0x1054074e0,380,DatePrototypeToPrimitive
code-creation,Builtin,2,4708,0x105407660,8,DatePrototypeGetYear
code-creation,Builtin,2,4708,0x105407680,8,DatePrototypeSetYear
code-creation,Builtin,2,4708,0x1054076a0,8,DateNow
code-creation,Builtin,2,4708,0x1054076c0,8,DateParse
code-creation,Builtin,2,4708,0x1054076e0,8,DatePrototypeSetDate
code-creation,Builtin,2,4708,0x105407700,8,DatePrototypeSetFullYear
code-creation,Builtin,2,4708,0x105407720,8,DatePrototypeSetHours
code-creation,Builtin,2,4708,0x105407740,8,DatePrototypeSetMilliseconds
code-creation,Builtin,2,4708,0x105407760,8,DatePrototypeSetMinutes
code-creation,Builtin,2,4708,0x105407780,8,DatePrototypeSetMonth
code-creation,Builtin,2,4708,0x1054077a0,8,DatePrototypeSetSeconds
code-creation,Builtin,2,4708,0x1054077c0,8,DatePrototypeSetTime
code-creation,Builtin,2,4750,0x1054077e0,8,DatePrototypeSetUTCDate
code-creation,Builtin,2,4750,0x105407800,8,DatePrototypeSetUTCFullYear
code-creation,Builtin,2,4750,0x105407820,8,DatePrototypeSetUTCHours
code-creation,Builtin,2,4750,0x105407840,8,DatePrototypeSetUTCMilliseconds
code-creation,Builtin,2,4750,0x105407860,8,DatePrototypeSetUTCMinutes
code-creation,Builtin,2,4750,0x105407880,8,DatePrototypeSetUTCMonth
code-creation,Builtin,2,4750,0x1054078a0,8,DatePrototypeSetUTCSeconds
code-creation,Builtin,2,4750,0x1054078c0,8,DatePrototypeToDateString
code-creation,Builtin,2,4750,0x1054078e0,8,DatePrototypeToISOString
code-creation,Builtin,2,4750,0x105407900,8,DatePrototypeToUTCString
code-creation,Builtin,2,4750,0x105407920,8,DatePrototypeToString
code-creation,Builtin,2,4750,0x105407940,8,DatePrototypeToTimeString
code-creation,Builtin,2,4791,0x105407960,8,DatePrototypeToJson
code-creation,Builtin,2,4791,0x105407980,8,DateUTC
code-creation,Builtin,2,4791,0x1054079a0,8,ErrorConstructor
code-creation,Builtin,2,4791,0x1054079c0,8,ErrorCaptureStackTrace
code-creation,Builtin,2,4791,0x1054079e0,8,ErrorPrototypeToString
code-creation,Builtin,2,4791,0x105407a00,8,FunctionConstructor
code-creation,Builtin,2,4791,0x105407a20,80,FunctionPrototypeApply
code-creation,Builtin,2,4791,0x105407a80,8,FunctionPrototypeBind
code-creation,Builtin,2,4791,0x105407aa0,152,FunctionPrototypeCall
code-creation,Builtin,2,4791,0x105407b40,8,FunctionPrototypeToString
code-creation,Builtin,2,4791,0x105407b60,228,CreateIterResultObject
code-creation,Builtin,2,4833,0x105407c60,936,CreateGeneratorObject
code-creation,Builtin,2,4833,0x105408020,8,GeneratorFunctionConstructor
code-creation,Builtin,2,4833,0x105408040,436,GeneratorPrototypeNext
code-creation,Builtin,2,4833,0x105408200,436,GeneratorPrototypeReturn
code-creation,Builtin,2,4833,0x1054083c0,448,GeneratorPrototypeThrow
code-creation,Builtin,2,4833,0x1054085a0,8,AsyncFunctionConstructor
code-creation,Builtin,2,4833,0x1054085c0,368,SuspendGeneratorBaseline
code-creation,Builtin,2,4833,0x105408740,120,ResumeGeneratorBaseline
code-creation,Builtin,2,4833,0x1054087c0,56,GetIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,4833,0x105408800,8,GlobalDecodeURI
code-creation,Builtin,2,4875,0x105408820,8,GlobalDecodeURIComponent
code-creation,Builtin,2,4875,0x105408840,8,GlobalEncodeURI
code-creation,Builtin,2,4875,0x105408860,8,GlobalEncodeURIComponent
code-creation,Builtin,2,4875,0x105408880,8,GlobalEscape
code-creation,Builtin,2,4875,0x1054088a0,8,GlobalUnescape
code-creation,Builtin,2,4875,0x1054088c0,8,GlobalEval
code-creation,Builtin,2,4875,0x1054088e0,160,GlobalIsFinite
code-creation,Builtin,2,4875,0x1054089a0,156,GlobalIsNaN
code-creation,Builtin,2,4875,0x105408a40,8,JsonParse
code-creation,Builtin,2,4875,0x105408a60,8,JsonStringify
code-creation,Builtin,2,4875,0x105408a80,4308,LoadIC
code-creation,Builtin,2,4875,0x105409b60,3972,LoadIC_Megamorphic
code-creation,Builtin,2,4875,0x10540ab00,4220,LoadIC_Noninlined
code-creation,Builtin,2,4916,0x10540bb80,48,LoadICTrampoline
code-creation,Builtin,2,4916,0x10540bbc0,28,LoadICBaseline
code-creation,Builtin,2,4916,0x10540bbe0,48,LoadICTrampoline_Megamorphic
code-creation,Builtin,2,4916,0x10540bc20,7184,LoadSuperIC
code-creation,Builtin,2,4916,0x10540d840,28,LoadSuperICBaseline
code-creation,Builtin,2,4916,0x10540d860,7904,KeyedLoadIC
code-creation,Builtin,2,4916,0x10540f760,12584,KeyedLoadIC_Megamorphic
code-creation,Builtin,2,4916,0x1054128a0,48,KeyedLoadICTrampoline
code-creation,Builtin,2,4916,0x1054128e0,28,KeyedLoadICBaseline
code-creation,Builtin,2,4916,0x105412900,48,KeyedLoadICTrampoline_Megamorphic
code-creation,Builtin,2,4916,0x105412940,4532,StoreGlobalIC
code-creation,Builtin,2,4916,0x105413b00,48,StoreGlobalICTrampoline
code-creation,Builtin,2,4958,0x105413b40,28,StoreGlobalICBaseline
code-creation,Builtin,2,4958,0x105413b60,4752,StoreIC
code-creation,Builtin,2,4958,0x105414e00,48,StoreICTrampoline
code-creation,Builtin,2,4958,0x105414e40,28,StoreICBaseline
code-creation,Builtin,2,4958,0x105414e60,4588,DefineNamedOwnIC
code-creation,Builtin,2,4958,0x105416060,48,DefineNamedOwnICTrampoline
code-creation,Builtin,2,4958,0x1054160a0,28,DefineNamedOwnICBaseline
code-creation,Builtin,2,4958,0x1054160c0,5180,KeyedStoreIC
code-creation,Builtin,2,4958,0x105417500,48,KeyedStoreICTrampoline
code-creation,Builtin,2,4958,0x105417540,28,KeyedStoreICBaseline
code-creation,Builtin,2,4958,0x105417560,5008,DefineKeyedOwnIC
code-creation,Builtin,2,4958,0x105418900,48,DefineKeyedOwnICTrampoline
code-creation,Builtin,2,5000,0x105418940,28,DefineKeyedOwnICBaseline
code-creation,Builtin,2,5000,0x105418960,436,StoreInArrayLiteralIC
code-creation,Builtin,2,5000,0x105418b20,28,StoreInArrayLiteralICBaseline
code-creation,Builtin,2,5000,0x105418b40,172,LookupContextBaseline
code-creation,Builtin,2,5000,0x105418c00,172,LookupContextInsideTypeofBaseline
code-creation,Builtin,2,5000,0x105418cc0,3108,LoadGlobalIC
code-creation,Builtin,2,5000,0x105419900,3092,LoadGlobalICInsideTypeof
code-creation,Builtin,2,5000,0x10541a520,48,LoadGlobalICTrampoline
code-creation,Builtin,2,5000,0x10541a560,28,LoadGlobalICBaseline
code-creation,Builtin,2,5000,0x10541a580,48,LoadGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,5000,0x10541a5c0,28,LoadGlobalICInsideTypeofBaseline
code-creation,Builtin,2,5041,0x10541a5e0,164,LookupGlobalICBaseline
code-creation,Builtin,2,5041,0x10541a6a0,164,LookupGlobalICInsideTypeofBaseline
code-creation,Builtin,2,5041,0x10541a760,1952,CloneObjectIC
code-creation,Builtin,2,5041,0x10541af20,28,CloneObjectICBaseline
code-creation,Builtin,2,5041,0x10541af40,2236,CloneObjectIC_Slow
code-creation,Builtin,2,5041,0x10541b800,2548,KeyedHasIC
code-creation,Builtin,2,5041,0x10541c200,28,KeyedHasICBaseline
code-creation,Builtin,2,5041,0x10541c220,2716,KeyedHasIC_Megamorphic
code-creation,Builtin,2,5041,0x10541ccc0,1400,IterableToList
code-creation,Builtin,2,5041,0x10541d240,1212,IterableToFixedArray
code-creation,Builtin,2,5083,0x10541d700,840,IterableToListWithSymbolLookup
code-creation,Builtin,2,5083,0x10541da60,64,IterableToFixedArrayWithSymbolLookupSlow
code-creation,Builtin,2,5083,0x10541dac0,148,IterableToListMayPreserveHoles
code-creation,Builtin,2,5083,0x10541db60,1020,IterableToFixedArrayForWasm
code-creation,Builtin,2,5083,0x10541df60,1504,StringListFromIterable
code-creation,Builtin,2,5083,0x10541e560,1204,FindOrderedHashMapEntry
code-creation,Builtin,2,5083,0x10541ea20,4248,MapConstructor
code-creation,Builtin,2,5083,0x10541fac0,1968,MapPrototypeSet
code-creation,Builtin,2,5083,0x105420280,1520,MapPrototypeDelete
code-creation,Builtin,2,5083,0x105420880,236,MapPrototypeGet
code-creation,Builtin,2,5083,0x105420980,192,MapPrototypeHas
code-creation,Builtin,2,5125,0x105420a60,8,MapPrototypeClear
code-creation,Builtin,2,5125,0x105420a80,300,MapPrototypeEntries
code-creation,Builtin,2,5125,0x105420bc0,160,MapPrototypeGetSize
code-creation,Builtin,2,5125,0x105420c80,536,MapPrototypeForEach
code-creation,Builtin,2,5125,0x105420ea0,300,MapPrototypeKeys
code-creation,Builtin,2,5125,0x105420fe0,300,MapPrototypeValues
code-creation,Builtin,2,5125,0x105421120,1020,MapIteratorPrototypeNext
code-creation,Builtin,2,5125,0x105421520,1108,MapIteratorToList
code-creation,Builtin,2,5125,0x105421980,8,NumberPrototypeToExponential
code-creation,Builtin,2,5125,0x1054219a0,8,NumberPrototypeToFixed
code-creation,Builtin,2,5125,0x1054219c0,8,NumberPrototypeToLocaleString
code-creation,Builtin,2,5125,0x1054219e0,8,NumberPrototypeToPrecision
code-creation,Builtin,2,5166,0x105421a00,324,SameValue
code-creation,Builtin,2,5166,0x105421b60,184,SameValueNumbersOnly
code-creation,Builtin,2,5166,0x105421c20,784,Add_Baseline
code-creation,Builtin,2,5166,0x105421f40,616,AddSmi_Baseline
code-creation,Builtin,2,5166,0x1054221c0,848,Subtract_Baseline
code-creation,Builtin,2,5166,0x105422520,684,SubtractSmi_Baseline
code-creation,Builtin,2,5166,0x1054227e0,832,Multiply_Baseline
code-creation,Builtin,2,5166,0x105422b40,756,MultiplySmi_Baseline
code-creation,Builtin,2,5166,0x105422e40,840,Divide_Baseline
code-creation,Builtin,2,5166,0x1054231a0,840,DivideSmi_Baseline
code-creation,Builtin,2,5166,0x105423500,700,Modulus_Baseline
code-creation,Builtin,2,5166,0x1054237c0,672,ModulusSmi_Baseline
code-creation,Builtin,2,5208,0x105423a80,724,Exponentiate_Baseline
code-creation,Builtin,2,5208,0x105423d60,632,ExponentiateSmi_Baseline
code-creation,Builtin,2,5208,0x105423fe0,672,BitwiseAnd_Baseline
code-creation,Builtin,2,5208,0x1054242a0,352,BitwiseAndSmi_Baseline
code-creation,Builtin,2,5208,0x105424420,672,BitwiseOr_Baseline
code-creation,Builtin,2,5208,0x1054246e0,352,BitwiseOrSmi_Baseline
code-creation,Builtin,2,5208,0x105424860,672,BitwiseXor_Baseline
code-creation,Builtin,2,5208,0x105424b20,352,BitwiseXorSmi_Baseline
code-creation,Builtin,2,5208,0x105424ca0,672,ShiftLeft_Baseline
code-creation,Builtin,2,5208,0x105424f60,376,ShiftLeftSmi_Baseline
code-creation,Builtin,2,5208,0x1054250e0,672,ShiftRight_Baseline
code-creation,Builtin,2,5208,0x1054253a0,364,ShiftRightSmi_Baseline
code-creation,Builtin,2,5250,0x105425520,800,ShiftRightLogical_Baseline
code-creation,Builtin,2,5250,0x105425860,632,ShiftRightLogicalSmi_Baseline
code-creation,Builtin,2,5250,0x105425ae0,696,Add_WithFeedback
code-creation,Builtin,2,5250,0x105425da0,784,Subtract_WithFeedback
code-creation,Builtin,2,5250,0x1054260c0,784,Multiply_WithFeedback
code-creation,Builtin,2,5250,0x1054263e0,792,Divide_WithFeedback
code-creation,Builtin,2,5250,0x105426700,652,Modulus_WithFeedback
code-creation,Builtin,2,5250,0x1054269a0,676,Exponentiate_WithFeedback
code-creation,Builtin,2,5250,0x105426c60,660,BitwiseAnd_WithFeedback
code-creation,Builtin,2,5250,0x105426f00,660,BitwiseOr_WithFeedback
code-creation,Builtin,2,5250,0x1054271a0,660,BitwiseXor_WithFeedback
code-creation,Builtin,2,5250,0x105427440,660,ShiftLeft_WithFeedback
code-creation,Builtin,2,5291,0x1054276e0,660,ShiftRight_WithFeedback
code-creation,Builtin,2,5291,0x105427980,784,ShiftRightLogical_WithFeedback
code-creation,Builtin,2,5291,0x105427ca0,1712,Equal_Baseline
code-creation,Builtin,2,5291,0x105428360,788,StrictEqual_Baseline
code-creation,Builtin,2,5291,0x105428680,1232,LessThan_Baseline
code-creation,Builtin,2,5291,0x105428b60,1232,GreaterThan_Baseline
code-creation,Builtin,2,5291,0x105429040,1232,LessThanOrEqual_Baseline
code-creation,Builtin,2,5291,0x105429520,1232,GreaterThanOrEqual_Baseline
code-creation,Builtin,2,5291,0x105429a00,1732,Equal_WithFeedback
code-creation,Builtin,2,5291,0x10542a0e0,808,StrictEqual_WithFeedback
code-creation,Builtin,2,5333,0x10542a420,1208,LessThan_WithFeedback
code-creation,Builtin,2,5333,0x10542a8e0,1208,GreaterThan_WithFeedback
code-creation,Builtin,2,5333,0x10542ada0,1208,LessThanOrEqual_WithFeedback
code-creation,Builtin,2,5333,0x10542b260,1208,GreaterThanOrEqual_WithFeedback
code-creation,Builtin,2,5333,0x10542b720,312,BitwiseNot_Baseline
code-creation,Builtin,2,5333,0x10542b860,460,Decrement_Baseline
code-creation,Builtin,2,5333,0x10542ba40,460,Increment_Baseline
code-creation,Builtin,2,5333,0x10542bc20,476,Negate_Baseline
code-creation,Builtin,2,5333,0x10542be00,292,BitwiseNot_WithFeedback
code-creation,Builtin,2,5333,0x10542bf40,440,Decrement_WithFeedback
code-creation,Builtin,2,5333,0x10542c100,440,Increment_WithFeedback
code-creation,Builtin,2,5333,0x10542c2c0,460,Negate_WithFeedback
code-creation,Builtin,2,5375,0x10542c4a0,292,ObjectAssign
code-creation,Builtin,2,5375,0x10542c5e0,860,ObjectCreate
code-creation,Builtin,2,5375,0x10542c940,8,ObjectDefineGetter
code-creation,Builtin,2,5375,0x10542c960,8,ObjectDefineProperties
code-creation,Builtin,2,5375,0x10542c980,8,ObjectDefineProperty
code-creation,Builtin,2,5375,0x10542c9a0,8,ObjectDefineSetter
code-creation,Builtin,2,5375,0x10542c9c0,1508,ObjectEntries
code-creation,Builtin,2,5375,0x10542cfc0,8,ObjectFreeze
code-creation,Builtin,2,5375,0x10542cfe0,5568,ObjectGetOwnPropertyDescriptor
code-creation,Builtin,2,5375,0x10542e5c0,8,ObjectGetOwnPropertyDescriptors
code-creation,Builtin,2,5375,0x10542e5e0,632,ObjectGetOwnPropertyNames
code-creation,Builtin,2,5375,0x10542e860,8,ObjectGetOwnPropertySymbols
code-creation,Builtin,2,5416,0x10542e880,208,ObjectHasOwn
code-creation,Builtin,2,5416,0x10542e960,388,ObjectIs
code-creation,Builtin,2,5416,0x10542eb00,8,ObjectIsFrozen
code-creation,Builtin,2,5416,0x10542eb20,8,ObjectIsSealed
code-creation,Builtin,2,5416,0x10542eb40,572,ObjectKeys
code-creation,Builtin,2,5416,0x10542ed80,8,ObjectLookupGetter
code-creation,Builtin,2,5416,0x10542eda0,8,ObjectLookupSetter
code-creation,Builtin,2,5416,0x10542edc0,2312,ObjectPrototypeHasOwnProperty
code-creation,Builtin,2,5416,0x10542f6e0,268,ObjectPrototypeIsPrototypeOf
code-creation,Builtin,2,5458,0x10542f800,8,ObjectPrototypePropertyIsEnumerable
code-creation,Builtin,2,5458,0x10542f820,8,ObjectPrototypeGetProto
code-creation,Builtin,2,5458,0x10542f840,8,ObjectPrototypeSetProto
code-creation,Builtin,2,5458,0x10542f860,8,ObjectSeal
code-creation,Builtin,2,5458,0x10542f880,1108,ObjectToString
code-creation,Builtin,2,5458,0x10542fce0,1256,ObjectValues
code-creation,Builtin,2,5458,0x1054301e0,412,OrdinaryHasInstance
code-creation,Builtin,2,5458,0x105430380,432,InstanceOf
code-creation,Builtin,2,5458,0x105430540,660,InstanceOf_WithFeedback
code-creation,Builtin,2,5458,0x1054307e0,676,InstanceOf_Baseline
code-creation,Builtin,2,5458,0x105430aa0,304,ForInEnumerate
code-creation,Builtin,2,5500,0x105430be0,144,ForInPrepare
code-creation,Builtin,2,5500,0x105430c80,2696,ForInFilter
code-creation,Builtin,2,5500,0x105431720,68,ReflectApply
code-creation,Builtin,2,5500,0x105431780,72,ReflectConstruct
code-creation,Builtin,2,5500,0x1054317e0,8,ReflectDefineProperty
code-creation,Builtin,2,5500,0x105431800,8,ReflectGetOwnPropertyDescriptor
code-creation,Builtin,2,5500,0x105431820,8,ReflectOwnKeys
code-creation,Builtin,2,5500,0x105431840,8,ReflectSet
code-creation,Builtin,2,5500,0x105431860,8,RegExpCapture1Getter
code-creation,Builtin,2,5500,0x105431880,8,RegExpCapture2Getter
code-creation,Builtin,2,5541,0x1054318a0,8,RegExpCapture3Getter
code-creation,Builtin,2,5541,0x1054318c0,8,RegExpCapture4Getter
code-creation,Builtin,2,5541,0x1054318e0,8,RegExpCapture5Getter
code-creation,Builtin,2,5541,0x105431900,8,RegExpCapture6Getter
code-creation,Builtin,2,5541,0x105431920,8,RegExpCapture7Getter
code-creation,Builtin,2,5541,0x105431940,8,RegExpCapture8Getter
code-creation,Builtin,2,5541,0x105431960,8,RegExpCapture9Getter
code-creation,Builtin,2,5541,0x105431980,2156,RegExpConstructor
code-creation,Builtin,2,5541,0x105432200,8,RegExpInputGetter
code-creation,Builtin,2,5541,0x105432220,8,RegExpInputSetter
code-creation,Builtin,2,5583,0x105432240,8,RegExpLastMatchGetter
code-creation,Builtin,2,5583,0x105432260,8,RegExpLastParenGetter
code-creation,Builtin,2,5583,0x105432280,8,RegExpLeftContextGetter
code-creation,Builtin,2,5583,0x1054322a0,832,RegExpPrototypeCompile
code-creation,Builtin,2,5583,0x105432600,8,RegExpPrototypeToString
code-creation,Builtin,2,5583,0x105432620,8,RegExpRightContextGetter
code-creation,Builtin,2,5583,0x105432640,240,RegExpExecAtom
code-creation,Builtin,2,5583,0x105432740,984,RegExpExecInternal
code-creation,Builtin,2,5583,0x105432b20,8,RegExpInterpreterTrampoline
tick,0x104ea11cc,5583,0,0x0,6
code-creation,Builtin,2,5625,0x105432b40,8,RegExpExperimentalTrampoline
code-creation,Builtin,2,5625,0x105432b60,2780,SetConstructor
code-creation,Builtin,2,5625,0x105433640,1276,SetPrototypeHas
code-creation,Builtin,2,5625,0x105433b40,1760,SetPrototypeAdd
code-creation,Builtin,2,5625,0x105434240,1472,SetPrototypeDelete
code-creation,Builtin,2,5625,0x105434820,8,SetPrototypeClear
code-creation,Builtin,2,5625,0x105434840,300,SetPrototypeEntries
code-creation,Builtin,2,5625,0x105434980,160,SetPrototypeGetSize
code-creation,Builtin,2,5625,0x105434a40,500,SetPrototypeForEach
code-creation,Builtin,2,5625,0x105434c40,300,SetPrototypeValues
code-creation,Builtin,2,5625,0x105434d80,952,SetIteratorPrototypeNext
code-creation,Builtin,2,5625,0x105435140,1068,SetOrSetIteratorToList
code-creation,Builtin,2,5666,0x105435580,8,ShadowRealmConstructor
code-creation,Builtin,2,5666,0x1054355a0,664,ShadowRealmGetWrappedValue
code-creation,Builtin,2,5666,0x105435840,8,ShadowRealmPrototypeEvaluate
code-creation,Builtin,2,5666,0x105435860,8,ShadowRealmPrototypeImportValue
code-creation,Builtin,2,5666,0x105435880,8,SharedArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,5666,0x1054358a0,8,SharedArrayBufferPrototypeSlice
code-creation,Builtin,2,5666,0x1054358c0,8,SharedArrayBufferPrototypeGrow
code-creation,Builtin,2,5666,0x1054358e0,1340,AtomicsLoad
code-creation,Builtin,2,5666,0x105435e20,1072,AtomicsStore
code-creation,Builtin,2,5666,0x105436260,1776,AtomicsExchange
code-creation,Builtin,2,5666,0x105436960,2128,AtomicsCompareExchange
code-creation,Builtin,2,5708,0x1054371c0,1768,AtomicsAdd
code-creation,Builtin,2,5708,0x1054378c0,1768,AtomicsSub
code-creation,Builtin,2,5708,0x105437fc0,1768,AtomicsAnd
code-creation,Builtin,2,5708,0x1054386c0,1768,AtomicsOr
code-creation,Builtin,2,5708,0x105438dc0,1768,AtomicsXor
code-creation,Builtin,2,5708,0x1054394c0,8,AtomicsNotify
code-creation,Builtin,2,5708,0x1054394e0,8,AtomicsIsLockFree
code-creation,Builtin,2,5708,0x105439500,8,AtomicsWait
code-creation,Builtin,2,5708,0x105439520,8,AtomicsWaitAsync
code-creation,Builtin,2,5708,0x105439540,8,StringFromCodePoint
code-creation,Builtin,2,5708,0x105439560,1452,StringFromCharCode
code-creation,Builtin,2,5708,0x105439b20,8,StringPrototypeLastIndexOf
code-creation,Builtin,2,5750,0x105439b40,4188,StringPrototypeMatchAll
code-creation,Builtin,2,5750,0x10543aba0,8,StringPrototypeLocaleCompare
code-creation,Builtin,2,5750,0x10543abc0,1260,StringPrototypeReplace
code-creation,Builtin,2,5750,0x10543b0c0,2676,StringPrototypeSplit
code-creation,Builtin,2,5750,0x10543bb40,8,StringRaw
code-creation,Builtin,2,5750,0x10543bb60,8,SymbolConstructor
code-creation,Builtin,2,5750,0x10543bb80,8,SymbolFor
code-creation,Builtin,2,5750,0x10543bba0,8,SymbolKeyFor
code-creation,Builtin,2,5750,0x10543bbc0,96,TypedArrayBaseConstructor
code-creation,Builtin,2,5750,0x10543bc40,320,TypedArrayConstructor
code-creation,Builtin,2,5750,0x10543bda0,8,TypedArrayPrototypeBuffer
code-creation,Builtin,2,5791,0x10543bdc0,884,TypedArrayPrototypeByteLength
code-creation,Builtin,2,5791,0x10543c140,336,TypedArrayPrototypeByteOffset
code-creation,Builtin,2,5791,0x10543c2a0,596,TypedArrayPrototypeLength
code-creation,Builtin,2,5791,0x10543c500,8,TypedArrayPrototypeCopyWithin
code-creation,Builtin,2,5791,0x10543c520,8,TypedArrayPrototypeFill
code-creation,Builtin,2,5791,0x10543c540,8,TypedArrayPrototypeIncludes
code-creation,Builtin,2,5791,0x10543c560,8,TypedArrayPrototypeIndexOf
code-creation,Builtin,2,5791,0x10543c580,8,TypedArrayPrototypeLastIndexOf
code-creation,Builtin,2,5791,0x10543c5a0,8,TypedArrayPrototypeReverse
code-creation,Builtin,2,5791,0x10543c5c0,316,TypedArrayPrototypeToStringTag
code-creation,Builtin,2,5791,0x10543c700,21764,TypedArrayPrototypeMap
code-creation,Builtin,2,5833,0x105441c20,4,GenericJSToWasmWrapper
code-creation,Builtin,2,5833,0x105441c40,4,WasmReturnPromiseOnSuspend
code-creation,Builtin,2,5833,0x105441c60,4,WasmSuspend
code-creation,Builtin,2,5833,0x105441c80,4,WasmResume
code-creation,Builtin,2,5833,0x105441ca0,132,WasmCompileLazy
code-creation,Builtin,2,5833,0x105441d40,260,WasmDebugBreak
code-creation,Builtin,2,5833,0x105441e60,4,WasmOnStackReplace
code-creation,Builtin,2,5833,0x105441e80,160,WasmFloat32ToNumber
code-creation,Builtin,2,5833,0x105441f40,164,WasmFloat64ToNumber
code-creation,Builtin,2,5833,0x105442000,8,WasmI32AtomicWait32
code-creation,Builtin,2,5833,0x105442020,8,WasmI64AtomicWait32
code-creation,Builtin,2,5833,0x105442040,24,JSToWasmLazyDeoptContinuation
code-creation,Builtin,2,5875,0x105442060,4392,WeakMapConstructor
code-creation,Builtin,2,5875,0x1054431a0,216,WeakMapLookupHashIndex
code-creation,Builtin,2,5875,0x105443280,244,WeakMapGet
code-creation,Builtin,2,5875,0x105443380,204,WeakMapPrototypeHas
code-creation,Builtin,2,5875,0x105443460,236,WeakMapPrototypeSet
code-creation,Builtin,2,5875,0x105443560,176,WeakMapPrototypeDelete
code-creation,Builtin,2,5875,0x105443620,2956,WeakSetConstructor
code-creation,Builtin,2,5875,0x1054441c0,204,WeakSetPrototypeHas
code-creation,Builtin,2,5875,0x1054442a0,236,WeakSetPrototypeAdd
code-creation,Builtin,2,5875,0x1054443a0,176,WeakSetPrototypeDelete
code-creation,Builtin,2,5875,0x105444460,428,WeakCollectionDelete
code-creation,Builtin,2,5875,0x105444620,720,WeakCollectionSet
code-creation,Builtin,2,5916,0x105444900,8,SharedStructTypeConstructor
code-creation,Builtin,2,5916,0x105444920,8,SharedStructConstructor
code-creation,Builtin,2,5916,0x105444940,316,AsyncGeneratorResolve
code-creation,Builtin,2,5916,0x105444a80,108,AsyncGeneratorReject
code-creation,Builtin,2,5916,0x105444b00,1900,AsyncGeneratorYield
code-creation,Builtin,2,5916,0x105445280,2004,AsyncGeneratorReturn
code-creation,Builtin,2,5916,0x105445a60,308,AsyncGeneratorResumeNext
code-creation,Builtin,2,5916,0x105445ba0,8,AsyncGeneratorFunctionConstructor
code-creation,Builtin,2,5916,0x105445bc0,988,AsyncGeneratorPrototypeNext
code-creation,Builtin,2,5916,0x105445fa0,980,AsyncGeneratorPrototypeReturn
code-creation,Builtin,2,5916,0x105446380,980,AsyncGeneratorPrototypeThrow
code-creation,Builtin,2,5958,0x105446760,1856,AsyncGeneratorAwaitCaught
code-creation,Builtin,2,5958,0x105446ec0,1856,AsyncGeneratorAwaitUncaught
code-creation,Builtin,2,5958,0x105447620,188,AsyncGeneratorAwaitResolveClosure
code-creation,Builtin,2,5958,0x1054476e0,192,AsyncGeneratorAwaitRejectClosure
code-creation,Builtin,2,5958,0x1054477c0,128,AsyncGeneratorYieldResolveClosure
code-creation,Builtin,2,5958,0x105447860,128,AsyncGeneratorReturnClosedResolveClosure
code-creation,Builtin,2,5958,0x105447900,124,AsyncGeneratorReturnClosedRejectClosure
code-creation,Builtin,2,5958,0x105447980,192,AsyncGeneratorReturnResolveClosure
code-creation,Builtin,2,5958,0x105447a60,1680,AsyncFromSyncIteratorPrototypeNext
code-creation,Builtin,2,5958,0x105448100,1792,AsyncFromSyncIteratorPrototypeThrow
code-creation,Builtin,2,6000,0x105448820,1816,AsyncFromSyncIteratorPrototypeReturn
code-creation,Builtin,2,6000,0x105448f40,128,AsyncIteratorValueUnwrap
code-creation,Builtin,2,6000,0x105448fe0,304,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,6000,0x105449120,304,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,6000,0x105449260,284,CEntry_Return1_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,6000,0x105449380,400,CEntry_Return1_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,6041,0x105449520,400,CEntry_Return1_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,6041,0x1054496c0,304,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,6041,0x105449800,304,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,6041,0x105449940,284,CEntry_Return2_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,6041,0x105449a60,400,CEntry_Return2_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,6041,0x105449c00,400,CEntry_Return2_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,6041,0x105449da0,16,DirectCEntry
code-creation,Builtin,2,6041,0x105449dc0,1204,StringAdd_CheckNone
code-creation,Builtin,2,6041,0x10544a280,2696,SubString
code-creation,Builtin,2,6041,0x10544ad20,12,StackCheck
code-creation,Builtin,2,6041,0x10544ad40,80,DoubleToI
code-creation,Builtin,2,6083,0x10544ada0,2420,GetProperty
code-creation,Builtin,2,6083,0x10544b720,2604,GetPropertyWithReceiver
code-creation,Builtin,2,6083,0x10544c160,14432,SetProperty
code-creation,Builtin,2,6083,0x10544f9e0,12388,CreateDataProperty
code-creation,Builtin,2,6083,0x105452a60,4,MemCopyUint8Uint8
code-creation,Builtin,2,6083,0x105452a80,4,MemMove
code-creation,Builtin,2,6083,0x105452aa0,8,IsTraceCategoryEnabled
code-creation,Builtin,2,6083,0x105452ac0,8,Trace
code-creation,Builtin,2,6083,0x105452ae0,8,FinalizationRegistryUnregister
code-creation,Builtin,2,6083,0x105452b00,440,AsyncModuleEvaluate
code-creation,Builtin,2,6083,0x105452cc0,8,CallAsyncModuleFulfilled
code-creation,Builtin,2,6083,0x105452ce0,8,CallAsyncModuleRejected
code-creation,Builtin,2,6125,0x105452d00,8,TemporalNowTimeZone
code-creation,Builtin,2,6125,0x105452d20,8,TemporalNowInstant
code-creation,Builtin,2,6125,0x105452d40,8,TemporalNowPlainDateTime
code-creation,Builtin,2,6125,0x105452d60,8,TemporalNowPlainDateTimeISO
code-creation,Builtin,2,6125,0x105452d80,8,TemporalNowZonedDateTime
code-creation,Builtin,2,6125,0x105452da0,8,TemporalNowZonedDateTimeISO
code-creation,Builtin,2,6125,0x105452dc0,8,TemporalNowPlainDate
code-creation,Builtin,2,6125,0x105452de0,8,TemporalNowPlainDateISO
code-creation,Builtin,2,6125,0x105452e00,8,TemporalNowPlainTimeISO
code-creation,Builtin,2,6125,0x105452e20,8,TemporalPlainDateConstructor
code-creation,Builtin,2,6125,0x105452e40,8,TemporalPlainDateFrom
code-creation,Builtin,2,6166,0x105452e60,8,TemporalPlainDateCompare
code-creation,Builtin,2,6166,0x105452e80,8,TemporalPlainDatePrototypeCalendar
code-creation,Builtin,2,6166,0x105452ea0,8,TemporalPlainDatePrototypeYear
code-creation,Builtin,2,6166,0x105452ec0,8,TemporalPlainDatePrototypeMonth
code-creation,Builtin,2,6166,0x105452ee0,8,TemporalPlainDatePrototypeMonthCode
code-creation,Builtin,2,6166,0x105452f00,8,TemporalPlainDatePrototypeDay
code-creation,Builtin,2,6166,0x105452f20,8,TemporalPlainDatePrototypeDayOfWeek
code-creation,Builtin,2,6166,0x105452f40,8,TemporalPlainDatePrototypeDayOfYear
code-creation,Builtin,2,6166,0x105452f60,8,TemporalPlainDatePrototypeWeekOfYear
code-creation,Builtin,2,6166,0x105452f80,8,TemporalPlainDatePrototypeDaysInWeek
code-creation,Builtin,2,6166,0x105452fa0,8,TemporalPlainDatePrototypeDaysInMonth
code-creation,Builtin,2,6208,0x105452fc0,8,TemporalPlainDatePrototypeDaysInYear
code-creation,Builtin,2,6208,0x105452fe0,8,TemporalPlainDatePrototypeMonthsInYear
code-creation,Builtin,2,6208,0x105453000,8,TemporalPlainDatePrototypeInLeapYear
code-creation,Builtin,2,6208,0x105453020,8,TemporalPlainDatePrototypeToPlainYearMonth
code-creation,Builtin,2,6208,0x105453040,8,TemporalPlainDatePrototypeToPlainMonthDay
code-creation,Builtin,2,6208,0x105453060,8,TemporalPlainDatePrototypeGetISOFields
code-creation,Builtin,2,6208,0x105453080,8,TemporalPlainDatePrototypeAdd
code-creation,Builtin,2,6208,0x1054530a0,8,TemporalPlainDatePrototypeSubtract
code-creation,Builtin,2,6208,0x1054530c0,8,TemporalPlainDatePrototypeWith
code-creation,Builtin,2,6250,0x1054530e0,8,TemporalPlainDatePrototypeWithCalendar
code-creation,Builtin,2,6250,0x105453100,8,TemporalPlainDatePrototypeUntil
code-creation,Builtin,2,6250,0x105453120,8,TemporalPlainDatePrototypeSince
code-creation,Builtin,2,6250,0x105453140,8,TemporalPlainDatePrototypeEquals
code-creation,Builtin,2,6250,0x105453160,8,TemporalPlainDatePrototypeToPlainDateTime
code-creation,Builtin,2,6250,0x105453180,8,TemporalPlainDatePrototypeToZonedDateTime
code-creation,Builtin,2,6250,0x1054531a0,8,TemporalPlainDatePrototypeToString
code-creation,Builtin,2,6250,0x1054531c0,8,TemporalPlainDatePrototypeToJSON
code-creation,Builtin,2,6250,0x1054531e0,8,TemporalPlainDatePrototypeValueOf
code-creation,Builtin,2,6250,0x105453200,8,TemporalPlainTimeConstructor
code-creation,Builtin,2,6250,0x105453220,8,TemporalPlainTimeFrom
code-creation,Builtin,2,6291,0x105453240,8,TemporalPlainTimeCompare
code-creation,Builtin,2,6291,0x105453260,8,TemporalPlainTimePrototypeCalendar
code-creation,Builtin,2,6291,0x105453280,8,TemporalPlainTimePrototypeHour
code-creation,Builtin,2,6291,0x1054532a0,8,TemporalPlainTimePrototypeMinute
code-creation,Builtin,2,6291,0x1054532c0,8,TemporalPlainTimePrototypeSecond
code-creation,Builtin,2,6291,0x1054532e0,8,TemporalPlainTimePrototypeMillisecond
code-creation,Builtin,2,6291,0x105453300,8,TemporalPlainTimePrototypeMicrosecond
code-creation,Builtin,2,6291,0x105453320,8,TemporalPlainTimePrototypeNanosecond
code-creation,Builtin,2,6291,0x105453340,8,TemporalPlainTimePrototypeAdd
code-creation,Builtin,2,6291,0x105453360,8,TemporalPlainTimePrototypeSubtract
code-creation,Builtin,2,6333,0x105453380,8,TemporalPlainTimePrototypeWith
code-creation,Builtin,2,6333,0x1054533a0,8,TemporalPlainTimePrototypeUntil
code-creation,Builtin,2,6333,0x1054533c0,8,TemporalPlainTimePrototypeSince
code-creation,Builtin,2,6333,0x1054533e0,8,TemporalPlainTimePrototypeRound
code-creation,Builtin,2,6333,0x105453400,8,TemporalPlainTimePrototypeEquals
code-creation,Builtin,2,6333,0x105453420,8,TemporalPlainTimePrototypeToPlainDateTime
code-creation,Builtin,2,6333,0x105453440,8,TemporalPlainTimePrototypeToZonedDateTime
code-creation,Builtin,2,6333,0x105453460,8,TemporalPlainTimePrototypeGetISOFields
code-creation,Builtin,2,6333,0x105453480,8,TemporalPlainTimePrototypeToString
code-creation,Builtin,2,6333,0x1054534a0,8,TemporalPlainTimePrototypeToJSON
code-creation,Builtin,2,6333,0x1054534c0,8,TemporalPlainTimePrototypeValueOf
code-creation,Builtin,2,6375,0x1054534e0,8,TemporalPlainDateTimeConstructor
code-creation,Builtin,2,6375,0x105453500,8,TemporalPlainDateTimeFrom
code-creation,Builtin,2,6375,0x105453520,8,TemporalPlainDateTimeCompare
code-creation,Builtin,2,6375,0x105453540,8,TemporalPlainDateTimePrototypeCalendar
code-creation,Builtin,2,6375,0x105453560,8,TemporalPlainDateTimePrototypeYear
code-creation,Builtin,2,6375,0x105453580,8,TemporalPlainDateTimePrototypeMonth
code-creation,Builtin,2,6375,0x1054535a0,8,TemporalPlainDateTimePrototypeMonthCode
code-creation,Builtin,2,6375,0x1054535c0,8,TemporalPlainDateTimePrototypeDay
code-creation,Builtin,2,6375,0x1054535e0,8,TemporalPlainDateTimePrototypeHour
code-creation,Builtin,2,6375,0x105453600,8,TemporalPlainDateTimePrototypeMinute
code-creation,Builtin,2,6375,0x105453620,8,TemporalPlainDateTimePrototypeSecond
code-creation,Builtin,2,6416,0x105453640,8,TemporalPlainDateTimePrototypeMillisecond
code-creation,Builtin,2,6416,0x105453660,8,TemporalPlainDateTimePrototypeMicrosecond
code-creation,Builtin,2,6416,0x105453680,8,TemporalPlainDateTimePrototypeNanosecond
code-creation,Builtin,2,6416,0x1054536a0,8,TemporalPlainDateTimePrototypeDayOfWeek
code-creation,Builtin,2,6416,0x1054536c0,8,TemporalPlainDateTimePrototypeDayOfYear
code-creation,Builtin,2,6416,0x1054536e0,8,TemporalPlainDateTimePrototypeWeekOfYear
code-creation,Builtin,2,6416,0x105453700,8,TemporalPlainDateTimePrototypeDaysInWeek
code-creation,Builtin,2,6416,0x105453720,8,TemporalPlainDateTimePrototypeDaysInMonth
code-creation,Builtin,2,6416,0x105453740,8,TemporalPlainDateTimePrototypeDaysInYear
code-creation,Builtin,2,6458,0x105453760,8,TemporalPlainDateTimePrototypeMonthsInYear
code-creation,Builtin,2,6458,0x105453780,8,TemporalPlainDateTimePrototypeInLeapYear
code-creation,Builtin,2,6458,0x1054537a0,8,TemporalPlainDateTimePrototypeWith
code-creation,Builtin,2,6458,0x1054537c0,8,TemporalPlainDateTimePrototypeWithPlainTime
code-creation,Builtin,2,6458,0x1054537e0,8,TemporalPlainDateTimePrototypeWithPlainDate
code-creation,Builtin,2,6458,0x105453800,8,TemporalPlainDateTimePrototypeWithCalendar
code-creation,Builtin,2,6458,0x105453820,8,TemporalPlainDateTimePrototypeAdd
code-creation,Builtin,2,6458,0x105453840,8,TemporalPlainDateTimePrototypeSubtract
code-creation,Builtin,2,6458,0x105453860,8,TemporalPlainDateTimePrototypeUntil
code-creation,Builtin,2,6458,0x105453880,8,TemporalPlainDateTimePrototypeSince
code-creation,Builtin,2,6500,0x1054538a0,8,TemporalPlainDateTimePrototypeRound
code-creation,Builtin,2,6500,0x1054538c0,8,TemporalPlainDateTimePrototypeEquals
code-creation,Builtin,2,6500,0x1054538e0,8,TemporalPlainDateTimePrototypeToString
code-creation,Builtin,2,6500,0x105453900,8,TemporalPlainDateTimePrototypeToJSON
code-creation,Builtin,2,6500,0x105453920,8,TemporalPlainDateTimePrototypeValueOf
code-creation,Builtin,2,6500,0x105453940,8,TemporalPlainDateTimePrototypeToZonedDateTime
code-creation,Builtin,2,6500,0x105453960,8,TemporalPlainDateTimePrototypeToPlainDate
code-creation,Builtin,2,6500,0x105453980,8,TemporalPlainDateTimePrototypeToPlainYearMonth
code-creation,Builtin,2,6500,0x1054539a0,8,TemporalPlainDateTimePrototypeToPlainMonthDay
code-creation,Builtin,2,6500,0x1054539c0,8,TemporalPlainDateTimePrototypeToPlainTime
code-creation,Builtin,2,6541,0x1054539e0,8,TemporalPlainDateTimePrototypeGetISOFields
code-creation,Builtin,2,6541,0x105453a00,8,TemporalZonedDateTimeConstructor
code-creation,Builtin,2,6541,0x105453a20,8,TemporalZonedDateTimeFrom
code-creation,Builtin,2,6541,0x105453a40,8,TemporalZonedDateTimeCompare
code-creation,Builtin,2,6541,0x105453a60,8,TemporalZonedDateTimePrototypeCalendar
code-creation,Builtin,2,6541,0x105453a80,8,TemporalZonedDateTimePrototypeTimeZone
code-creation,Builtin,2,6541,0x105453aa0,8,TemporalZonedDateTimePrototypeYear
code-creation,Builtin,2,6541,0x105453ac0,8,TemporalZonedDateTimePrototypeMonth
code-creation,Builtin,2,6541,0x105453ae0,8,TemporalZonedDateTimePrototypeMonthCode
code-creation,Builtin,2,6541,0x105453b00,8,TemporalZonedDateTimePrototypeDay
code-creation,Builtin,2,6583,0x105453b20,8,TemporalZonedDateTimePrototypeHour
code-creation,Builtin,2,6583,0x105453b40,8,TemporalZonedDateTimePrototypeMinute
code-creation,Builtin,2,6583,0x105453b60,8,TemporalZonedDateTimePrototypeSecond
code-creation,Builtin,2,6583,0x105453b80,8,TemporalZonedDateTimePrototypeMillisecond
code-creation,Builtin,2,6583,0x105453ba0,8,TemporalZonedDateTimePrototypeMicrosecond
code-creation,Builtin,2,6583,0x105453bc0,8,TemporalZonedDateTimePrototypeNanosecond
code-creation,Builtin,2,6583,0x105453be0,8,TemporalZonedDateTimePrototypeEpochSeconds
code-creation,Builtin,2,6583,0x105453c00,8,TemporalZonedDateTimePrototypeEpochMilliseconds
code-creation,Builtin,2,6583,0x105453c20,8,TemporalZonedDateTimePrototypeEpochMicroseconds
code-creation,Builtin,2,6583,0x105453c40,8,TemporalZonedDateTimePrototypeEpochNanoseconds
code-creation,Builtin,2,6625,0x105453c60,8,TemporalZonedDateTimePrototypeDayOfWeek
code-creation,Builtin,2,6625,0x105453c80,8,TemporalZonedDateTimePrototypeDayOfYear
code-creation,Builtin,2,6625,0x105453ca0,8,TemporalZonedDateTimePrototypeWeekOfYear
code-creation,Builtin,2,6625,0x105453cc0,8,TemporalZonedDateTimePrototypeHoursInDay
code-creation,Builtin,2,6625,0x105453ce0,8,TemporalZonedDateTimePrototypeDaysInWeek
code-creation,Builtin,2,6625,0x105453d00,8,TemporalZonedDateTimePrototypeDaysInMonth
code-creation,Builtin,2,6625,0x105453d20,8,TemporalZonedDateTimePrototypeDaysInYear
code-creation,Builtin,2,6625,0x105453d40,8,TemporalZonedDateTimePrototypeMonthsInYear
code-creation,Builtin,2,6625,0x105453d60,8,TemporalZonedDateTimePrototypeInLeapYear
code-creation,Builtin,2,6666,0x105453d80,8,TemporalZonedDateTimePrototypeOffsetNanoseconds
code-creation,Builtin,2,6666,0x105453da0,8,TemporalZonedDateTimePrototypeOffset
code-creation,Builtin,2,6666,0x105453dc0,8,TemporalZonedDateTimePrototypeWith
code-creation,Builtin,2,6666,0x105453de0,8,TemporalZonedDateTimePrototypeWithPlainTime
code-creation,Builtin,2,6666,0x105453e00,8,TemporalZonedDateTimePrototypeWithPlainDate
code-creation,Builtin,2,6666,0x105453e20,8,TemporalZonedDateTimePrototypeWithTimeZone
code-creation,Builtin,2,6666,0x105453e40,8,TemporalZonedDateTimePrototypeWithCalendar
code-creation,Builtin,2,6666,0x105453e60,8,TemporalZonedDateTimePrototypeAdd
code-creation,Builtin,2,6666,0x105453e80,8,TemporalZonedDateTimePrototypeSubtract
code-creation,Builtin,2,6708,0x105453ea0,8,TemporalZonedDateTimePrototypeUntil
code-creation,Builtin,2,6708,0x105453ec0,8,TemporalZonedDateTimePrototypeSince
code-creation,Builtin,2,6708,0x105453ee0,8,TemporalZonedDateTimePrototypeRound
code-creation,Builtin,2,6708,0x105453f00,8,TemporalZonedDateTimePrototypeEquals
code-creation,Builtin,2,6708,0x105453f20,8,TemporalZonedDateTimePrototypeToString
code-creation,Builtin,2,6708,0x105453f40,8,TemporalZonedDateTimePrototypeToJSON
code-creation,Builtin,2,6708,0x105453f60,8,TemporalZonedDateTimePrototypeValueOf
code-creation,Builtin,2,6708,0x105453f80,8,TemporalZonedDateTimePrototypeStartOfDay
code-creation,Builtin,2,6750,0x105453fa0,8,TemporalZonedDateTimePrototypeToInstant
code-creation,Builtin,2,6750,0x105453fc0,8,TemporalZonedDateTimePrototypeToPlainDate
code-creation,Builtin,2,6750,0x105453fe0,8,TemporalZonedDateTimePrototypeToPlainTime
code-creation,Builtin,2,6750,0x105454000,8,TemporalZonedDateTimePrototypeToPlainDateTime
code-creation,Builtin,2,6750,0x105454020,8,TemporalZonedDateTimePrototypeToPlainYearMonth
code-creation,Builtin,2,6750,0x105454040,8,TemporalZonedDateTimePrototypeToPlainMonthDay
code-creation,Builtin,2,6750,0x105454060,8,TemporalZonedDateTimePrototypeGetISOFields
code-creation,Builtin,2,6750,0x105454080,8,TemporalDurationConstructor
code-creation,Builtin,2,6750,0x1054540a0,8,TemporalDurationFrom
code-creation,Builtin,2,6750,0x1054540c0,8,TemporalDurationCompare
code-creation,Builtin,2,6791,0x1054540e0,8,TemporalDurationPrototypeYears
code-creation,Builtin,2,6791,0x105454100,8,TemporalDurationPrototypeMonths
code-creation,Builtin,2,6791,0x105454120,8,TemporalDurationPrototypeWeeks
code-creation,Builtin,2,6791,0x105454140,8,TemporalDurationPrototypeDays
code-creation,Builtin,2,6791,0x105454160,8,TemporalDurationPrototypeHours
code-creation,Builtin,2,6791,0x105454180,8,TemporalDurationPrototypeMinutes
code-creation,Builtin,2,6791,0x1054541a0,8,TemporalDurationPrototypeSeconds
code-creation,Builtin,2,6791,0x1054541c0,8,TemporalDurationPrototypeMilliseconds
code-creation,Builtin,2,6791,0x1054541e0,8,TemporalDurationPrototypeMicroseconds
code-creation,Builtin,2,6791,0x105454200,8,TemporalDurationPrototypeNanoseconds
code-creation,Builtin,2,6833,0x105454220,8,TemporalDurationPrototypeSign
code-creation,Builtin,2,6833,0x105454240,8,TemporalDurationPrototypeBlank
code-creation,Builtin,2,6833,0x105454260,8,TemporalDurationPrototypeWith
code-creation,Builtin,2,6833,0x105454280,8,TemporalDurationPrototypeNegated
code-creation,Builtin,2,6833,0x1054542a0,8,TemporalDurationPrototypeAbs
code-creation,Builtin,2,6833,0x1054542c0,8,TemporalDurationPrototypeAdd
code-creation,Builtin,2,6833,0x1054542e0,8,TemporalDurationPrototypeSubtract
code-creation,Builtin,2,6833,0x105454300,8,TemporalDurationPrototypeRound
code-creation,Builtin,2,6833,0x105454320,8,TemporalDurationPrototypeTotal
code-creation,Builtin,2,6833,0x105454340,8,TemporalDurationPrototypeToString
code-creation,Builtin,2,6833,0x105454360,8,TemporalDurationPrototypeToJSON
code-creation,Builtin,2,6875,0x105454380,8,TemporalDurationPrototypeValueOf
code-creation,Builtin,2,6875,0x1054543a0,8,TemporalInstantConstructor
code-creation,Builtin,2,6875,0x1054543c0,8,TemporalInstantFrom
code-creation,Builtin,2,6875,0x1054543e0,8,TemporalInstantFromEpochSeconds
code-creation,Builtin,2,6875,0x105454400,8,TemporalInstantFromEpochMilliseconds
code-creation,Builtin,2,6875,0x105454420,8,TemporalInstantFromEpochMicroseconds
code-creation,Builtin,2,6875,0x105454440,8,TemporalInstantFromEpochNanoseconds
code-creation,Builtin,2,6875,0x105454460,8,TemporalInstantCompare
code-creation,Builtin,2,6916,0x105454480,8,TemporalInstantPrototypeEpochSeconds
code-creation,Builtin,2,6916,0x1054544a0,8,TemporalInstantPrototypeEpochMilliseconds
code-creation,Builtin,2,6916,0x1054544c0,8,TemporalInstantPrototypeEpochMicroseconds
code-creation,Builtin,2,6916,0x1054544e0,8,TemporalInstantPrototypeEpochNanoseconds
code-creation,Builtin,2,6916,0x105454500,8,TemporalInstantPrototypeAdd
code-creation,Builtin,2,6916,0x105454520,8,TemporalInstantPrototypeSubtract
code-creation,Builtin,2,6916,0x105454540,8,TemporalInstantPrototypeUntil
code-creation,Builtin,2,6916,0x105454560,8,TemporalInstantPrototypeSince
code-creation,Builtin,2,6916,0x105454580,8,TemporalInstantPrototypeRound
code-creation,Builtin,2,6916,0x1054545a0,8,TemporalInstantPrototypeEquals
code-creation,Builtin,2,6958,0x1054545c0,8,TemporalInstantPrototypeToString
code-creation,Builtin,2,6958,0x1054545e0,8,TemporalInstantPrototypeToJSON
code-creation,Builtin,2,6958,0x105454600,8,TemporalInstantPrototypeValueOf
code-creation,Builtin,2,6958,0x105454620,8,TemporalInstantPrototypeToZonedDateTime
code-creation,Builtin,2,6958,0x105454640,8,TemporalInstantPrototypeToZonedDateTimeISO
code-creation,Builtin,2,6958,0x105454660,8,TemporalPlainYearMonthConstructor
code-creation,Builtin,2,6958,0x105454680,8,TemporalPlainYearMonthFrom
code-creation,Builtin,2,6958,0x1054546a0,8,TemporalPlainYearMonthCompare
code-creation,Builtin,2,6958,0x1054546c0,8,TemporalPlainYearMonthPrototypeCalendar
code-creation,Builtin,2,6958,0x1054546e0,8,TemporalPlainYearMonthPrototypeYear
code-creation,Builtin,2,7000,0x105454700,8,TemporalPlainYearMonthPrototypeMonth
code-creation,Builtin,2,7000,0x105454720,8,TemporalPlainYearMonthPrototypeMonthCode
code-creation,Builtin,2,7000,0x105454740,8,TemporalPlainYearMonthPrototypeDaysInYear
code-creation,Builtin,2,7000,0x105454760,8,TemporalPlainYearMonthPrototypeDaysInMonth
code-creation,Builtin,2,7000,0x105454780,8,TemporalPlainYearMonthPrototypeMonthsInYear
code-creation,Builtin,2,7000,0x1054547a0,8,TemporalPlainYearMonthPrototypeInLeapYear
code-creation,Builtin,2,7000,0x1054547c0,8,TemporalPlainYearMonthPrototypeWith
code-creation,Builtin,2,7000,0x1054547e0,8,TemporalPlainYearMonthPrototypeAdd
code-creation,Builtin,2,7000,0x105454800,8,TemporalPlainYearMonthPrototypeSubtract
code-creation,Builtin,2,7041,0x105454820,8,TemporalPlainYearMonthPrototypeUntil
code-creation,Builtin,2,7041,0x105454840,8,TemporalPlainYearMonthPrototypeSince
code-creation,Builtin,2,7041,0x105454860,8,TemporalPlainYearMonthPrototypeEquals
code-creation,Builtin,2,7041,0x105454880,8,TemporalPlainYearMonthPrototypeToString
code-creation,Builtin,2,7041,0x1054548a0,8,TemporalPlainYearMonthPrototypeToJSON
code-creation,Builtin,2,7041,0x1054548c0,8,TemporalPlainYearMonthPrototypeValueOf
code-creation,Builtin,2,7041,0x1054548e0,8,TemporalPlainYearMonthPrototypeToPlainDate
code-creation,Builtin,2,7041,0x105454900,8,TemporalPlainYearMonthPrototypeGetISOFields
code-creation,Builtin,2,7041,0x105454920,8,TemporalPlainMonthDayConstructor
code-creation,Builtin,2,7041,0x105454940,8,TemporalPlainMonthDayFrom
code-creation,Builtin,2,7083,0x105454960,8,TemporalPlainMonthDayPrototypeCalendar
code-creation,Builtin,2,7083,0x105454980,8,TemporalPlainMonthDayPrototypeMonthCode
code-creation,Builtin,2,7083,0x1054549a0,8,TemporalPlainMonthDayPrototypeDay
code-creation,Builtin,2,7083,0x1054549c0,8,TemporalPlainMonthDayPrototypeWith
code-creation,Builtin,2,7083,0x1054549e0,8,TemporalPlainMonthDayPrototypeEquals
code-creation,Builtin,2,7083,0x105454a00,8,TemporalPlainMonthDayPrototypeToString
code-creation,Builtin,2,7083,0x105454a20,8,TemporalPlainMonthDayPrototypeToJSON
code-creation,Builtin,2,7083,0x105454a40,8,TemporalPlainMonthDayPrototypeValueOf
code-creation,Builtin,2,7083,0x105454a60,8,TemporalPlainMonthDayPrototypeToPlainDate
code-creation,Builtin,2,7125,0x105454a80,8,TemporalPlainMonthDayPrototypeGetISOFields
code-creation,Builtin,2,7125,0x105454aa0,8,TemporalTimeZoneConstructor
code-creation,Builtin,2,7125,0x105454ac0,8,TemporalTimeZoneFrom
code-creation,Builtin,2,7125,0x105454ae0,8,TemporalTimeZonePrototypeId
code-creation,Builtin,2,7125,0x105454b00,8,TemporalTimeZonePrototypeGetOffsetNanosecondsFor
code-creation,Builtin,2,7125,0x105454b20,8,TemporalTimeZonePrototypeGetOffsetStringFor
code-creation,Builtin,2,7125,0x105454b40,8,TemporalTimeZonePrototypeGetPlainDateTimeFor
code-creation,Builtin,2,7125,0x105454b60,8,TemporalTimeZonePrototypeGetInstantFor
code-creation,Builtin,2,7125,0x105454b80,8,TemporalTimeZonePrototypeGetPossibleInstantsFor
code-creation,Builtin,2,7166,0x105454ba0,8,TemporalTimeZonePrototypeGetNextTransition
code-creation,Builtin,2,7166,0x105454bc0,8,TemporalTimeZonePrototypeGetPreviousTransition
code-creation,Builtin,2,7166,0x105454be0,8,TemporalTimeZonePrototypeToString
code-creation,Builtin,2,7166,0x105454c00,8,TemporalTimeZonePrototypeToJSON
code-creation,Builtin,2,7166,0x105454c20,8,TemporalCalendarConstructor
code-creation,Builtin,2,7166,0x105454c40,8,TemporalCalendarFrom
code-creation,Builtin,2,7166,0x105454c60,8,TemporalCalendarPrototypeId
code-creation,Builtin,2,7166,0x105454c80,8,TemporalCalendarPrototypeDateFromFields
code-creation,Builtin,2,7166,0x105454ca0,8,TemporalCalendarPrototypeYearMonthFromFields
code-creation,Builtin,2,7166,0x105454cc0,8,TemporalCalendarPrototypeMonthDayFromFields
code-creation,Builtin,2,7166,0x105454ce0,8,TemporalCalendarPrototypeDateAdd
code-creation,Builtin,2,7208,0x105454d00,8,TemporalCalendarPrototypeDateUntil
code-creation,Builtin,2,7208,0x105454d20,8,TemporalCalendarPrototypeYear
code-creation,Builtin,2,7208,0x105454d40,8,TemporalCalendarPrototypeMonth
code-creation,Builtin,2,7208,0x105454d60,8,TemporalCalendarPrototypeMonthCode
code-creation,Builtin,2,7208,0x105454d80,8,TemporalCalendarPrototypeDay
code-creation,Builtin,2,7208,0x105454da0,8,TemporalCalendarPrototypeDayOfWeek
code-creation,Builtin,2,7208,0x105454dc0,8,TemporalCalendarPrototypeDayOfYear
code-creation,Builtin,2,7208,0x105454de0,8,TemporalCalendarPrototypeWeekOfYear
code-creation,Builtin,2,7208,0x105454e00,8,TemporalCalendarPrototypeDaysInWeek
code-creation,Builtin,2,7208,0x105454e20,8,TemporalCalendarPrototypeDaysInMonth
code-creation,Builtin,2,7250,0x105454e40,8,TemporalCalendarPrototypeDaysInYear
code-creation,Builtin,2,7250,0x105454e60,8,TemporalCalendarPrototypeMonthsInYear
code-creation,Builtin,2,7250,0x105454e80,8,TemporalCalendarPrototypeInLeapYear
code-creation,Builtin,2,7250,0x105454ea0,8,TemporalCalendarPrototypeFields
code-creation,Builtin,2,7250,0x105454ec0,8,TemporalCalendarPrototypeMergeFields
code-creation,Builtin,2,7250,0x105454ee0,8,TemporalCalendarPrototypeToString
code-creation,Builtin,2,7250,0x105454f00,8,TemporalCalendarPrototypeToJSON
code-creation,Builtin,2,7250,0x105454f20,1556,StringFixedArrayFromIterable
code-creation,Builtin,2,7250,0x105455540,1540,TemporalInstantFixedArrayFromIterable
code-creation,Builtin,2,7250,0x105455b60,312,AggregateErrorConstructor
code-creation,Builtin,2,7291,0x105455ca0,828,ArrayPrototypeAt
code-creation,Builtin,2,7291,0x105455fe0,644,ArrayPrototypeConcat
code-creation,Builtin,2,7291,0x105456280,5000,ArrayPrototypeCopyWithin
code-creation,Builtin,2,7291,0x105457620,240,ArrayEveryLoopEagerDeoptContinuation
code-creation,Builtin,2,7291,0x105457720,576,ArrayEveryLoopLazyDeoptContinuation
code-creation,Builtin,2,7291,0x105457980,3376,ArrayEveryLoopContinuation
code-creation,Builtin,2,7291,0x1054586c0,1496,ArrayEvery
code-creation,Builtin,2,7291,0x105458ca0,296,ArrayFilterLoopEagerDeoptContinuation
code-creation,Builtin,2,7291,0x105458de0,864,ArrayFilterLoopLazyDeoptContinuation
code-creation,Builtin,2,7291,0x105459160,3596,ArrayFilterLoopContinuation
code-creation,Builtin,2,7333,0x105459f80,4172,ArrayFilter
code-creation,Builtin,2,7333,0x10545afe0,232,ArrayFindLoopEagerDeoptContinuation
code-creation,Builtin,2,7333,0x10545b0e0,52,ArrayFindLoopLazyDeoptContinuation
code-creation,Builtin,2,7333,0x10545b120,352,ArrayFindLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,7333,0x10545b2a0,524,ArrayFindLoopContinuation
code-creation,Builtin,2,7333,0x10545b4c0,1480,ArrayPrototypeFind
code-creation,Builtin,2,7333,0x10545baa0,232,ArrayFindIndexLoopEagerDeoptContinuation
code-creation,Builtin,2,7333,0x10545bba0,52,ArrayFindIndexLoopLazyDeoptContinuation
code-creation,Builtin,2,7333,0x10545bbe0,352,ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,7375,0x10545bd60,516,ArrayFindIndexLoopContinuation
code-creation,Builtin,2,7375,0x10545bf80,1476,ArrayPrototypeFindIndex
code-creation,Builtin,2,7375,0x10545c560,472,ArrayFindLastLoopContinuation
code-creation,Builtin,2,7375,0x10545c740,1580,ArrayPrototypeFindLast
code-creation,Builtin,2,7375,0x10545cd80,464,ArrayFindLastIndexLoopContinuation
code-creation,Builtin,2,7375,0x10545cf60,1576,ArrayPrototypeFindLastIndex
code-creation,Builtin,2,7375,0x10545d5a0,240,ArrayForEachLoopEagerDeoptContinuation
code-creation,Builtin,2,7375,0x10545d6a0,240,ArrayForEachLoopLazyDeoptContinuation
code-creation,Builtin,2,7375,0x10545d7a0,3268,ArrayForEachLoopContinuation
code-creation,Builtin,2,7416,0x10545e480,1332,ArrayForEach
code-creation,Builtin,2,7416,0x10545e9c0,3664,ArrayFrom
code-creation,Builtin,2,7416,0x10545f820,192,ArrayIsArray
code-creation,Builtin,2,7416,0x10545f900,400,LoadJoinElement_DictionaryElements_0
code-creation,Builtin,2,7416,0x10545faa0,64,LoadJoinElement_FastSmiOrObjectElements_0
code-creation,Builtin,2,7416,0x10545fb00,172,LoadJoinElement_FastDoubleElements_0
code-creation,Builtin,2,7416,0x10545fbc0,372,ConvertToLocaleString
code-creation,Builtin,2,7416,0x10545fd40,812,JoinStackPush
code-creation,Builtin,2,7416,0x105460080,312,JoinStackPop
code-creation,Builtin,2,7416,0x1054601c0,6356,ArrayPrototypeJoin
code-creation,Builtin,2,7416,0x105461aa0,5180,ArrayPrototypeToLocaleString
code-creation,Builtin,2,7458,0x105462ee0,280,ArrayPrototypeToString
code-creation,Builtin,2,7458,0x105463000,6176,TypedArrayPrototypeJoin
code-creation,Builtin,2,7458,0x105464840,4988,TypedArrayPrototypeToLocaleString
code-creation,Builtin,2,7458,0x105465bc0,3472,ArrayPrototypeLastIndexOf
code-creation,Builtin,2,7458,0x105466960,260,ArrayMapPreLoopLazyDeoptContinuation
code-creation,Builtin,2,7458,0x105466a80,260,ArrayMapLoopEagerDeoptContinuation
code-creation,Builtin,2,7458,0x105466ba0,480,ArrayMapLoopLazyDeoptContinuation
code-creation,Builtin,2,7458,0x105466da0,3256,ArrayMapLoopContinuation
code-creation,Builtin,2,7458,0x105467a60,3764,ArrayMap
code-creation,Builtin,2,7458,0x105468920,852,ArrayOf
code-creation,Builtin,2,7458,0x105468c80,416,ArrayReduceRightPreLoopEagerDeoptContinuation
code-creation,Builtin,2,7500,0x105468e40,232,ArrayReduceRightLoopEagerDeoptContinuation
code-creation,Builtin,2,7500,0x105468f40,232,ArrayReduceRightLoopLazyDeoptContinuation
code-creation,Builtin,2,7500,0x105469040,3300,ArrayReduceRightLoopContinuation
code-creation,Builtin,2,7500,0x105469d40,1832,ArrayReduceRight
code-creation,Builtin,2,7500,0x10546a480,208,ArrayReducePreLoopEagerDeoptContinuation
code-creation,Builtin,2,7500,0x10546a560,232,ArrayReduceLoopEagerDeoptContinuation
code-creation,Builtin,2,7500,0x10546a660,232,ArrayReduceLoopLazyDeoptContinuation
code-creation,Builtin,2,7500,0x10546a760,3348,ArrayReduceLoopContinuation
code-creation,Builtin,2,7500,0x10546b480,1540,ArrayReduce
code-creation,Builtin,2,7500,0x10546baa0,2992,ArrayPrototypeReverse
code-creation,Builtin,2,7541,0x10546c660,3224,ArrayPrototypeShift
code-creation,Builtin,2,7541,0x10546d300,4920,ArrayPrototypeSlice
code-creation,Builtin,2,7541,0x10546e640,240,ArraySomeLoopEagerDeoptContinuation
code-creation,Builtin,2,7541,0x10546e740,568,ArraySomeLoopLazyDeoptContinuation
code-creation,Builtin,2,7541,0x10546e980,3368,ArraySomeLoopContinuation
code-creation,Builtin,2,7541,0x10546f6c0,1488,ArraySome
code-creation,Builtin,2,7541,0x10546fca0,12208,ArrayPrototypeSplice
code-creation,Builtin,2,7541,0x105472c60,2908,ArrayPrototypeUnshift
code-creation,Builtin,2,7541,0x1054737c0,316,ArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,7541,0x105473900,440,ArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,7583,0x105473ac0,228,ArrayBufferPrototypeGetResizable
code-creation,Builtin,2,7583,0x105473bc0,316,SharedArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,7583,0x105473d00,228,SharedArrayBufferPrototypeGetGrowable
code-creation,Builtin,2,7583,0x105473e00,128,ArrayBufferIsView
code-creation,Builtin,2,7583,0x105473ea0,228,ToInteger
code-creation,Builtin,2,7583,0x105473fa0,3908,FastCreateDataProperty
code-creation,Builtin,2,7583,0x105474f00,648,CheckSameObject
code-creation,Builtin,2,7583,0x1054751a0,948,BooleanConstructor
code-creation,Builtin,2,7583,0x105475560,184,BooleanPrototypeToString
code-creation,Builtin,2,7625,0x105475620,180,BooleanPrototypeValueOf
code-creation,Builtin,2,7625,0x1054756e0,1048,BigIntAddNoThrow
code-creation,Builtin,2,7625,0x105475b00,1148,BigIntAdd
code-creation,Builtin,2,7625,0x105475f80,1048,BigIntSubtractNoThrow
code-creation,Builtin,2,7625,0x1054763a0,1148,BigIntSubtract
code-creation,Builtin,2,7625,0x105476820,336,BigIntUnaryMinus
code-creation,Builtin,2,7625,0x105476980,1372,ToString
code-creation,Builtin,2,7625,0x105476ee0,176,StringPrototypeToString
code-creation,Builtin,2,7625,0x105476fa0,176,StringPrototypeValueOf
code-creation,Builtin,2,7625,0x105477060,2404,StringToList
code-creation,Builtin,2,7625,0x1054779e0,1016,StringPrototypeCharAt
code-creation,Builtin,2,7666,0x105477de0,696,StringPrototypeCharCodeAt
code-creation,Builtin,2,7666,0x1054780a0,1216,StringPrototypeCodePointAt
code-creation,Builtin,2,7666,0x105478580,436,StringPrototypeConcat
code-creation,Builtin,2,7666,0x105478740,1008,StringConstructor
code-creation,Builtin,2,7666,0x105478b40,1424,StringAddConvertLeft
code-creation,Builtin,2,7666,0x1054790e0,1468,StringAddConvertRight
code-creation,Builtin,2,7666,0x1054796a0,888,StringCharAt
code-creation,Builtin,2,7666,0x105479a20,20,FastNewClosureBaseline
code-creation,Builtin,2,7666,0x105479a40,232,FastNewFunctionContextEval
code-creation,Builtin,2,7666,0x105479b40,232,FastNewFunctionContextFunction
code-creation,Builtin,2,7708,0x105479c40,308,CreateRegExpLiteral
code-creation,Builtin,2,7708,0x105479d80,1032,CreateShallowArrayLiteral
code-creation,Builtin,2,7708,0x10547a1a0,516,CreateEmptyArrayLiteral
code-creation,Builtin,2,7708,0x10547a3c0,1704,CreateShallowObjectLiteral
code-creation,Builtin,2,7708,0x10547aa80,440,ObjectConstructor
code-creation,Builtin,2,7708,0x10547ac40,204,CreateEmptyLiteralObject
code-creation,Builtin,2,7708,0x10547ad20,592,NumberConstructor
code-creation,Builtin,2,7708,0x10547af80,92,GenericLazyDeoptContinuation
code-creation,Builtin,2,7708,0x10547afe0,84,StringToNumber
code-creation,Builtin,2,7708,0x10547b040,240,NonNumberToNumber
code-creation,Builtin,2,7750,0x10547b140,288,NonNumberToNumeric
code-creation,Builtin,2,7750,0x10547b280,60,ToNumeric
code-creation,Builtin,2,7750,0x10547b2c0,1440,NumberToString
code-creation,Builtin,2,7750,0x10547b880,128,ToBoolean
code-creation,Builtin,2,7750,0x10547b920,128,ToBooleanForBaselineJump
code-creation,Builtin,2,7750,0x10547b9c0,564,ToLength
code-creation,Builtin,2,7750,0x10547bc00,1336,ToName
code-creation,Builtin,2,7750,0x10547c140,800,ToObject
code-creation,Builtin,2,7750,0x10547c480,276,NonPrimitiveToPrimitive_Default
code-creation,Builtin,2,7750,0x10547c5a0,276,NonPrimitiveToPrimitive_Number
code-creation,Builtin,2,7750,0x10547c6c0,276,NonPrimitiveToPrimitive_String
code-creation,Builtin,2,7750,0x10547c7e0,412,OrdinaryToPrimitive_Number
code-creation,Builtin,2,7791,0x10547c980,412,OrdinaryToPrimitive_String
code-creation,Builtin,2,7791,0x10547cb20,272,FastConsoleAssert
code-creation,Builtin,2,7791,0x10547cc40,180,DataViewPrototypeGetBuffer
code-creation,Builtin,2,7791,0x10547cd00,700,DataViewPrototypeGetByteLength
code-creation,Builtin,2,7791,0x10547cfc0,412,DataViewPrototypeGetByteOffset
code-creation,Builtin,2,7791,0x10547d160,716,DataViewPrototypeGetUint8
code-creation,Builtin,2,7791,0x10547d440,716,DataViewPrototypeGetInt8
code-creation,Builtin,2,7791,0x10547d720,824,DataViewPrototypeGetUint16
code-creation,Builtin,2,7833,0x10547da60,820,DataViewPrototypeGetInt16
code-creation,Builtin,2,7833,0x10547dda0,968,DataViewPrototypeGetUint32
code-creation,Builtin,2,7833,0x10547e180,852,DataViewPrototypeGetInt32
code-creation,Builtin,2,7833,0x10547e4e0,988,DataViewPrototypeGetFloat32
code-creation,Builtin,2,7833,0x10547e8c0,1064,DataViewPrototypeGetFloat64
code-creation,Builtin,2,7833,0x10547ed00,1148,DataViewPrototypeGetBigUint64
code-creation,Builtin,2,7833,0x10547f180,1176,DataViewPrototypeGetBigInt64
code-creation,Builtin,2,7833,0x10547f620,1096,DataViewPrototypeSetUint8
code-creation,Builtin,2,7833,0x10547fa80,1096,DataViewPrototypeSetInt8
code-creation,Builtin,2,7833,0x10547fee0,1168,DataViewPrototypeSetUint16
code-creation,Builtin,2,7833,0x105480380,1168,DataViewPrototypeSetInt16
code-creation,Builtin,2,7875,0x105480820,1200,DataViewPrototypeSetUint32
code-creation,Builtin,2,7875,0x105480ce0,1200,DataViewPrototypeSetInt32
code-creation,Builtin,2,7875,0x1054811a0,1204,DataViewPrototypeSetFloat32
code-creation,Builtin,2,7875,0x105481660,1264,DataViewPrototypeSetFloat64
code-creation,Builtin,2,7875,0x105481b60,1152,DataViewPrototypeSetBigUint64
code-creation,Builtin,2,7875,0x105482000,1152,DataViewPrototypeSetBigInt64
code-creation,Builtin,2,7875,0x1054824a0,860,FinalizationRegistryConstructor
code-creation,Builtin,2,7875,0x105482800,992,FinalizationRegistryRegister
code-creation,Builtin,2,7875,0x105482c00,660,FinalizationRegistryPrototypeCleanupSome
code-creation,Builtin,2,7875,0x105482ea0,356,FunctionPrototypeHasInstance
code-creation,Builtin,2,7916,0x105483020,932,FastFunctionPrototypeBind
code-creation,Builtin,2,7916,0x1054833e0,100,IncBlockCounter
code-creation,Builtin,2,7916,0x105483460,308,GetTemplateObject
code-creation,Builtin,2,7916,0x1054835a0,132,ForInNext
code-creation,Builtin,2,7916,0x105483640,180,GetImportMetaObjectBaseline
code-creation,Builtin,2,7916,0x105483700,128,GetIteratorWithFeedback
code-creation,Builtin,2,7916,0x1054837a0,124,GetIteratorBaseline
code-creation,Builtin,2,7916,0x105483820,292,CreateAsyncFromSyncIteratorBaseline
code-creation,Builtin,2,7916,0x105483960,1092,CallIteratorWithFeedback
code-creation,Builtin,2,7958,0x105483dc0,296,MathAbs
code-creation,Builtin,2,7958,0x105483f00,260,MathCeil
code-creation,Builtin,2,7958,0x105484020,260,MathFloor
code-creation,Builtin,2,7958,0x105484140,284,MathRound
code-creation,Builtin,2,7958,0x105484260,260,MathTrunc
code-creation,Builtin,2,7958,0x105484380,368,MathPow
code-creation,Builtin,2,7958,0x105484500,404,MathMax
code-creation,Builtin,2,7958,0x1054846a0,404,MathMin
code-creation,Builtin,2,7958,0x105484840,296,MathAcos
code-creation,Builtin,2,7958,0x105484980,296,MathAcosh
code-creation,Builtin,2,8000,0x105484ac0,296,MathAsin
code-creation,Builtin,2,8000,0x105484c00,296,MathAsinh
code-creation,Builtin,2,8000,0x105484d40,296,MathAtan
code-creation,Builtin,2,8000,0x105484e80,372,MathAtan2
code-creation,Builtin,2,8000,0x105485000,296,MathAtanh
code-creation,Builtin,2,8000,0x105485140,296,MathCbrt
code-creation,Builtin,2,8000,0x105485280,156,MathClz32
code-creation,Builtin,2,8000,0x105485320,296,MathCos
code-creation,Builtin,2,8000,0x105485460,296,MathCosh
code-creation,Builtin,2,8000,0x1054855a0,296,MathExp
code-creation,Builtin,2,8000,0x1054856e0,296,MathExpm1
code-creation,Builtin,2,8000,0x105485820,268,MathFround
code-creation,Builtin,2,8041,0x105485940,228,MathImul
code-creation,Builtin,2,8041,0x105485a40,296,MathLog
code-creation,Builtin,2,8041,0x105485b80,296,MathLog1p
code-creation,Builtin,2,8041,0x105485cc0,296,MathLog10
code-creation,Builtin,2,8041,0x105485e00,296,MathLog2
code-creation,Builtin,2,8041,0x105485f40,296,MathSin
code-creation,Builtin,2,8041,0x105486080,180,MathSign
code-creation,Builtin,2,8041,0x105486140,296,MathSinh
code-creation,Builtin,2,8041,0x105486280,264,MathSqrt
code-creation,Builtin,2,8041,0x1054863a0,296,MathTan
code-creation,Builtin,2,8041,0x1054864e0,296,MathTanh
code-creation,Builtin,2,8083,0x105486620,1064,MathHypot
code-creation,Builtin,2,8083,0x105486a60,332,MathRandom
code-creation,Builtin,2,8083,0x105486bc0,2892,NumberPrototypeToString
code-creation,Builtin,2,8083,0x105487720,172,NumberIsFinite
code-creation,Builtin,2,8083,0x1054877e0,156,NumberIsInteger
code-creation,Builtin,2,8083,0x105487880,152,NumberIsNaN
code-creation,Builtin,2,8083,0x105487920,184,NumberIsSafeInteger
code-creation,Builtin,2,8083,0x1054879e0,180,NumberPrototypeValueOf
code-creation,Builtin,2,8083,0x105487aa0,224,NumberParseFloat
code-creation,Builtin,2,8083,0x105487ba0,196,ParseInt
code-creation,Builtin,2,8083,0x105487c80,108,NumberParseInt
code-creation,Builtin,2,8125,0x105487d00,756,Add
code-creation,Builtin,2,8125,0x105488000,416,Subtract
code-creation,Builtin,2,8125,0x1054881c0,576,Multiply
code-creation,Builtin,2,8125,0x105488420,488,Divide
code-creation,Builtin,2,8125,0x105488620,540,Modulus
code-creation,Builtin,2,8125,0x105488840,508,Exponentiate
code-creation,Builtin,2,8125,0x105488a40,324,Negate
code-creation,Builtin,2,8125,0x105488ba0,120,BitwiseNot
code-creation,Builtin,2,8125,0x105488c20,120,Decrement
code-creation,Builtin,2,8125,0x105488ca0,120,Increment
code-creation,Builtin,2,8125,0x105488d20,396,ShiftLeft
code-creation,Builtin,2,8166,0x105488ec0,396,ShiftRight
code-creation,Builtin,2,8166,0x105489060,492,ShiftRightLogical
code-creation,Builtin,2,8166,0x105489260,396,BitwiseAnd
code-creation,Builtin,2,8166,0x105489400,396,BitwiseOr
code-creation,Builtin,2,8166,0x1054895a0,396,BitwiseXor
code-creation,Builtin,2,8166,0x105489740,868,LessThan
code-creation,Builtin,2,8166,0x105489ac0,868,LessThanOrEqual
code-creation,Builtin,2,8208,0x105489e40,868,GreaterThan
code-creation,Builtin,2,8208,0x10548a1c0,868,GreaterThanOrEqual
code-creation,Builtin,2,8208,0x10548a540,924,Equal
code-creation,Builtin,2,8208,0x10548a8e0,352,StrictEqual
code-creation,Builtin,2,8208,0x10548aa60,3408,ObjectFromEntries
code-creation,Builtin,2,8208,0x10548b7c0,844,CreateObjectWithoutProperties
code-creation,Builtin,2,8208,0x10548bb20,176,ObjectIsExtensible
code-creation,Builtin,2,8208,0x10548bbe0,180,ObjectPreventExtensions
code-creation,Builtin,2,8208,0x10548bca0,184,ObjectGetPrototypeOf
code-creation,Builtin,2,8208,0x10548bd60,312,ObjectSetPrototypeOf
code-creation,Builtin,2,8208,0x10548bea0,92,ObjectPrototypeToString
code-creation,Builtin,2,8250,0x10548bf00,116,ObjectPrototypeValueOf
code-creation,Builtin,2,8250,0x10548bf80,196,ObjectPrototypeToLocaleString
code-creation,Builtin,2,8250,0x10548c060,804,FulfillPromise
code-creation,Builtin,2,8250,0x10548c3a0,920,RejectPromise
code-creation,Builtin,2,8250,0x10548c740,2644,NewPromiseCapability
code-creation,Builtin,2,8250,0x10548d1a0,204,PromiseCapabilityDefaultReject
code-creation,Builtin,2,8250,0x10548d280,188,PromiseCapabilityDefaultResolve
code-creation,Builtin,2,8250,0x10548d340,1348,PerformPromiseThen
code-creation,Builtin,2,8250,0x10548d8a0,692,PromiseReject
code-creation,Builtin,2,8250,0x10548db60,300,PromiseGetCapabilitiesExecutor
code-creation,Builtin,2,8291,0x10548dca0,140,PromiseConstructorLazyDeoptContinuation
code-creation,Builtin,2,8291,0x10548dd40,4688,PromiseAll
code-creation,Builtin,2,8291,0x10548efa0,5084,PromiseAllSettled
code-creation,Builtin,2,8291,0x105490380,1132,PromiseAllResolveElementClosure
code-creation,Builtin,2,8291,0x105490800,1424,PromiseAllSettledResolveElementClosure
code-creation,Builtin,2,8291,0x105490da0,1432,PromiseAllSettledRejectElementClosure
code-creation,Builtin,2,8291,0x105491340,1200,PromiseAnyRejectElementClosure
code-creation,Builtin,2,8291,0x105491800,2612,PromiseAny
code-creation,Builtin,2,8291,0x105492240,3116,PromiseConstructor
code-creation,Builtin,2,8291,0x105492e80,380,PromisePrototypeCatch
code-creation,Builtin,2,8333,0x105493000,108,PromiseValueThunkFinally
code-creation,Builtin,2,8333,0x105493080,108,PromiseThrowerFinally
code-creation,Builtin,2,8333,0x105493100,1072,PromiseCatchFinally
code-creation,Builtin,2,8333,0x105493540,1072,PromiseThenFinally
code-creation,Builtin,2,8333,0x105493980,1836,PromisePrototypeFinally
code-creation,Builtin,2,8333,0x1054940c0,1532,PromiseRace
code-creation,Builtin,2,8333,0x1054946c0,336,PromiseFulfillReactionJob
code-creation,Builtin,2,8333,0x105494820,432,PromiseRejectReactionJob
code-creation,Builtin,2,8333,0x1054949e0,172,PromiseResolveTrampoline
code-creation,Builtin,2,8333,0x105494aa0,720,PromiseResolve
code-creation,Builtin,2,8375,0x105494d80,816,ResolvePromise
code-creation,Builtin,2,8375,0x1054950c0,2344,PromisePrototypeThen
code-creation,Builtin,2,8375,0x105495a00,1376,PromiseResolveThenableJob
code-creation,Builtin,2,8375,0x105495f80,448,ProxyConstructor
code-creation,Builtin,2,8375,0x105496160,1760,ProxyDeleteProperty
code-creation,Builtin,2,8375,0x105496860,2072,ProxyGetProperty
code-creation,Builtin,2,8375,0x105497080,1028,ProxyGetPrototypeOf
code-creation,Builtin,2,8375,0x1054974a0,1704,ProxyHasProperty
code-creation,Builtin,2,8375,0x105497b60,788,ProxyIsExtensible
code-creation,Builtin,2,8416,0x105497e80,816,ProxyPreventExtensions
code-creation,Builtin,2,8416,0x1054981c0,1204,ProxyRevocable
code-creation,Builtin,2,8416,0x105498680,144,ProxyRevoke
code-creation,Builtin,2,8416,0x105498720,2204,ProxySetProperty
code-creation,Builtin,2,8416,0x105498fc0,1252,ProxySetPrototypeOf
code-creation,Builtin,2,8416,0x1054994c0,228,ReflectIsExtensible
code-creation,Builtin,2,8416,0x1054995c0,232,ReflectPreventExtensions
code-creation,Builtin,2,8416,0x1054996c0,208,ReflectGetPrototypeOf
code-creation,Builtin,2,8416,0x1054997a0,296,ReflectSetPrototypeOf
code-creation,Builtin,2,8416,0x1054998e0,316,ReflectGet
code-creation,Builtin,2,8416,0x105499a20,176,ReflectDeleteProperty
code-creation,Builtin,2,8458,0x105499ae0,164,ReflectHas
code-creation,Builtin,2,8458,0x105499ba0,4764,RegExpPrototypeExecSlow
code-creation,Builtin,2,8458,0x10549ae40,4816,RegExpPrototypeExec
code-creation,Builtin,2,8458,0x10549c120,2228,RegExpPrototypeMatchAll
code-creation,Builtin,2,8458,0x10549c9e0,8892,RegExpStringIteratorPrototypeNext
code-creation,Builtin,2,8458,0x10549eca0,8356,RegExpMatchFast
code-creation,Builtin,2,8458,0x1054a0d60,3504,RegExpPrototypeMatch
code-creation,Builtin,2,8458,0x1054a1b20,6044,RegExpReplace
code-creation,Builtin,2,8458,0x1054a32c0,540,RegExpPrototypeReplace
code-creation,Builtin,2,8458,0x1054a34e0,1332,RegExpSearchFast
code-creation,Builtin,2,8458,0x1054a3a20,1576,RegExpPrototypeSearch
code-creation,Builtin,2,8500,0x1054a4060,212,RegExpPrototypeSourceGetter
code-creation,Builtin,2,8500,0x1054a4140,5352,RegExpSplit
code-creation,Builtin,2,8500,0x1054a5640,508,RegExpPrototypeSplit
code-creation,Builtin,2,8500,0x1054a5840,2164,RegExpPrototypeTest
code-creation,Builtin,2,8500,0x1054a60c0,1256,RegExpPrototypeTestFast
code-creation,Builtin,2,8500,0x1054a65c0,236,RegExpPrototypeGlobalGetter
code-creation,Builtin,2,8500,0x1054a66c0,244,RegExpPrototypeIgnoreCaseGetter
code-creation,Builtin,2,8500,0x1054a67c0,244,RegExpPrototypeMultilineGetter
code-creation,Builtin,2,8500,0x1054a68c0,244,RegExpPrototypeHasIndicesGetter
code-creation,Builtin,2,8500,0x1054a69c0,244,RegExpPrototypeLinearGetter
code-creation,Builtin,2,8500,0x1054a6ac0,244,RegExpPrototypeDotAllGetter
code-creation,Builtin,2,8541,0x1054a6bc0,272,RegExpPrototypeStickyGetter
code-creation,Builtin,2,8541,0x1054a6ce0,272,RegExpPrototypeUnicodeGetter
code-creation,Builtin,2,8541,0x1054a6e00,2244,RegExpPrototypeFlagsGetter
code-creation,Builtin,2,8541,0x1054a76e0,1392,StringPrototypeAt
code-creation,Builtin,2,8541,0x1054a7c60,3392,StringPrototypeEndsWith
code-creation,Builtin,2,8541,0x1054a89c0,468,CreateHTML
code-creation,Builtin,2,8541,0x1054a8ba0,180,StringPrototypeAnchor
code-creation,Builtin,2,8541,0x1054a8c60,152,StringPrototypeBig
code-creation,Builtin,2,8541,0x1054a8d00,152,StringPrototypeBlink
code-creation,Builtin,2,8541,0x1054a8da0,152,StringPrototypeBold
tick,0x1a4d3a55c,8583,0,0x0,6
tick,0x1a4d5c914,8583,0,0x0,6
code-creation,Builtin,2,8583,0x1054a8e40,188,StringPrototypeFontcolor
code-creation,Builtin,2,8583,0x1054a8f00,188,StringPrototypeFontsize
code-creation,Builtin,2,8583,0x1054a8fc0,152,StringPrototypeFixed
code-creation,Builtin,2,8583,0x1054a9060,152,StringPrototypeItalics
code-creation,Builtin,2,8583,0x1054a9100,188,StringPrototypeLink
code-creation,Builtin,2,8583,0x1054a91c0,152,StringPrototypeSmall
code-creation,Builtin,2,8583,0x1054a9260,152,StringPrototypeStrike
code-creation,Builtin,2,8625,0x1054a9300,152,StringPrototypeSub
code-creation,Builtin,2,8625,0x1054a93a0,152,StringPrototypeSup
code-creation,Builtin,2,8625,0x1054a9440,1004,StringPrototypeIncludes
code-creation,Builtin,2,8625,0x1054a9840,584,StringPrototypeIndexOf
code-creation,Builtin,2,8625,0x1054a9aa0,356,StringPrototypeIterator
code-creation,Builtin,2,8625,0x1054a9c20,1964,StringIteratorPrototypeNext
code-creation,Builtin,2,8625,0x1054aa3e0,1336,StringPrototypeMatch
code-creation,Builtin,2,8625,0x1054aa920,1336,StringPrototypeSearch
code-creation,Builtin,2,8625,0x1054aae60,804,StringPrototypePadStart
code-creation,Builtin,2,8625,0x1054ab1a0,808,StringPrototypePadEnd
code-creation,Builtin,2,8625,0x1054ab4e0,132,StringRepeat
code-creation,Builtin,2,8625,0x1054ab580,400,StringPrototypeRepeat
code-creation,Builtin,2,8666,0x1054ab720,10652,StringPrototypeReplaceAll
code-creation,Builtin,2,8666,0x1054ae0c0,3200,StringPrototypeSlice
code-creation,Builtin,2,8666,0x1054aed60,3396,StringPrototypeStartsWith
code-creation,Builtin,2,8666,0x1054afac0,3168,StringPrototypeSubstr
code-creation,Builtin,2,8666,0x1054b0740,3104,StringPrototypeSubstring
code-creation,Builtin,2,8666,0x1054b1380,7180,StringPrototypeTrim
code-creation,Builtin,2,8666,0x1054b2fa0,6520,StringPrototypeTrimStart
code-creation,Builtin,2,8666,0x1054b4920,6072,StringPrototypeTrimEnd
code-creation,Builtin,2,8666,0x1054b60e0,184,SymbolPrototypeDescriptionGetter
code-creation,Builtin,2,8666,0x1054b61a0,192,SymbolPrototypeToPrimitive
code-creation,Builtin,2,8666,0x1054b6280,204,SymbolPrototypeToString
code-creation,Builtin,2,8708,0x1054b6360,180,SymbolPrototypeValueOf
code-creation,Builtin,2,8708,0x1054b6420,1064,TypedArrayPrototypeAt
code-creation,Builtin,2,8708,0x1054b6860,9152,CreateTypedArray
code-creation,Builtin,2,8708,0x1054b8c40,1680,TypedArrayPrototypeEvery
code-creation,Builtin,2,8708,0x1054b92e0,428,TypedArrayPrototypeEntries
code-creation,Builtin,2,8708,0x1054b94a0,4028,TypedArrayPrototypeFilter
code-creation,Builtin,2,8708,0x1054ba460,1672,TypedArrayPrototypeFind
code-creation,Builtin,2,8708,0x1054bab00,1672,TypedArrayPrototypeFindIndex
code-creation,Builtin,2,8708,0x1054bb1a0,1652,TypedArrayPrototypeFindLast
code-creation,Builtin,2,8708,0x1054bb820,1652,TypedArrayPrototypeFindLastIndex
code-creation,Builtin,2,8708,0x1054bbea0,1544,TypedArrayPrototypeForEach
code-creation,Builtin,2,8708,0x1054bc4c0,2080,TypedArrayFrom
code-creation,Builtin,2,8750,0x1054bcd00,424,TypedArrayPrototypeKeys
code-creation,Builtin,2,8750,0x1054bcec0,924,TypedArrayOf
code-creation,Builtin,2,8750,0x1054bd260,1648,TypedArrayPrototypeReduce
code-creation,Builtin,2,8750,0x1054bd8e0,1636,TypedArrayPrototypeReduceRight
code-creation,Builtin,2,8750,0x1054bdf60,3104,TypedArrayPrototypeSet
code-creation,Builtin,2,8750,0x1054beba0,3500,TypedArrayPrototypeSlice
code-creation,Builtin,2,8750,0x1054bf960,1664,TypedArrayPrototypeSome
code-creation,Builtin,2,8750,0x1054c0000,1032,TypedArrayMergeSort
code-creation,Builtin,2,8750,0x1054c0420,2208,TypedArrayPrototypeSort
code-creation,Builtin,2,8750,0x1054c0ce0,2904,TypedArrayPrototypeSubArray
code-creation,Builtin,2,8750,0x1054c1840,428,TypedArrayPrototypeValues
code-creation,Builtin,2,8791,0x1054c1a00,956,WeakRefConstructor
code-creation,Builtin,2,8791,0x1054c1dc0,212,WeakRefDeref
code-creation,Builtin,2,8791,0x1054c1ea0,768,NewSloppyArgumentsElements
code-creation,Builtin,2,8791,0x1054c21c0,360,NewStrictArgumentsElements
code-creation,Builtin,2,8791,0x1054c2340,392,NewRestArgumentsElements
code-creation,Builtin,2,8791,0x1054c24e0,1696,FastNewSloppyArguments
code-creation,Builtin,2,8791,0x1054c2ba0,588,FastNewStrictArguments
code-creation,Builtin,2,8791,0x1054c2e00,640,FastNewRestArguments
code-creation,Builtin,2,8791,0x1054c30a0,640,StringSlowFlatten
code-creation,Builtin,2,8791,0x1054c3340,2108,StringIndexOf
code-creation,Builtin,2,8833,0x1054c3b80,1340,TestTurbofanType
code-creation,Builtin,2,8833,0x1054c40c0,208,CheckTurbofanType
code-creation,Builtin,2,8833,0x1054c41a0,8,GenericBuiltinTest_JSAny_0
code-creation,Builtin,2,8833,0x1054c41c0,16,TestHelperPlus1
code-creation,Builtin,2,8833,0x1054c41e0,16,TestHelperPlus2
code-creation,Builtin,2,8833,0x1054c4200,120,NewSmiBox
code-creation,Builtin,2,8833,0x1054c4280,20,ReturnTwoValues
code-creation,Builtin,2,8833,0x1054c42a0,44,Load_FastSmiElements_0
code-creation,Builtin,2,8833,0x1054c42e0,44,Load_FastObjectElements_0
code-creation,Builtin,2,8833,0x1054c4320,172,Load_FastDoubleElements_0
code-creation,Builtin,2,8833,0x1054c43e0,48,Store_FastSmiElements_0
code-creation,Builtin,2,8833,0x1054c4420,108,Store_FastObjectElements_0
code-creation,Builtin,2,8875,0x1054c44a0,56,Store_FastDoubleElements_0
code-creation,Builtin,2,8875,0x1054c44e0,52,Delete_FastSmiElements_0
code-creation,Builtin,2,8875,0x1054c4520,52,Delete_FastObjectElements_0
code-creation,Builtin,2,8875,0x1054c4560,52,Delete_FastDoubleElements_0
code-creation,Builtin,2,8875,0x1054c45a0,268,SortCompareDefault
code-creation,Builtin,2,8875,0x1054c46c0,128,SortCompareUserFn
code-creation,Builtin,2,8875,0x1054c4760,12,CanUseSameAccessor_GenericElementsAccessor_0
code-creation,Builtin,2,8875,0x1054c4780,324,Copy
code-creation,Builtin,2,8875,0x1054c48e0,5448,MergeAt
code-creation,Builtin,2,8875,0x1054c5e40,848,GallopLeft
code-creation,Builtin,2,8875,0x1054c61a0,884,GallopRight
code-creation,Builtin,2,8875,0x1054c6520,3728,ArrayTimSort
code-creation,Builtin,2,8916,0x1054c73c0,1872,ArrayPrototypeSort
code-creation,Builtin,2,8916,0x1054c7b20,3904,StringFastLocaleCompare
code-creation,Builtin,2,8916,0x1054c8a80,116,WasmInt32ToHeapNumber
code-creation,Builtin,2,8916,0x1054c8b00,32,WasmFuncRefToJS
code-creation,Builtin,2,8916,0x1054c8b40,84,WasmTaggedNonSmiToInt32
code-creation,Builtin,2,8916,0x1054c8ba0,96,WasmTaggedToFloat64
code-creation,Builtin,2,8916,0x1054c8c20,96,WasmMemoryGrow
code-creation,Builtin,2,8916,0x1054c8ca0,112,WasmTableInit
code-creation,Builtin,2,8916,0x1054c8d20,112,WasmTableCopy
code-creation,Builtin,2,8916,0x1054c8da0,96,WasmTableFill
code-creation,Builtin,2,8916,0x1054c8e20,76,WasmTableGrow
code-creation,Builtin,2,8916,0x1054c8e80,192,WasmTableGet
code-creation,Builtin,2,8958,0x1054c8f60,268,WasmTableSet
code-creation,Builtin,2,8958,0x1054c9080,112,WasmRefFunc
code-creation,Builtin,2,8958,0x1054c9100,184,WasmAllocateFixedArray
code-creation,Builtin,2,8958,0x1054c91c0,40,WasmThrow
code-creation,Builtin,2,8958,0x1054c9200,56,WasmRethrow
code-creation,Builtin,2,8958,0x1054c9240,48,WasmRethrowExplicitContext
code-creation,Builtin,2,8958,0x1054c9280,44,WasmTriggerTierUp
code-creation,Builtin,2,8958,0x1054c92c0,28,WasmStackGuard
code-creation,Builtin,2,8958,0x1054c92e0,28,WasmStackOverflow
code-creation,Builtin,2,8958,0x1054c9300,40,WasmTraceMemory
code-creation,Builtin,2,8958,0x1054c9340,28,WasmTraceEnter
code-creation,Builtin,2,8958,0x1054c9360,40,WasmTraceExit
code-creation,Builtin,2,9000,0x1054c93a0,372,WasmAllocateJSArray
code-creation,Builtin,2,9000,0x1054c9520,148,WasmAllocateStructWithRtt
code-creation,Builtin,2,9000,0x1054c95c0,184,WasmAllocateArray_Uninitialized
code-creation,Builtin,2,9000,0x1054c9680,232,WasmAllocateArray_InitZero
code-creation,Builtin,2,9000,0x1054c9780,232,WasmAllocateArray_InitNull
code-creation,Builtin,2,9000,0x1054c9880,68,WasmArrayInitFromData
code-creation,Builtin,2,9000,0x1054c98e0,160,WasmArrayCopyWithChecks
code-creation,Builtin,2,9000,0x1054c99a0,80,WasmArrayCopy
code-creation,Builtin,2,9000,0x1054c9a00,276,WasmAllocateObjectWrapper
code-creation,Builtin,2,9000,0x1054c9b20,84,WasmSubtypeCheck
code-creation,Builtin,2,9000,0x1054c9b80,12,WasmInt32ToNumber
code-creation,Builtin,2,9000,0x1054c9ba0,132,WasmUint32ToNumber
code-creation,Builtin,2,9041,0x1054c9c40,136,UintPtr53ToNumber
code-creation,Builtin,2,9041,0x1054c9ce0,120,WasmAtomicNotify
code-creation,Builtin,2,9041,0x1054c9d60,136,WasmI32AtomicWait64
code-creation,Builtin,2,9041,0x1054c9e00,136,WasmI64AtomicWait64
code-creation,Builtin,2,9041,0x1054c9ea0,1408,CallRefIC
code-creation,Builtin,2,9041,0x1054ca440,604,WasmGetOwnProperty
code-creation,Builtin,2,9041,0x1054ca6a0,40,WasmTrap
code-creation,Builtin,2,9041,0x1054ca6e0,12,ThrowWasmTrapUnreachable
code-creation,Builtin,2,9041,0x1054ca700,12,ThrowWasmTrapMemOutOfBounds
code-creation,Builtin,2,9041,0x1054ca720,12,ThrowWasmTrapUnalignedAccess
code-creation,Builtin,2,9041,0x1054ca740,12,ThrowWasmTrapDivByZero
code-creation,Builtin,2,9083,0x1054ca760,12,ThrowWasmTrapDivUnrepresentable
code-creation,Builtin,2,9083,0x1054ca780,12,ThrowWasmTrapRemByZero
code-creation,Builtin,2,9083,0x1054ca7a0,12,ThrowWasmTrapFloatUnrepresentable
code-creation,Builtin,2,9083,0x1054ca7c0,12,ThrowWasmTrapFuncSigMismatch
code-creation,Builtin,2,9083,0x1054ca7e0,12,ThrowWasmTrapDataSegmentOutOfBounds
code-creation,Builtin,2,9083,0x1054ca800,12,ThrowWasmTrapElemSegmentDropped
code-creation,Builtin,2,9083,0x1054ca820,12,ThrowWasmTrapTableOutOfBounds
code-creation,Builtin,2,9083,0x1054ca840,12,ThrowWasmTrapRethrowNull
code-creation,Builtin,2,9083,0x1054ca860,12,ThrowWasmTrapNullDereference
code-creation,Builtin,2,9083,0x1054ca880,12,ThrowWasmTrapIllegalCast
code-creation,Builtin,2,9083,0x1054ca8a0,12,ThrowWasmTrapArrayOutOfBounds
code-creation,Builtin,2,9125,0x1054ca8c0,12,ThrowWasmTrapArrayTooLarge
code-creation,Builtin,2,9125,0x1054ca8e0,164,LoadJoinElement_GenericElementsAccessor_0
code-creation,Builtin,2,9125,0x1054ca9a0,28,LoadJoinTypedElement_Int32Elements_0
code-creation,Builtin,2,9125,0x1054ca9c0,132,LoadJoinTypedElement_Float32Elements_0
code-creation,Builtin,2,9125,0x1054caa60,128,LoadJoinTypedElement_Float64Elements_0
code-creation,Builtin,2,9125,0x1054cab00,28,LoadJoinTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,9125,0x1054cab20,248,LoadJoinTypedElement_BigUint64Elements_0
code-creation,Builtin,2,9125,0x1054cac20,280,LoadJoinTypedElement_BigInt64Elements_0
code-creation,Builtin,2,9125,0x1054cad40,28,LoadJoinTypedElement_Uint8Elements_0
code-creation,Builtin,2,9125,0x1054cad60,28,LoadJoinTypedElement_Int8Elements_0
code-creation,Builtin,2,9166,0x1054cad80,28,LoadJoinTypedElement_Uint16Elements_0
code-creation,Builtin,2,9166,0x1054cada0,28,LoadJoinTypedElement_Int16Elements_0
code-creation,Builtin,2,9166,0x1054cadc0,148,LoadJoinTypedElement_Uint32Elements_0
code-creation,Builtin,2,9166,0x1054cae60,12,GenericBuiltinTest_Smi_0
code-creation,Builtin,2,9166,0x1054cae80,52,CanUseSameAccessor_FastDoubleElements_0
code-creation,Builtin,2,9166,0x1054caec0,52,CanUseSameAccessor_FastSmiElements_0
code-creation,Builtin,2,9166,0x1054caf00,52,CanUseSameAccessor_FastObjectElements_0
code-creation,Builtin,2,9166,0x1054caf40,2812,Load_GenericElementsAccessor_0
code-creation,Builtin,2,9166,0x1054cba40,44,Store_GenericElementsAccessor_0
code-creation,Builtin,2,9166,0x1054cba80,48,Delete_GenericElementsAccessor_0
code-creation,Builtin,2,9208,0x1054cbac0,28,LoadTypedElement_Int32Elements_0
code-creation,Builtin,2,9208,0x1054cbae0,180,StoreTypedElementNumeric_Int32Elements_0
code-creation,Builtin,2,9208,0x1054cbba0,184,StoreTypedElementJSAny_Int32Elements_0
code-creation,Builtin,2,9208,0x1054cbc60,132,LoadTypedElement_Float32Elements_0
code-creation,Builtin,2,9208,0x1054cbd00,36,StoreTypedElementNumeric_Float32Elements_0
code-creation,Builtin,2,9208,0x1054cbd40,188,StoreTypedElementJSAny_Float32Elements_0
code-creation,Builtin,2,9208,0x1054cbe00,128,LoadTypedElement_Float64Elements_0
code-creation,Builtin,2,9208,0x1054cbea0,32,StoreTypedElementNumeric_Float64Elements_0
code-creation,Builtin,2,9250,0x1054cbee0,184,StoreTypedElementJSAny_Float64Elements_0
code-creation,Builtin,2,9250,0x1054cbfa0,28,LoadTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,9250,0x1054cbfc0,32,StoreTypedElementNumeric_Uint8ClampedElements_0
code-creation,Builtin,2,9250,0x1054cc000,264,StoreTypedElementJSAny_Uint8ClampedElements_0
code-creation,Builtin,2,9250,0x1054cc120,248,LoadTypedElement_BigUint64Elements_0
code-creation,Builtin,2,9250,0x1054cc220,72,StoreTypedElementNumeric_BigUint64Elements_0
code-creation,Builtin,2,9250,0x1054cc280,228,StoreTypedElementJSAny_BigUint64Elements_0
code-creation,Builtin,2,9250,0x1054cc380,280,LoadTypedElement_BigInt64Elements_0
code-creation,Builtin,2,9250,0x1054cc4a0,72,StoreTypedElementNumeric_BigInt64Elements_0
code-creation,Builtin,2,9291,0x1054cc500,228,StoreTypedElementJSAny_BigInt64Elements_0
code-creation,Builtin,2,9291,0x1054cc600,28,LoadTypedElement_Uint8Elements_0
code-creation,Builtin,2,9291,0x1054cc620,32,StoreTypedElementNumeric_Uint8Elements_0
code-creation,Builtin,2,9291,0x1054cc660,184,StoreTypedElementJSAny_Uint8Elements_0
code-creation,Builtin,2,9291,0x1054cc720,28,LoadTypedElement_Int8Elements_0
code-creation,Builtin,2,9291,0x1054cc740,32,StoreTypedElementNumeric_Int8Elements_0
code-creation,Builtin,2,9291,0x1054cc780,184,StoreTypedElementJSAny_Int8Elements_0
code-creation,Builtin,2,9291,0x1054cc840,28,LoadTypedElement_Uint16Elements_0
code-creation,Builtin,2,9291,0x1054cc860,32,StoreTypedElementNumeric_Uint16Elements_0
code-creation,Builtin,2,9291,0x1054cc8a0,184,StoreTypedElementJSAny_Uint16Elements_0
code-creation,Builtin,2,9333,0x1054cc960,28,LoadTypedElement_Int16Elements_0
code-creation,Builtin,2,9333,0x1054cc980,32,StoreTypedElementNumeric_Int16Elements_0
code-creation,Builtin,2,9333,0x1054cc9c0,184,StoreTypedElementJSAny_Int16Elements_0
code-creation,Builtin,2,9333,0x1054cca80,148,LoadTypedElement_Uint32Elements_0
code-creation,Builtin,2,9333,0x1054ccb20,180,StoreTypedElementNumeric_Uint32Elements_0
code-creation,Builtin,2,9333,0x1054ccbe0,184,StoreTypedElementJSAny_Uint32Elements_0
code-creation,Builtin,2,9333,0x1054ccca0,8,CollatorConstructor
code-creation,Builtin,2,9333,0x1054cccc0,8,CollatorInternalCompare
code-creation,Builtin,2,9333,0x1054ccce0,8,CollatorPrototypeCompare
code-creation,Builtin,2,9333,0x1054ccd00,8,CollatorSupportedLocalesOf
code-creation,Builtin,2,9375,0x1054ccd20,8,CollatorPrototypeResolvedOptions
code-creation,Builtin,2,9375,0x1054ccd40,8,DatePrototypeToLocaleDateString
code-creation,Builtin,2,9375,0x1054ccd60,8,DatePrototypeToLocaleString
code-creation,Builtin,2,9375,0x1054ccd80,8,DatePrototypeToLocaleTimeString
code-creation,Builtin,2,9375,0x1054ccda0,8,DateTimeFormatConstructor
code-creation,Builtin,2,9375,0x1054ccdc0,8,DateTimeFormatInternalFormat
code-creation,Builtin,2,9375,0x1054ccde0,8,DateTimeFormatPrototypeFormat
code-creation,Builtin,2,9375,0x1054cce00,8,DateTimeFormatPrototypeFormatRange
code-creation,Builtin,2,9375,0x1054cce20,8,DateTimeFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,9375,0x1054cce40,8,DateTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,9416,0x1054cce60,8,DateTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,9416,0x1054cce80,8,DateTimeFormatSupportedLocalesOf
code-creation,Builtin,2,9416,0x1054ccea0,8,DisplayNamesConstructor
code-creation,Builtin,2,9416,0x1054ccec0,8,DisplayNamesPrototypeOf
code-creation,Builtin,2,9416,0x1054ccee0,8,DisplayNamesPrototypeResolvedOptions
code-creation,Builtin,2,9416,0x1054ccf00,8,DisplayNamesSupportedLocalesOf
code-creation,Builtin,2,9416,0x1054ccf20,8,IntlGetCanonicalLocales
code-creation,Builtin,2,9416,0x1054ccf40,8,IntlSupportedValuesOf
code-creation,Builtin,2,9416,0x1054ccf60,8,ListFormatConstructor
code-creation,Builtin,2,9416,0x1054ccf80,248,ListFormatPrototypeFormat
code-creation,Builtin,2,9416,0x1054cd080,248,ListFormatPrototypeFormatToParts
code-creation,Builtin,2,9458,0x1054cd180,8,ListFormatPrototypeResolvedOptions
code-creation,Builtin,2,9458,0x1054cd1a0,8,ListFormatSupportedLocalesOf
code-creation,Builtin,2,9458,0x1054cd1c0,8,LocaleConstructor
code-creation,Builtin,2,9458,0x1054cd1e0,8,LocalePrototypeBaseName
code-creation,Builtin,2,9458,0x1054cd200,8,LocalePrototypeCalendar
code-creation,Builtin,2,9458,0x1054cd220,8,LocalePrototypeCalendars
code-creation,Builtin,2,9458,0x1054cd240,8,LocalePrototypeCaseFirst
code-creation,Builtin,2,9458,0x1054cd260,8,LocalePrototypeCollation
code-creation,Builtin,2,9458,0x1054cd280,8,LocalePrototypeCollations
code-creation,Builtin,2,9458,0x1054cd2a0,8,LocalePrototypeHourCycle
code-creation,Builtin,2,9500,0x1054cd2c0,8,LocalePrototypeHourCycles
code-creation,Builtin,2,9500,0x1054cd2e0,8,LocalePrototypeLanguage
code-creation,Builtin,2,9500,0x1054cd300,8,LocalePrototypeMaximize
code-creation,Builtin,2,9500,0x1054cd320,8,LocalePrototypeMinimize
code-creation,Builtin,2,9500,0x1054cd340,8,LocalePrototypeNumeric
code-creation,Builtin,2,9500,0x1054cd360,8,LocalePrototypeNumberingSystem
code-creation,Builtin,2,9500,0x1054cd380,8,LocalePrototypeNumberingSystems
code-creation,Builtin,2,9500,0x1054cd3a0,8,LocalePrototypeRegion
code-creation,Builtin,2,9500,0x1054cd3c0,8,LocalePrototypeScript
code-creation,Builtin,2,9500,0x1054cd3e0,8,LocalePrototypeTextInfo
code-creation,Builtin,2,9541,0x1054cd400,8,LocalePrototypeTimeZones
code-creation,Builtin,2,9541,0x1054cd420,8,LocalePrototypeToString
code-creation,Builtin,2,9541,0x1054cd440,8,LocalePrototypeWeekInfo
code-creation,Builtin,2,9541,0x1054cd460,8,NumberFormatConstructor
code-creation,Builtin,2,9541,0x1054cd480,8,NumberFormatInternalFormatNumber
code-creation,Builtin,2,9541,0x1054cd4a0,8,NumberFormatPrototypeFormatNumber
code-creation,Builtin,2,9541,0x1054cd4c0,8,NumberFormatPrototypeFormatRange
code-creation,Builtin,2,9541,0x1054cd4e0,8,NumberFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,9541,0x1054cd500,8,NumberFormatPrototypeFormatToParts
code-creation,Builtin,2,9541,0x1054cd520,8,NumberFormatPrototypeResolvedOptions
code-creation,Builtin,2,9541,0x1054cd540,8,NumberFormatSupportedLocalesOf
code-creation,Builtin,2,9583,0x1054cd560,8,PluralRulesConstructor
code-creation,Builtin,2,9583,0x1054cd580,8,PluralRulesPrototypeResolvedOptions
code-creation,Builtin,2,9583,0x1054cd5a0,8,PluralRulesPrototypeSelect
code-creation,Builtin,2,9583,0x1054cd5c0,8,PluralRulesPrototypeSelectRange
code-creation,Builtin,2,9583,0x1054cd5e0,8,PluralRulesSupportedLocalesOf
code-creation,Builtin,2,9583,0x1054cd600,8,RelativeTimeFormatConstructor
code-creation,Builtin,2,9583,0x1054cd620,8,RelativeTimeFormatPrototypeFormat
code-creation,Builtin,2,9583,0x1054cd640,8,RelativeTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,9583,0x1054cd660,8,RelativeTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,9583,0x1054cd680,8,RelativeTimeFormatSupportedLocalesOf
code-creation,Builtin,2,9625,0x1054cd6a0,8,SegmenterConstructor
code-creation,Builtin,2,9625,0x1054cd6c0,8,SegmenterPrototypeResolvedOptions
code-creation,Builtin,2,9625,0x1054cd6e0,8,SegmenterPrototypeSegment
code-creation,Builtin,2,9625,0x1054cd700,8,SegmenterSupportedLocalesOf
code-creation,Builtin,2,9625,0x1054cd720,8,SegmentIteratorPrototypeNext
code-creation,Builtin,2,9625,0x1054cd740,8,SegmentsPrototypeContaining
code-creation,Builtin,2,9625,0x1054cd760,8,SegmentsPrototypeIterator
code-creation,Builtin,2,9625,0x1054cd780,8,StringPrototypeNormalizeIntl
code-creation,Builtin,2,9625,0x1054cd7a0,8,StringPrototypeToLocaleLowerCase
code-creation,Builtin,2,9625,0x1054cd7c0,8,StringPrototypeToLocaleUpperCase
code-creation,Builtin,2,9625,0x1054cd7e0,216,StringPrototypeToLowerCaseIntl
code-creation,Builtin,2,9666,0x1054cd8c0,8,StringPrototypeToUpperCaseIntl
code-creation,Builtin,2,9666,0x1054cd8e0,716,StringToLowerCaseIntl
code-creation,Builtin,2,9666,0x1054cdbc0,8,TemporalCalendarPrototypeEra
code-creation,Builtin,2,9666,0x1054cdbe0,8,TemporalCalendarPrototypeEraYear
code-creation,Builtin,2,9666,0x1054cdc00,8,TemporalDurationPrototypeToLocaleString
code-creation,Builtin,2,9666,0x1054cdc20,8,TemporalInstantPrototypeToLocaleString
code-creation,Builtin,2,9666,0x1054cdc40,8,TemporalPlainDatePrototypeEra
code-creation,Builtin,2,9666,0x1054cdc60,8,TemporalPlainDatePrototypeEraYear
code-creation,Builtin,2,9666,0x1054cdc80,8,TemporalPlainDatePrototypeToLocaleString
code-creation,Builtin,2,9666,0x1054cdca0,8,TemporalPlainDateTimePrototypeEra
code-creation,Builtin,2,9708,0x1054cdcc0,8,TemporalPlainDateTimePrototypeEraYear
code-creation,Builtin,2,9708,0x1054cdce0,8,TemporalPlainDateTimePrototypeToLocaleString
code-creation,Builtin,2,9708,0x1054cdd00,8,TemporalPlainMonthDayPrototypeToLocaleString
code-creation,Builtin,2,9708,0x1054cdd20,8,TemporalPlainTimePrototypeToLocaleString
code-creation,Builtin,2,9708,0x1054cdd40,8,TemporalPlainYearMonthPrototypeEra
code-creation,Builtin,2,9708,0x1054cdd60,8,TemporalPlainYearMonthPrototypeEraYear
code-creation,Builtin,2,9708,0x1054cdd80,8,TemporalPlainYearMonthPrototypeToLocaleString
code-creation,Builtin,2,9708,0x1054cdda0,8,TemporalZonedDateTimePrototypeEra
code-creation,Builtin,2,9750,0x1054cddc0,8,TemporalZonedDateTimePrototypeEraYear
code-creation,Builtin,2,9750,0x1054cdde0,8,TemporalZonedDateTimePrototypeToLocaleString
code-creation,Builtin,2,9750,0x1054cde00,8,V8BreakIteratorConstructor
code-creation,Builtin,2,9750,0x1054cde20,8,V8BreakIteratorInternalAdoptText
code-creation,Builtin,2,9750,0x1054cde40,8,V8BreakIteratorInternalBreakType
code-creation,Builtin,2,9750,0x1054cde60,8,V8BreakIteratorInternalCurrent
code-creation,Builtin,2,9750,0x1054cde80,8,V8BreakIteratorInternalFirst
code-creation,Builtin,2,9750,0x1054cdea0,8,V8BreakIteratorInternalNext
code-creation,Builtin,2,9750,0x1054cdec0,8,V8BreakIteratorPrototypeAdoptText
code-creation,Builtin,2,9750,0x1054cdee0,8,V8BreakIteratorPrototypeBreakType
code-creation,Builtin,2,9791,0x1054cdf00,8,V8BreakIteratorPrototypeCurrent
code-creation,Builtin,2,9791,0x1054cdf20,8,V8BreakIteratorPrototypeFirst
code-creation,Builtin,2,9791,0x1054cdf40,8,V8BreakIteratorPrototypeNext
code-creation,Builtin,2,9791,0x1054cdf60,8,V8BreakIteratorPrototypeResolvedOptions
code-creation,Builtin,2,9791,0x1054cdf80,8,V8BreakIteratorSupportedLocalesOf
code-creation,BytecodeHandler,0,9791,0x1054cdfa0,28,Wide
code-creation,BytecodeHandler,0,9791,0x1054cdfc0,28,ExtraWide
code-creation,BytecodeHandler,0,9791,0x1054cdfe0,124,DebugBreakWide
code-creation,BytecodeHandler,0,9791,0x1054ce060,124,DebugBreakExtraWide
code-creation,BytecodeHandler,0,9791,0x1054ce0e0,188,DebugBreak0
code-creation,BytecodeHandler,0,9833,0x1054ce1a0,124,DebugBreak1
code-creation,BytecodeHandler,0,9833,0x1054ce220,124,DebugBreak2
code-creation,BytecodeHandler,0,9833,0x1054ce2a0,124,DebugBreak3
code-creation,BytecodeHandler,0,9833,0x1054ce320,124,DebugBreak4
code-creation,BytecodeHandler,0,9833,0x1054ce3a0,124,DebugBreak5
code-creation,BytecodeHandler,0,9833,0x1054ce420,124,DebugBreak6
code-creation,BytecodeHandler,0,9833,0x1054ce4a0,44,Ldar
code-creation,BytecodeHandler,0,9833,0x1054ce4e0,76,LdaZero
code-creation,BytecodeHandler,0,9833,0x1054ce540,84,LdaSmi
code-creation,BytecodeHandler,0,9833,0x1054ce5a0,76,LdaUndefined
code-creation,BytecodeHandler,0,9833,0x1054ce600,76,LdaNull
code-creation,BytecodeHandler,0,9833,0x1054ce660,76,LdaTheHole
code-creation,BytecodeHandler,0,9875,0x1054ce6c0,28,LdaTrue
code-creation,BytecodeHandler,0,9875,0x1054ce6e0,28,LdaFalse
code-creation,BytecodeHandler,0,9875,0x1054ce700,92,LdaConstant
code-creation,BytecodeHandler,0,9875,0x1054ce760,168,LdaContextSlot
code-creation,BytecodeHandler,0,9875,0x1054ce820,168,LdaImmutableContextSlot
code-creation,BytecodeHandler,0,9875,0x1054ce8e0,112,LdaCurrentContextSlot
code-creation,BytecodeHandler,0,9875,0x1054ce960,112,LdaImmutableCurrentContextSlot
code-creation,BytecodeHandler,0,9875,0x1054ce9e0,44,Star
code-creation,BytecodeHandler,0,9875,0x1054cea20,60,Mov
code-creation,BytecodeHandler,0,9875,0x1054cea60,52,PushContext
code-creation,BytecodeHandler,0,9875,0x1054ceaa0,48,PopContext
code-creation,BytecodeHandler,0,9916,0x1054ceae0,64,TestReferenceEqual
code-creation,BytecodeHandler,0,9916,0x1054ceb40,64,TestUndetectable
code-creation,BytecodeHandler,0,9916,0x1054ceba0,52,TestNull
code-creation,BytecodeHandler,0,9916,0x1054cebe0,52,TestUndefined
code-creation,BytecodeHandler,0,9916,0x1054cec20,388,TestTypeOf
code-creation,BytecodeHandler,0,9916,0x1054cedc0,5880,LdaGlobal
code-creation,BytecodeHandler,0,9916,0x1054d04c0,4420,LdaGlobalInsideTypeof
code-creation,BytecodeHandler,0,9916,0x1054d1620,184,StaGlobal
code-creation,BytecodeHandler,0,9916,0x1054d16e0,184,StaContextSlot
code-creation,BytecodeHandler,0,9916,0x1054d17a0,128,StaCurrentContextSlot
code-creation,BytecodeHandler,0,9916,0x1054d1840,152,LdaLookupSlot
code-creation,BytecodeHandler,0,9958,0x1054d18e0,308,LdaLookupContextSlot
code-creation,BytecodeHandler,0,9958,0x1054d1a20,4744,LdaLookupGlobalSlot
code-creation,BytecodeHandler,0,9958,0x1054d2cc0,152,LdaLookupSlotInsideTypeof
code-creation,BytecodeHandler,0,9958,0x1054d2d60,308,LdaLookupContextSlotInsideTypeof
code-creation,BytecodeHandler,0,9958,0x1054d2ea0,4676,LdaLookupGlobalSlotInsideTypeof
code-creation,BytecodeHandler,0,9958,0x1054d4100,256,StaLookupSlot
code-creation,BytecodeHandler,0,9958,0x1054d4220,5112,GetNamedProperty
code-creation,BytecodeHandler,0,9958,0x1054d5620,208,GetNamedPropertyFromSuper
code-creation,BytecodeHandler,0,9958,0x1054d5700,232,GetKeyedProperty
code-creation,BytecodeHandler,0,10000,0x1054d5800,216,LdaModuleVariable
code-creation,BytecodeHandler,0,10000,0x1054d58e0,340,StaModuleVariable
code-creation,BytecodeHandler,0,10000,0x1054d5a40,200,SetNamedProperty
code-creation,BytecodeHandler,0,10000,0x1054d5b20,200,DefineNamedOwnProperty
code-creation,BytecodeHandler,0,10000,0x1054d5c00,192,SetKeyedProperty
code-creation,BytecodeHandler,0,10000,0x1054d5ce0,192,DefineKeyedOwnProperty
code-creation,BytecodeHandler,0,10000,0x1054d5dc0,192,StaInArrayLiteral
code-creation,BytecodeHandler,0,10000,0x1054d5ea0,228,DefineKeyedOwnPropertyInLiteral
code-creation,BytecodeHandler,0,10000,0x1054d5fa0,188,CollectTypeProfile
code-creation,BytecodeHandler,0,10000,0x1054d6060,996,Add
code-creation,BytecodeHandler,0,10041,0x1054d6460,1036,Sub
code-creation,BytecodeHandler,0,10041,0x1054d6880,992,Mul
code-creation,BytecodeHandler,0,10041,0x1054d6c80,940,Div
tick,0x1a4d5c9d4,10041,0,0x0,6
code-creation,BytecodeHandler,0,10041,0x1054d7040,840,Mod
code-creation,BytecodeHandler,0,10041,0x1054d73a0,888,Exp
code-creation,BytecodeHandler,0,10041,0x1054d7720,880,BitwiseOr
code-creation,BytecodeHandler,0,10041,0x1054d7aa0,880,BitwiseXor
code-creation,BytecodeHandler,0,10041,0x1054d7e20,880,BitwiseAnd
code-creation,BytecodeHandler,0,10041,0x1054d81a0,880,ShiftLeft
code-creation,BytecodeHandler,0,10041,0x1054d8520,880,ShiftRight
code-creation,BytecodeHandler,0,10083,0x1054d88a0,996,ShiftRightLogical
code-creation,BytecodeHandler,0,10083,0x1054d8ca0,968,AddSmi
code-creation,BytecodeHandler,0,10083,0x1054d9080,1004,SubSmi
code-creation,BytecodeHandler,0,10083,0x1054d9480,912,MulSmi
code-creation,BytecodeHandler,0,10083,0x1054d9820,996,DivSmi
code-creation,BytecodeHandler,0,10083,0x1054d9c20,792,ModSmi
code-creation,BytecodeHandler,0,10083,0x1054d9f40,800,ExpSmi
code-creation,BytecodeHandler,0,10083,0x1054da280,472,BitwiseOrSmi
code-creation,BytecodeHandler,0,10083,0x1054da460,472,BitwiseXorSmi
code-creation,BytecodeHandler,0,10083,0x1054da640,472,BitwiseAndSmi
code-creation,BytecodeHandler,0,10083,0x1054da820,496,ShiftLeftSmi
code-creation,BytecodeHandler,0,10083,0x1054daa20,484,ShiftRightSmi
code-creation,BytecodeHandler,0,10125,0x1054dac20,800,ShiftRightLogicalSmi
code-creation,BytecodeHandler,0,10125,0x1054daf60,664,Inc
code-creation,BytecodeHandler,0,10125,0x1054db200,664,Dec
code-creation,BytecodeHandler,0,10125,0x1054db4a0,632,Negate
code-creation,BytecodeHandler,0,10125,0x1054db720,452,BitwiseNot
code-creation,BytecodeHandler,0,10125,0x1054db900,144,ToBooleanLogicalNot
code-creation,BytecodeHandler,0,10125,0x1054db9a0,44,LogicalNot
code-creation,BytecodeHandler,0,10125,0x1054db9e0,220,TypeOf
code-creation,BytecodeHandler,0,10125,0x1054dbac0,136,DeletePropertyStrict
code-creation,BytecodeHandler,0,10125,0x1054dbb60,136,DeletePropertySloppy
code-creation,BytecodeHandler,0,10125,0x1054dbc00,52,GetSuperConstructor
code-creation,BytecodeHandler,0,10166,0x1054dbc40,920,CallAnyReceiver
code-creation,BytecodeHandler,0,10166,0x1054dbfe0,920,CallProperty
code-creation,BytecodeHandler,0,10166,0x1054dc380,932,CallProperty0
code-creation,BytecodeHandler,0,10166,0x1054dc740,944,CallProperty1
code-creation,BytecodeHandler,0,10166,0x1054dcb00,964,CallProperty2
code-creation,BytecodeHandler,0,10166,0x1054dcee0,916,CallUndefinedReceiver
code-creation,BytecodeHandler,0,10166,0x1054dd280,908,CallUndefinedReceiver0
code-creation,BytecodeHandler,0,10166,0x1054dd620,920,CallUndefinedReceiver1
code-creation,BytecodeHandler,0,10166,0x1054dd9c0,940,CallUndefinedReceiver2
code-creation,BytecodeHandler,0,10166,0x1054ddd80,920,CallWithSpread
code-creation,BytecodeHandler,0,10208,0x1054de120,144,CallRuntime
code-creation,BytecodeHandler,0,10208,0x1054de1c0,188,CallRuntimeForPair
code-creation,BytecodeHandler,0,10208,0x1054de280,104,CallJSRuntime
code-creation,BytecodeHandler,0,10208,0x1054de300,1448,InvokeIntrinsic
code-creation,BytecodeHandler,0,10208,0x1054de8c0,956,Construct
code-creation,BytecodeHandler,0,10208,0x1054dec80,500,ConstructWithSpread
code-creation,BytecodeHandler,0,10208,0x1054dee80,1964,TestEqual
code-creation,BytecodeHandler,0,10208,0x1054df640,928,TestEqualStrict
code-creation,BytecodeHandler,0,10208,0x1054dfa00,1608,TestLessThan
code-creation,BytecodeHandler,0,10208,0x1054e0060,1608,TestGreaterThan
code-creation,BytecodeHandler,0,10208,0x1054e06c0,1608,TestLessThanOrEqual
code-creation,BytecodeHandler,0,10250,0x1054e0d20,1608,TestGreaterThanOrEqual
code-creation,BytecodeHandler,0,10250,0x1054e1380,848,TestInstanceOf
code-creation,BytecodeHandler,0,10250,0x1054e16e0,176,TestIn
code-creation,BytecodeHandler,0,10250,0x1054e17a0,132,ToName
code-creation,BytecodeHandler,0,10250,0x1054e1840,236,ToNumber
code-creation,BytecodeHandler,0,10250,0x1054e1940,256,ToNumeric
code-creation,BytecodeHandler,0,10250,0x1054e1a60,132,ToObject
code-creation,BytecodeHandler,0,10250,0x1054e1b00,156,ToString
code-creation,BytecodeHandler,0,10250,0x1054e1ba0,460,CreateRegExpLiteral
code-creation,BytecodeHandler,0,10250,0x1054e1d80,1428,CreateArrayLiteral
code-creation,BytecodeHandler,0,10250,0x1054e2320,108,CreateArrayFromIterable
code-creation,BytecodeHandler,0,10291,0x1054e23a0,832,CreateEmptyArrayLiteral
code-creation,BytecodeHandler,0,10291,0x1054e2700,2132,CreateObjectLiteral
code-creation,BytecodeHandler,0,10291,0x1054e2f60,252,CreateEmptyObjectLiteral
code-creation,BytecodeHandler,0,10291,0x1054e3060,192,CloneObject
code-creation,BytecodeHandler,0,10291,0x1054e3140,240,GetTemplateObject
code-creation,BytecodeHandler,0,10291,0x1054e3240,380,CreateClosure
code-creation,BytecodeHandler,0,10291,0x1054e33c0,140,CreateBlockContext
code-creation,BytecodeHandler,0,10291,0x1054e3460,152,CreateCatchContext
code-creation,BytecodeHandler,0,10291,0x1054e3500,308,CreateFunctionContext
code-creation,BytecodeHandler,0,10291,0x1054e3640,308,CreateEvalContext
code-creation,BytecodeHandler,0,10291,0x1054e3780,152,CreateWithContext
code-creation,BytecodeHandler,0,10333,0x1054e3820,1984,CreateMappedArguments
code-creation,BytecodeHandler,0,10333,0x1054e4000,668,CreateUnmappedArguments
code-creation,BytecodeHandler,0,10333,0x1054e42a0,720,CreateRestParameter
code-creation,BytecodeHandler,0,10333,0x1054e4580,524,JumpLoop
code-creation,BytecodeHandler,0,10333,0x1054e47a0,60,Jump
code-creation,BytecodeHandler,0,10333,0x1054e47e0,80,JumpConstant
code-creation,BytecodeHandler,0,10333,0x1054e4840,112,JumpIfNullConstant
code-creation,BytecodeHandler,0,10333,0x1054e48c0,112,JumpIfNotNullConstant
code-creation,BytecodeHandler,0,10333,0x1054e4940,112,JumpIfUndefinedConstant
code-creation,BytecodeHandler,0,10333,0x1054e49c0,112,JumpIfNotUndefinedConstant
code-creation,BytecodeHandler,0,10333,0x1054e4a40,124,JumpIfUndefinedOrNullConstant
code-creation,BytecodeHandler,0,10375,0x1054e4ac0,112,JumpIfTrueConstant
code-creation,BytecodeHandler,0,10375,0x1054e4b40,112,JumpIfFalseConstant
code-creation,BytecodeHandler,0,10375,0x1054e4bc0,120,JumpIfJSReceiverConstant
code-creation,BytecodeHandler,0,10375,0x1054e4c40,208,JumpIfToBooleanTrueConstant
code-creation,BytecodeHandler,0,10375,0x1054e4d20,208,JumpIfToBooleanFalseConstant
code-creation,BytecodeHandler,0,10375,0x1054e4e00,188,JumpIfToBooleanTrue
code-creation,BytecodeHandler,0,10375,0x1054e4ec0,188,JumpIfToBooleanFalse
code-creation,BytecodeHandler,0,10375,0x1054e4f80,92,JumpIfTrue
code-creation,BytecodeHandler,0,10375,0x1054e4fe0,92,JumpIfFalse
code-creation,BytecodeHandler,0,10375,0x1054e5040,92,JumpIfNull
code-creation,BytecodeHandler,0,10416,0x1054e50a0,92,JumpIfNotNull
code-creation,BytecodeHandler,0,10416,0x1054e5100,92,JumpIfUndefined
code-creation,BytecodeHandler,0,10416,0x1054e5160,92,JumpIfNotUndefined
code-creation,BytecodeHandler,0,10416,0x1054e51c0,104,JumpIfUndefinedOrNull
code-creation,BytecodeHandler,0,10416,0x1054e5240,100,JumpIfJSReceiver
code-creation,BytecodeHandler,0,10416,0x1054e52c0,140,SwitchOnSmiNoFeedback
code-creation,BytecodeHandler,0,10416,0x1054e5360,556,ForInEnumerate
code-creation,BytecodeHandler,0,10416,0x1054e55a0,268,ForInPrepare
code-creation,BytecodeHandler,0,10416,0x1054e56c0,76,ForInContinue
code-creation,BytecodeHandler,0,10416,0x1054e5720,304,ForInNext
code-creation,BytecodeHandler,0,10416,0x1054e5860,48,ForInStep
code-creation,BytecodeHandler,0,10416,0x1054e58a0,36,SetPendingMessage
code-creation,BytecodeHandler,0,10458,0x1054e58e0,132,Throw
code-creation,BytecodeHandler,0,10458,0x1054e5980,132,ReThrow
code-creation,BytecodeHandler,0,10458,0x1054e5a20,132,Return
code-creation,BytecodeHandler,0,10458,0x1054e5ac0,232,ThrowReferenceErrorIfHole
code-creation,BytecodeHandler,0,10458,0x1054e5bc0,152,ThrowSuperNotCalledIfHole
code-creation,BytecodeHandler,0,10458,0x1054e5c60,152,ThrowSuperAlreadyCalledIfNotHole
code-creation,BytecodeHandler,0,10458,0x1054e5d00,176,ThrowIfNotSuperConstructor
code-creation,BytecodeHandler,0,10458,0x1054e5dc0,148,SwitchOnGeneratorState
code-creation,BytecodeHandler,0,10500,0x1054e5e60,516,SuspendGenerator
code-creation,BytecodeHandler,0,10500,0x1054e6080,172,ResumeGenerator
code-creation,BytecodeHandler,0,10500,0x1054e6140,180,GetIterator
code-creation,BytecodeHandler,0,10500,0x1054e6200,128,Debugger
code-creation,BytecodeHandler,0,10500,0x1054e62a0,136,IncBlockCounter
code-creation,BytecodeHandler,0,10500,0x1054e6340,76,Abort
code-creation,BytecodeHandler,0,10500,0x1054e63a0,44,Star0
code-creation,BytecodeHandler,0,10500,0x1054e63e0,72,Illegal
code-creation,BytecodeHandler,0,10500,0x1054e6440,128,DebugBreak1.Wide
code-creation,BytecodeHandler,0,10500,0x1054e64e0,128,DebugBreak2.Wide
code-creation,BytecodeHandler,0,10500,0x1054e6580,128,DebugBreak3.Wide
code-creation,BytecodeHandler,0,10541,0x1054e6620,128,DebugBreak4.Wide
code-creation,BytecodeHandler,0,10541,0x1054e66c0,128,DebugBreak5.Wide
code-creation,BytecodeHandler,0,10541,0x1054e6760,128,DebugBreak6.Wide
code-creation,BytecodeHandler,0,10541,0x1054e6800,44,Ldar.Wide
code-creation,BytecodeHandler,0,10541,0x1054e6840,40,LdaSmi.Wide
code-creation,BytecodeHandler,0,10541,0x1054e6880,48,LdaConstant.Wide
code-creation,BytecodeHandler,0,10541,0x1054e68c0,128,LdaContextSlot.Wide
code-creation,BytecodeHandler,0,10541,0x1054e6960,128,LdaImmutableContextSlot.Wide
code-creation,BytecodeHandler,0,10541,0x1054e6a00,72,LdaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,10541,0x1054e6a60,72,LdaImmutableCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,10583,0x1054e6ac0,44,Star.Wide
code-creation,BytecodeHandler,0,10583,0x1054e6b00,60,Mov.Wide
code-creation,BytecodeHandler,0,10583,0x1054e6b40,52,PushContext.Wide
code-creation,BytecodeHandler,0,10583,0x1054e6b80,48,PopContext.Wide
code-creation,BytecodeHandler,0,10583,0x1054e6bc0,64,TestReferenceEqual.Wide
code-creation,BytecodeHandler,0,10583,0x1054e6c20,4572,LdaGlobal.Wide
code-creation,BytecodeHandler,0,10583,0x1054e7e00,4484,LdaGlobalInsideTypeof.Wide
code-creation,BytecodeHandler,0,10583,0x1054e8fa0,188,StaGlobal.Wide
code-creation,BytecodeHandler,0,10583,0x1054e9060,184,StaContextSlot.Wide
code-creation,BytecodeHandler,0,10583,0x1054e9120,128,StaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,10583,0x1054e91c0,156,LdaLookupSlot.Wide
code-creation,BytecodeHandler,0,10625,0x1054e9260,312,LdaLookupContextSlot.Wide
code-creation,BytecodeHandler,0,10625,0x1054e93a0,4816,LdaLookupGlobalSlot.Wide
code-creation,BytecodeHandler,0,10625,0x1054ea680,156,LdaLookupSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,10625,0x1054ea720,312,LdaLookupContextSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,10625,0x1054ea860,4744,LdaLookupGlobalSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,10625,0x1054ebb00,252,StaLookupSlot.Wide
code-creation,BytecodeHandler,0,10625,0x1054ebc00,5144,GetNamedProperty.Wide
code-creation,BytecodeHandler,0,10666,0x1054ed020,212,GetNamedPropertyFromSuper.Wide
tick,0x1a4d3d860,10666,0,0x0,6
code-creation,BytecodeHandler,0,10666,0x1054ed100,180,GetKeyedProperty.Wide
code-creation,BytecodeHandler,0,10666,0x1054ed1c0,216,LdaModuleVariable.Wide
code-creation,BytecodeHandler,0,10666,0x1054ed2a0,344,StaModuleVariable.Wide
code-creation,BytecodeHandler,0,10708,0x1054ed400,204,SetNamedProperty.Wide
code-creation,BytecodeHandler,0,10708,0x1054ed4e0,204,DefineNamedOwnProperty.Wide
code-creation,BytecodeHandler,0,10708,0x1054ed5c0,196,SetKeyedProperty.Wide
code-creation,BytecodeHandler,0,10708,0x1054ed6a0,196,DefineKeyedOwnProperty.Wide
code-creation,BytecodeHandler,0,10708,0x1054ed780,196,StaInArrayLiteral.Wide
code-creation,BytecodeHandler,0,10708,0x1054ed860,232,DefineKeyedOwnPropertyInLiteral.Wide
code-creation,BytecodeHandler,0,10708,0x1054ed960,192,CollectTypeProfile.Wide
code-creation,BytecodeHandler,0,10708,0x1054eda40,948,Add.Wide
code-creation,BytecodeHandler,0,10708,0x1054ede00,992,Sub.Wide
code-creation,BytecodeHandler,0,10708,0x1054ee200,940,Mul.Wide
code-creation,BytecodeHandler,0,10750,0x1054ee5c0,944,Div.Wide
code-creation,BytecodeHandler,0,10750,0x1054ee980,848,Mod.Wide
code-creation,BytecodeHandler,0,10750,0x1054eece0,908,Exp.Wide
code-creation,BytecodeHandler,0,10750,0x1054ef080,896,BitwiseOr.Wide
code-creation,BytecodeHandler,0,10750,0x1054ef420,896,BitwiseXor.Wide
code-creation,BytecodeHandler,0,10750,0x1054ef7c0,896,BitwiseAnd.Wide
code-creation,BytecodeHandler,0,10750,0x1054efb60,896,ShiftLeft.Wide
code-creation,BytecodeHandler,0,10750,0x1054eff00,896,ShiftRight.Wide
code-creation,BytecodeHandler,0,10750,0x1054f02a0,1012,ShiftRightLogical.Wide
code-creation,BytecodeHandler,0,10750,0x1054f06a0,920,AddSmi.Wide
code-creation,BytecodeHandler,0,10750,0x1054f0a40,960,SubSmi.Wide
code-creation,BytecodeHandler,0,10791,0x1054f0e20,912,MulSmi.Wide
code-creation,BytecodeHandler,0,10791,0x1054f11c0,996,DivSmi.Wide
code-creation,BytecodeHandler,0,10791,0x1054f15c0,792,ModSmi.Wide
code-creation,BytecodeHandler,0,10791,0x1054f18e0,800,ExpSmi.Wide
code-creation,BytecodeHandler,0,10791,0x1054f1c20,480,BitwiseOrSmi.Wide
code-creation,BytecodeHandler,0,10791,0x1054f1e20,480,BitwiseXorSmi.Wide
code-creation,BytecodeHandler,0,10791,0x1054f2020,480,BitwiseAndSmi.Wide
code-creation,BytecodeHandler,0,10791,0x1054f2220,504,ShiftLeftSmi.Wide
code-creation,BytecodeHandler,0,10791,0x1054f2420,492,ShiftRightSmi.Wide
code-creation,BytecodeHandler,0,10791,0x1054f2620,808,ShiftRightLogicalSmi.Wide
code-creation,BytecodeHandler,0,10791,0x1054f2960,624,Inc.Wide
code-creation,BytecodeHandler,0,10833,0x1054f2be0,624,Dec.Wide
code-creation,BytecodeHandler,0,10833,0x1054f2e60,640,Negate.Wide
code-creation,BytecodeHandler,0,10833,0x1054f3100,460,BitwiseNot.Wide
code-creation,BytecodeHandler,0,10833,0x1054f32e0,140,DeletePropertyStrict.Wide
code-creation,BytecodeHandler,0,10833,0x1054f3380,140,DeletePropertySloppy.Wide
code-creation,BytecodeHandler,0,10833,0x1054f3420,52,GetSuperConstructor.Wide
code-creation,BytecodeHandler,0,10833,0x1054f3460,924,CallAnyReceiver.Wide
code-creation,BytecodeHandler,0,10833,0x1054f3800,924,CallProperty.Wide
code-creation,BytecodeHandler,0,10833,0x1054f3ba0,936,CallProperty0.Wide
code-creation,BytecodeHandler,0,10833,0x1054f3f60,948,CallProperty1.Wide
code-creation,BytecodeHandler,0,10833,0x1054f4320,968,CallProperty2.Wide
code-creation,BytecodeHandler,0,10875,0x1054f4700,920,CallUndefinedReceiver.Wide
code-creation,BytecodeHandler,0,10875,0x1054f4aa0,912,CallUndefinedReceiver0.Wide
code-creation,BytecodeHandler,0,10875,0x1054f4e40,924,CallUndefinedReceiver1.Wide
code-creation,BytecodeHandler,0,10875,0x1054f51e0,944,CallUndefinedReceiver2.Wide
code-creation,BytecodeHandler,0,10875,0x1054f55a0,924,CallWithSpread.Wide
code-creation,BytecodeHandler,0,10875,0x1054f5940,148,CallRuntime.Wide
code-creation,BytecodeHandler,0,10875,0x1054f59e0,196,CallRuntimeForPair.Wide
code-creation,BytecodeHandler,0,10875,0x1054f5ac0,108,CallJSRuntime.Wide
code-creation,BytecodeHandler,0,10875,0x1054f5b40,1452,InvokeIntrinsic.Wide
code-creation,BytecodeHandler,0,10916,0x1054f6100,904,Construct.Wide
code-creation,BytecodeHandler,0,10916,0x1054f64a0,448,ConstructWithSpread.Wide
code-creation,BytecodeHandler,0,10916,0x1054f6680,1996,TestEqual.Wide
code-creation,BytecodeHandler,0,10916,0x1054f6e60,936,TestEqualStrict.Wide
code-creation,BytecodeHandler,0,10916,0x1054f7220,1592,TestLessThan.Wide
code-creation,BytecodeHandler,0,10916,0x1054f7860,1592,TestGreaterThan.Wide
code-creation,BytecodeHandler,0,10916,0x1054f7ea0,1592,TestLessThanOrEqual.Wide
code-creation,BytecodeHandler,0,10916,0x1054f84e0,1592,TestGreaterThanOrEqual.Wide
code-creation,BytecodeHandler,0,10916,0x1054f8b20,856,TestInstanceOf.Wide
code-creation,BytecodeHandler,0,10916,0x1054f8e80,180,TestIn.Wide
code-creation,BytecodeHandler,0,10916,0x1054f8f40,136,ToName.Wide
code-creation,BytecodeHandler,0,10958,0x1054f8fe0,240,ToNumber.Wide
code-creation,BytecodeHandler,0,10958,0x1054f90e0,260,ToNumeric.Wide
code-creation,BytecodeHandler,0,10958,0x1054f9200,136,ToObject.Wide
code-creation,BytecodeHandler,0,10958,0x1054f92a0,464,CreateRegExpLiteral.Wide
code-creation,BytecodeHandler,0,10958,0x1054f9480,1336,CreateArrayLiteral.Wide
code-creation,BytecodeHandler,0,10958,0x1054f99c0,832,CreateEmptyArrayLiteral.Wide
code-creation,BytecodeHandler,0,10958,0x1054f9d20,2040,CreateObjectLiteral.Wide
code-creation,BytecodeHandler,0,10958,0x1054fa520,196,CloneObject.Wide
code-creation,BytecodeHandler,0,10958,0x1054fa600,188,GetTemplateObject.Wide
code-creation,BytecodeHandler,0,10958,0x1054fa6c0,376,CreateClosure.Wide
code-creation,BytecodeHandler,0,10958,0x1054fa840,144,CreateBlockContext.Wide
code-creation,BytecodeHandler,0,11000,0x1054fa8e0,156,CreateCatchContext.Wide
code-creation,BytecodeHandler,0,11000,0x1054fa980,308,CreateFunctionContext.Wide
code-creation,BytecodeHandler,0,11000,0x1054faac0,308,CreateEvalContext.Wide
code-creation,BytecodeHandler,0,11000,0x1054fac00,156,CreateWithContext.Wide
code-creation,BytecodeHandler,0,11000,0x1054faca0,536,JumpLoop.Wide
code-creation,BytecodeHandler,0,11000,0x1054faec0,60,Jump.Wide
code-creation,BytecodeHandler,0,11000,0x1054faf00,80,JumpConstant.Wide
code-creation,BytecodeHandler,0,11000,0x1054faf60,112,JumpIfNullConstant.Wide
code-creation,BytecodeHandler,0,11000,0x1054fafe0,112,JumpIfNotNullConstant.Wide
code-creation,BytecodeHandler,0,11000,0x1054fb060,112,JumpIfUndefinedConstant.Wide
code-creation,BytecodeHandler,0,11041,0x1054fb0e0,112,JumpIfNotUndefinedConstant.Wide
code-creation,BytecodeHandler,0,11041,0x1054fb160,124,JumpIfUndefinedOrNullConstant.Wide
code-creation,BytecodeHandler,0,11041,0x1054fb1e0,112,JumpIfTrueConstant.Wide
code-creation,BytecodeHandler,0,11041,0x1054fb260,112,JumpIfFalseConstant.Wide
code-creation,BytecodeHandler,0,11041,0x1054fb2e0,120,JumpIfJSReceiverConstant.Wide
code-creation,BytecodeHandler,0,11041,0x1054fb360,208,JumpIfToBooleanTrueConstant.Wide
code-creation,BytecodeHandler,0,11041,0x1054fb440,208,JumpIfToBooleanFalseConstant.Wide
code-creation,BytecodeHandler,0,11041,0x1054fb520,188,JumpIfToBooleanTrue.Wide
code-creation,BytecodeHandler,0,11041,0x1054fb5e0,188,JumpIfToBooleanFalse.Wide
code-creation,BytecodeHandler,0,11041,0x1054fb6a0,92,JumpIfTrue.Wide
code-creation,BytecodeHandler,0,11041,0x1054fb700,92,JumpIfFalse.Wide
code-creation,BytecodeHandler,0,11083,0x1054fb760,92,JumpIfNull.Wide
code-creation,BytecodeHandler,0,11083,0x1054fb7c0,92,JumpIfNotNull.Wide
code-creation,BytecodeHandler,0,11083,0x1054fb820,92,JumpIfUndefined.Wide
code-creation,BytecodeHandler,0,11083,0x1054fb880,92,JumpIfNotUndefined.Wide
code-creation,BytecodeHandler,0,11083,0x1054fb8e0,104,JumpIfUndefinedOrNull.Wide
code-creation,BytecodeHandler,0,11083,0x1054fb960,100,JumpIfJSReceiver.Wide
code-creation,BytecodeHandler,0,11083,0x1054fb9e0,140,SwitchOnSmiNoFeedback.Wide
code-creation,BytecodeHandler,0,11083,0x1054fba80,560,ForInEnumerate.Wide
code-creation,BytecodeHandler,0,11083,0x1054fbcc0,268,ForInPrepare.Wide
code-creation,BytecodeHandler,0,11125,0x1054fbde0,76,ForInContinue.Wide
code-creation,BytecodeHandler,0,11125,0x1054fbe40,308,ForInNext.Wide
code-creation,BytecodeHandler,0,11125,0x1054fbf80,48,ForInStep.Wide
code-creation,BytecodeHandler,0,11125,0x1054fbfc0,192,ThrowReferenceErrorIfHole.Wide
code-creation,BytecodeHandler,0,11125,0x1054fc0a0,180,ThrowIfNotSuperConstructor.Wide
code-creation,BytecodeHandler,0,11125,0x1054fc160,148,SwitchOnGeneratorState.Wide
code-creation,BytecodeHandler,0,11125,0x1054fc200,520,SuspendGenerator.Wide
code-creation,BytecodeHandler,0,11125,0x1054fc420,172,ResumeGenerator.Wide
code-creation,BytecodeHandler,0,11125,0x1054fc4e0,184,GetIterator.Wide
code-creation,BytecodeHandler,0,11125,0x1054fc5a0,140,IncBlockCounter.Wide
code-creation,BytecodeHandler,0,11125,0x1054fc640,80,Abort.Wide
code-creation,BytecodeHandler,0,11166,0x1054fc6a0,128,DebugBreak1.ExtraWide
code-creation,BytecodeHandler,0,11166,0x1054fc740,128,DebugBreak2.ExtraWide
code-creation,BytecodeHandler,0,11166,0x1054fc7e0,128,DebugBreak3.ExtraWide
code-creation,BytecodeHandler,0,11166,0x1054fc880,128,DebugBreak4.ExtraWide
code-creation,BytecodeHandler,0,11166,0x1054fc920,128,DebugBreak5.ExtraWide
code-creation,BytecodeHandler,0,11166,0x1054fc9c0,128,DebugBreak6.ExtraWide
code-creation,BytecodeHandler,0,11166,0x1054fca60,44,Ldar.ExtraWide
code-creation,BytecodeHandler,0,11166,0x1054fcaa0,40,LdaSmi.ExtraWide
code-creation,BytecodeHandler,0,11166,0x1054fcae0,48,LdaConstant.ExtraWide
code-creation,BytecodeHandler,0,11166,0x1054fcb20,128,LdaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,11166,0x1054fcbc0,128,LdaImmutableContextSlot.ExtraWide
code-creation,BytecodeHandler,0,11208,0x1054fcc60,72,LdaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,11208,0x1054fccc0,72,LdaImmutableCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,11208,0x1054fcd20,44,Star.ExtraWide
code-creation,BytecodeHandler,0,11208,0x1054fcd60,60,Mov.ExtraWide
code-creation,BytecodeHandler,0,11208,0x1054fcda0,52,PushContext.ExtraWide
code-creation,BytecodeHandler,0,11208,0x1054fcde0,48,PopContext.ExtraWide
code-creation,BytecodeHandler,0,11208,0x1054fce20,64,TestReferenceEqual.ExtraWide
code-creation,BytecodeHandler,0,11208,0x1054fce80,4572,LdaGlobal.ExtraWide
code-creation,BytecodeHandler,0,11208,0x1054fe060,4484,LdaGlobalInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,11250,0x1054ff200,188,StaGlobal.ExtraWide
code-creation,BytecodeHandler,0,11250,0x1054ff2c0,184,StaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,11250,0x1054ff380,128,StaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,11250,0x1054ff420,156,LdaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,11250,0x1054ff4c0,312,LdaLookupContextSlot.ExtraWide
code-creation,BytecodeHandler,0,11250,0x1054ff600,4816,LdaLookupGlobalSlot.ExtraWide
code-creation,BytecodeHandler,0,11250,0x1055008e0,156,LdaLookupSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,11250,0x105500980,312,LdaLookupContextSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,11250,0x105500ac0,4744,LdaLookupGlobalSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,11250,0x105501d60,252,StaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,11291,0x105501e60,5144,GetNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,11291,0x105503280,212,GetNamedPropertyFromSuper.ExtraWide
code-creation,BytecodeHandler,0,11291,0x105503360,180,GetKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,11291,0x105503420,216,LdaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,11291,0x105503500,344,StaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,11291,0x105503660,204,SetNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,11291,0x105503740,204,DefineNamedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,11291,0x105503820,196,SetKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,11333,0x105503900,196,DefineKeyedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,11333,0x1055039e0,196,StaInArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,11333,0x105503ac0,232,DefineKeyedOwnPropertyInLiteral.ExtraWide
code-creation,BytecodeHandler,0,11333,0x105503bc0,192,CollectTypeProfile.ExtraWide
code-creation,BytecodeHandler,0,11333,0x105503ca0,948,Add.ExtraWide
code-creation,BytecodeHandler,0,11333,0x105504060,992,Sub.ExtraWide
code-creation,BytecodeHandler,0,11333,0x105504460,940,Mul.ExtraWide
code-creation,BytecodeHandler,0,11333,0x105504820,944,Div.ExtraWide
code-creation,BytecodeHandler,0,11333,0x105504be0,848,Mod.ExtraWide
code-creation,BytecodeHandler,0,11333,0x105504f40,908,Exp.ExtraWide
code-creation,BytecodeHandler,0,11375,0x1055052e0,896,BitwiseOr.ExtraWide
code-creation,BytecodeHandler,0,11375,0x105505680,896,BitwiseXor.ExtraWide
code-creation,BytecodeHandler,0,11375,0x105505a20,896,BitwiseAnd.ExtraWide
code-creation,BytecodeHandler,0,11375,0x105505dc0,896,ShiftLeft.ExtraWide
code-creation,BytecodeHandler,0,11375,0x105506160,896,ShiftRight.ExtraWide
code-creation,BytecodeHandler,0,11375,0x105506500,1012,ShiftRightLogical.ExtraWide
code-creation,BytecodeHandler,0,11375,0x105506900,920,AddSmi.ExtraWide
code-creation,BytecodeHandler,0,11375,0x105506ca0,960,SubSmi.ExtraWide
code-creation,BytecodeHandler,0,11375,0x105507080,912,MulSmi.ExtraWide
code-creation,BytecodeHandler,0,11375,0x105507420,996,DivSmi.ExtraWide
code-creation,BytecodeHandler,0,11375,0x105507820,792,ModSmi.ExtraWide
code-creation,BytecodeHandler,0,11416,0x105507b40,800,ExpSmi.ExtraWide
code-creation,BytecodeHandler,0,11416,0x105507e80,480,BitwiseOrSmi.ExtraWide
code-creation,BytecodeHandler,0,11416,0x105508080,480,BitwiseXorSmi.ExtraWide
code-creation,BytecodeHandler,0,11416,0x105508280,480,BitwiseAndSmi.ExtraWide
code-creation,BytecodeHandler,0,11416,0x105508480,504,ShiftLeftSmi.ExtraWide
code-creation,BytecodeHandler,0,11416,0x105508680,492,ShiftRightSmi.ExtraWide
code-creation,BytecodeHandler,0,11416,0x105508880,808,ShiftRightLogicalSmi.ExtraWide
code-creation,BytecodeHandler,0,11416,0x105508bc0,624,Inc.ExtraWide
code-creation,BytecodeHandler,0,11416,0x105508e40,624,Dec.ExtraWide
code-creation,BytecodeHandler,0,11416,0x1055090c0,640,Negate.ExtraWide
code-creation,BytecodeHandler,0,11458,0x105509360,460,BitwiseNot.ExtraWide
code-creation,BytecodeHandler,0,11458,0x105509540,140,DeletePropertyStrict.ExtraWide
code-creation,BytecodeHandler,0,11458,0x1055095e0,140,DeletePropertySloppy.ExtraWide
code-creation,BytecodeHandler,0,11458,0x105509680,52,GetSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,11458,0x1055096c0,924,CallAnyReceiver.ExtraWide
code-creation,BytecodeHandler,0,11458,0x105509a60,924,CallProperty.ExtraWide
code-creation,BytecodeHandler,0,11458,0x105509e00,936,CallProperty0.ExtraWide
code-creation,BytecodeHandler,0,11458,0x10550a1c0,948,CallProperty1.ExtraWide
code-creation,BytecodeHandler,0,11458,0x10550a580,968,CallProperty2.ExtraWide
code-creation,BytecodeHandler,0,11458,0x10550a960,920,CallUndefinedReceiver.ExtraWide
code-creation,BytecodeHandler,0,11500,0x10550ad00,912,CallUndefinedReceiver0.ExtraWide
code-creation,BytecodeHandler,0,11500,0x10550b0a0,924,CallUndefinedReceiver1.ExtraWide
code-creation,BytecodeHandler,0,11500,0x10550b440,944,CallUndefinedReceiver2.ExtraWide
code-creation,BytecodeHandler,0,11500,0x10550b800,924,CallWithSpread.ExtraWide
code-creation,BytecodeHandler,0,11500,0x10550bba0,148,CallRuntime.ExtraWide
code-creation,BytecodeHandler,0,11500,0x10550bc40,196,CallRuntimeForPair.ExtraWide
code-creation,BytecodeHandler,0,11500,0x10550bd20,108,CallJSRuntime.ExtraWide
code-creation,BytecodeHandler,0,11500,0x10550bda0,1452,InvokeIntrinsic.ExtraWide
code-creation,BytecodeHandler,0,11500,0x10550c360,904,Construct.ExtraWide
code-creation,BytecodeHandler,0,11500,0x10550c700,448,ConstructWithSpread.ExtraWide
code-creation,BytecodeHandler,0,11541,0x10550c8e0,1996,TestEqual.ExtraWide
code-creation,BytecodeHandler,0,11541,0x10550d0c0,936,TestEqualStrict.ExtraWide
code-creation,BytecodeHandler,0,11541,0x10550d480,1592,TestLessThan.ExtraWide
code-creation,BytecodeHandler,0,11541,0x10550dac0,1592,TestGreaterThan.ExtraWide
code-creation,BytecodeHandler,0,11541,0x10550e100,1592,TestLessThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,11541,0x10550e740,1592,TestGreaterThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,11541,0x10550ed80,856,TestInstanceOf.ExtraWide
code-creation,BytecodeHandler,0,11541,0x10550f0e0,180,TestIn.ExtraWide
code-creation,BytecodeHandler,0,11541,0x10550f1a0,136,ToName.ExtraWide
code-creation,BytecodeHandler,0,11583,0x10550f240,240,ToNumber.ExtraWide
code-creation,BytecodeHandler,0,11583,0x10550f340,260,ToNumeric.ExtraWide
code-creation,BytecodeHandler,0,11583,0x10550f460,136,ToObject.ExtraWide
code-creation,BytecodeHandler,0,11583,0x10550f500,464,CreateRegExpLiteral.ExtraWide
code-creation,BytecodeHandler,0,11583,0x10550f6e0,1336,CreateArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,11583,0x10550fc20,832,CreateEmptyArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,11583,0x10550ff80,2040,CreateObjectLiteral.ExtraWide
code-creation,BytecodeHandler,0,11583,0x105510780,196,CloneObject.ExtraWide
code-creation,BytecodeHandler,0,11583,0x105510860,188,GetTemplateObject.ExtraWide
code-creation,BytecodeHandler,0,11583,0x105510920,376,CreateClosure.ExtraWide
code-creation,BytecodeHandler,0,11625,0x105510aa0,144,CreateBlockContext.ExtraWide
code-creation,BytecodeHandler,0,11625,0x105510b40,156,CreateCatchContext.ExtraWide
code-creation,BytecodeHandler,0,11625,0x105510be0,308,CreateFunctionContext.ExtraWide
code-creation,BytecodeHandler,0,11625,0x105510d20,308,CreateEvalContext.ExtraWide
code-creation,BytecodeHandler,0,11625,0x105510e60,156,CreateWithContext.ExtraWide
code-creation,BytecodeHandler,0,11625,0x105510f00,536,JumpLoop.ExtraWide
code-creation,BytecodeHandler,0,11625,0x105511120,60,Jump.ExtraWide
code-creation,BytecodeHandler,0,11625,0x105511160,80,JumpConstant.ExtraWide
code-creation,BytecodeHandler,0,11625,0x1055111c0,112,JumpIfNullConstant.ExtraWide
code-creation,BytecodeHandler,0,11625,0x105511240,112,JumpIfNotNullConstant.ExtraWide
code-creation,BytecodeHandler,0,11625,0x1055112c0,112,JumpIfUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,11666,0x105511340,112,JumpIfNotUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,11666,0x1055113c0,124,JumpIfUndefinedOrNullConstant.ExtraWide
code-creation,BytecodeHandler,0,11666,0x105511440,112,JumpIfTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,11666,0x1055114c0,112,JumpIfFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,11666,0x105511540,120,JumpIfJSReceiverConstant.ExtraWide
code-creation,BytecodeHandler,0,11666,0x1055115c0,208,JumpIfToBooleanTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,11666,0x1055116a0,208,JumpIfToBooleanFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,11666,0x105511780,188,JumpIfToBooleanTrue.ExtraWide
code-creation,BytecodeHandler,0,11666,0x105511840,188,JumpIfToBooleanFalse.ExtraWide
code-creation,BytecodeHandler,0,11666,0x105511900,92,JumpIfTrue.ExtraWide
code-creation,BytecodeHandler,0,11708,0x105511960,92,JumpIfFalse.ExtraWide
code-creation,BytecodeHandler,0,11708,0x1055119c0,92,JumpIfNull.ExtraWide
code-creation,BytecodeHandler,0,11708,0x105511a20,92,JumpIfNotNull.ExtraWide
code-creation,BytecodeHandler,0,11708,0x105511a80,92,JumpIfUndefined.ExtraWide
code-creation,BytecodeHandler,0,11708,0x105511ae0,92,JumpIfNotUndefined.ExtraWide
code-creation,BytecodeHandler,0,11708,0x105511b40,104,JumpIfUndefinedOrNull.ExtraWide
code-creation,BytecodeHandler,0,11708,0x105511bc0,100,JumpIfJSReceiver.ExtraWide
code-creation,BytecodeHandler,0,11708,0x105511c40,140,SwitchOnSmiNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,11750,0x105511ce0,560,ForInEnumerate.ExtraWide
code-creation,BytecodeHandler,0,11750,0x105511f20,268,ForInPrepare.ExtraWide
code-creation,BytecodeHandler,0,11750,0x105512040,76,ForInContinue.ExtraWide
code-creation,BytecodeHandler,0,11750,0x1055120a0,308,ForInNext.ExtraWide
code-creation,BytecodeHandler,0,11750,0x1055121e0,48,ForInStep.ExtraWide
code-creation,BytecodeHandler,0,11750,0x105512220,192,ThrowReferenceErrorIfHole.ExtraWide
code-creation,BytecodeHandler,0,11750,0x105512300,180,ThrowIfNotSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,11750,0x1055123c0,148,SwitchOnGeneratorState.ExtraWide
code-creation,BytecodeHandler,0,11750,0x105512460,520,SuspendGenerator.ExtraWide
code-creation,BytecodeHandler,0,11791,0x105512680,172,ResumeGenerator.ExtraWide
code-creation,BytecodeHandler,0,11791,0x105512740,184,GetIterator.ExtraWide
code-creation,BytecodeHandler,0,11791,0x105512800,140,IncBlockCounter.ExtraWide
code-creation,BytecodeHandler,0,11791,0x1055128a0,80,Abort.ExtraWide
tick,0x1a4d3a6f4,11833,0,0x0,6
new,MemoryChunk,0x11d49cc80000,262144
new,MemoryChunk,0x31015f6c0000,262144
tick,0x105a220dc,13000,0,0x0,5
new,MemoryChunk,0x26353d840000,262144
new,MemoryChunk,0x24471db00000,262144
new,MemoryChunk,0xc1101d80000,262144
tick,0x105123d0c,14291,0,0x0,5
code-creation,Eval,10,15166,0xc1101dae1e8,5, node:internal/main/run_main_module:1:1,0xc1101dae0a0,~
script-source,422,node:internal/main/run_main_module,'use strict';\n\nconst {\n  prepareMainThreadExecution\x2C\n  markBootstrapComplete\n} = require('internal/process/pre_execution');\n\nprepareMainThreadExecution(true);\n\nmarkBootstrapComplete();\n\n// Note: this loads the module through the ESM loader if the module is\n// determined to be an ES module. This hangs from the CJS module loader\n// because we currently allow monkey-patching of the module loaders\n// in the preloaded scripts through require('module').\n// runMain here might be monkey-patched by users in --require.\n// XXX: the monkey-patchability here should probably be deprecated.\nrequire('internal/modules/cjs/loader').Module.runMain(process.argv[1]);\n
code-source-info,0xc1101dae1e8,422,0,655,C0O0C4O655,,
code-creation,Function,10,15208,0xc1101dae298,63, node:internal/main/run_main_module:1:1,0xc1101dae160,~
code-source-info,0xc1101dae298,422,0,655,C0O81C3O81C8O25C13O55C18O125C20O125C24O160C27O583C30O583C35O621C40O628C45O645C52O649C56O629C62O654,,
tick,0x10508940c,15583,1,0x104a8d6ec,2,0x0,0x3d9b8018ed2e,0x3d9b8018ef9f,0xc1101dae29b
code-creation,Eval,10,15625,0xc1101daf390,5, node:internal/process/pre_execution:1:1,0xc1101daef48,~
script-source,423,node:internal/process/pre_execution,'use strict';\n\nconst {\n  NumberParseInt\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  SafeMap\x2C\n  SafeWeakMap\x2C\n  StringPrototypeStartsWith\x2C\n  globalThis\x2C\n} = primordials;\n\nconst {\n  getOptionValue\x2C\n  getEmbedderOptions\x2C\n  refreshOptions\x2C\n} = require('internal/options');\nconst { reconnectZeroFillToggle } = require('internal/buffer');\nconst {\n  defineOperation\x2C\n  emitExperimentalWarning\x2C\n  exposeInterface\x2C\n} = require('internal/util');\n\nconst {\n  ERR_MANIFEST_ASSERT_INTEGRITY\x2C\n} = require('internal/errors').codes;\nconst assert = require('internal/assert');\n\nconst {\n  addSerializeCallback\x2C\n  isBuildingSnapshot\x2C\n} = require('v8').startupSnapshot;\n\nfunction prepareMainThreadExecution(expandArgv1 = false\x2C\n                                    initialzeModules = true) {\n  refreshRuntimeOptions();\n\n  // TODO(joyeecheung): this is also necessary for workers when they deserialize\n  // this toggle from the snapshot.\n  reconnectZeroFillToggle();\n\n  // Patch the process object with legacy properties and normalizations\n  patchProcessObject(expandArgv1);\n  setupTraceCategoryState();\n  setupPerfHooks();\n  setupInspectorHooks();\n  setupWarningHandler();\n  setupFetch();\n  setupWebCrypto();\n  setupCustomEvent();\n\n  // Resolve the coverage directory to an absolute path\x2C and\n  // overwrite process.env so that the original path gets passed\n  // to child processes even when they switch cwd.\n  if (process.env.NODE_V8_COVERAGE) {\n    process.env.NODE_V8_COVERAGE =\n      setupCoverageHooks(process.env.NODE_V8_COVERAGE);\n  }\n\n  setupDebugEnv();\n\n  // Print stack trace on `SIGINT` if option `--trace-sigint` presents.\n  setupStacktracePrinterOnSigint();\n\n  // Process initial diagnostic reporting configuration\x2C if present.\n  initializeReport();\n  initializeReportSignalHandlers();  // Main-thread-only.\n\n  initializeHeapSnapshotSignalHandlers();\n\n  // If the process is spawned with env NODE_CHANNEL_FD\x2C it's probably\n  // spawned by our child_process module\x2C then initialize IPC.\n  // This attaches some internal event listeners and creates:\n  // process.send()\x2C process.channel\x2C process.connected\x2C\n  // process.disconnect().\n  setupChildProcessIpcChannel();\n\n  // Load policy from disk and parse it.\n  initializePolicy();\n\n  // If this is a worker in cluster mode\x2C start up the communication\n  // channel. This needs to be done before any user code gets executed\n  // (including preload modules).\n  initializeClusterIPC();\n\n  initializeSourceMapsHandlers();\n  initializeDeprecations();\n  initializeWASI();\n\n  require('internal/v8/startup_snapshot').runDeserializeCallbacks();\n\n  if (!initialzeModules) {\n    return;\n  }\n\n  initializeCJSLoader();\n  initializeESMLoader();\n  const CJSLoader = require('internal/modules/cjs/loader');\n  assert(!CJSLoader.hasLoadedAnyUserCJSModule);\n  loadPreloadModules();\n  initializeFrozenIntrinsics();\n}\n\nfunction refreshRuntimeOptions() {\n  refreshOptions();\n}\n\nfunction patchProcessObject(expandArgv1) {\n  const binding = internalBinding('process_methods');\n  binding.patchProcessObject(process);\n\n  require('internal/process/per_thread').refreshHrtimeBuffer();\n\n  ObjectDefineProperty(process\x2C 'argv0'\x2C {\n    __proto__: null\x2C\n    enumerable: true\x2C\n    // Only set it to true during snapshot building.\n    configurable: getOptionValue('--build-snapshot')\x2C\n    value: process.argv[0]\n  });\n\n  process.exitCode = undefined;\n  process._exiting = false;\n  process.argv[0] = process.execPath;\n\n  if (expandArgv1 && process.argv[1] &&\n      !StringPrototypeStartsWith(process.argv[1]\x2C '-')) {\n    // Expand process.argv[1] into a full path.\n    const path = require('path');\n    try {\n      process.argv[1] = path.resolve(process.argv[1]);\n    } catch {\n      // Continue regardless of error.\n    }\n  }\n\n  // We need to initialize the global console here again with process.stdout\n  // and friends for snapshot deserialization.\n  const globalConsole = require('internal/console/global');\n  const { initializeGlobalConsole } = require('internal/console/constructor');\n  initializeGlobalConsole(globalConsole);\n\n  // TODO(joyeecheung): most of these should be deprecated and removed\x2C\n  // except some that we need to be able to mutate during run time.\n  addReadOnlyProcessAlias('_eval'\x2C '--eval');\n  addReadOnlyProcessAlias('_print_eval'\x2C '--print');\n  addReadOnlyProcessAlias('_syntax_check_only'\x2C '--check');\n  addReadOnlyProcessAlias('_forceRepl'\x2C '--interactive');\n  addReadOnlyProcessAlias('_preload_modules'\x2C '--require');\n  addReadOnlyProcessAlias('noDeprecation'\x2C '--no-deprecation');\n  addReadOnlyProcessAlias('noProcessWarnings'\x2C '--no-warnings');\n  addReadOnlyProcessAlias('traceProcessWarnings'\x2C '--trace-warnings');\n  addReadOnlyProcessAlias('throwDeprecation'\x2C '--throw-deprecation');\n  addReadOnlyProcessAlias('profProcess'\x2C '--prof-process');\n  addReadOnlyProcessAlias('traceDeprecation'\x2C '--trace-deprecation');\n  addReadOnlyProcessAlias('_breakFirstLine'\x2C '--inspect-brk'\x2C false);\n  addReadOnlyProcessAlias('_breakNodeFirstLine'\x2C '--inspect-brk-node'\x2C false);\n}\n\nfunction addReadOnlyProcessAlias(name\x2C option\x2C enumerable = true) {\n  const value = getOptionValue(option);\n  if (value) {\n    ObjectDefineProperty(process\x2C name\x2C {\n      __proto__: null\x2C\n      writable: false\x2C\n      configurable: true\x2C\n      enumerable\x2C\n      value\n    });\n  }\n}\n\nfunction setupWarningHandler() {\n  const {\n    onWarning\x2C\n    resetForSerialization\n  } = require('internal/process/warning');\n  if (getOptionValue('--warnings') &&\n    process.env.NODE_NO_WARNINGS !== '1') {\n    process.on('warning'\x2C onWarning);\n\n    // The code above would add the listener back during deserialization\x2C\n    // if applicable.\n    if (isBuildingSnapshot()) {\n      addSerializeCallback(() => {\n        process.removeListener('warning'\x2C onWarning);\n        resetForSerialization();\n      });\n    }\n  }\n}\n\n// https://fetch.spec.whatwg.org/\nfunction setupFetch() {\n  if (process.config.variables.node_no_browser_globals ||\n      getOptionValue('--no-experimental-fetch')) {\n    return;\n  }\n\n  let undici;\n  function lazyUndici() {\n    if (undici) {\n      return undici;\n    }\n\n    undici = require('internal/deps/undici/undici');\n    return undici;\n  }\n\n  async function fetch(input\x2C init = undefined) {\n    emitExperimentalWarning('The Fetch API');\n    return lazyUndici().fetch(input\x2C init);\n  }\n\n  defineOperation(globalThis\x2C 'fetch'\x2C fetch);\n\n  function lazyInterface(name) {\n    return {\n      configurable: true\x2C\n      enumerable: false\x2C\n      get() {\n        return lazyUndici()[name];\n      }\x2C\n      set(value) {\n        exposeInterface(globalThis\x2C name\x2C value);\n      }\n    };\n  }\n\n  ObjectDefineProperties(globalThis\x2C {\n    FormData: lazyInterface('FormData')\x2C\n    Headers: lazyInterface('Headers')\x2C\n    Request: lazyInterface('Request')\x2C\n    Response: lazyInterface('Response')\x2C\n  });\n\n  // The WebAssembly Web API: https://webassembly.github.io/spec/web-api\n  const { wasmStreamingCallback } = require('internal/wasm_web_api');\n  internalBinding('wasm_web_api').setImplementation(wasmStreamingCallback);\n}\n\n// TODO(aduh95): move this to internal/bootstrap/browser when the CLI flag is\n//               removed.\nfunction setupWebCrypto() {\n  if (process.config.variables.node_no_browser_globals ||\n      !getOptionValue('--experimental-global-webcrypto')) {\n    return;\n  }\n\n  let webcrypto;\n  ObjectDefineProperty(globalThis\x2C 'crypto'\x2C\n                       { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor({\n                         get crypto() {\n                           webcrypto ??= require('internal/crypto/webcrypto');\n                           return webcrypto.crypto;\n                         }\n                       }\x2C 'crypto') });\n  if (internalBinding('config').hasOpenSSL) {\n    webcrypto ??= require('internal/crypto/webcrypto');\n    exposeInterface(globalThis\x2C 'Crypto'\x2C webcrypto.Crypto);\n    exposeInterface(globalThis\x2C 'CryptoKey'\x2C webcrypto.CryptoKey);\n    exposeInterface(globalThis\x2C 'SubtleCrypto'\x2C webcrypto.SubtleCrypto);\n  }\n}\n\n// TODO(daeyeon): move this to internal/bootstrap/browser when the CLI flag is\n//                removed.\nfunction setupCustomEvent() {\n  if (process.config.variables.node_no_browser_globals ||\n      !getOptionValue('--experimental-global-customevent')) {\n    return;\n  }\n  const { CustomEvent } = require('internal/event_target');\n  exposeInterface(globalThis\x2C 'CustomEvent'\x2C CustomEvent);\n}\n\n// Setup User-facing NODE_V8_COVERAGE environment variable that writes\n// ScriptCoverage to a specified file.\nfunction setupCoverageHooks(dir) {\n  const cwd = require('internal/process/execution').tryGetCwd();\n  const { resolve } = require('path');\n  const coverageDirectory = resolve(cwd\x2C dir);\n  const { sourceMapCacheToObject } =\n    require('internal/source_map/source_map_cache');\n\n  if (process.features.inspector) {\n    internalBinding('profiler').setCoverageDirectory(coverageDirectory);\n    internalBinding('profiler').setSourceMapCacheGetter(sourceMapCacheToObject);\n  } else {\n    process.emitWarning('The inspector is disabled\x2C ' +\n                        'coverage could not be collected'\x2C\n                        'Warning');\n    return '';\n  }\n  return coverageDirectory;\n}\n\nfunction setupStacktracePrinterOnSigint() {\n  if (!getOptionValue('--trace-sigint')) {\n    return;\n  }\n  const { SigintWatchdog } = require('internal/watchdog');\n\n  const watchdog = new SigintWatchdog();\n  watchdog.start();\n}\n\nfunction initializeReport() {\n  const { report } = require('internal/process/report');\n  ObjectDefineProperty(process\x2C 'report'\x2C {\n    __proto__: null\x2C\n    enumerable: true\x2C\n    configurable: true\x2C\n    get() {\n      return report;\n    }\n  });\n}\n\nfunction setupDebugEnv() {\n  require('internal/util/debuglog').initializeDebugEnv(process.env.NODE_DEBUG);\n  if (getOptionValue('--expose-internals')) {\n    require('internal/bootstrap/loaders').BuiltinModule.exposeInternals();\n  }\n}\n\n// This has to be called after initializeReport() is called\nfunction initializeReportSignalHandlers() {\n  const { addSignalHandler } = require('internal/process/report');\n\n  addSignalHandler();\n}\n\nfunction initializeHeapSnapshotSignalHandlers() {\n  const signal = getOptionValue('--heapsnapshot-signal');\n\n  if (!signal)\n    return;\n\n  require('internal/validators').validateSignalName(signal);\n  const { writeHeapSnapshot } = require('v8');\n\n  function doWriteHeapSnapshot() {\n    writeHeapSnapshot();\n  }\n  process.on(signal\x2C doWriteHeapSnapshot);\n\n  // The code above would add the listener back during deserialization\x2C\n  // if applicable.\n  if (isBuildingSnapshot()) {\n    addSerializeCallback(() => {\n      process.removeListener(signal\x2C doWriteHeapSnapshot);\n    });\n  }\n}\n\nfunction setupTraceCategoryState() {\n  const { isTraceCategoryEnabled } = internalBinding('trace_events');\n  const { toggleTraceCategoryState } = require('internal/process/per_thread');\n  toggleTraceCategoryState(isTraceCategoryEnabled('node.async_hooks'));\n}\n\nfunction setupPerfHooks() {\n  require('internal/perf/performance').refreshTimeOrigin();\n  require('internal/perf/utils').refreshTimeOrigin();\n}\n\nfunction setupInspectorHooks() {\n  // If Debugger.setAsyncCallStackDepth is sent during bootstrap\x2C\n  // we cannot immediately call into JS to enable the hooks\x2C which could\n  // interrupt the JS execution of bootstrap. So instead we save the\n  // notification in the inspector agent if it's sent in the middle of\n  // bootstrap\x2C and process the notification later here.\n  if (internalBinding('config').hasInspector) {\n    const {\n      enable\x2C\n      disable\n    } = require('internal/inspector_async_hook');\n    internalBinding('inspector').registerAsyncHook(enable\x2C disable);\n  }\n}\n\n// In general deprecations are initialized wherever the APIs are implemented\x2C\n// this is used to deprecate APIs implemented in C++ where the deprecation\n// utilities are not easily accessible.\nfunction initializeDeprecations() {\n  const { deprecate } = require('internal/util');\n  const pendingDeprecation = getOptionValue('--pending-deprecation');\n\n  // DEP0103: access to `process.binding('util').isX` type checkers\n  // TODO(addaleax): Turn into a full runtime deprecation.\n  const utilBinding = internalBinding('util');\n  const types = require('internal/util/types');\n  for (const name of [\n    'isArrayBuffer'\x2C\n    'isArrayBufferView'\x2C\n    'isAsyncFunction'\x2C\n    'isDataView'\x2C\n    'isDate'\x2C\n    'isExternal'\x2C\n    'isMap'\x2C\n    'isMapIterator'\x2C\n    'isNativeError'\x2C\n    'isPromise'\x2C\n    'isRegExp'\x2C\n    'isSet'\x2C\n    'isSetIterator'\x2C\n    'isTypedArray'\x2C\n    'isUint8Array'\x2C\n    'isAnyArrayBuffer'\x2C\n  ]) {\n    utilBinding[name] = pendingDeprecation ?\n      deprecate(types[name]\x2C\n                'Accessing native typechecking bindings of Node ' +\n                'directly is deprecated. ' +\n                `Please use \\`util.types.${name}\\` instead.`\x2C\n                'DEP0103') :\n      types[name];\n  }\n\n  // TODO(joyeecheung): this is a legacy property exposed to process.\n  // Now that we use the config binding to carry this information\x2C remove\n  // it from the process. We may consider exposing it properly in\n  // process.features.\n  const { noBrowserGlobals } = internalBinding('config');\n  if (noBrowserGlobals) {\n    ObjectDefineProperty(process\x2C '_noBrowserGlobals'\x2C {\n      __proto__: null\x2C\n      writable: false\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n      value: noBrowserGlobals\n    });\n  }\n\n  if (pendingDeprecation) {\n    process.binding = deprecate(process.binding\x2C\n                                'process.binding() is deprecated. ' +\n                                'Please use public APIs instead.'\x2C 'DEP0111');\n\n    process._tickCallback = deprecate(process._tickCallback\x2C\n                                      'process._tickCallback() is deprecated'\x2C\n                                      'DEP0134');\n  }\n}\n\nfunction setupChildProcessIpcChannel() {\n  if (process.env.NODE_CHANNEL_FD) {\n    const assert = require('internal/assert');\n\n    const fd = NumberParseInt(process.env.NODE_CHANNEL_FD\x2C 10);\n    assert(fd >= 0);\n\n    // Make sure it's not accidentally inherited by child processes.\n    delete process.env.NODE_CHANNEL_FD;\n\n    const serializationMode =\n      process.env.NODE_CHANNEL_SERIALIZATION_MODE || 'json';\n    delete process.env.NODE_CHANNEL_SERIALIZATION_MODE;\n\n    require('child_process')._forkChild(fd\x2C serializationMode);\n    assert(process.send);\n  }\n}\n\nfunction initializeClusterIPC() {\n  if (process.argv[1] && process.env.NODE_UNIQUE_ID) {\n    const cluster = require('cluster');\n    cluster._setupWorker();\n    // Make sure it's not accidentally inherited by child processes.\n    delete process.env.NODE_UNIQUE_ID;\n  }\n}\n\nfunction initializePolicy() {\n  const experimentalPolicy = getOptionValue('--experimental-policy');\n  if (experimentalPolicy) {\n    process.emitWarning('Policies are experimental.'\x2C\n                        'ExperimentalWarning');\n    const { pathToFileURL\x2C URL } = require('internal/url');\n    // URL here as it is slightly different parsing\n    // no bare specifiers for now\n    let manifestURL;\n    if (require('path').isAbsolute(experimentalPolicy)) {\n      manifestURL = new URL(`file://${experimentalPolicy}`);\n    } else {\n      const cwdURL = pathToFileURL(process.cwd());\n      cwdURL.pathname += '/';\n      manifestURL = new URL(experimentalPolicy\x2C cwdURL);\n    }\n    const fs = require('fs');\n    const src = fs.readFileSync(manifestURL\x2C 'utf8');\n    const experimentalPolicyIntegrity = getOptionValue('--policy-integrity');\n    if (experimentalPolicyIntegrity) {\n      const SRI = require('internal/policy/sri');\n      const { createHash\x2C timingSafeEqual } = require('crypto');\n      const realIntegrities = new SafeMap();\n      const integrityEntries = SRI.parse(experimentalPolicyIntegrity);\n      let foundMatch = false;\n      for (let i = 0; i < integrityEntries.length; i++) {\n        const {\n          algorithm\x2C\n          value: expected\n        } = integrityEntries[i];\n        const hash = createHash(algorithm);\n        hash.update(src);\n        const digest = hash.digest();\n        if (digest.length === expected.length &&\n          timingSafeEqual(digest\x2C expected)) {\n          foundMatch = true;\n          break;\n        }\n        realIntegrities.set(algorithm\x2C digest.toString('base64'));\n      }\n      if (!foundMatch) {\n        throw new ERR_MANIFEST_ASSERT_INTEGRITY(manifestURL\x2C realIntegrities);\n      }\n    }\n    require('internal/process/policy')\n      .setup(src\x2C manifestURL.href);\n  }\n}\n\nfunction initializeWASI() {\n  const { BuiltinModule } = require('internal/bootstrap/loaders');\n  const mod = BuiltinModule.map.get('wasi');\n  mod.canBeRequiredByUsers =\n    getOptionValue('--experimental-wasi-unstable-preview1');\n}\n\nfunction initializeCJSLoader() {\n  const CJSLoader = require('internal/modules/cjs/loader');\n  if (!getEmbedderOptions().noGlobalSearchPaths) {\n    CJSLoader.Module._initPaths();\n  }\n  // TODO(joyeecheung): deprecate this in favor of a proper hook?\n  CJSLoader.Module.runMain =\n    require('internal/modules/run_main').executeUserEntryPoint;\n}\n\nfunction initializeESMLoader() {\n  // Create this WeakMap in js-land because V8 has no C++ API for WeakMap.\n  internalBinding('module_wrap').callbackMap = new SafeWeakMap();\n\n  if (getEmbedderOptions().shouldNotRegisterESMLoader) return;\n\n  const {\n    setImportModuleDynamicallyCallback\x2C\n    setInitializeImportMetaObjectCallback\n  } = internalBinding('module_wrap');\n  const esm = require('internal/process/esm_loader');\n  // Setup per-isolate callbacks that locate data or callbacks that we keep\n  // track of for different ESM modules.\n  setInitializeImportMetaObjectCallback(esm.initializeImportMetaObject);\n  setImportModuleDynamicallyCallback(esm.importModuleDynamicallyCallback);\n\n  // Patch the vm module when --experimental-vm-modules is on.\n  // Please update the comments in vm.js when this block changes.\n  if (getOptionValue('--experimental-vm-modules')) {\n    const {\n      Module\x2C SourceTextModule\x2C SyntheticModule\x2C\n    } = require('internal/vm/module');\n    const vm = require('vm');\n    vm.Module = Module;\n    vm.SourceTextModule = SourceTextModule;\n    vm.SyntheticModule = SyntheticModule;\n  }\n}\n\nfunction initializeSourceMapsHandlers() {\n  const { setSourceMapsEnabled } =\n    require('internal/source_map/source_map_cache');\n  process.setSourceMapsEnabled = setSourceMapsEnabled;\n}\n\nfunction initializeFrozenIntrinsics() {\n  if (getOptionValue('--frozen-intrinsics')) {\n    process.emitWarning('The --frozen-intrinsics flag is experimental'\x2C\n                        'ExperimentalWarning');\n    require('internal/freeze_intrinsics')();\n  }\n}\n\nfunction loadPreloadModules() {\n  // For user code\x2C we preload modules if `-r` is passed\n  const preloadModules = getOptionValue('--require');\n  if (preloadModules && preloadModules.length > 0) {\n    const {\n      Module: {\n        _preloadModules\n      }\x2C\n    } = require('internal/modules/cjs/loader');\n    _preloadModules(preloadModules);\n  }\n}\n\nfunction markBootstrapComplete() {\n  internalBinding('performance').markBootstrapComplete();\n}\n\nmodule.exports = {\n  refreshRuntimeOptions\x2C\n  patchProcessObject\x2C\n  setupCoverageHooks\x2C\n  setupWarningHandler\x2C\n  setupFetch\x2C\n  setupWebCrypto\x2C\n  setupCustomEvent\x2C\n  setupDebugEnv\x2C\n  setupPerfHooks\x2C\n  prepareMainThreadExecution\x2C\n  initializeDeprecations\x2C\n  initializeESMLoader\x2C\n  initializeFrozenIntrinsics\x2C\n  initializeSourceMapsHandlers\x2C\n  loadPreloadModules\x2C\n  setupTraceCategoryState\x2C\n  setupInspectorHooks\x2C\n  initializeReport\x2C\n  initializeCJSLoader\x2C\n  initializeWASI\x2C\n  markBootstrapComplete\n};\n
code-source-info,0xc1101daf390,423,0,19575,C0O0C4O19575,,
code-creation,Function,10,16375,0xc1101db0178,564, node:internal/process/pre_execution:1:1,0xc1101daf308,~
code-source-info,0xc1101db
code-creation,LazyCompile,10,16583,0xc1101db1d80,273,prepareMainThreadExecution node:internal/process/pre_execution:36:36,0xc1101daf3c0,~
code-source-info,0xc1101db1d
code-creation,LazyCompile,10,16625,0xc1101db33d0,10,refreshRuntimeOptions node:internal/process/pre_execution:106:31,0xc1101daf410,~
code-source-info,0xc1101db33d0,423,2908,2934,C0O2915C5O2915C9O2933,,
code-creation,LazyCompile,10,16625,0xc1101db34c0,22,refreshOptions node:internal/options:39:24,0xd141ccca1c0,~
script-source,88,node:internal/options,'use strict';\n\nconst {\n  getCLIOptions\x2C\n  getEmbedderOptions: getEmbedderOptionsFromBinding\x2C\n} = internalBinding('options');\n\nlet warnOnAllowUnauthorized = true;\n\nlet optionsMap;\nlet aliasesMap;\nlet embedderOptions;\n\n// getCLIOptions() would serialize the option values from C++ land.\n// It would error if the values are queried before bootstrap is\n// complete so that we don't accidentally include runtime-dependent\n// states into a runtime-independent snapshot.\nfunction getCLIOptionsFromBinding() {\n  if (!optionsMap) {\n    ({ options: optionsMap } = getCLIOptions());\n  }\n  return optionsMap;\n}\n\nfunction getAliasesFromBinding() {\n  if (!aliasesMap) {\n    ({ aliases: aliasesMap } = getCLIOptions());\n  }\n  return aliasesMap;\n}\n\nfunction getEmbedderOptions() {\n  if (!embedderOptions) {\n    embedderOptions = getEmbedderOptionsFromBinding();\n  }\n  return embedderOptions;\n}\n\nfunction refreshOptions() {\n  optionsMap = undefined;\n  aliasesMap = undefined;\n}\n\nfunction getOptionValue(optionName) {\n  const options = getCLIOptionsFromBinding();\n  if (optionName.startsWith('--no-')) {\n    const option = options.get('--' + optionName.slice(5));\n    return option && !option.value;\n  }\n  return options.get(optionName)?.value;\n}\n\nfunction getAllowUnauthorized() {\n  const allowUnauthorized = process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0';\n\n  if (allowUnauthorized && warnOnAllowUnauthorized) {\n    warnOnAllowUnauthorized = false;\n    process.emitWarning(\n      'Setting the NODE_TLS_REJECT_UNAUTHORIZED ' +\n      'environment variable to \\'0\\' makes TLS connections ' +\n      'and HTTPS requests insecure by disabling ' +\n      'certificate verification.');\n  }\n  return allowUnauthorized;\n}\n\nmodule.exports = {\n  get options() {\n    return getCLIOptionsFromBinding();\n  }\x2C\n  get aliases() {\n    return getAliasesFromBinding();\n  }\x2C\n  getOptionValue\x2C\n  getAllowUnauthorized\x2C\n  getEmbedderOptions\x2C\n  refreshOptions\n};\n
code-source-info,0xc1101db34c0,88,902,960,C0O909C4O920C10O935C14O946C21O959,,
code-creation,LazyCompile,10,16750,0xc1101db3828,19,reconnectZeroFillToggle node:internal/buffer:1072:33,0x111f698c1b58,~
script-source,31,node:internal/buffer,'use strict';\n\nconst {\n  BigInt\x2C\n  Float32Array\x2C\n  Float64Array\x2C\n  MathFloor\x2C\n  Number\x2C\n  Uint8Array\x2C\n} = primordials;\n\nconst {\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_OUT_OF_RANGE\n} = require('internal/errors').codes;\nconst { validateNumber } = require('internal/validators');\nconst {\n  asciiSlice\x2C\n  base64Slice\x2C\n  base64urlSlice\x2C\n  latin1Slice\x2C\n  hexSlice\x2C\n  ucs2Slice\x2C\n  utf8Slice\x2C\n  asciiWrite\x2C\n  base64Write\x2C\n  base64urlWrite\x2C\n  latin1Write\x2C\n  hexWrite\x2C\n  ucs2Write\x2C\n  utf8Write\x2C\n  getZeroFillToggle\n} = internalBinding('buffer');\nconst {\n  untransferable_object_private_symbol\x2C\n  setHiddenValue\x2C\n} = internalBinding('util');\n\n// Temporary buffers to convert numbers.\nconst float32Array = new Float32Array(1);\nconst uInt8Float32Array = new Uint8Array(float32Array.buffer);\nconst float64Array = new Float64Array(1);\nconst uInt8Float64Array = new Uint8Array(float64Array.buffer);\n\n// Check endianness.\nfloat32Array[0] = -1; // 0xBF800000\n// Either it is [0\x2C 0\x2C 128\x2C 191] or [191\x2C 128\x2C 0\x2C 0]. It is not possible to\n// check this with `os.endianness()` because that is determined at compile time.\nconst bigEndian = uInt8Float32Array[3] === 0;\n\nfunction checkBounds(buf\x2C offset\x2C byteLength) {\n  validateNumber(offset\x2C 'offset');\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined)\n    boundsError(offset\x2C buf.length - (byteLength + 1));\n}\n\nfunction checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : '';\n    let range;\n    if (byteLength > 3) {\n      if (min === 0 || min === 0n) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and ` +\n                `< 2${n} ** ${(byteLength + 1) * 8 - 1}${n}`;\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`;\n    }\n    throw new ERR_OUT_OF_RANGE('value'\x2C range\x2C value);\n  }\n  checkBounds(buf\x2C offset\x2C byteLength);\n}\n\nfunction boundsError(value\x2C length\x2C type) {\n  if (MathFloor(value) !== value) {\n    validateNumber(value\x2C type);\n    throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C 'an integer'\x2C value);\n  }\n\n  if (length < 0)\n    throw new ERR_BUFFER_OUT_OF_BOUNDS();\n\n  throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C\n                             `>= ${type ? 1 : 0} and <= ${length}`\x2C\n                             value);\n}\n\n// Read integers.\nfunction readBigUInt64LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24;\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24;\n\n  return BigInt(lo) + (BigInt(hi) << 32n);\n}\n\nfunction readBigUInt64BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset];\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last;\n\n  return (BigInt(hi) << 32n) + BigInt(lo);\n}\n\nfunction readBigInt64LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24); // Overflow\n  return (BigInt(val) << 32n) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24);\n}\n\nfunction readBigInt64BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset];\n  return (BigInt(val) << 32n) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last);\n}\n\nfunction readUIntLE(offset\x2C byteLength) {\n  if (offset === undefined)\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\n  if (byteLength === 6)\n    return readUInt48LE(this\x2C offset);\n  if (byteLength === 5)\n    return readUInt40LE(this\x2C offset);\n  if (byteLength === 3)\n    return readUInt24LE(this\x2C offset);\n  if (byteLength === 4)\n    return this.readUInt32LE(offset);\n  if (byteLength === 2)\n    return this.readUInt16LE(offset);\n  if (byteLength === 1)\n    return this.readUInt8(offset);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction readUInt48LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 5];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 6);\n\n  return first +\n    buf[++offset] * 2 ** 8 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 24 +\n    (buf[++offset] + last * 2 ** 8) * 2 ** 32;\n}\n\nfunction readUInt40LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 4];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 5);\n\n  return first +\n    buf[++offset] * 2 ** 8 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 24 +\n    last * 2 ** 32;\n}\n\nfunction readUInt32LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  return first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24;\n}\n\nfunction readUInt24LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 2];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 3);\n\n  return first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\n}\n\nfunction readUInt16LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 1];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 2);\n\n  return first + last * 2 ** 8;\n}\n\nfunction readUInt8(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const val = this[offset];\n  if (val === undefined)\n    boundsError(offset\x2C this.length - 1);\n\n  return val;\n}\n\nfunction readUIntBE(offset\x2C byteLength) {\n  if (offset === undefined)\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\n  if (byteLength === 6)\n    return readUInt48BE(this\x2C offset);\n  if (byteLength === 5)\n    return readUInt40BE(this\x2C offset);\n  if (byteLength === 3)\n    return readUInt24BE(this\x2C offset);\n  if (byteLength === 4)\n    return this.readUInt32BE(offset);\n  if (byteLength === 2)\n    return this.readUInt16BE(offset);\n  if (byteLength === 1)\n    return this.readUInt8(offset);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction readUInt48BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 5];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 6);\n\n  return (first * 2 ** 8 + buf[++offset]) * 2 ** 32 +\n    buf[++offset] * 2 ** 24 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readUInt40BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 4];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 5);\n\n  return first * 2 ** 32 +\n    buf[++offset] * 2 ** 24 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readUInt32BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  return first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readUInt24BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 2];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 3);\n\n  return first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\n}\n\nfunction readUInt16BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 1];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 2);\n\n  return first * 2 ** 8 + last;\n}\n\nfunction readIntLE(offset\x2C byteLength) {\n  if (offset === undefined)\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\n  if (byteLength === 6)\n    return readInt48LE(this\x2C offset);\n  if (byteLength === 5)\n    return readInt40LE(this\x2C offset);\n  if (byteLength === 3)\n    return readInt24LE(this\x2C offset);\n  if (byteLength === 4)\n    return this.readInt32LE(offset);\n  if (byteLength === 2)\n    return this.readInt16LE(offset);\n  if (byteLength === 1)\n    return this.readInt8(offset);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction readInt48LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 5];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 6);\n\n  const val = buf[offset + 4] + last * 2 ** 8;\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\n    first +\n    buf[++offset] * 2 ** 8 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 24;\n}\n\nfunction readInt40LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 4];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 5);\n\n  return (last | (last & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\n    first +\n    buf[++offset] * 2 ** 8 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 24;\n}\n\nfunction readInt32LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  return first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    (last << 24); // Overflow\n}\n\nfunction readInt24LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 2];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 3);\n\n  const val = first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\n  return val | (val & 2 ** 23) * 0x1fe;\n}\n\nfunction readInt16LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 1];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 2);\n\n  const val = first + last * 2 ** 8;\n  return val | (val & 2 ** 15) * 0x1fffe;\n}\n\nfunction readInt8(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const val = this[offset];\n  if (val === undefined)\n    boundsError(offset\x2C this.length - 1);\n\n  return val | (val & 2 ** 7) * 0x1fffffe;\n}\n\nfunction readIntBE(offset\x2C byteLength) {\n  if (offset === undefined)\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\n  if (byteLength === 6)\n    return readInt48BE(this\x2C offset);\n  if (byteLength === 5)\n    return readInt40BE(this\x2C offset);\n  if (byteLength === 3)\n    return readInt24BE(this\x2C offset);\n  if (byteLength === 4)\n    return this.readInt32BE(offset);\n  if (byteLength === 2)\n    return this.readInt16BE(offset);\n  if (byteLength === 1)\n    return this.readInt8(offset);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction readInt48BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 5];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 6);\n\n  const val = buf[++offset] + first * 2 ** 8;\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\n    buf[++offset] * 2 ** 24 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readInt40BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 4];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 5);\n\n  return (first | (first & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\n    buf[++offset] * 2 ** 24 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readInt32BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  return (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readInt24BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 2];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 3);\n\n  const val = first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\n  return val | (val & 2 ** 23) * 0x1fe;\n}\n\nfunction readInt16BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 1];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 2);\n\n  const val = first * 2 ** 8 + last;\n  return val | (val & 2 ** 15) * 0x1fffe;\n}\n\n// Read floats\nfunction readFloatBackwards(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  uInt8Float32Array[3] = first;\n  uInt8Float32Array[2] = this[++offset];\n  uInt8Float32Array[1] = this[++offset];\n  uInt8Float32Array[0] = last;\n  return float32Array[0];\n}\n\nfunction readFloatForwards(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  uInt8Float32Array[0] = first;\n  uInt8Float32Array[1] = this[++offset];\n  uInt8Float32Array[2] = this[++offset];\n  uInt8Float32Array[3] = last;\n  return float32Array[0];\n}\n\nfunction readDoubleBackwards(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  uInt8Float64Array[7] = first;\n  uInt8Float64Array[6] = this[++offset];\n  uInt8Float64Array[5] = this[++offset];\n  uInt8Float64Array[4] = this[++offset];\n  uInt8Float64Array[3] = this[++offset];\n  uInt8Float64Array[2] = this[++offset];\n  uInt8Float64Array[1] = this[++offset];\n  uInt8Float64Array[0] = last;\n  return float64Array[0];\n}\n\nfunction readDoubleForwards(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  uInt8Float64Array[0] = first;\n  uInt8Float64Array[1] = this[++offset];\n  uInt8Float64Array[2] = this[++offset];\n  uInt8Float64Array[3] = this[++offset];\n  uInt8Float64Array[4] = this[++offset];\n  uInt8Float64Array[5] = this[++offset];\n  uInt8Float64Array[6] = this[++offset];\n  uInt8Float64Array[7] = last;\n  return float64Array[0];\n}\n\n// Write integers.\nfunction writeBigU_Int64LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\n\n  let lo = Number(value & 0xffffffffn);\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  let hi = Number(value >> 32n & 0xffffffffn);\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  return offset;\n}\n\nfunction writeBigUInt64LE(value\x2C offset = 0) {\n  return writeBigU_Int64LE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\n}\n\nfunction writeBigU_Int64BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\n\n  let lo = Number(value & 0xffffffffn);\n  buf[offset + 7] = lo;\n  lo = lo >> 8;\n  buf[offset + 6] = lo;\n  lo = lo >> 8;\n  buf[offset + 5] = lo;\n  lo = lo >> 8;\n  buf[offset + 4] = lo;\n  let hi = Number(value >> 32n & 0xffffffffn);\n  buf[offset + 3] = hi;\n  hi = hi >> 8;\n  buf[offset + 2] = hi;\n  hi = hi >> 8;\n  buf[offset + 1] = hi;\n  hi = hi >> 8;\n  buf[offset] = hi;\n  return offset + 8;\n}\n\nfunction writeBigUInt64BE(value\x2C offset = 0) {\n  return writeBigU_Int64BE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\n}\n\nfunction writeBigInt64LE(value\x2C offset = 0) {\n  return writeBigU_Int64LE(\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\n}\n\nfunction writeBigInt64BE(value\x2C offset = 0) {\n  return writeBigU_Int64BE(\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\n}\n\nfunction writeUIntLE(value\x2C offset\x2C byteLength) {\n  if (byteLength === 6)\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\n  if (byteLength === 5)\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\n  if (byteLength === 3)\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\n  if (byteLength === 4)\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\n  if (byteLength === 2)\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\n  if (byteLength === 1)\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction writeU_Int48LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\n\n  const newVal = MathFloor(value * 2 ** -32);\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  buf[offset++] = newVal;\n  buf[offset++] = (newVal >>> 8);\n  return offset;\n}\n\nfunction writeU_Int40LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\n\n  const newVal = value;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  buf[offset++] = MathFloor(newVal * 2 ** -32);\n  return offset;\n}\n\nfunction writeU_Int32LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\n\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  return offset;\n}\n\nfunction writeUInt32LE(value\x2C offset = 0) {\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\n}\n\nfunction writeU_Int24LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\n\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  return offset;\n}\n\nfunction writeU_Int16LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\n\n  buf[offset++] = value;\n  buf[offset++] = (value >>> 8);\n  return offset;\n}\n\nfunction writeUInt16LE(value\x2C offset = 0) {\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\n}\n\nfunction writeU_Int8(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  // `checkInt()` can not be used here because it checks two entries.\n  validateNumber(offset\x2C 'offset');\n  if (value > max || value < min) {\n    throw new ERR_OUT_OF_RANGE('value'\x2C `>= ${min} and <= ${max}`\x2C value);\n  }\n  if (buf[offset] === undefined)\n    boundsError(offset\x2C buf.length - 1);\n\n  buf[offset] = value;\n  return offset + 1;\n}\n\nfunction writeUInt8(value\x2C offset = 0) {\n  return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\n}\n\nfunction writeUIntBE(value\x2C offset\x2C byteLength) {\n  if (byteLength === 6)\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\n  if (byteLength === 5)\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\n  if (byteLength === 3)\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\n  if (byteLength === 4)\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\n  if (byteLength === 2)\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\n  if (byteLength === 1)\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction writeU_Int48BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\n\n  const newVal = MathFloor(value * 2 ** -32);\n  buf[offset++] = (newVal >>> 8);\n  buf[offset++] = newVal;\n  buf[offset + 3] = value;\n  value = value >>> 8;\n  buf[offset + 2] = value;\n  value = value >>> 8;\n  buf[offset + 1] = value;\n  value = value >>> 8;\n  buf[offset] = value;\n  return offset + 4;\n}\n\nfunction writeU_Int40BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\n\n  buf[offset++] = MathFloor(value * 2 ** -32);\n  buf[offset + 3] = value;\n  value = value >>> 8;\n  buf[offset + 2] = value;\n  value = value >>> 8;\n  buf[offset + 1] = value;\n  value = value >>> 8;\n  buf[offset] = value;\n  return offset + 4;\n}\n\nfunction writeU_Int32BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\n\n  buf[offset + 3] = value;\n  value = value >>> 8;\n  buf[offset + 2] = value;\n  value = value >>> 8;\n  buf[offset + 1] = value;\n  value = value >>> 8;\n  buf[offset] = value;\n  return offset + 4;\n}\n\nfunction writeUInt32BE(value\x2C offset = 0) {\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\n}\n\nfunction writeU_Int24BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\n\n  buf[offset + 2] = value;\n  value = value >>> 8;\n  buf[offset + 1] = value;\n  value = value >>> 8;\n  buf[offset] = value;\n  return offset + 3;\n}\n\nfunction writeU_Int16BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\n\n  buf[offset++] = (value >>> 8);\n  buf[offset++] = value;\n  return offset;\n}\n\nfunction writeUInt16BE(value\x2C offset = 0) {\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\n}\n\nfunction writeIntLE(value\x2C offset\x2C byteLength) {\n  if (byteLength === 6)\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\n  if (byteLength === 5)\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\n  if (byteLength === 3)\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\n  if (byteLength === 4)\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\n  if (byteLength === 2)\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\n  if (byteLength === 1)\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction writeInt32LE(value\x2C offset = 0) {\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\n}\n\nfunction writeInt16LE(value\x2C offset = 0) {\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\n}\n\nfunction writeInt8(value\x2C offset = 0) {\n  return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\n}\n\nfunction writeIntBE(value\x2C offset\x2C byteLength) {\n  if (byteLength === 6)\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\n  if (byteLength === 5)\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\n  if (byteLength === 3)\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\n  if (byteLength === 4)\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\n  if (byteLength === 2)\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\n  if (byteLength === 1)\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction writeInt32BE(value\x2C offset = 0) {\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\n}\n\nfunction writeInt16BE(value\x2C offset = 0) {\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\n}\n\n// Write floats.\nfunction writeDoubleForwards(val\x2C offset = 0) {\n  val = +val;\n  checkBounds(this\x2C offset\x2C 7);\n\n  float64Array[0] = val;\n  this[offset++] = uInt8Float64Array[0];\n  this[offset++] = uInt8Float64Array[1];\n  this[offset++] = uInt8Float64Array[2];\n  this[offset++] = uInt8Float64Array[3];\n  this[offset++] = uInt8Float64Array[4];\n  this[offset++] = uInt8Float64Array[5];\n  this[offset++] = uInt8Float64Array[6];\n  this[offset++] = uInt8Float64Array[7];\n  return offset;\n}\n\nfunction writeDoubleBackwards(val\x2C offset = 0) {\n  val = +val;\n  checkBounds(this\x2C offset\x2C 7);\n\n  float64Array[0] = val;\n  this[offset++] = uInt8Float64Array[7];\n  this[offset++] = uInt8Float64Array[6];\n  this[offset++] = uInt8Float64Array[5];\n  this[offset++] = uInt8Float64Array[4];\n  this[offset++] = uInt8Float64Array[3];\n  this[offset++] = uInt8Float64Array[2];\n  this[offset++] = uInt8Float64Array[1];\n  this[offset++] = uInt8Float64Array[0];\n  return offset;\n}\n\nfunction writeFloatForwards(val\x2C offset = 0) {\n  val = +val;\n  checkBounds(this\x2C offset\x2C 3);\n\n  float32Array[0] = val;\n  this[offset++] = uInt8Float32Array[0];\n  this[offset++] = uInt8Float32Array[1];\n  this[offset++] = uInt8Float32Array[2];\n  this[offset++] = uInt8Float32Array[3];\n  return offset;\n}\n\nfunction writeFloatBackwards(val\x2C offset = 0) {\n  val = +val;\n  checkBounds(this\x2C offset\x2C 3);\n\n  float32Array[0] = val;\n  this[offset++] = uInt8Float32Array[3];\n  this[offset++] = uInt8Float32Array[2];\n  this[offset++] = uInt8Float32Array[1];\n  this[offset++] = uInt8Float32Array[0];\n  return offset;\n}\n\nclass FastBuffer extends Uint8Array {\n  // Using an explicit constructor here is necessary to avoid relying on\n  // `Array.prototype[Symbol.iterator]`\x2C which can be mutated by users.\n  // eslint-disable-next-line no-useless-constructor\n  constructor(bufferOrLength\x2C byteOffset\x2C length) {\n    super(bufferOrLength\x2C byteOffset\x2C length);\n  }\n}\n\nfunction addBufferPrototypeMethods(proto) {\n  proto.readBigUInt64LE = readBigUInt64LE;\n  proto.readBigUInt64BE = readBigUInt64BE;\n  proto.readBigUint64LE = readBigUInt64LE;\n  proto.readBigUint64BE = readBigUInt64BE;\n  proto.readBigInt64LE = readBigInt64LE;\n  proto.readBigInt64BE = readBigInt64BE;\n  proto.writeBigUInt64LE = writeBigUInt64LE;\n  proto.writeBigUInt64BE = writeBigUInt64BE;\n  proto.writeBigUint64LE = writeBigUInt64LE;\n  proto.writeBigUint64BE = writeBigUInt64BE;\n  proto.writeBigInt64LE = writeBigInt64LE;\n  proto.writeBigInt64BE = writeBigInt64BE;\n\n  proto.readUIntLE = readUIntLE;\n  proto.readUInt32LE = readUInt32LE;\n  proto.readUInt16LE = readUInt16LE;\n  proto.readUInt8 = readUInt8;\n  proto.readUIntBE = readUIntBE;\n  proto.readUInt32BE = readUInt32BE;\n  proto.readUInt16BE = readUInt16BE;\n  proto.readUintLE = readUIntLE;\n  proto.readUint32LE = readUInt32LE;\n  proto.readUint16LE = readUInt16LE;\n  proto.readUint8 = readUInt8;\n  proto.readUintBE = readUIntBE;\n  proto.readUint32BE = readUInt32BE;\n  proto.readUint16BE = readUInt16BE;\n  proto.readIntLE = readIntLE;\n  proto.readInt32LE = readInt32LE;\n  proto.readInt16LE = readInt16LE;\n  proto.readInt8 = readInt8;\n  proto.readIntBE = readIntBE;\n  proto.readInt32BE = readInt32BE;\n  proto.readInt16BE = readInt16BE;\n\n  proto.writeUIntLE = writeUIntLE;\n  proto.writeUInt32LE = writeUInt32LE;\n  proto.writeUInt16LE = writeUInt16LE;\n  proto.writeUInt8 = writeUInt8;\n  proto.writeUIntBE = writeUIntBE;\n  proto.writeUInt32BE = writeUInt32BE;\n  proto.writeUInt16BE = writeUInt16BE;\n  proto.writeUintLE = writeUIntLE;\n  proto.writeUint32LE = writeUInt32LE;\n  proto.writeUint16LE = writeUInt16LE;\n  proto.writeUint8 = writeUInt8;\n  proto.writeUintBE = writeUIntBE;\n  proto.writeUint32BE = writeUInt32BE;\n  proto.writeUint16BE = writeUInt16BE;\n  proto.writeIntLE = writeIntLE;\n  proto.writeInt32LE = writeInt32LE;\n  proto.writeInt16LE = writeInt16LE;\n  proto.writeInt8 = writeInt8;\n  proto.writeIntBE = writeIntBE;\n  proto.writeInt32BE = writeInt32BE;\n  proto.writeInt16BE = writeInt16BE;\n\n  proto.readFloatLE = bigEndian ? readFloatBackwards : readFloatForwards;\n  proto.readFloatBE = bigEndian ? readFloatForwards : readFloatBackwards;\n  proto.readDoubleLE = bigEndian ? readDoubleBackwards : readDoubleForwards;\n  proto.readDoubleBE = bigEndian ? readDoubleForwards : readDoubleBackwards;\n  proto.writeFloatLE = bigEndian ? writeFloatBackwards : writeFloatForwards;\n  proto.writeFloatBE = bigEndian ? writeFloatForwards : writeFloatBackwards;\n  proto.writeDoubleLE = bigEndian ? writeDoubleBackwards : writeDoubleForwards;\n  proto.writeDoubleBE = bigEndian ? writeDoubleForwards : writeDoubleBackwards;\n\n  proto.asciiSlice = asciiSlice;\n  proto.base64Slice = base64Slice;\n  proto.base64urlSlice = base64urlSlice;\n  proto.latin1Slice = latin1Slice;\n  proto.hexSlice = hexSlice;\n  proto.ucs2Slice = ucs2Slice;\n  proto.utf8Slice = utf8Slice;\n  proto.asciiWrite = asciiWrite;\n  proto.base64Write = base64Write;\n  proto.base64urlWrite = base64urlWrite;\n  proto.latin1Write = latin1Write;\n  proto.hexWrite = hexWrite;\n  proto.ucs2Write = ucs2Write;\n  proto.utf8Write = utf8Write;\n}\n\n// This would better be placed in internal/worker/io.js\x2C but that doesn't work\n// because Buffer needs this and that would introduce a cyclic dependency.\nfunction markAsUntransferable(obj) {\n  if ((typeof obj !== 'object' && typeof obj !== 'function') || obj === null)\n    return;  // This object is a primitive and therefore already untransferable.\n  setHiddenValue(obj\x2C untransferable_object_private_symbol\x2C true);\n}\n\n// A toggle used to access the zero fill setting of the array buffer allocator\n// in C++.\n// |zeroFill| can be undefined when running inside an isolate where we\n// do not own the ArrayBuffer allocator.  Zero fill is always on in that case.\nlet zeroFill = getZeroFillToggle();\nfunction createUnsafeBuffer(size) {\n  zeroFill[0] = 0;\n  try {\n    return new FastBuffer(size);\n  } finally {\n    zeroFill[0] = 1;\n  }\n}\n\n// The connection between the JS land zero fill toggle and the\n// C++ one in the NodeArrayBufferAllocator gets lost if the toggle\n// is deserialized from the snapshot\x2C because V8 owns the underlying\n// memory of this toggle. This resets the connection.\nfunction reconnectZeroFillToggle() {\n  zeroFill = getZeroFillToggle();\n}\n\nmodule.exports = {\n  FastBuffer\x2C\n  addBufferPrototypeMethods\x2C\n  markAsUntransferable\x2C\n  createUnsafeBuffer\x2C\n  readUInt16BE\x2C\n  readUInt32BE\x2C\n  reconnectZeroFillToggle\n};\n
code-source-info,0xc1101db3828,31,30717,30757,C0O30724C5O30735C11O30733C18O30756,,
tick,0x1a4e72ea0,17958,0,0x0,3,0x0,0xc1101db1d9f,0xc1101dae2ac
code-creation,LazyCompile,10,18000,0xc1101db6118,460,patchProcessObject node:internal/process/pre_execution:110:28,0xc1101daf460,~
code-source-info,0xc1101db
tick,0x1054ce8f0,18083,0,0x0,0,0xc1101db6140,0xc1101db1da5,0xc1101dae2ac
code-creation,LazyCompile,10,18083,0xc1101db6678,82,getOptionValue node:internal/options:44:24,0xd141ccca210,~
code-source-info,0xc1101db6678,88,985,1228,C0O1018C3O1018C7O1063C15O1063C22O1113C30O1135C38O1135C43O1122C47O1113C53O1150C55O1175C60O1181C61O1203C66O1203C74O1218C81O1226,,
code-creation,LazyCompile,10,18125,0xc1101db67d8,33,getCLIOptionsFromBinding node:internal/options:18:34,0xd141ccc9ff8,~
code-source-info,0xc1101db67d8,88,497,598,C0O504C6O527C11O554C15O539C28O578C32O596,,
code-creation,LazyCompile,10,18333,0xc1101db6c20,175,resolve node:path:1091:10,0x25eb221f37f8,~
script-source,71,node:path,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  FunctionPrototypeBind\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeLastIndexOf\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeToLowerCase\x2C\n} = primordials;\n\nconst {\n  CHAR_UPPERCASE_A\x2C\n  CHAR_LOWERCASE_A\x2C\n  CHAR_UPPERCASE_Z\x2C\n  CHAR_LOWERCASE_Z\x2C\n  CHAR_DOT\x2C\n  CHAR_FORWARD_SLASH\x2C\n  CHAR_BACKWARD_SLASH\x2C\n  CHAR_COLON\x2C\n  CHAR_QUESTION_MARK\x2C\n} = require('internal/constants');\nconst {\n  validateObject\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst platformIsWin32 = (process.platform === 'win32');\n\nfunction isPathSeparator(code) {\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code) {\n  return code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code) {\n  return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\n         (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path\x2C allowAboveRoot\x2C separator\x2C isPathSeparator) {\n  let res = '';\n  let lastSegmentLength = 0;\n  let lastSlash = -1;\n  let dots = 0;\n  let code = 0;\n  for (let i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = StringPrototypeCharCodeAt(path\x2C i);\n    else if (isPathSeparator(code))\n      break;\n    else\n      code = CHAR_FORWARD_SLASH;\n\n    if (isPathSeparator(code)) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 ||\n            StringPrototypeCharCodeAt(res\x2C res.length - 1) !== CHAR_DOT ||\n            StringPrototypeCharCodeAt(res\x2C res.length - 2) !== CHAR_DOT) {\n          if (res.length > 2) {\n            const lastSlashIndex = StringPrototypeLastIndexOf(res\x2C separator);\n            if (lastSlashIndex === -1) {\n              res = '';\n              lastSegmentLength = 0;\n            } else {\n              res = StringPrototypeSlice(res\x2C 0\x2C lastSlashIndex);\n              lastSegmentLength =\n                res.length - 1 - StringPrototypeLastIndexOf(res\x2C separator);\n            }\n            lastSlash = i;\n            dots = 0;\n            continue;\n          } else if (res.length !== 0) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          res += res.length > 0 ? `${separator}..` : '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += `${separator}${StringPrototypeSlice(path\x2C lastSlash + 1\x2C i)}`;\n        else\n          res = StringPrototypeSlice(path\x2C lastSlash + 1\x2C i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === CHAR_DOT && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\n/**\n * @param {string} sep\n * @param {{\n *  dir?: string;\n *  root?: string;\n *  base?: string;\n *  name?: string;\n *  ext?: string;\n *  }} pathObject\n * @returns {string}\n */\nfunction _format(sep\x2C pathObject) {\n  validateObject(pathObject\x2C 'pathObject');\n  const dir = pathObject.dir || pathObject.root;\n  const base = pathObject.base ||\n    `${pathObject.name || ''}${pathObject.ext || ''}`;\n  if (!dir) {\n    return base;\n  }\n  return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\n\nconst win32 = {\n  /**\n   * path.resolve([from ...]\x2C to)\n   * @param {...string} args\n   * @returns {string}\n   */\n  resolve(...args) {\n    let resolvedDevice = '';\n    let resolvedTail = '';\n    let resolvedAbsolute = false;\n\n    for (let i = args.length - 1; i >= -1; i--) {\n      let path;\n      if (i >= 0) {\n        path = args[i];\n        validateString(path\x2C 'path');\n\n        // Skip empty entries\n        if (path.length === 0) {\n          continue;\n        }\n      } else if (resolvedDevice.length === 0) {\n        path = process.cwd();\n      } else {\n        // Windows has the concept of drive-specific current working\n        // directories. If we've resolved a drive letter but not yet an\n        // absolute path\x2C get cwd for that drive\x2C or the process cwd if\n        // the drive cwd is not available. We're sure the device is not\n        // a UNC path at this points\x2C because UNC paths are always absolute.\n        path = process.env[`=${resolvedDevice}`] || process.cwd();\n\n        // Verify that a cwd was found and that it actually points\n        // to our drive. If not\x2C default to the drive's root.\n        if (path === undefined ||\n            (StringPrototypeToLowerCase(StringPrototypeSlice(path\x2C 0\x2C 2)) !==\n            StringPrototypeToLowerCase(resolvedDevice) &&\n            StringPrototypeCharCodeAt(path\x2C 2) === CHAR_BACKWARD_SLASH)) {\n          path = `${resolvedDevice}\\\\`;\n        }\n      }\n\n      const len = path.length;\n      let rootEnd = 0;\n      let device = '';\n      let isAbsolute = false;\n      const code = StringPrototypeCharCodeAt(path\x2C 0);\n\n      // Try to match a root\n      if (len === 1) {\n        if (isPathSeparator(code)) {\n          // `path` contains just a path separator\n          rootEnd = 1;\n          isAbsolute = true;\n        }\n      } else if (isPathSeparator(code)) {\n        // Possible UNC root\n\n        // If we started with a separator\x2C we know we at least have an\n        // absolute path of some kind (UNC or otherwise)\n        isAbsolute = true;\n\n        if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\n          // Matched double path separator at beginning\n          let j = 2;\n          let last = j;\n          // Match 1 or more non-path separators\n          while (j < len &&\n                 !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\n            // Matched!\n            last = j;\n            // Match 1 or more path separators\n            while (j < len &&\n                   isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n              j++;\n            }\n            if (j < len && j !== last) {\n              // Matched!\n              last = j;\n              // Match 1 or more non-path separators\n              while (j < len &&\n                     !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n                j++;\n              }\n              if (j === len || j !== last) {\n                // We matched a UNC root\n                device =\n                  `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\n                rootEnd = j;\n              }\n            }\n          }\n        } else {\n          rootEnd = 1;\n        }\n      } else if (isWindowsDeviceRoot(code) &&\n                  StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n        // Possible device root\n        device = StringPrototypeSlice(path\x2C 0\x2C 2);\n        rootEnd = 2;\n        if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\n          // Treat separator following drive name as an absolute path\n          // indicator\n          isAbsolute = true;\n          rootEnd = 3;\n        }\n      }\n\n      if (device.length > 0) {\n        if (resolvedDevice.length > 0) {\n          if (StringPrototypeToLowerCase(device) !==\n              StringPrototypeToLowerCase(resolvedDevice))\n            // This path points to another device so it is not applicable\n            continue;\n        } else {\n          resolvedDevice = device;\n        }\n      }\n\n      if (resolvedAbsolute) {\n        if (resolvedDevice.length > 0)\n          break;\n      } else {\n        resolvedTail =\n          `${StringPrototypeSlice(path\x2C rootEnd)}\\\\${resolvedTail}`;\n        resolvedAbsolute = isAbsolute;\n        if (isAbsolute && resolvedDevice.length > 0) {\n          break;\n        }\n      }\n    }\n\n    // At this point the path should be resolved to a full absolute path\x2C\n    // but handle relative paths to be safe (might happen when process.cwd()\n    // fails)\n\n    // Normalize the tail path\n    resolvedTail = normalizeString(resolvedTail\x2C !resolvedAbsolute\x2C '\\\\'\x2C\n                                   isPathSeparator);\n\n    return resolvedAbsolute ?\n      `${resolvedDevice}\\\\${resolvedTail}` :\n      `${resolvedDevice}${resolvedTail}` || '.';\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  normalize(path) {\n    validateString(path\x2C 'path');\n    const len = path.length;\n    if (len === 0)\n      return '.';\n    let rootEnd = 0;\n    let device;\n    let isAbsolute = false;\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\n\n    // Try to match a root\n    if (len === 1) {\n      // `path` contains just a single char\x2C exit early to avoid\n      // unnecessary work\n      return isPosixPathSeparator(code) ? '\\\\' : path;\n    }\n    if (isPathSeparator(code)) {\n      // Possible UNC root\n\n      // If we started with a separator\x2C we know we at least have an absolute\n      // path of some kind (UNC or otherwise)\n      isAbsolute = true;\n\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\n        // Matched double path separator at beginning\n        let j = 2;\n        let last = j;\n        // Match 1 or more non-path separators\n        while (j < len &&\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n          j++;\n        }\n        if (j < len && j !== last) {\n          const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\n          // Matched!\n          last = j;\n          // Match 1 or more path separators\n          while (j < len &&\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            // Matched!\n            last = j;\n            // Match 1 or more non-path separators\n            while (j < len &&\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n              j++;\n            }\n            if (j === len) {\n              // We matched a UNC root only\n              // Return the normalized version of the UNC root since there\n              // is nothing left to process\n              return `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last)}\\\\`;\n            }\n            if (j !== last) {\n              // We matched a UNC root with leftovers\n              device =\n                `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\n              rootEnd = j;\n            }\n          }\n        }\n      } else {\n        rootEnd = 1;\n      }\n    } else if (isWindowsDeviceRoot(code) &&\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n      // Possible device root\n      device = StringPrototypeSlice(path\x2C 0\x2C 2);\n      rootEnd = 2;\n      if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\n        // Treat separator following drive name as an absolute path\n        // indicator\n        isAbsolute = true;\n        rootEnd = 3;\n      }\n    }\n\n    let tail = rootEnd < len ?\n      normalizeString(StringPrototypeSlice(path\x2C rootEnd)\x2C\n                      !isAbsolute\x2C '\\\\'\x2C isPathSeparator) :\n      '';\n    if (tail.length === 0 && !isAbsolute)\n      tail = '.';\n    if (tail.length > 0 &&\n        isPathSeparator(StringPrototypeCharCodeAt(path\x2C len - 1)))\n      tail += '\\\\';\n    if (device === undefined) {\n      return isAbsolute ? `\\\\${tail}` : tail;\n    }\n    return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {boolean}\n   */\n  isAbsolute(path) {\n    validateString(path\x2C 'path');\n    const len = path.length;\n    if (len === 0)\n      return false;\n\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\n    return isPathSeparator(code) ||\n      // Possible device root\n      (len > 2 &&\n      isWindowsDeviceRoot(code) &&\n      StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\n      isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)));\n  }\x2C\n\n  /**\n   * @param {...string} args\n   * @returns {string}\n   */\n  join(...args) {\n    if (args.length === 0)\n      return '.';\n\n    let joined;\n    let firstPart;\n    for (let i = 0; i < args.length; ++i) {\n      const arg = args[i];\n      validateString(arg\x2C 'path');\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = firstPart = arg;\n        else\n          joined += `\\\\${arg}`;\n      }\n    }\n\n    if (joined === undefined)\n      return '.';\n\n    // Make sure that the joined path doesn't start with two slashes\x2C because\n    // normalize() will mistake it for a UNC path then.\n    //\n    // This step is skipped when it is very clear that the user actually\n    // intended to point at a UNC path. This is assumed when the first\n    // non-empty string arguments starts with exactly two slashes followed by\n    // at least one more non-slash character.\n    //\n    // Note that for normalize() to treat a path as a UNC path it needs to\n    // have at least 2 components\x2C so we don't filter for that here.\n    // This means that the user can use join to construct UNC paths from\n    // a server name and a share name; for example:\n    //   path.join('//server'\x2C 'share') -> '\\\\\\\\server\\\\share\\\\')\n    let needsReplace = true;\n    let slashCount = 0;\n    if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 0))) {\n      ++slashCount;\n      const firstLen = firstPart.length;\n      if (firstLen > 1 &&\n          isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 1))) {\n        ++slashCount;\n        if (firstLen > 2) {\n          if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 2)))\n            ++slashCount;\n          else {\n            // We matched a UNC path in the first part\n            needsReplace = false;\n          }\n        }\n      }\n    }\n    if (needsReplace) {\n      // Find any more consecutive slashes we need to replace\n      while (slashCount < joined.length &&\n             isPathSeparator(StringPrototypeCharCodeAt(joined\x2C slashCount))) {\n        slashCount++;\n      }\n\n      // Replace the slashes if needed\n      if (slashCount >= 2)\n        joined = `\\\\${StringPrototypeSlice(joined\x2C slashCount)}`;\n    }\n\n    return win32.normalize(joined);\n  }\x2C\n\n  /**\n   * It will solve the relative path from `from` to `to`\x2C for instance\n   * from = 'C:\\\\orandea\\\\test\\\\aaa'\n   * to = 'C:\\\\orandea\\\\impl\\\\bbb'\n   * The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n   * @param {string} from\n   * @param {string} to\n   * @returns {string}\n   */\n  relative(from\x2C to) {\n    validateString(from\x2C 'from');\n    validateString(to\x2C 'to');\n\n    if (from === to)\n      return '';\n\n    const fromOrig = win32.resolve(from);\n    const toOrig = win32.resolve(to);\n\n    if (fromOrig === toOrig)\n      return '';\n\n    from = StringPrototypeToLowerCase(fromOrig);\n    to = StringPrototypeToLowerCase(toOrig);\n\n    if (from === to)\n      return '';\n\n    // Trim any leading backslashes\n    let fromStart = 0;\n    while (fromStart < from.length &&\n           StringPrototypeCharCodeAt(from\x2C fromStart) === CHAR_BACKWARD_SLASH) {\n      fromStart++;\n    }\n    // Trim trailing backslashes (applicable to UNC paths only)\n    let fromEnd = from.length;\n    while (\n      fromEnd - 1 > fromStart &&\n      StringPrototypeCharCodeAt(from\x2C fromEnd - 1) === CHAR_BACKWARD_SLASH\n    ) {\n      fromEnd--;\n    }\n    const fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    let toStart = 0;\n    while (toStart < to.length &&\n           StringPrototypeCharCodeAt(to\x2C toStart) === CHAR_BACKWARD_SLASH) {\n      toStart++;\n    }\n    // Trim trailing backslashes (applicable to UNC paths only)\n    let toEnd = to.length;\n    while (toEnd - 1 > toStart &&\n           StringPrototypeCharCodeAt(to\x2C toEnd - 1) === CHAR_BACKWARD_SLASH) {\n      toEnd--;\n    }\n    const toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    const length = fromLen < toLen ? fromLen : toLen;\n    let lastCommonSep = -1;\n    let i = 0;\n    for (; i < length; i++) {\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\n        break;\n      else if (fromCode === CHAR_BACKWARD_SLASH)\n        lastCommonSep = i;\n    }\n\n    // We found a mismatch before the first common path separator was seen\x2C so\n    // return the original `to`.\n    if (i !== length) {\n      if (lastCommonSep === -1)\n        return toOrig;\n    } else {\n      if (toLen > length) {\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) ===\n            CHAR_BACKWARD_SLASH) {\n          // We get here if `from` is the exact base path for `to`.\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n          return StringPrototypeSlice(toOrig\x2C toStart + i + 1);\n        }\n        if (i === 2) {\n          // We get here if `from` is the device root.\n          // For example: from='C:\\\\'; to='C:\\\\foo'\n          return StringPrototypeSlice(toOrig\x2C toStart + i);\n        }\n      }\n      if (fromLen > length) {\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\n            CHAR_BACKWARD_SLASH) {\n          // We get here if `to` is the exact base path for `from`.\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n          lastCommonSep = i;\n        } else if (i === 2) {\n          // We get here if `to` is the device root.\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n          lastCommonSep = 3;\n        }\n      }\n      if (lastCommonSep === -1)\n        lastCommonSep = 0;\n    }\n\n    let out = '';\n    // Generate the relative path based on the path difference between `to` and\n    // `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd ||\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_BACKWARD_SLASH) {\n        out += out.length === 0 ? '..' : '\\\\..';\n      }\n    }\n\n    toStart += lastCommonSep;\n\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return `${out}${StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd)}`;\n\n    if (StringPrototypeCharCodeAt(toOrig\x2C toStart) === CHAR_BACKWARD_SLASH)\n      ++toStart;\n    return StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  toNamespacedPath(path) {\n    // Note: this will *probably* throw somewhere.\n    if (typeof path !== 'string' || path.length === 0)\n      return path;\n\n    const resolvedPath = win32.resolve(path);\n\n    if (resolvedPath.length <= 2)\n      return path;\n\n    if (StringPrototypeCharCodeAt(resolvedPath\x2C 0) === CHAR_BACKWARD_SLASH) {\n      // Possible UNC root\n      if (StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_BACKWARD_SLASH) {\n        const code = StringPrototypeCharCodeAt(resolvedPath\x2C 2);\n        if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n          // Matched non-long UNC root\x2C convert the path to a long UNC path\n          return `\\\\\\\\?\\\\UNC\\\\${StringPrototypeSlice(resolvedPath\x2C 2)}`;\n        }\n      }\n    } else if (\n      isWindowsDeviceRoot(StringPrototypeCharCodeAt(resolvedPath\x2C 0)) &&\n      StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_COLON &&\n      StringPrototypeCharCodeAt(resolvedPath\x2C 2) === CHAR_BACKWARD_SLASH\n    ) {\n      // Matched device root\x2C convert the path to a long UNC path\n      return `\\\\\\\\?\\\\${resolvedPath}`;\n    }\n\n    return path;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  dirname(path) {\n    validateString(path\x2C 'path');\n    const len = path.length;\n    if (len === 0)\n      return '.';\n    let rootEnd = -1;\n    let offset = 0;\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\n\n    if (len === 1) {\n      // `path` contains just a path separator\x2C exit early to avoid\n      // unnecessary work or a dot.\n      return isPathSeparator(code) ? path : '.';\n    }\n\n    // Try to match a root\n    if (isPathSeparator(code)) {\n      // Possible UNC root\n\n      rootEnd = offset = 1;\n\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\n        // Matched double path separator at beginning\n        let j = 2;\n        let last = j;\n        // Match 1 or more non-path separators\n        while (j < len &&\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n          j++;\n        }\n        if (j < len && j !== last) {\n          // Matched!\n          last = j;\n          // Match 1 or more path separators\n          while (j < len &&\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            // Matched!\n            last = j;\n            // Match 1 or more non-path separators\n            while (j < len &&\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n              j++;\n            }\n            if (j === len) {\n              // We matched a UNC root only\n              return path;\n            }\n            if (j !== last) {\n              // We matched a UNC root with leftovers\n\n              // Offset by 1 to include the separator after the UNC root to\n              // treat it as a "normal root" on top of a (UNC) root\n              rootEnd = offset = j + 1;\n            }\n          }\n        }\n      }\n    // Possible device root\n    } else if (isWindowsDeviceRoot(code) &&\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n      rootEnd =\n        len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)) ? 3 : 2;\n      offset = rootEnd;\n    }\n\n    let end = -1;\n    let matchedSlash = true;\n    for (let i = len - 1; i >= offset; --i) {\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) {\n      if (rootEnd === -1)\n        return '.';\n\n      end = rootEnd;\n    }\n    return StringPrototypeSlice(path\x2C 0\x2C end);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @param {string} [ext]\n   * @returns {string}\n   */\n  basename(path\x2C ext) {\n    if (ext !== undefined)\n      validateString(ext\x2C 'ext');\n    validateString(path\x2C 'path');\n    let start = 0;\n    let end = -1;\n    let matchedSlash = true;\n\n    // Check for a drive letter prefix so as not to mistake the following\n    // path separator as an extra separator at the end of the path that can be\n    // disregarded\n    if (path.length >= 2 &&\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0)) &&\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n      start = 2;\n    }\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext === path)\n        return '';\n      let extIdx = ext.length - 1;\n      let firstNonSlashEnd = -1;\n      for (let i = path.length - 1; i >= start; --i) {\n        const code = StringPrototypeCharCodeAt(path\x2C i);\n        if (isPathSeparator(code)) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string\x2C stop now\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator\x2C remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension\x2C so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match\x2C so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end)\n        end = firstNonSlashEnd;\n      else if (end === -1)\n        end = path.length;\n      return StringPrototypeSlice(path\x2C start\x2C end);\n    }\n    for (let i = path.length - 1; i >= start; --i) {\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // path component\n        matchedSlash = false;\n        end = i + 1;\n      }\n    }\n\n    if (end === -1)\n      return '';\n    return StringPrototypeSlice(path\x2C start\x2C end);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  extname(path) {\n    validateString(path\x2C 'path');\n    let start = 0;\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n\n    // Check for a drive letter prefix so as not to mistake the following\n    // path separator as an extra separator at the end of the path that can be\n    // disregarded\n\n    if (path.length >= 2 &&\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0))) {\n      start = startPart = 2;\n    }\n\n    for (let i = path.length - 1; i >= start; --i) {\n      const code = StringPrototypeCharCodeAt(path\x2C i);\n      if (isPathSeparator(code)) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot\x2C mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 ||\n        end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        (preDotState === 1 &&\n         startDot === end - 1 &&\n         startDot === startPart + 1)) {\n      return '';\n    }\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\n  }\x2C\n\n  format: FunctionPrototypeBind(_format\x2C null\x2C '\\\\')\x2C\n\n  /**\n   * @param {string} path\n   * @returns {{\n   *  dir: string;\n   *  root: string;\n   *  base: string;\n   *  name: string;\n   *  ext: string;\n   *  }}\n   */\n  parse(path) {\n    validateString(path\x2C 'path');\n\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\n    if (path.length === 0)\n      return ret;\n\n    const len = path.length;\n    let rootEnd = 0;\n    let code = StringPrototypeCharCodeAt(path\x2C 0);\n\n    if (len === 1) {\n      if (isPathSeparator(code)) {\n        // `path` contains just a path separator\x2C exit early to avoid\n        // unnecessary work\n        ret.root = ret.dir = path;\n        return ret;\n      }\n      ret.base = ret.name = path;\n      return ret;\n    }\n    // Try to match a root\n    if (isPathSeparator(code)) {\n      // Possible UNC root\n\n      rootEnd = 1;\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\n        // Matched double path separator at beginning\n        let j = 2;\n        let last = j;\n        // Match 1 or more non-path separators\n        while (j < len &&\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n          j++;\n        }\n        if (j < len && j !== last) {\n          // Matched!\n          last = j;\n          // Match 1 or more path separators\n          while (j < len &&\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            // Matched!\n            last = j;\n            // Match 1 or more non-path separators\n            while (j < len &&\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n              j++;\n            }\n            if (j === len) {\n              // We matched a UNC root only\n              rootEnd = j;\n            } else if (j !== last) {\n              // We matched a UNC root with leftovers\n              rootEnd = j + 1;\n            }\n          }\n        }\n      }\n    } else if (isWindowsDeviceRoot(code) &&\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n      // Possible device root\n      if (len <= 2) {\n        // `path` contains just a drive root\x2C exit early to avoid\n        // unnecessary work\n        ret.root = ret.dir = path;\n        return ret;\n      }\n      rootEnd = 2;\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\n        if (len === 3) {\n          // `path` contains just a drive root\x2C exit early to avoid\n          // unnecessary work\n          ret.root = ret.dir = path;\n          return ret;\n        }\n        rootEnd = 3;\n      }\n    }\n    if (rootEnd > 0)\n      ret.root = StringPrototypeSlice(path\x2C 0\x2C rootEnd);\n\n    let startDot = -1;\n    let startPart = rootEnd;\n    let end = -1;\n    let matchedSlash = true;\n    let i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= rootEnd; --i) {\n      code = StringPrototypeCharCodeAt(path\x2C i);\n      if (isPathSeparator(code)) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot\x2C mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (end !== -1) {\n      if (startDot === -1 ||\n          // We saw a non-dot character immediately before the dot\n          preDotState === 0 ||\n          // The (right-most) trimmed path component is exactly '..'\n          (preDotState === 1 &&\n           startDot === end - 1 &&\n           startDot === startPart + 1)) {\n        ret.base = ret.name = StringPrototypeSlice(path\x2C startPart\x2C end);\n      } else {\n        ret.name = StringPrototypeSlice(path\x2C startPart\x2C startDot);\n        ret.base = StringPrototypeSlice(path\x2C startPart\x2C end);\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\n      }\n    }\n\n    // If the directory is the root\x2C use the entire root as the `dir` including\n    // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise\x2C strip out the\n    // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n    if (startPart > 0 && startPart !== rootEnd)\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\n    else\n      ret.dir = ret.root;\n\n    return ret;\n  }\x2C\n\n  sep: '\\\\'\x2C\n  delimiter: ';'\x2C\n  win32: null\x2C\n  posix: null\n};\n\nconst posixCwd = (() => {\n  if (platformIsWin32) {\n    // Converts Windows' backslash path separators to POSIX forward slashes\n    // and truncates any drive indicator\n    const regexp = /\\\\/g;\n    return () => {\n      const cwd = StringPrototypeReplace(process.cwd()\x2C regexp\x2C '/');\n      return StringPrototypeSlice(cwd\x2C StringPrototypeIndexOf(cwd\x2C '/'));\n    };\n  }\n\n  // We're already on POSIX\x2C no need for any transformations\n  return () => process.cwd();\n})();\n\nconst posix = {\n  /**\n   * path.resolve([from ...]\x2C to)\n   * @param {...string} args\n   * @returns {string}\n   */\n  resolve(...args) {\n    let resolvedPath = '';\n    let resolvedAbsolute = false;\n\n    for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      const path = i >= 0 ? args[i] : posixCwd();\n\n      validateString(path\x2C 'path');\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = `${path}/${resolvedPath}`;\n      resolvedAbsolute =\n        StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n    }\n\n    // At this point the path should be resolved to a full absolute path\x2C but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeString(resolvedPath\x2C !resolvedAbsolute\x2C '/'\x2C\n                                   isPosixPathSeparator);\n\n    if (resolvedAbsolute) {\n      return `/${resolvedPath}`;\n    }\n    return resolvedPath.length > 0 ? resolvedPath : '.';\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  normalize(path) {\n    validateString(path\x2C 'path');\n\n    if (path.length === 0)\n      return '.';\n\n    const isAbsolute =\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n    const trailingSeparator =\n      StringPrototypeCharCodeAt(path\x2C path.length - 1) === CHAR_FORWARD_SLASH;\n\n    // Normalize the path\n    path = normalizeString(path\x2C !isAbsolute\x2C '/'\x2C isPosixPathSeparator);\n\n    if (path.length === 0) {\n      if (isAbsolute)\n        return '/';\n      return trailingSeparator ? './' : '.';\n    }\n    if (trailingSeparator)\n      path += '/';\n\n    return isAbsolute ? `/${path}` : path;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {boolean}\n   */\n  isAbsolute(path) {\n    validateString(path\x2C 'path');\n    return path.length > 0 &&\n           StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n  }\x2C\n\n  /**\n   * @param {...string} args\n   * @returns {string}\n   */\n  join(...args) {\n    if (args.length === 0)\n      return '.';\n    let joined;\n    for (let i = 0; i < args.length; ++i) {\n      const arg = args[i];\n      validateString(arg\x2C 'path');\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += `/${arg}`;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  }\x2C\n\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @returns {string}\n   */\n  relative(from\x2C to) {\n    validateString(from\x2C 'from');\n    validateString(to\x2C 'to');\n\n    if (from === to)\n      return '';\n\n    // Trim leading forward slashes.\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to)\n      return '';\n\n    const fromStart = 1;\n    const fromEnd = from.length;\n    const fromLen = fromEnd - fromStart;\n    const toStart = 1;\n    const toLen = to.length - toStart;\n\n    // Compare paths to find the longest common path from root\n    const length = (fromLen < toLen ? fromLen : toLen);\n    let lastCommonSep = -1;\n    let i = 0;\n    for (; i < length; i++) {\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\n        break;\n      else if (fromCode === CHAR_FORWARD_SLASH)\n        lastCommonSep = i;\n    }\n    if (i === length) {\n      if (toLen > length) {\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) === CHAR_FORWARD_SLASH) {\n          // We get here if `from` is the exact base path for `to`.\n          // For example: from='/foo/bar'; to='/foo/bar/baz'\n          return StringPrototypeSlice(to\x2C toStart + i + 1);\n        }\n        if (i === 0) {\n          // We get here if `from` is the root\n          // For example: from='/'; to='/foo'\n          return StringPrototypeSlice(to\x2C toStart + i);\n        }\n      } else if (fromLen > length) {\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\n            CHAR_FORWARD_SLASH) {\n          // We get here if `to` is the exact base path for `from`.\n          // For example: from='/foo/bar/baz'; to='/foo/bar'\n          lastCommonSep = i;\n        } else if (i === 0) {\n          // We get here if `to` is the root.\n          // For example: from='/foo/bar'; to='/'\n          lastCommonSep = 0;\n        }\n      }\n    }\n\n    let out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`.\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd ||\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_FORWARD_SLASH) {\n        out += out.length === 0 ? '..' : '/..';\n      }\n    }\n\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\n    // the common path parts.\n    return `${out}${StringPrototypeSlice(to\x2C toStart + lastCommonSep)}`;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  toNamespacedPath(path) {\n    // Non-op on posix systems\n    return path;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  dirname(path) {\n    validateString(path\x2C 'path');\n    if (path.length === 0)\n      return '.';\n    const hasRoot = StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n    let end = -1;\n    let matchedSlash = true;\n    for (let i = path.length - 1; i >= 1; --i) {\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1)\n      return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1)\n      return '//';\n    return StringPrototypeSlice(path\x2C 0\x2C end);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @param {string} [ext]\n   * @returns {string}\n   */\n  basename(path\x2C ext) {\n    if (ext !== undefined)\n      validateString(ext\x2C 'ext');\n    validateString(path\x2C 'path');\n\n    let start = 0;\n    let end = -1;\n    let matchedSlash = true;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext === path)\n        return '';\n      let extIdx = ext.length - 1;\n      let firstNonSlashEnd = -1;\n      for (let i = path.length - 1; i >= 0; --i) {\n        const code = StringPrototypeCharCodeAt(path\x2C i);\n        if (code === CHAR_FORWARD_SLASH) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string\x2C stop now\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator\x2C remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension\x2C so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match\x2C so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end)\n        end = firstNonSlashEnd;\n      else if (end === -1)\n        end = path.length;\n      return StringPrototypeSlice(path\x2C start\x2C end);\n    }\n    for (let i = path.length - 1; i >= 0; --i) {\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // path component\n        matchedSlash = false;\n        end = i + 1;\n      }\n    }\n\n    if (end === -1)\n      return '';\n    return StringPrototypeSlice(path\x2C start\x2C end);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  extname(path) {\n    validateString(path\x2C 'path');\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n    for (let i = path.length - 1; i >= 0; --i) {\n      const code = StringPrototypeCharCodeAt(path\x2C i);\n      if (code === CHAR_FORWARD_SLASH) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot\x2C mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 ||\n        end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        (preDotState === 1 &&\n         startDot === end - 1 &&\n         startDot === startPart + 1)) {\n      return '';\n    }\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\n  }\x2C\n\n  format: FunctionPrototypeBind(_format\x2C null\x2C '/')\x2C\n\n  /**\n   * @param {string} path\n   * @returns {{\n   *   dir: string;\n   *   root: string;\n   *   base: string;\n   *   name: string;\n   *   ext: string;\n   *   }}\n   */\n  parse(path) {\n    validateString(path\x2C 'path');\n\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\n    if (path.length === 0)\n      return ret;\n    const isAbsolute =\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n    let start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    let i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      const code = StringPrototypeCharCodeAt(path\x2C i);\n      if (code === CHAR_FORWARD_SLASH) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot\x2C mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (end !== -1) {\n      const start = startPart === 0 && isAbsolute ? 1 : startPart;\n      if (startDot === -1 ||\n          // We saw a non-dot character immediately before the dot\n          preDotState === 0 ||\n          // The (right-most) trimmed path component is exactly '..'\n          (preDotState === 1 &&\n          startDot === end - 1 &&\n          startDot === startPart + 1)) {\n        ret.base = ret.name = StringPrototypeSlice(path\x2C start\x2C end);\n      } else {\n        ret.name = StringPrototypeSlice(path\x2C start\x2C startDot);\n        ret.base = StringPrototypeSlice(path\x2C start\x2C end);\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\n      }\n    }\n\n    if (startPart > 0)\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\n    else if (isAbsolute)\n      ret.dir = '/';\n\n    return ret;\n  }\x2C\n\n  sep: '/'\x2C\n  delimiter: ':'\x2C\n  win32: null\x2C\n  posix: null\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\n// Legacy internal API\x2C docs-only deprecated: DEP0080\nwin32._makeLong = win32.toNamespacedPath;\nposix._makeLong = posix.toNamespacedPath;\n\nmodule.exports = platformIsWin32 ? win32 : posix;\n
code-source-info,0xc1101db6c20,71,33781,34691,C0O33781C3O33816C6O33847C8O33877C12O33884C16O33897C18O33891C25O33901C27O33945C28O33947C35O33958C42O33964C45O33964C49O33983C57O33983C62O34057C68O34064C73O34081C75O34106C87O34132C92O34154C99O34181C107O34220C109O34216C113O33920C118O33859C121O34436C126O34482C137O34451C143O34568C147O34598C152O34609C156O34624C157O34655C163O34662C174O34687,,
tick,0x1a4d3d608,20125,0,0x0,3,0x0,0xc1101db61fa,0xc1101db1da5,0xc1101dae2ac
code-creation,LazyCompile,10,20166,0xc1101db9f98,442,normalizeString node:path:66:25,0x25eb221f33e8,~
code-source-info,0xc1101db9f
code-creation,LazyCompile,10,20208,0xc1101dba320,8,isPosixPathSeparator node:path:56:30,0x25eb221f3348,~
code-source-info,0xc1101dba320,71,1854,1902,C0O1865C2O1881C4O1877C7O1900,,
code-creation,LazyCompile,10,20291,0xc1101dba730,37,initializeGlobalConsole node:internal/console/constructor:687:33,0xd141ccfb3c8,~
script-source,107,node:internal/console/constructor,'use strict';\n\n// The Console constructor is not actually used to construct the global\n// console. It's exported for backwards compatibility.\n\nconst {\n  ArrayFrom\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeUnshift\x2C\n  Boolean\x2C\n  ErrorCaptureStackTrace\x2C\n  FunctionPrototypeBind\x2C\n  MathFloor\x2C\n  Number\x2C\n  NumberPrototypeToFixed\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectValues\x2C\n  ReflectApply\x2C\n  ReflectConstruct\x2C\n  ReflectOwnKeys\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  SafeArrayIterator\x2C\n  SafeMap\x2C\n  SafeWeakMap\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypePadStart\x2C\n  StringPrototypeRepeat\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  Symbol\x2C\n  SymbolHasInstance\x2C\n  SymbolToStringTag\x2C\n} = primordials;\n\nconst { trace } = internalBinding('trace_events');\nconst {\n  isStackOverflowError\x2C\n  codes: {\n    ERR_CONSOLE_WRITABLE_STREAM\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  validateArray\x2C\n  validateInteger\x2C\n  validateObject\x2C\n} = require('internal/validators');\nconst { previewEntries } = internalBinding('util');\nconst { Buffer: { isBuffer } } = require('buffer');\nconst {\n  inspect\x2C\n  formatWithOptions\n} = require('internal/util/inspect');\nconst {\n  isTypedArray\x2C isSet\x2C isMap\x2C isSetIterator\x2C isMapIterator\x2C\n} = require('internal/util/types');\nconst {\n  CHAR_LOWERCASE_B: kTraceBegin\x2C\n  CHAR_LOWERCASE_E: kTraceEnd\x2C\n  CHAR_LOWERCASE_N: kTraceInstant\x2C\n  CHAR_UPPERCASE_C: kTraceCount\x2C\n} = require('internal/constants');\nconst kCounts = Symbol('counts');\n\nconst kTraceConsoleCategory = 'node\x2Cnode.console';\n\nconst kSecond = 1000;\nconst kMinute = 60 * kSecond;\nconst kHour = 60 * kMinute;\nconst kMaxGroupIndentation = 1000;\n\n// Lazy loaded for startup performance.\nlet cliTable;\n\n// Track amount of indentation required via `console.group()`.\nconst kGroupIndent = Symbol('kGroupIndent');\nconst kGroupIndentationWidth = Symbol('kGroupIndentWidth');\nconst kFormatForStderr = Symbol('kFormatForStderr');\nconst kFormatForStdout = Symbol('kFormatForStdout');\nconst kGetInspectOptions = Symbol('kGetInspectOptions');\nconst kColorMode = Symbol('kColorMode');\nconst kIsConsole = Symbol('kIsConsole');\nconst kWriteToConsole = Symbol('kWriteToConsole');\nconst kBindProperties = Symbol('kBindProperties');\nconst kBindStreamsEager = Symbol('kBindStreamsEager');\nconst kBindStreamsLazy = Symbol('kBindStreamsLazy');\nconst kUseStdout = Symbol('kUseStdout');\nconst kUseStderr = Symbol('kUseStderr');\n\nconst optionsMap = new SafeWeakMap();\n\nfunction Console(options /* or: stdout\x2C stderr\x2C ignoreErrors = true */) {\n  // We have to test new.target here to see if this function is called\n  // with new\x2C because we need to define a custom instanceof to accommodate\n  // the global console.\n  if (new.target === undefined) {\n    return ReflectConstruct(Console\x2C arguments);\n  }\n\n  if (!options || typeof options.write === 'function') {\n    options = {\n      stdout: options\x2C\n      stderr: arguments[1]\x2C\n      ignoreErrors: arguments[2]\n    };\n  }\n\n  const {\n    stdout\x2C\n    stderr = stdout\x2C\n    ignoreErrors = true\x2C\n    colorMode = 'auto'\x2C\n    inspectOptions\x2C\n    groupIndentation\x2C\n  } = options;\n\n  if (!stdout || typeof stdout.write !== 'function') {\n    throw new ERR_CONSOLE_WRITABLE_STREAM('stdout');\n  }\n  if (!stderr || typeof stderr.write !== 'function') {\n    throw new ERR_CONSOLE_WRITABLE_STREAM('stderr');\n  }\n\n  if (typeof colorMode !== 'boolean' && colorMode !== 'auto')\n    throw new ERR_INVALID_ARG_VALUE('colorMode'\x2C colorMode);\n\n  if (groupIndentation !== undefined) {\n    validateInteger(groupIndentation\x2C 'groupIndentation'\x2C\n                    0\x2C kMaxGroupIndentation);\n  }\n\n  if (inspectOptions !== undefined) {\n    validateObject(inspectOptions\x2C 'options.inspectOptions');\n\n    if (inspectOptions.colors !== undefined &&\n        options.colorMode !== undefined) {\n      throw new ERR_INCOMPATIBLE_OPTION_PAIR(\n        'options.inspectOptions.color'\x2C 'colorMode');\n    }\n    optionsMap.set(this\x2C inspectOptions);\n  }\n\n  // Bind the prototype functions to this Console instance\n  ArrayPrototypeForEach(ObjectKeys(Console.prototype)\x2C (key) => {\n    // We have to bind the methods grabbed from the instance instead of from\n    // the prototype so that users extending the Console can override them\n    // from the prototype chain of the subclass.\n    this[key] = FunctionPrototypeBind(this[key]\x2C this);\n    ObjectDefineProperty(this[key]\x2C 'name'\x2C {\n      __proto__: null\x2C\n      value: key\n    });\n  });\n\n  this[kBindStreamsEager](stdout\x2C stderr);\n  this[kBindProperties](ignoreErrors\x2C colorMode\x2C groupIndentation);\n}\n\nconst consolePropAttributes = {\n  writable: true\x2C\n  enumerable: false\x2C\n  configurable: true\n};\n\n// Fixup global.console instanceof global.console.Console\nObjectDefineProperty(Console\x2C SymbolHasInstance\x2C {\n  __proto__: null\x2C\n  value(instance) {\n    return instance[kIsConsole];\n  }\n});\n\nconst kColorInspectOptions = { colors: true };\nconst kNoColorInspectOptions = {};\n\nObjectDefineProperties(Console.prototype\x2C {\n  [kBindStreamsEager]: {\n    __proto__: null\x2C\n    ...consolePropAttributes\x2C\n    // Eager version for the Console constructor\n    value: function(stdout\x2C stderr) {\n      ObjectDefineProperties(this\x2C {\n        '_stdout': { __proto__: null\x2C ...consolePropAttributes\x2C value: stdout }\x2C\n        '_stderr': { __proto__: null\x2C ...consolePropAttributes\x2C value: stderr }\x2C\n      });\n    }\n  }\x2C\n  [kBindStreamsLazy]: {\n    __proto__: null\x2C\n    ...consolePropAttributes\x2C\n    // Lazily load the stdout and stderr from an object so we don't\n    // create the stdio streams when they are not even accessed\n    value: function(object) {\n      let stdout;\n      let stderr;\n      ObjectDefineProperties(this\x2C {\n        '_stdout': {\n          __proto__: null\x2C\n          enumerable: false\x2C\n          configurable: true\x2C\n          get() {\n            if (!stdout) stdout = object.stdout;\n            return stdout;\n          }\x2C\n          set(value) { stdout = value; }\n        }\x2C\n        '_stderr': {\n          __proto__: null\x2C\n          enumerable: false\x2C\n          configurable: true\x2C\n          get() {\n            if (!stderr) { stderr = object.stderr; }\n            return stderr;\n          }\x2C\n          set(value) { stderr = value; }\n        }\n      });\n    }\n  }\x2C\n  [kBindProperties]: {\n    __proto__: null\x2C\n    ...consolePropAttributes\x2C\n    value: function(ignoreErrors\x2C colorMode\x2C groupIndentation = 2) {\n      ObjectDefineProperties(this\x2C {\n        '_stdoutErrorHandler': {\n          __proto__: null\x2C\n          ...consolePropAttributes\x2C\n          value: createWriteErrorHandler(this\x2C kUseStdout)\n        }\x2C\n        '_stderrErrorHandler': {\n          ...consolePropAttributes\x2C\n          __proto__: null\x2C\n          value: createWriteErrorHandler(this\x2C kUseStderr)\n        }\x2C\n        '_ignoreErrors': {\n          __proto__: null\x2C\n          ...consolePropAttributes\x2C\n          value: Boolean(ignoreErrors)\n        }\x2C\n        '_times': { __proto__: null\x2C ...consolePropAttributes\x2C value: new SafeMap() }\x2C\n        // Corresponds to https://console.spec.whatwg.org/#count-map\n        [kCounts]: { __proto__: null\x2C ...consolePropAttributes\x2C value: new SafeMap() }\x2C\n        [kColorMode]: { __proto__: null\x2C ...consolePropAttributes\x2C value: colorMode }\x2C\n        [kIsConsole]: { __proto__: null\x2C ...consolePropAttributes\x2C value: true }\x2C\n        [kGroupIndent]: { __proto__: null\x2C ...consolePropAttributes\x2C value: '' }\x2C\n        [kGroupIndentationWidth]: {\n          __proto__: null\x2C\n          ...consolePropAttributes\x2C\n          value: groupIndentation\n        }\x2C\n        [SymbolToStringTag]: {\n          __proto__: null\x2C\n          writable: false\x2C\n          enumerable: false\x2C\n          configurable: true\x2C\n          value: 'console'\n        }\n      });\n    }\n  }\x2C\n  [kWriteToConsole]: {\n    __proto__: null\x2C\n    ...consolePropAttributes\x2C\n    value: function(streamSymbol\x2C string) {\n      const ignoreErrors = this._ignoreErrors;\n      const groupIndent = this[kGroupIndent];\n\n      const useStdout = streamSymbol === kUseStdout;\n      const stream = useStdout ? this._stdout : this._stderr;\n      const errorHandler = useStdout ?\n        this._stdoutErrorHandler : this._stderrErrorHandler;\n\n      if (groupIndent.length !== 0) {\n        if (StringPrototypeIncludes(string\x2C '\\n')) {\n          string = RegExpPrototypeSymbolReplace(/\\n/g\x2C string\x2C `\\n${groupIndent}`);\n        }\n        string = groupIndent + string;\n      }\n      string += '\\n';\n\n      if (ignoreErrors === false) return stream.write(string);\n\n      // There may be an error occurring synchronously (e.g. for files or TTYs\n      // on POSIX systems) or asynchronously (e.g. pipes on POSIX systems)\x2C so\n      // handle both situations.\n      try {\n        // Add and later remove a noop error handler to catch synchronous\n        // errors.\n        if (stream.listenerCount('error') === 0)\n          stream.once('error'\x2C noop);\n\n        stream.write(string\x2C errorHandler);\n      } catch (e) {\n        // Console is a debugging utility\x2C so it swallowing errors is not\n        // desirable even in edge cases such as low stack space.\n        if (isStackOverflowError(e))\n          throw e;\n        // Sorry\x2C there's no proper way to pass along the error here.\n      } finally {\n        stream.removeListener('error'\x2C noop);\n      }\n    }\n  }\x2C\n  [kGetInspectOptions]: {\n    __proto__: null\x2C\n    ...consolePropAttributes\x2C\n    value: function(stream) {\n      let color = this[kColorMode];\n      if (color === 'auto') {\n        color = stream.isTTY && (\n          typeof stream.getColorDepth === 'function' ?\n            stream.getColorDepth() > 2 : true);\n      }\n\n      const options = optionsMap.get(this);\n      if (options) {\n        if (options.colors === undefined) {\n          options.colors = color;\n        }\n        return options;\n      }\n\n      return color ? kColorInspectOptions : kNoColorInspectOptions;\n    }\n  }\x2C\n  [kFormatForStdout]: {\n    __proto__: null\x2C\n    ...consolePropAttributes\x2C\n    value: function(args) {\n      const opts = this[kGetInspectOptions](this._stdout);\n      ArrayPrototypeUnshift(args\x2C opts);\n      return ReflectApply(formatWithOptions\x2C null\x2C args);\n    }\n  }\x2C\n  [kFormatForStderr]: {\n    __proto__: null\x2C\n    ...consolePropAttributes\x2C\n    value: function(args) {\n      const opts = this[kGetInspectOptions](this._stderr);\n      ArrayPrototypeUnshift(args\x2C opts);\n      return ReflectApply(formatWithOptions\x2C null\x2C args);\n    }\n  }\x2C\n});\n\n// Make a function that can serve as the callback passed to `stream.write()`.\nfunction createWriteErrorHandler(instance\x2C streamSymbol) {\n  return (err) => {\n    // This conditional evaluates to true if and only if there was an error\n    // that was not already emitted (which happens when the _write callback\n    // is invoked asynchronously).\n    const stream = streamSymbol === kUseStdout ?\n      instance._stdout : instance._stderr;\n    if (err !== null && !stream._writableState.errorEmitted) {\n      // If there was an error\x2C it will be emitted on `stream` as\n      // an `error` event. Adding a `once` listener will keep that error\n      // from becoming an uncaught exception\x2C but since the handler is\n      // removed after the event\x2C non-console.* writes won't be affected.\n      // we are only adding noop if there is no one else listening for 'error'\n      if (stream.listenerCount('error') === 0) {\n        stream.once('error'\x2C noop);\n      }\n    }\n  };\n}\n\nconst consoleMethods = {\n  log(...args) {\n    this[kWriteToConsole](kUseStdout\x2C this[kFormatForStdout](args));\n  }\x2C\n\n\n  warn(...args) {\n    this[kWriteToConsole](kUseStderr\x2C this[kFormatForStderr](args));\n  }\x2C\n\n\n  dir(object\x2C options) {\n    this[kWriteToConsole](kUseStdout\x2C inspect(object\x2C {\n      customInspect: false\x2C\n      ...this[kGetInspectOptions](this._stdout)\x2C\n      ...options\n    }));\n  }\x2C\n\n  time(label = 'default') {\n    // Coerces everything other than Symbol to a string\n    label = `${label}`;\n    if (this._times.has(label)) {\n      process.emitWarning(`Label '${label}' already exists for console.time()`);\n      return;\n    }\n    trace(kTraceBegin\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\n    this._times.set(label\x2C process.hrtime());\n  }\x2C\n\n  timeEnd(label = 'default') {\n    // Coerces everything other than Symbol to a string\n    label = `${label}`;\n    const found = timeLogImpl(this\x2C 'timeEnd'\x2C label);\n    trace(kTraceEnd\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\n    if (found) {\n      this._times.delete(label);\n    }\n  }\x2C\n\n  timeLog(label = 'default'\x2C ...data) {\n    // Coerces everything other than Symbol to a string\n    label = `${label}`;\n    timeLogImpl(this\x2C 'timeLog'\x2C label\x2C data);\n    trace(kTraceInstant\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\n  }\x2C\n\n  trace: function trace(...args) {\n    const err = {\n      name: 'Trace'\x2C\n      message: this[kFormatForStderr](args)\n    };\n    ErrorCaptureStackTrace(err\x2C trace);\n    this.error(err.stack);\n  }\x2C\n\n  assert(expression\x2C ...args) {\n    if (!expression) {\n      args[0] = `Assertion failed${args.length === 0 ? '' : `: ${args[0]}`}`;\n      // The arguments will be formatted in warn() again\n      ReflectApply(this.warn\x2C this\x2C args);\n    }\n  }\x2C\n\n  // Defined by: https://console.spec.whatwg.org/#clear\n  clear() {\n    // It only makes sense to clear if _stdout is a TTY.\n    // Otherwise\x2C do nothing.\n    if (this._stdout.isTTY && process.env.TERM !== 'dumb') {\n      // The require is here intentionally to avoid readline being\n      // required too early when console is first loaded.\n      const {\n        cursorTo\x2C\n        clearScreenDown\x2C\n      } = require('internal/readline/callbacks');\n      cursorTo(this._stdout\x2C 0\x2C 0);\n      clearScreenDown(this._stdout);\n    }\n  }\x2C\n\n  // Defined by: https://console.spec.whatwg.org/#count\n  count(label = 'default') {\n    // Ensures that label is a string\x2C and only things that can be\n    // coerced to strings. e.g. Symbol is not allowed\n    label = `${label}`;\n    const counts = this[kCounts];\n    let count = counts.get(label);\n    if (count === undefined)\n      count = 1;\n    else\n      count++;\n    counts.set(label\x2C count);\n    trace(kTraceCount\x2C kTraceConsoleCategory\x2C `count::${label}`\x2C 0\x2C count);\n    this.log(`${label}: ${count}`);\n  }\x2C\n\n  // Defined by: https://console.spec.whatwg.org/#countreset\n  countReset(label = 'default') {\n    const counts = this[kCounts];\n    if (!counts.has(label)) {\n      process.emitWarning(`Count for '${label}' does not exist`);\n      return;\n    }\n    trace(kTraceCount\x2C kTraceConsoleCategory\x2C `count::${label}`\x2C 0\x2C 0);\n    counts.delete(`${label}`);\n  }\x2C\n\n  group(...data) {\n    if (data.length > 0) {\n      ReflectApply(this.log\x2C this\x2C data);\n    }\n    this[kGroupIndent] +=\n      StringPrototypeRepeat(' '\x2C this[kGroupIndentationWidth]);\n  }\x2C\n\n  groupEnd() {\n    this[kGroupIndent] = StringPrototypeSlice(\n      this[kGroupIndent]\x2C\n      0\x2C\n      this[kGroupIndent].length - this[kGroupIndentationWidth]\n    );\n  }\x2C\n\n  // https://console.spec.whatwg.org/#table\n  table(tabularData\x2C properties) {\n    if (properties !== undefined)\n      validateArray(properties\x2C 'properties');\n\n    if (tabularData === null || typeof tabularData !== 'object')\n      return this.log(tabularData);\n\n    cliTable ??= require('internal/cli_table');\n    const final = (k\x2C v) => this.log(cliTable(k\x2C v));\n\n    const _inspect = (v) => {\n      const depth = v !== null &&\n                    typeof v === 'object' &&\n                    !isArray(v) &&\n                    ObjectKeys(v).length > 2 ? -1 : 0;\n      const opt = {\n        depth\x2C\n        maxArrayLength: 3\x2C\n        breakLength: Infinity\x2C\n        ...this[kGetInspectOptions](this._stdout)\n      };\n      return inspect(v\x2C opt);\n    };\n    const getIndexArray = (length) => ArrayFrom(\n      { length }\x2C (_\x2C i) => _inspect(i));\n\n    const mapIter = isMapIterator(tabularData);\n    let isKeyValue = false;\n    let i = 0;\n    if (mapIter) {\n      const res = previewEntries(tabularData\x2C true);\n      tabularData = res[0];\n      isKeyValue = res[1];\n    }\n\n    if (isKeyValue || isMap(tabularData)) {\n      const keys = [];\n      const values = [];\n      let length = 0;\n      if (mapIter) {\n        for (; i < tabularData.length / 2; ++i) {\n          ArrayPrototypePush(keys\x2C _inspect(tabularData[i * 2]));\n          ArrayPrototypePush(values\x2C _inspect(tabularData[i * 2 + 1]));\n          length++;\n        }\n      } else {\n        for (const { 0: k\x2C 1: v } of tabularData) {\n          ArrayPrototypePush(keys\x2C _inspect(k));\n          ArrayPrototypePush(values\x2C _inspect(v));\n          length++;\n        }\n      }\n      return final([\n        iterKey\x2C keyKey\x2C valuesKey\x2C\n      ]\x2C [\n        getIndexArray(length)\x2C\n        keys\x2C\n        values\x2C\n      ]);\n    }\n\n    const setIter = isSetIterator(tabularData);\n    if (setIter)\n      tabularData = previewEntries(tabularData);\n\n    const setlike = setIter || mapIter || isSet(tabularData);\n    if (setlike) {\n      const values = [];\n      let length = 0;\n      for (const v of tabularData) {\n        ArrayPrototypePush(values\x2C _inspect(v));\n        length++;\n      }\n      return final([iterKey\x2C valuesKey]\x2C [getIndexArray(length)\x2C values]);\n    }\n\n    const map = ObjectCreate(null);\n    let hasPrimitives = false;\n    const valuesKeyArray = [];\n    const indexKeyArray = ObjectKeys(tabularData);\n\n    for (; i < indexKeyArray.length; i++) {\n      const item = tabularData[indexKeyArray[i]];\n      const primitive = item === null ||\n          (typeof item !== 'function' && typeof item !== 'object');\n      if (properties === undefined && primitive) {\n        hasPrimitives = true;\n        valuesKeyArray[i] = _inspect(item);\n      } else {\n        const keys = properties || ObjectKeys(item);\n        for (const key of keys) {\n          map[key] ??= [];\n          if ((primitive && properties) ||\n               !ObjectPrototypeHasOwnProperty(item\x2C key))\n            map[key][i] = '';\n          else\n            map[key][i] = _inspect(item[key]);\n        }\n      }\n    }\n\n    const keys = ObjectKeys(map);\n    const values = ObjectValues(map);\n    if (hasPrimitives) {\n      ArrayPrototypePush(keys\x2C valuesKey);\n      ArrayPrototypePush(values\x2C valuesKeyArray);\n    }\n    ArrayPrototypeUnshift(keys\x2C indexKey);\n    ArrayPrototypeUnshift(values\x2C indexKeyArray);\n\n    return final(keys\x2C values);\n  }\x2C\n};\n\n// Returns true if label was found\nfunction timeLogImpl(self\x2C name\x2C label\x2C data) {\n  const time = self._times.get(label);\n  if (time === undefined) {\n    process.emitWarning(`No such label '${label}' for console.${name}()`);\n    return false;\n  }\n  const duration = process.hrtime(time);\n  const ms = duration[0] * 1000 + duration[1] / 1e6;\n\n  const formatted = formatTime(ms);\n\n  if (data === undefined) {\n    self.log('%s: %s'\x2C label\x2C formatted);\n  } else {\n    self.log('%s: %s'\x2C label\x2C formatted\x2C ...new SafeArrayIterator(data));\n  }\n  return true;\n}\n\nfunction pad(value) {\n  return StringPrototypePadStart(`${value}`\x2C 2\x2C '0');\n}\n\nfunction formatTime(ms) {\n  let hours = 0;\n  let minutes = 0;\n  let seconds = 0;\n\n  if (ms >= kSecond) {\n    if (ms >= kMinute) {\n      if (ms >= kHour) {\n        hours = MathFloor(ms / kHour);\n        ms = ms % kHour;\n      }\n      minutes = MathFloor(ms / kMinute);\n      ms = ms % kMinute;\n    }\n    seconds = ms / kSecond;\n  }\n\n  if (hours !== 0 || minutes !== 0) {\n    ({ 0: seconds\x2C 1: ms } = StringPrototypeSplit(\n      NumberPrototypeToFixed(seconds\x2C 3)\x2C\n      '.'\n    ));\n    const res = hours !== 0 ? `${hours}:${pad(minutes)}` : minutes;\n    return `${res}:${pad(seconds)}.${ms} (${hours !== 0 ? 'h:m' : ''}m:ss.mmm)`;\n  }\n\n  if (seconds !== 0) {\n    return `${NumberPrototypeToFixed(seconds\x2C 3)}s`;\n  }\n\n  return `${Number(NumberPrototypeToFixed(ms\x2C 3))}ms`;\n}\n\nconst keyKey = 'Key';\nconst valuesKey = 'Values';\nconst indexKey = '(index)';\nconst iterKey = '(iteration index)';\n\nconst isArray = (v) => ArrayIsArray(v) || isTypedArray(v) || isBuffer(v);\n\nfunction noop() {}\n\nfor (const method of ReflectOwnKeys(consoleMethods))\n  Console.prototype[method] = consoleMethods[method];\n\nConsole.prototype.debug = Console.prototype.log;\nConsole.prototype.info = Console.prototype.log;\nConsole.prototype.dirxml = Console.prototype.log;\nConsole.prototype.error = Console.prototype.warn;\nConsole.prototype.groupCollapsed = Console.prototype.group;\n\nfunction initializeGlobalConsole(globalConsole) {\n  globalConsole[kBindStreamsLazy](process);\n  globalConsole[kBindProperties](true\x2C 'auto');\n}\n\nmodule.exports = {\n  Console\x2C\n  kBindStreamsLazy\x2C\n  kBindProperties\x2C\n  initializeGlobalConsole\x2C\n  formatTime // exported for tests\n};\n
code-source-info,0xc1101dba730,107,20398,20509,C0O20418C2O20432C4O20431C11O20449C16O20462C18O20476C20O20475C29O20492C36O20508,,
tick,0x1a4e3b454,21125,0,0x0,3,0x0,0xc1101db6224,0xc1101db1da5,0xc1101dae2ac
code-creation,LazyCompile,10,21125,0xc1101dbc108,94,value node:internal/console/constructor:200:20,0xd141ccfaa20,~
code-source-info,0xc1101dbc108,107,5722,6356,C0O5722C15O5743C16O5743C18O5761C19O5761C21O5775C33O5825C38O5923C46O6030C60O6091C65O6189C73O6300C87O5775C93O6355,,
code-creation,LazyCompile,10,21208,0xc1101dbc7a0,414,value node:internal/console/constructor:230:20,0xd141ccfaae0,~
code-source-info,0xc1101dbc7a0,107,6455,7849,C17O6511C27O6573C34O6615C52O6685C55O6655C73O6754C86O6851C89O6821C104O6899C111O6941C126O6981C129O6981C144O7032C151O7054C166O7088C169O7084C187O7179C191O7189C198O7211C213O7245C216O7241C235O7267C239O7280C246O7302C261O7332C275O7354C279O7367C286O7389C300O7419C314O7436C318O7451C325O7473C340O7503C354O7518C358O7543C365O7585C380O7625C394O7662C398O7682C407O6511C413O7848,,
code-creation,LazyCompile,10,21291,0xc1101dbcc10,18,createWriteErrorHandler node:internal/console/constructor:354:33,0xd141ccfad88,~
code-source-info,0xc1101dbcc10,107,10641,11498,C0O10641C13O10670C17O11496,,
code-creation,LazyCompile,10,21333,0xc1101dbce90,63,addReadOnlyProcessAlias node:internal/process/pre_execution:162:33,0xc1101daf4b0,~
code-source-info,0xc1101dbce90,423,5080,5328,C16O5132C21O5132C26O5158C28O5175C36O5205C43O5291C49O5309C56O5175C62O5327,,
code-creation,LazyCompile,10,21333,0xc1101dbcff8,46,setupTraceCategoryState node:internal/process/pre_execution:359:33,0xc1101daf8f8,~
code-source-info,0xc1101dbcff8,423,10721,10948,C0O10763C6O10763C11O10736C16O10835C22O10835C27O10806C32O10877C35O10902C40O10877C45O10947,,
code-creation,LazyCompile,10,21375,0xc1101dbd190,77,toggleTraceCategoryState node:internal/process/per_thread:397:34,0x111f698ce270,~
script-source,36,node:internal/process/per_thread,'use strict';\n\n// This files contains process bootstrappers that can be\n// run when setting up each thread\x2C including the main\n// thread and the worker threads.\n\nconst {\n  ArrayPrototypeEvery\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSplice\x2C\n  BigUint64Array\x2C\n  Float64Array\x2C\n  NumberMAX_SAFE_INTEGER\x2C\n  ObjectFreeze\x2C\n  ObjectDefineProperty\x2C\n  ReflectApply\x2C\n  RegExpPrototypeExec\x2C\n  SafeArrayIterator\x2C\n  Set\x2C\n  SetPrototypeEntries\x2C\n  SetPrototypeValues\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeStartsWith\x2C\n  Symbol\x2C\n  SymbolIterator\x2C\n  Uint32Array\x2C\n} = primordials;\n\nconst {\n  errnoException\x2C\n  codes: {\n    ERR_ASSERTION\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_OUT_OF_RANGE\x2C\n    ERR_UNKNOWN_SIGNAL\n  }\n} = require('internal/errors');\nconst format = require('internal/util/inspect').format;\nconst {\n  validateArray\x2C\n  validateNumber\x2C\n  validateObject\x2C\n} = require('internal/validators');\nconst constants = internalBinding('constants').os.signals;\n\nconst {\n  handleProcessExit\x2C\n} = require('internal/modules/esm/handle_process_exit');\n\nconst kInternal = Symbol('internal properties');\n\nfunction assert(x\x2C msg) {\n  if (!x) throw new ERR_ASSERTION(msg || 'assertion error');\n}\n\nconst binding = internalBinding('process_methods');\n\nlet hrValues;\nlet hrBigintValues;\n\nfunction refreshHrtimeBuffer() {\n  // The 3 entries filled in by the original process.hrtime contains\n  // the upper/lower 32 bits of the second part of the value\x2C\n  // and the remaining nanoseconds of the value.\n  hrValues = new Uint32Array(binding.hrtimeBuffer);\n  // Use a BigUint64Array in the closure because this is actually a bit\n  // faster than simply returning a BigInt from C++ in V8 7.1.\n  hrBigintValues = new BigUint64Array(binding.hrtimeBuffer\x2C 0\x2C 1);\n}\n\n// Create the buffers.\nrefreshHrtimeBuffer();\n\nfunction hrtime(time) {\n  binding.hrtime();\n\n  if (time !== undefined) {\n    validateArray(time\x2C 'time');\n    if (time.length !== 2) {\n      throw new ERR_OUT_OF_RANGE('time'\x2C 2\x2C time.length);\n    }\n\n    const sec = (hrValues[0] * 0x100000000 + hrValues[1]) - time[0];\n    const nsec = hrValues[2] - time[1];\n    const needsBorrow = nsec < 0;\n    return [needsBorrow ? sec - 1 : sec\x2C needsBorrow ? nsec + 1e9 : nsec];\n  }\n\n  return [\n    hrValues[0] * 0x100000000 + hrValues[1]\x2C\n    hrValues[2]\x2C\n  ];\n}\n\nfunction hrtimeBigInt() {\n  binding.hrtimeBigInt();\n  return hrBigintValues[0];\n}\n\n// The execution of this function itself should not cause any side effects.\nfunction wrapProcessMethods(binding) {\n  const {\n    cpuUsage: _cpuUsage\x2C\n    memoryUsage: _memoryUsage\x2C\n    rss\x2C\n    resourceUsage: _resourceUsage\n  } = binding;\n\n  function _rawDebug(...args) {\n    binding._rawDebug(ReflectApply(format\x2C null\x2C args));\n  }\n\n  // Create the argument array that will be passed to the native function.\n  const cpuValues = new Float64Array(2);\n\n  // Replace the native function with the JS version that calls the native\n  // function.\n  function cpuUsage(prevValue) {\n    // If a previous value was passed in\x2C ensure it has the correct shape.\n    if (prevValue) {\n      if (!previousValueIsValid(prevValue.user)) {\n        validateObject(prevValue\x2C 'prevValue');\n\n        validateNumber(prevValue.user\x2C 'prevValue.user');\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.user'\x2C\n                                                   prevValue.user);\n      }\n\n      if (!previousValueIsValid(prevValue.system)) {\n        validateNumber(prevValue.system\x2C 'prevValue.system');\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.system'\x2C\n                                                   prevValue.system);\n      }\n    }\n\n    // Call the native function to get the current values.\n    _cpuUsage(cpuValues);\n\n    // If a previous value was passed in\x2C return diff of current from previous.\n    if (prevValue) {\n      return {\n        user: cpuValues[0] - prevValue.user\x2C\n        system: cpuValues[1] - prevValue.system\n      };\n    }\n\n    // If no previous value passed in\x2C return current value.\n    return {\n      user: cpuValues[0]\x2C\n      system: cpuValues[1]\n    };\n  }\n\n  // Ensure that a previously passed in value is valid. Currently\x2C the native\n  // implementation always returns numbers <= Number.MAX_SAFE_INTEGER.\n  function previousValueIsValid(num) {\n    return typeof num === 'number' &&\n        num <= NumberMAX_SAFE_INTEGER &&\n        num >= 0;\n  }\n\n  const memValues = new Float64Array(5);\n  function memoryUsage() {\n    _memoryUsage(memValues);\n    return {\n      rss: memValues[0]\x2C\n      heapTotal: memValues[1]\x2C\n      heapUsed: memValues[2]\x2C\n      external: memValues[3]\x2C\n      arrayBuffers: memValues[4]\n    };\n  }\n\n  memoryUsage.rss = rss;\n\n  function exit(code) {\n    process.off('exit'\x2C handleProcessExit);\n\n    if (code || code === 0)\n      process.exitCode = code;\n\n    if (!process._exiting) {\n      process._exiting = true;\n      process.emit('exit'\x2C process.exitCode || 0);\n    }\n    // FIXME(joyeecheung): This is an undocumented API that gets monkey-patched\n    // in the user land. Either document it\x2C or deprecate it in favor of a\n    // better public alternative.\n    process.reallyExit(process.exitCode || 0);\n  }\n\n  function kill(pid\x2C sig) {\n    let err;\n\n    // eslint-disable-next-line eqeqeq\n    if (pid != (pid | 0)) {\n      throw new ERR_INVALID_ARG_TYPE('pid'\x2C 'number'\x2C pid);\n    }\n\n    // Preserve null signal\n    if (sig === (sig | 0)) {\n      // XXX(joyeecheung): we have to use process._kill here because\n      // it's monkey-patched by tests.\n      err = process._kill(pid\x2C sig);\n    } else {\n      sig = sig || 'SIGTERM';\n      if (constants[sig]) {\n        err = process._kill(pid\x2C constants[sig]);\n      } else {\n        throw new ERR_UNKNOWN_SIGNAL(sig);\n      }\n    }\n\n    if (err)\n      throw errnoException(err\x2C 'kill');\n\n    return true;\n  }\n\n  const resourceValues = new Float64Array(16);\n  function resourceUsage() {\n    _resourceUsage(resourceValues);\n    return {\n      userCPUTime: resourceValues[0]\x2C\n      systemCPUTime: resourceValues[1]\x2C\n      maxRSS: resourceValues[2]\x2C\n      sharedMemorySize: resourceValues[3]\x2C\n      unsharedDataSize: resourceValues[4]\x2C\n      unsharedStackSize: resourceValues[5]\x2C\n      minorPageFault: resourceValues[6]\x2C\n      majorPageFault: resourceValues[7]\x2C\n      swappedOut: resourceValues[8]\x2C\n      fsRead: resourceValues[9]\x2C\n      fsWrite: resourceValues[10]\x2C\n      ipcSent: resourceValues[11]\x2C\n      ipcReceived: resourceValues[12]\x2C\n      signalsCount: resourceValues[13]\x2C\n      voluntaryContextSwitches: resourceValues[14]\x2C\n      involuntaryContextSwitches: resourceValues[15]\n    };\n  }\n\n\n  return {\n    _rawDebug\x2C\n    cpuUsage\x2C\n    resourceUsage\x2C\n    memoryUsage\x2C\n    kill\x2C\n    exit\n  };\n}\n\nconst replaceUnderscoresRegex = /_/g;\nconst leadingDashesRegex = /^--?/;\nconst trailingValuesRegex = /=.*$/;\n\n// This builds the initial process.allowedNodeEnvironmentFlags\n// from data in the config binding.\nfunction buildAllowedFlags() {\n  const {\n    envSettings: { kAllowedInEnvironment }\x2C\n    types: { kBoolean }\x2C\n  } = internalBinding('options');\n  const { options\x2C aliases } = require('internal/options');\n\n  const allowedNodeEnvironmentFlags = [];\n  for (const { 0: name\x2C 1: info } of options) {\n    if (info.envVarSettings === kAllowedInEnvironment) {\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C name);\n      if (info.type === kBoolean) {\n        const negatedName = `--no-${name.slice(2)}`;\n        ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C negatedName);\n      }\n    }\n  }\n\n  function isAccepted(to) {\n    if (!StringPrototypeStartsWith(to\x2C '-') || to === '--') return true;\n    const recursiveExpansion = aliases.get(to);\n    if (recursiveExpansion) {\n      if (recursiveExpansion[0] === to)\n        ArrayPrototypeSplice(recursiveExpansion\x2C 0\x2C 1);\n      return ArrayPrototypeEvery(recursiveExpansion\x2C isAccepted);\n    }\n    return options.get(to).envVarSettings === kAllowedInEnvironment;\n  }\n  for (const { 0: from\x2C 1: expansion } of aliases) {\n    if (ArrayPrototypeEvery(expansion\x2C isAccepted)) {\n      let canonical = from;\n      if (StringPrototypeEndsWith(canonical\x2C '='))\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 1);\n      if (StringPrototypeEndsWith(canonical\x2C ' <arg>'))\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 4);\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C canonical);\n    }\n  }\n\n  const trimLeadingDashes =\n    (flag) => StringPrototypeReplace(flag\x2C leadingDashesRegex\x2C '');\n\n  // Save these for comparison against flags provided to\n  // process.allowedNodeEnvironmentFlags.has() which lack leading dashes.\n  const nodeFlags = ArrayPrototypeMap(allowedNodeEnvironmentFlags\x2C\n                                      trimLeadingDashes);\n\n  class NodeEnvironmentFlagsSet extends Set {\n    constructor(array) {\n      super();\n      this[kInternal] = { array };\n    }\n\n    add() {\n      // No-op\x2C `Set` API compatible\n      return this;\n    }\n\n    delete() {\n      // No-op\x2C `Set` API compatible\n      return false;\n    }\n\n    clear() {\n      // No-op\x2C `Set` API compatible\n    }\n\n    has(key) {\n      // This will return `true` based on various possible\n      // permutations of a flag\x2C including present/missing leading\n      // dash(es) and/or underscores-for-dashes.\n      // Strips any values after `=`\x2C inclusive.\n      // TODO(addaleax): It might be more flexible to run the option parser\n      // on a dummy option set and see whether it rejects the argument or\n      // not.\n      if (typeof key === 'string') {\n        key = StringPrototypeReplace(key\x2C replaceUnderscoresRegex\x2C '-');\n        if (RegExpPrototypeExec(leadingDashesRegex\x2C key) !== null) {\n          key = StringPrototypeReplace(key\x2C trailingValuesRegex\x2C '');\n          return ArrayPrototypeIncludes(this[kInternal].array\x2C key);\n        }\n        return ArrayPrototypeIncludes(nodeFlags\x2C key);\n      }\n      return false;\n    }\n\n    entries() {\n      this[kInternal].set ??=\n        new Set(new SafeArrayIterator(this[kInternal].array));\n      return SetPrototypeEntries(this[kInternal].set);\n    }\n\n    forEach(callback\x2C thisArg = undefined) {\n      ArrayPrototypeForEach(\n        this[kInternal].array\x2C\n        (v) => ReflectApply(callback\x2C thisArg\x2C [v\x2C v\x2C this])\n      );\n    }\n\n    get size() {\n      return this[kInternal].array.length;\n    }\n\n    values() {\n      this[kInternal].set ??=\n        new Set(new SafeArrayIterator(this[kInternal].array));\n      return SetPrototypeValues(this[kInternal].set);\n    }\n  }\n  const flagSetValues = NodeEnvironmentFlagsSet.prototype.values;\n  ObjectDefineProperty(NodeEnvironmentFlagsSet.prototype\x2C SymbolIterator\x2C {\n    __proto__: null\x2C\n    value: flagSetValues\x2C\n  });\n  ObjectDefineProperty(NodeEnvironmentFlagsSet.prototype\x2C 'keys'\x2C {\n    __proto__: null\x2C\n    value: flagSetValues\x2C\n  });\n\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype.constructor);\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype);\n\n  return ObjectFreeze(new NodeEnvironmentFlagsSet(\n    allowedNodeEnvironmentFlags\n  ));\n}\n\n// Lazy load internal/trace_events_async_hooks only if the async_hooks\n// trace event category is enabled.\nlet traceEventsAsyncHook;\n// Dynamically enable/disable the traceEventsAsyncHook\nfunction toggleTraceCategoryState(asyncHooksEnabled) {\n  if (asyncHooksEnabled) {\n    if (!traceEventsAsyncHook) {\n      traceEventsAsyncHook =\n        require('internal/trace_events_async_hooks').createHook();\n    }\n    traceEventsAsyncHook.enable();\n  } else if (traceEventsAsyncHook) {\n    traceEventsAsyncHook.disable();\n  }\n}\n\nmodule.exports = {\n  toggleTraceCategoryState\x2C\n  assert\x2C\n  buildAllowedFlags\x2C\n  wrapProcessMethods\x2C\n  hrtime\x2C\n  hrtimeBigInt\x2C\n  refreshHrtimeBuffer\x2C\n};\n
code-source-info,0xc1101dbd190,36,11365,11662,C0O11389C4O11418C10O11453C16O11484C21O11528C26O11529C33O11474C39O11553C44O11574C49O11574C55O11593C61O11625C66O11646C71O11646C76O11661,,
code-creation,LazyCompile,10,21833,0xc1101dbe060,42,setupPerfHooks node:internal/process/pre_execution:365:24,0xc1101daf948,~
code-source-info,0xc1101dbe060,423,10973,11093,C0O10980C6O10980C11O11016C16O11017C20O11040C26O11040C31O11070C36O11071C41O11092,,
code-creation,LazyCompile,10,21875,0xc1101dbe1e8,42,refreshTimeOrigin node:internal/perf/performance:227:27,0x1e055ae4b070,~
script-source,115,node:internal/perf/performance,'use strict';\n\nconst {\n  ObjectDefineProperty\x2C\n  ObjectDefineProperties\x2C\n  ObjectSetPrototypeOf\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\n    ERR_MISSING_ARGS\n  }\n} = require('internal/errors');\n\nconst {\n  EventTarget\x2C\n  Event\x2C\n  kTrustEvent\x2C\n} = require('internal/event_target');\n\nconst { now } = require('internal/perf/utils');\n\nconst { markResourceTiming } = require('internal/perf/resource_timing');\n\nconst {\n  mark\x2C\n  measure\x2C\n  clearMarkTimings\x2C\n} = require('internal/perf/usertiming');\nconst {\n  clearEntriesFromBuffer\x2C\n  filterBufferMapByNameAndType\x2C\n  setResourceTimingBufferSize\x2C\n  setDispatchBufferFull\x2C\n} = require('internal/perf/observe');\n\nconst eventLoopUtilization = require('internal/perf/event_loop_utilization');\nconst nodeTiming = require('internal/perf/nodetiming');\nconst timerify = require('internal/perf/timerify');\nconst { customInspectSymbol: kInspect } = require('internal/util');\nconst { inspect } = require('util');\n\nconst {\n  getTimeOriginTimestamp\n} = internalBinding('performance');\n\nclass Performance extends EventTarget {\n  constructor() {\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\n  }\n\n  [kInspect](depth\x2C options) {\n    if (depth < 0) return this;\n\n    const opts = {\n      ...options\x2C\n      depth: options.depth == null ? null : options.depth - 1\n    };\n\n    return `Performance ${inspect({\n      nodeTiming: this.nodeTiming\x2C\n      timeOrigin: this.timeOrigin\x2C\n    }\x2C opts)}`;\n  }\n}\n\nfunction toJSON() {\n  return {\n    nodeTiming: this.nodeTiming\x2C\n    timeOrigin: this.timeOrigin\x2C\n    eventLoopUtilization: this.eventLoopUtilization()\n  };\n}\n\nfunction clearMarks(name) {\n  if (name !== undefined) {\n    name = `${name}`;\n  }\n  clearMarkTimings(name);\n  clearEntriesFromBuffer('mark'\x2C name);\n}\n\nfunction clearMeasures(name) {\n  if (name !== undefined) {\n    name = `${name}`;\n  }\n  clearEntriesFromBuffer('measure'\x2C name);\n}\n\nfunction clearResourceTimings(name) {\n  if (name !== undefined) {\n    name = `${name}`;\n  }\n  clearEntriesFromBuffer('resource'\x2C name);\n}\n\nfunction getEntries() {\n  return filterBufferMapByNameAndType();\n}\n\nfunction getEntriesByName(name) {\n  if (arguments.length === 0) {\n    throw new ERR_MISSING_ARGS('name');\n  }\n  name = `${name}`;\n  return filterBufferMapByNameAndType(name\x2C undefined);\n}\n\nfunction getEntriesByType(type) {\n  if (arguments.length === 0) {\n    throw new ERR_MISSING_ARGS('type');\n  }\n  type = `${type}`;\n  return filterBufferMapByNameAndType(undefined\x2C type);\n}\n\nclass InternalPerformance extends EventTarget {}\nInternalPerformance.prototype.constructor = Performance.prototype.constructor;\nObjectSetPrototypeOf(InternalPerformance.prototype\x2C Performance.prototype);\n\nObjectDefineProperties(Performance.prototype\x2C {\n  clearMarks: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: clearMarks\x2C\n  }\x2C\n  clearMeasures: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: clearMeasures\x2C\n  }\x2C\n  clearResourceTimings: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: clearResourceTimings\x2C\n  }\x2C\n  eventLoopUtilization: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: eventLoopUtilization\x2C\n  }\x2C\n  getEntries: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: getEntries\x2C\n  }\x2C\n  getEntriesByName: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: getEntriesByName\x2C\n  }\x2C\n  getEntriesByType: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: getEntriesByType\x2C\n  }\x2C\n  mark: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: mark\x2C\n  }\x2C\n  measure: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: measure\x2C\n  }\x2C\n  nodeTiming: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: nodeTiming\x2C\n  }\x2C\n  // In the browser\x2C this function is not public.  However\x2C it must be used inside fetch\n  // which is a Node.js dependency\x2C not a internal module\n  markResourceTiming: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: markResourceTiming\x2C\n  }\x2C\n  now: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: now\x2C\n  }\x2C\n  setResourceTimingBufferSize: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: setResourceTimingBufferSize\n  }\x2C\n  timerify: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: timerify\x2C\n  }\x2C\n  // This would be updated during pre-execution in case\n  // the process is launched from a snapshot.\n  // TODO(joyeecheung): we may want to warn about access to\n  // this during snapshot building.\n  timeOrigin: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    value: getTimeOriginTimestamp()\x2C\n  }\x2C\n  toJSON: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    value: toJSON\x2C\n  }\n});\n\nfunction refreshTimeOrigin() {\n  ObjectDefineProperty(Performance.prototype\x2C 'timeOrigin'\x2C {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    value: getTimeOriginTimestamp()\x2C\n  });\n}\n\nconst performance = new InternalPerformance();\n\nfunction dispatchBufferFull(type) {\n  const event = new Event(type\x2C {\n    [kTrustEvent]: true\n  });\n  performance.dispatchEvent(event);\n}\nsetDispatchBufferFull(dispatchBufferFull);\n\nmodule.exports = {\n  Performance\x2C\n  performance\x2C\n  refreshTimeOrigin\n};\n
code-source-info,0xc1101dbe1e8,115,4978,5156,C0O4985C7O5006C10O5018C25O5123C28O5123C35O4985C41O5155,,
code-creation,LazyCompile,10,22083,0xc1101dbeae8,19,refreshTimeOrigin node:internal/perf/utils:25:27,0x111f698f6478,~
script-source,50,node:internal/perf/utils,'use strict';\n\nconst binding = internalBinding('performance');\nconst {\n  milestones\x2C\n  getTimeOrigin\x2C\n} = binding;\n\n// TODO(joyeecheung): we may want to warn about access to\n// this during snapshot building.\nlet timeOrigin = getTimeOrigin();\n\nfunction now() {\n  const hr = process.hrtime();\n  return (hr[0] * 1000 + hr[1] / 1e6) - timeOrigin;\n}\n\nfunction getMilestoneTimestamp(milestoneIdx) {\n  const ns = milestones[milestoneIdx];\n  if (ns === -1)\n    return ns;\n  return ns / 1e6 - timeOrigin;\n}\n\nfunction refreshTimeOrigin() {\n  timeOrigin = getTimeOrigin();\n}\n\nmodule.exports = {\n  now\x2C\n  getMilestoneTimestamp\x2C\n  refreshTimeOrigin\n};\n
code-source-info,0xc1101dbeae8,50,525,563,C0O532C5O545C11O543C18O562,,
code-creation,LazyCompile,10,22166,0xc1101dbed58,62,setupInspectorHooks node:internal/process/pre_execution:370:29,0xc1101daf998,~
code-source-info,0xc1101dbed58,423,11123,11676,C0O11466C6O11470C11O11495C17O11560C23O11560C28O11530C33O11544C38O11606C44O11606C49O11634C54O11635C61O11675,,
tick,0x1a4def0fc,22208,0,0x0,3,0x0,0xc1101dbe070,0xc1101db1db2,0xc1101dae2ac
code-creation,Eval,10,22208,0xc1101dbf0f8,5, node:internal/inspector_async_hook:1:1,0xc1101dbef40,~
script-source,424,node:internal/inspector_async_hook,'use strict';\n\nlet hook;\nlet config;\n\nconst {\n  SafeSet\x2C\n} = primordials;\n\nfunction lazyHookCreation() {\n  const inspector = internalBinding('inspector');\n  const { createHook } = require('async_hooks');\n  config = internalBinding('config');\n\n  hook = createHook({\n    init(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\n    // It's difficult to tell which tasks will be recurring and which won't\x2C\n    // therefore we mark all tasks as recurring. Based on the discussion\n    // in https://github.com/nodejs/node/pull/13870#discussion_r124515293\x2C\n    // this should be fine as long as we call asyncTaskCanceled() too.\n      const recurring = true;\n      if (type === 'PROMISE')\n        this.promiseIds.add(asyncId);\n      else\n        inspector.asyncTaskScheduled(type\x2C asyncId\x2C recurring);\n    }\x2C\n\n    before(asyncId) {\n      if (this.promiseIds.has(asyncId))\n        return;\n      inspector.asyncTaskStarted(asyncId);\n    }\x2C\n\n    after(asyncId) {\n      if (this.promiseIds.has(asyncId))\n        return;\n      inspector.asyncTaskFinished(asyncId);\n    }\x2C\n\n    destroy(asyncId) {\n      if (this.promiseIds.has(asyncId))\n        return this.promiseIds.delete(asyncId);\n      inspector.asyncTaskCanceled(asyncId);\n    }\x2C\n  });\n\n  hook.promiseIds = new SafeSet();\n}\n\nfunction enable() {\n  if (hook === undefined) lazyHookCreation();\n  if (config.bits < 64) {\n    // V8 Inspector stores task ids as (void*) pointers.\n    // async_hooks store ids as 64bit numbers.\n    // As a result\x2C we cannot reliably translate async_hook ids to V8 async_task\n    // ids on 32bit platforms.\n    process.emitWarning(\n      'Warning: Async stack traces in debugger are not available ' +\n      `on ${config.bits}bit platforms. The feature is disabled.`\x2C\n      {\n        code: 'INSPECTOR_ASYNC_STACK_TRACES_NOT_AVAILABLE'\x2C\n      });\n  } else {\n    hook.enable();\n  }\n}\n\nfunction disable() {\n  if (hook === undefined) lazyHookCreation();\n  hook.disable();\n}\n\nmodule.exports = {\n  enable\x2C\n  disable\n};\n
code-source-info,0xc1101dbf0f8,424,0,1972,C0O0C4O1972,,
code-creation,Function,10,22291,0xc1101dbf318,79, node:internal/inspector_async_hook:1:1,0xc1101dbf070,~
code-source-info,0xc1101dbf318,424,0,1972,C0O0C42O19C43O19C45O29C46O29C48O48C54O1930C61O1951C67O1961C73O1945C78O1971,,
code-creation,LazyCompile,10,22333,0xc1101dbf948,126,setupWarningHandler node:internal/process/pre_execution:175:29,0xc1101daf500,~
code-source-info,0xc1101dbf948,423,5358,5849,C0O5358C11O5420C19O5420C24O5377C30O5392C36O5459C46O5463C57O5507C62O5511C69O5528C74O5543C79O5551C90O5551C96O5678C103O5682C108O5712C120O5712C125O5848,,
new,MemoryChunk,0x1e372ce00000,262144
new,MemoryChunk,0x109cc0000,262144
code-creation,Function,11,22458,0x109cc8060,664,getOptionValue node:internal/options:44:24,0xd141ccca210,^
code-source-info,0x109cc8060,88,985,1228,,,
code-creation,Function,11,22458,0x109cc8360,152,isPosixPathSeparator node:path:56:30,0x25eb221f3348,^
code-source-info,0x109cc8360,71,1854,1902,,,
code-creation,Function,11,22500,0x109cc8460,3616,normalizeString node:path:66:25,0x25eb221f33e8,^
code-source-info,0x109cc8460,71,2161,4085,,,
code-creation,Function,11,22541,0x109cc92e0,768,nativeModuleRequire node:internal/bootstrap/loaders:353:29,0x3d9b8018eee8,^
script-source,15,node:internal/bootstrap/loaders,// This file creates the internal module & binding loaders used by built-in\n// modules. In contrast\x2C user land modules are loaded using\n// lib/internal/modules/cjs/loader.js (CommonJS Modules) or\n// lib/internal/modules/esm/* (ES Modules).\n//\n// This file is compiled and run by node.cc before bootstrap/node.js\n// was called\x2C therefore the loaders are bootstrapped before we start to\n// actually bootstrap Node.js. It creates the following objects:\n//\n// C++ binding loaders:\n// - process.binding(): the legacy C++ binding loader\x2C accessible from user land\n//   because it is an object attached to the global process object.\n//   These C++ bindings are created using NODE_BUILTIN_MODULE_CONTEXT_AWARE()\n//   and have their nm_flags set to NM_F_BUILTIN. We do not make any guarantees\n//   about the stability of these bindings\x2C but still have to take care of\n//   compatibility issues caused by them from time to time.\n// - process._linkedBinding(): intended to be used by embedders to add\n//   additional C++ bindings in their applications. These C++ bindings\n//   can be created using NODE_MODULE_CONTEXT_AWARE_CPP() with the flag\n//   NM_F_LINKED.\n// - internalBinding(): the private internal C++ binding loader\x2C inaccessible\n//   from user land unless through `require('internal/test/binding')`.\n//   These C++ bindings are created using NODE_MODULE_CONTEXT_AWARE_INTERNAL()\n//   and have their nm_flags set to NM_F_INTERNAL.\n//\n// Internal JavaScript module loader:\n// - BuiltinModule: a minimal module system used to load the JavaScript core\n//   modules found in lib/**/*.js and deps/**/*.js. All core modules are\n//   compiled into the node binary via node_javascript.cc generated by js2c.py\x2C\n//   so they can be loaded faster without the cost of I/O. This class makes the\n//   lib/internal/*\x2C deps/internal/* modules and internalBinding() available by\n//   default to core modules\x2C and lets the core modules require itself via\n//   require('internal/bootstrap/loaders') even when this file is not written in\n//   CommonJS style.\n//\n// Other objects:\n// - process.moduleLoadList: an array recording the bindings and the modules\n//   loaded in the process and the order in which they are loaded.\n\n'use strict';\n\n// This file is compiled as if it's wrapped in a function with arguments\n// passed by node::RunBootstrapping()\n/* global process\x2C getLinkedBinding\x2C getInternalBinding\x2C primordials */\n\nconst {\n  ArrayFrom\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  Error\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperty\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ReflectGet\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  String\x2C\n  StringPrototypeStartsWith\x2C\n  TypeError\x2C\n} = primordials;\n\n// Set up process.moduleLoadList.\nconst moduleLoadList = [];\nObjectDefineProperty(process\x2C 'moduleLoadList'\x2C {\n  __proto__: null\x2C\n  value: moduleLoadList\x2C\n  configurable: true\x2C\n  enumerable: true\x2C\n  writable: false\n});\n\n\n// internalBindingAllowlist contains the name of internalBinding modules\n// that are allowed for access via process.binding()... This is used\n// to provide a transition path for modules that are being moved over to\n// internalBinding.\nconst internalBindingAllowlist = new SafeSet([\n  'async_wrap'\x2C\n  'buffer'\x2C\n  'cares_wrap'\x2C\n  'config'\x2C\n  'constants'\x2C\n  'contextify'\x2C\n  'crypto'\x2C\n  'fs'\x2C\n  'fs_event_wrap'\x2C\n  'http_parser'\x2C\n  'icu'\x2C\n  'inspector'\x2C\n  'js_stream'\x2C\n  'natives'\x2C\n  'os'\x2C\n  'pipe_wrap'\x2C\n  'process_wrap'\x2C\n  'signal_wrap'\x2C\n  'spawn_sync'\x2C\n  'stream_wrap'\x2C\n  'tcp_wrap'\x2C\n  'tls_wrap'\x2C\n  'tty_wrap'\x2C\n  'udp_wrap'\x2C\n  'url'\x2C\n  'util'\x2C\n  'uv'\x2C\n  'v8'\x2C\n  'zlib'\x2C\n]);\n\nconst runtimeDeprecatedList = new SafeSet([\n  'async_wrap'\x2C\n  'crypto'\x2C\n  'http_parser'\x2C\n  'signal_wrap'\x2C\n  'url'\x2C\n  'v8'\x2C\n]);\n\nconst legacyWrapperList = new SafeSet([\n  'util'\x2C\n]);\n\n// Modules that can only be imported via the node: scheme.\nconst schemelessBlockList = new SafeSet([\n  'test'\x2C\n]);\n\n// Set up process.binding() and process._linkedBinding().\n{\n  const bindingObj = ObjectCreate(null);\n\n  process.binding = function binding(module) {\n    module = String(module);\n    // Deprecated specific process.binding() modules\x2C but not all\x2C allow\n    // selective fallback to internalBinding for the deprecated ones.\n    if (internalBindingAllowlist.has(module)) {\n      if (runtimeDeprecatedList.has(module)) {\n        runtimeDeprecatedList.delete(module);\n        process.emitWarning(\n          `Access to process.binding('${module}') is deprecated.`\x2C\n          'DeprecationWarning'\x2C\n          'DEP0111');\n      }\n      if (legacyWrapperList.has(module)) {\n        return nativeModuleRequire('internal/legacy/processbinding')[module]();\n      }\n      return internalBinding(module);\n    }\n    // eslint-disable-next-line no-restricted-syntax\n    throw new Error(`No such module: ${module}`);\n  };\n\n  process._linkedBinding = function _linkedBinding(module) {\n    module = String(module);\n    let mod = bindingObj[module];\n    if (typeof mod !== 'object')\n      mod = bindingObj[module] = getLinkedBinding(module);\n    return mod;\n  };\n}\n\n// Set up internalBinding() in the closure.\n/**\n * @type {InternalBinding}\n */\nlet internalBinding;\n{\n  const bindingObj = ObjectCreate(null);\n  // eslint-disable-next-line no-global-assign\n  internalBinding = function internalBinding(module) {\n    let mod = bindingObj[module];\n    if (typeof mod !== 'object') {\n      mod = bindingObj[module] = getInternalBinding(module);\n      ArrayPrototypePush(moduleLoadList\x2C `Internal Binding ${module}`);\n    }\n    return mod;\n  };\n}\n\nconst loaderId = 'internal/bootstrap/loaders';\nconst {\n  builtinIds\x2C\n  compileFunction\n} = internalBinding('builtins');\n\nconst getOwn = (target\x2C property\x2C receiver) => {\n  return ObjectPrototypeHasOwnProperty(target\x2C property) ?\n    ReflectGet(target\x2C property\x2C receiver) :\n    undefined;\n};\n\n/**\n * An internal abstraction for the built-in JavaScript modules of Node.js.\n * Be careful not to expose this to user land unless --expose-internals is\n * used\x2C in which case there is no compatibility guarantee about this class.\n */\nclass BuiltinModule {\n  /**\n   * A map from the module IDs to the module instances.\n   * @type {Map<string\x2C BuiltinModule>}\n   */\n  static map = new SafeMap(\n    ArrayPrototypeMap(builtinIds\x2C (id) => [id\x2C new BuiltinModule(id)])\n  );\n\n  constructor(id) {\n    this.filename = `${id}.js`;\n    this.id = id;\n    this.canBeRequiredByUsers = !StringPrototypeStartsWith(id\x2C 'internal/');\n\n    // The CJS exports object of the module.\n    this.exports = {};\n    // States used to work around circular dependencies.\n    this.loaded = false;\n    this.loading = false;\n\n    // The following properties are used by the ESM implementation and only\n    // initialized when the built-in module is loaded by users.\n    /**\n     * The C++ ModuleWrap binding used to interface with the ESM implementation.\n     * @type {ModuleWrap|undefined}\n     */\n    this.module = undefined;\n    /**\n     * Exported names for the ESM imports.\n     * @type {string[]|undefined}\n     */\n    this.exportKeys = undefined;\n  }\n\n  // To be called during pre-execution when --expose-internals is on.\n  // Enables the user-land module loader to access internal modules.\n  static exposeInternals() {\n    for (const { 0: id\x2C 1: mod } of BuiltinModule.map) {\n      // Do not expose this to user land even with --expose-internals.\n      if (id !== loaderId) {\n        mod.canBeRequiredByUsers = true;\n      }\n    }\n  }\n\n  static exists(id) {\n    return BuiltinModule.map.has(id);\n  }\n\n  static canBeRequiredByUsers(id) {\n    const mod = BuiltinModule.map.get(id);\n    return mod && mod.canBeRequiredByUsers;\n  }\n\n  // Determine if a core module can be loaded without the node: prefix. This\n  // function does not validate if the module actually exists.\n  static canBeRequiredWithoutScheme(id) {\n    return !schemelessBlockList.has(id);\n  }\n\n  static getSchemeOnlyModuleNames() {\n    return ArrayFrom(schemelessBlockList);\n  }\n\n  // Used by user-land module loaders to compile and load builtins.\n  compileForPublicLoader() {\n    if (!this.canBeRequiredByUsers) {\n      // No code because this is an assertion against bugs\n      // eslint-disable-next-line no-restricted-syntax\n      throw new Error(`Should not compile ${this.id} for public use`);\n    }\n    this.compileForInternalLoader();\n    if (!this.exportKeys) {\n      // When using --expose-internals\x2C we do not want to reflect the named\n      // exports from core modules as this can trigger unnecessary getters.\n      const internal = StringPrototypeStartsWith(this.id\x2C 'internal/');\n      this.exportKeys = internal ? [] : ObjectKeys(this.exports);\n    }\n    this.getESMFacade();\n    this.syncExports();\n    return this.exports;\n  }\n\n  getESMFacade() {\n    if (this.module) return this.module;\n    const { ModuleWrap } = internalBinding('module_wrap');\n    const url = `node:${this.id}`;\n    const nativeModule = this;\n    const exportsKeys = ArrayPrototypeSlice(this.exportKeys);\n    ArrayPrototypePush(exportsKeys\x2C 'default');\n    this.module = new ModuleWrap(\n      url\x2C undefined\x2C exportsKeys\x2C\n      function() {\n        nativeModule.syncExports();\n        this.setExport('default'\x2C nativeModule.exports);\n      });\n    // Ensure immediate sync execution to capture exports now\n    this.module.instantiate();\n    this.module.evaluate(-1\x2C false);\n    return this.module;\n  }\n\n  // Provide named exports for all builtin libraries so that the libraries\n  // may be imported in a nicer way for ESM users. The default export is left\n  // as the entire namespace (module.exports) and updates when this function is\n  // called so that APMs and other behavior are supported.\n  syncExports() {\n    const names = this.exportKeys;\n    if (this.module) {\n      for (let i = 0; i < names.length; i++) {\n        const exportName = names[i];\n        if (exportName === 'default') continue;\n        this.module.setExport(exportName\x2C\n                              getOwn(this.exports\x2C exportName\x2C this.exports));\n      }\n    }\n  }\n\n  compileForInternalLoader() {\n    if (this.loaded || this.loading) {\n      return this.exports;\n    }\n\n    const id = this.id;\n    this.loading = true;\n\n    try {\n      const requireFn = StringPrototypeStartsWith(this.id\x2C 'internal/deps/') ?\n        requireWithFallbackInDeps : nativeModuleRequire;\n\n      const fn = compileFunction(id);\n      // Arguments must match the parameters specified in\n      // BuiltinLoader::LookupAndCompile().\n      fn(this.exports\x2C requireFn\x2C this\x2C process\x2C internalBinding\x2C primordials);\n\n      this.loaded = true;\n    } finally {\n      this.loading = false;\n    }\n\n    // "NativeModule" is a legacy name of "BuiltinModule". We keep it\n    // here to avoid breaking users who parse process.moduleLoadList.\n    ArrayPrototypePush(moduleLoadList\x2C `NativeModule ${id}`);\n    return this.exports;\n  }\n}\n\n// Think of this as module.exports in this file even though it is not\n// written in CommonJS style.\nconst loaderExports = {\n  internalBinding\x2C\n  BuiltinModule\x2C\n  require: nativeModuleRequire\n};\n\nfunction nativeModuleRequire(id) {\n  if (id === loaderId) {\n    return loaderExports;\n  }\n\n  const mod = BuiltinModule.map.get(id);\n  // Can't load the internal errors module from here\x2C have to use a raw error.\n  // eslint-disable-next-line no-restricted-syntax\n  if (!mod) throw new TypeError(`Missing internal module '${id}'`);\n  return mod.compileForInternalLoader();\n}\n\n// Allow internal modules from dependencies to require\n// other modules from dependencies by providing fallbacks.\nfunction requireWithFallbackInDeps(request) {\n  if (!BuiltinModule.map.has(request)) {\n    request = `internal/deps/${request}`;\n  }\n  return nativeModuleRequire(request);\n}\n\n// Pass the exports back to C++ land for C++ internals to use.\nreturn loaderExports;\n
code-source-info,0x109cc92e0,15,11027,11371,,,
code-creation,LazyCompile,10,23000,0x1e372ce09de8,25,isBuildingSnapshot node:internal/v8/startup_snapshot:17:28,0x25eb221f6560,~
script-source,82,node:internal/v8/startup_snapshot,'use strict';\n\nconst {\n  validateFunction\x2C\n} = require('internal/validators');\nconst {\n  ERR_NOT_BUILDING_SNAPSHOT\x2C\n  ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION\n} = require('internal/errors');\n\nconst {\n  setSerializeCallback\x2C\n  setDeserializeCallback\x2C\n  setDeserializeMainFunction: _setDeserializeMainFunction\x2C\n} = internalBinding('mksnapshot');\n\nfunction isBuildingSnapshot() {\n  // For now this is the only way to build a snapshot.\n  return require('internal/options').getOptionValue('--build-snapshot');\n}\n\nfunction throwIfNotBuildingSnapshot() {\n  if (!isBuildingSnapshot()) {\n    throw new ERR_NOT_BUILDING_SNAPSHOT();\n  }\n}\n\nconst deserializeCallbacks = [];\nlet deserializeCallbackIsSet = false;\nfunction runDeserializeCallbacks() {\n  while (deserializeCallbacks.length > 0) {\n    const { 0: callback\x2C 1: data } = deserializeCallbacks.shift();\n    callback(data);\n  }\n}\n\nfunction addDeserializeCallback(callback\x2C data) {\n  throwIfNotBuildingSnapshot();\n  validateFunction(callback\x2C 'callback');\n  if (!deserializeCallbackIsSet) {\n    // TODO(joyeecheung): when the main function handling is done in JS\x2C\n    // the deserialize callbacks can always be invoked. For now only\n    // store it in C++ when it's actually used to avoid unnecessary\n    // C++ -> JS costs.\n    setDeserializeCallback(runDeserializeCallbacks);\n    deserializeCallbackIsSet = true;\n  }\n  deserializeCallbacks.push([callback\x2C data]);\n}\n\nconst serializeCallbacks = [];\nfunction runSerializeCallbacks() {\n  while (serializeCallbacks.length > 0) {\n    const { 0: callback\x2C 1: data } = serializeCallbacks.shift();\n    callback(data);\n  }\n}\n\nfunction addSerializeCallback(callback\x2C data) {\n  throwIfNotBuildingSnapshot();\n  validateFunction(callback\x2C 'callback');\n  serializeCallbacks.push([callback\x2C data]);\n}\n\nfunction initializeCallbacks() {\n  // Only run the serialize callbacks in snapshot building mode\x2C otherwise\n  // they throw.\n  if (isBuildingSnapshot()) {\n    setSerializeCallback(runSerializeCallbacks);\n  }\n}\n\nlet deserializeMainIsSet = false;\nfunction setDeserializeMainFunction(callback\x2C data) {\n  throwIfNotBuildingSnapshot();\n  // TODO(joyeecheung): In lib/internal/bootstrap/node.js\x2C create a default\n  // main function to run the lib/internal/main scripts and make sure that\n  // the main function set in the snapshot building process takes precedence.\n  validateFunction(callback\x2C 'callback');\n  if (deserializeMainIsSet) {\n    throw new ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION();\n  }\n  deserializeMainIsSet = true;\n\n  _setDeserializeMainFunction(function deserializeMain() {\n    const {\n      prepareMainThreadExecution\x2C\n      markBootstrapComplete\n    } = require('internal/process/pre_execution');\n\n    // This should be in sync with run_main_module.js until we make that\n    // a built-in main function.\n    prepareMainThreadExecution(true);\n    markBootstrapComplete();\n    callback(data);\n  });\n}\n\nmodule.exports = {\n  initializeCallbacks\x2C\n  runDeserializeCallbacks\x2C\n  // Exposed to require('v8').startupSnapshot\n  namespace: {\n    addDeserializeCallback\x2C\n    addSerializeCallback\x2C\n    setDeserializeMainFunction\x2C\n    isBuildingSnapshot\n  }\n};\n
code-source-info,0x1e372ce09de8,82,376,510,C0O438C6O445C11O472C19O473C24O508,,
tick,0x109cc92e0,23125,0,0x0,0,0xc1101dbf9af,0xc1101db1dbe,0xc1101dae2ac
code-creation,LazyCompile,10,23166,0x1e372ce0a5c8,202,setupFetch node:internal/process/pre_execution:196:20,0xc1101daf550,~
code-source-info,0x1e372ce0a5c8,423,5904,7061,C0O5904C24O5911C29O5923C34O5930C39O5940C49O5973C55O5973C61O6022C62O6029C63O6041C64O6041C66O6345C77O6361C86O6345C91O6637C102O6660C113O6688C124O6728C135O6767C146O6807C154O6637C159O6950C167O6950C172O6924C177O6986C185O6986C190O7017C195O7018C201O7060,,
code-creation,LazyCompile,10,23166,0x1e372ce0a838,5,get node:internal/bootstrap/node:158:6,0x3d9b80192fb0,~
script-source,16,node:internal/bootstrap/node,// Hello\x2C and welcome to hacking node.js!\n//\n// This file is invoked by `node::RunBootstrapping()` in `src/node.cc`\x2C and is\n// responsible for setting up node.js core before executing main scripts\n// under `lib/internal/main/`.\n//\n// This file is expected not to perform any asynchronous operations itself\n// when being executed - those should be done in either\n// `lib/internal/process/pre_execution.js` or in main scripts. The majority\n// of the code here focuses on setting up the global proxy and the process\n// object in a synchronous manner.\n// As special caution is given to the performance of the startup process\x2C\n// many dependencies are invoked lazily.\n//\n// Scripts run before this file:\n// - `lib/internal/per_context/primordials.js`: to save copies of JavaScript\n//   builtins that won't be affected by user land monkey-patching for internal\n//   modules to use.\n// - `lib/internal/bootstrap/loaders.js`: to setup internal binding and\n//   module loaders\x2C including `process.binding()`\x2C `process._linkedBinding()`\x2C\n//   `internalBinding()` and `BuiltinModule`.\n//\n// This file is run to bootstrap both the main thread and the worker threads.\n// After this file is run\x2C certain properties are setup according to the\n// configuration of the Node.js instance using the files in\n// `lib/internal/bootstrap/switches/`.\n//\n// Then\x2C depending on how the Node.js instance is launched\x2C one of the main\n// scripts in `lib/internal/main` will be selected by C++ to start the actual\n// execution. They may run additional setups exported by\n// `lib/internal/process/pre_execution.js` depending on the runtime states.\n\n'use strict';\n\n// This file is compiled as if it's wrapped in a function with arguments\n// passed by node::RunBootstrapping()\n/* global process\x2C require\x2C internalBinding\x2C primordials */\n\nsetupPrepareStackTrace();\n\nconst {\n  Array\x2C\n  ArrayPrototypeConcat\x2C\n  ArrayPrototypeFill\x2C\n  FunctionPrototypeCall\x2C\n  JSONParse\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectPreventExtensions\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectGet\x2C\n  ReflectSet\x2C\n  SymbolToStringTag\x2C\n  globalThis\x2C\n} = primordials;\nconst config = internalBinding('config');\nconst internalTimers = require('internal/timers');\nconst {\n  defineOperation\x2C\n  deprecate\x2C\n  exposeInterface\x2C\n} = require('internal/util');\nconst {\n  exiting_aliased_Uint32Array\x2C\n  getHiddenValue\x2C\n} = internalBinding('util');\n\nsetupProcessObject();\n\nsetupGlobalProxy();\nsetupBuffer();\n\nprocess.domain = null;\n{\n  const exitingAliasedUint32Array =\n    getHiddenValue(process\x2C exiting_aliased_Uint32Array);\n  ObjectDefineProperty(process\x2C '_exiting'\x2C {\n    __proto__: null\x2C\n    get() {\n      return exitingAliasedUint32Array[0] === 1;\n    }\x2C\n    set(value) {\n      exitingAliasedUint32Array[0] = value ? 1 : 0;\n    }\x2C\n    enumerable: true\x2C\n    configurable: true\x2C\n  });\n}\nprocess._exiting = false;\n\n// process.config is serialized config.gypi\nconst nativeModule = internalBinding('builtins');\n\n// TODO(@jasnell): Once this has gone through one full major\n// release cycle\x2C remove the Proxy and setter and update the\n// getter to either return a read-only object or always return\n// a freshly parsed version of nativeModule.config.\n\nconst deprecationHandler = {\n  warned: false\x2C\n  message: 'Setting process.config is deprecated. ' +\n           'In the future the property will be read-only.'\x2C\n  code: 'DEP0150'\x2C\n  maybeWarn() {\n    if (!this.warned) {\n      process.emitWarning(this.message\x2C {\n        type: 'DeprecationWarning'\x2C\n        code: this.code\n      });\n      this.warned = true;\n    }\n  }\x2C\n\n  defineProperty(target\x2C key\x2C descriptor) {\n    this.maybeWarn();\n    return ObjectDefineProperty(target\x2C key\x2C descriptor);\n  }\x2C\n\n  deleteProperty(target\x2C key) {\n    this.maybeWarn();\n    delete target[key];\n  }\x2C\n\n  preventExtensions(target) {\n    this.maybeWarn();\n    return ObjectPreventExtensions(target);\n  }\x2C\n\n  set(target\x2C key\x2C value) {\n    this.maybeWarn();\n    return ReflectSet(target\x2C key\x2C value);\n  }\x2C\n\n  get(target\x2C key\x2C receiver) {\n    const val = ReflectGet(target\x2C key\x2C receiver);\n    if (val != null && typeof val === 'object') {\n      // eslint-disable-next-line node-core/prefer-primordials\n      return new Proxy(val\x2C deprecationHandler);\n    }\n    return val;\n  }\x2C\n\n  setPrototypeOf(target\x2C proto) {\n    this.maybeWarn();\n    return ObjectSetPrototypeOf(target\x2C proto);\n  }\n};\n\n// eslint-disable-next-line node-core/prefer-primordials\nlet processConfig = new Proxy(\n  JSONParse(nativeModule.config)\x2C\n  deprecationHandler);\n\nObjectDefineProperty(process\x2C 'config'\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  configurable: true\x2C\n  get() { return processConfig; }\x2C\n  set(value) {\n    deprecationHandler.maybeWarn();\n    processConfig = value;\n  }\n});\n\nrequire('internal/worker/js_transferable').setup();\n\n// Bootstrappers for all threads\x2C including worker threads and main thread\nconst perThreadSetup = require('internal/process/per_thread');\nconst rawMethods = internalBinding('process_methods');\n\n// Set up methods on the process object for all threads\n{\n  process.dlopen = rawMethods.dlopen;\n  process.uptime = rawMethods.uptime;\n\n  // TODO(joyeecheung): either remove them or make them public\n  process._getActiveRequests = rawMethods._getActiveRequests;\n  process._getActiveHandles = rawMethods._getActiveHandles;\n\n  process.getActiveResourcesInfo = function() {\n    const timerCounts = internalTimers.getTimerCounts();\n    return ArrayPrototypeConcat(\n      rawMethods._getActiveRequestsInfo()\x2C\n      rawMethods._getActiveHandlesInfo()\x2C\n      ArrayPrototypeFill(new Array(timerCounts.timeoutCount)\x2C 'Timeout')\x2C\n      ArrayPrototypeFill(new Array(timerCounts.immediateCount)\x2C 'Immediate'));\n  };\n\n  // TODO(joyeecheung): remove these\n  process.reallyExit = rawMethods.reallyExit;\n  process._kill = rawMethods._kill;\n\n  const wrapped = perThreadSetup.wrapProcessMethods(rawMethods);\n  process._rawDebug = wrapped._rawDebug;\n  process.cpuUsage = wrapped.cpuUsage;\n  process.resourceUsage = wrapped.resourceUsage;\n  process.memoryUsage = wrapped.memoryUsage;\n  process.kill = wrapped.kill;\n  process.exit = wrapped.exit;\n\n  process.hrtime = perThreadSetup.hrtime;\n  process.hrtime.bigint = perThreadSetup.hrtimeBigInt;\n\n  process.openStdin = function() {\n    process.stdin.resume();\n    return process.stdin;\n  };\n}\n\nconst credentials = internalBinding('credentials');\nif (credentials.implementsPosixCredentials) {\n  process.getuid = credentials.getuid;\n  process.geteuid = credentials.geteuid;\n  process.getgid = credentials.getgid;\n  process.getegid = credentials.getegid;\n  process.getgroups = credentials.getgroups;\n}\n\n// Setup the callbacks that node::AsyncWrap will call when there are hooks to\n// process. They use the same functions as the JS embedder API. These callbacks\n// are setup immediately to prevent async_wrap.setupHooks() from being hijacked\n// and the cost of doing so is negligible.\nconst { nativeHooks } = require('internal/async_hooks');\ninternalBinding('async_wrap').setupHooks(nativeHooks);\n\nconst {\n  setupTaskQueue\x2C\n  queueMicrotask\n} = require('internal/process/task_queues');\n\n// Non-standard extensions:\nconst { BroadcastChannel } = require('internal/worker/io');\nexposeInterface(globalThis\x2C 'BroadcastChannel'\x2C BroadcastChannel);\n\ndefineOperation(globalThis\x2C 'queueMicrotask'\x2C queueMicrotask);\n\nconst timers = require('timers');\ndefineOperation(globalThis\x2C 'clearImmediate'\x2C timers.clearImmediate);\ndefineOperation(globalThis\x2C 'setImmediate'\x2C timers.setImmediate);\n\nconst {\n  structuredClone\x2C\n} = require('internal/structured_clone');\ndefineOperation(globalThis\x2C 'structuredClone'\x2C structuredClone);\n\n// Set the per-Environment callback that will be called\n// when the TrackingTraceStateObserver updates trace state.\n// Note that when NODE_USE_V8_PLATFORM is true\x2C the observer is\n// attached to the per-process TracingController.\nconst { setTraceCategoryStateUpdateHandler } = internalBinding('trace_events');\nsetTraceCategoryStateUpdateHandler(perThreadSetup.toggleTraceCategoryState);\n\n// process.allowedNodeEnvironmentFlags\nObjectDefineProperty(process\x2C 'allowedNodeEnvironmentFlags'\x2C {\n  __proto__: null\x2C\n  get() {\n    const flags = perThreadSetup.buildAllowedFlags();\n    process.allowedNodeEnvironmentFlags = flags;\n    return process.allowedNodeEnvironmentFlags;\n  }\x2C\n  // If the user tries to set this to another value\x2C override\n  // this completely to that value.\n  set(value) {\n    ObjectDefineProperty(this\x2C 'allowedNodeEnvironmentFlags'\x2C {\n      __proto__: null\x2C\n      value\x2C\n      configurable: true\x2C\n      enumerable: true\x2C\n      writable: true\n    });\n  }\x2C\n  enumerable: true\x2C\n  configurable: true\n});\n\n// process.assert\nprocess.assert = deprecate(\n  perThreadSetup.assert\x2C\n  'process.assert() is deprecated. Please use the `assert` module instead.'\x2C\n  'DEP0100');\n\n// TODO(joyeecheung): this property has not been well-maintained\x2C should we\n// deprecate it in favor of a better API?\nconst { isDebugBuild\x2C hasOpenSSL\x2C hasInspector } = config;\nconst features = {\n  inspector: hasInspector\x2C\n  debug: isDebugBuild\x2C\n  uv: true\x2C\n  ipv6: true\x2C  // TODO(bnoordhuis) ping libuv\n  tls_alpn: hasOpenSSL\x2C\n  tls_sni: hasOpenSSL\x2C\n  tls_ocsp: hasOpenSSL\x2C\n  tls: hasOpenSSL\x2C\n  // This needs to be dynamic because --no-node-snapshot disables the\n  // code cache even if the binary is built with embedded code cache.\n  get cached_builtins() {\n    return nativeModule.hasCachedBuiltins();\n  }\n};\n\nObjectDefineProperty(process\x2C 'features'\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  writable: false\x2C\n  configurable: false\x2C\n  value: features\n});\n\n{\n  const {\n    onGlobalUncaughtException\x2C\n    setUncaughtExceptionCaptureCallback\x2C\n    hasUncaughtExceptionCaptureCallback\n  } = require('internal/process/execution');\n\n  // For legacy reasons this is still called `_fatalException`\x2C even\n  // though it is now a global uncaught exception handler.\n  // The C++ land node::errors::TriggerUncaughtException grabs it\n  // from the process object because it has been monkey-patchable.\n  // TODO(joyeecheung): investigate whether process._fatalException\n  // can be deprecated.\n  process._fatalException = onGlobalUncaughtException;\n  process.setUncaughtExceptionCaptureCallback =\n    setUncaughtExceptionCaptureCallback;\n  process.hasUncaughtExceptionCaptureCallback =\n    hasUncaughtExceptionCaptureCallback;\n}\n\nconst { emitWarning } = require('internal/process/warning');\nprocess.emitWarning = emitWarning;\n\n// We initialize the tick callbacks and the timer callbacks last during\n// bootstrap to make sure that any operation done before this are synchronous.\n// If any ticks or timers are scheduled before this they are unlikely to work.\n{\n  const { nextTick\x2C runNextTicks } = setupTaskQueue();\n  process.nextTick = nextTick;\n  // Used to emulate a tick manually in the JS land.\n  // A better name for this function would be `runNextTicks` but\n  // it has been exposed to the process object so we keep this legacy name\n  // TODO(joyeecheung): either remove it or make it public\n  process._tickCallback = runNextTicks;\n\n  const { setupTimers } = internalBinding('timers');\n  const {\n    processImmediate\x2C\n    processTimers\x2C\n  } = internalTimers.getTimerCallbacks(runNextTicks);\n  // Sets two per-Environment callbacks that will be run from libuv:\n  // - processImmediate will be run in the callback of the per-Environment\n  //   check handle.\n  // - processTimers will be run in the callback of the per-Environment timer.\n  setupTimers(processImmediate\x2C processTimers);\n  // Note: only after this point are the timers effective\n}\n\n// Preload modules so that they are included in the builtin snapshot.\nrequire('fs');\nrequire('v8');\nrequire('vm');\nrequire('url');\nrequire('internal/options');\nif (config.hasOpenSSL) {\n  require('crypto');\n}\n\nfunction setupPrepareStackTrace() {\n  const {\n    setEnhanceStackForFatalException\x2C\n    setPrepareStackTraceCallback\n  } = internalBinding('errors');\n  const {\n    prepareStackTrace\x2C\n    fatalExceptionStackEnhancers: {\n      beforeInspector\x2C\n      afterInspector\n    }\n  } = require('internal/errors');\n  // Tell our PrepareStackTraceCallback passed to the V8 API\n  // to call prepareStackTrace().\n  setPrepareStackTraceCallback(prepareStackTrace);\n  // Set the function used to enhance the error stack for printing\n  setEnhanceStackForFatalException(beforeInspector\x2C afterInspector);\n}\n\nfunction setupProcessObject() {\n  const EventEmitter = require('events');\n  const origProcProto = ObjectGetPrototypeOf(process);\n  ObjectSetPrototypeOf(origProcProto\x2C EventEmitter.prototype);\n  FunctionPrototypeCall(EventEmitter\x2C process);\n  ObjectDefineProperty(process\x2C SymbolToStringTag\x2C {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    writable: true\x2C\n    configurable: false\x2C\n    value: 'process'\n  });\n\n  // Create global.process as getters so that we have a\n  // deprecation path for these in ES Modules.\n  // See https://github.com/nodejs/node/pull/26334.\n  let _process = process;\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\n    __proto__: null\x2C\n    get() {\n      return _process;\n    }\x2C\n    set(value) {\n      _process = value;\n    }\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n  });\n}\n\nfunction setupGlobalProxy() {\n  ObjectDefineProperty(globalThis\x2C SymbolToStringTag\x2C {\n    __proto__: null\x2C\n    value: 'global'\x2C\n    writable: false\x2C\n    enumerable: false\x2C\n    configurable: true\n  });\n  globalThis.global = globalThis;\n}\n\nfunction setupBuffer() {\n  const {\n    Buffer\x2C\n  } = require('buffer');\n  const bufferBinding = internalBinding('buffer');\n\n  // Only after this point can C++ use Buffer::New()\n  bufferBinding.setBufferPrototype(Buffer.prototype);\n  delete bufferBinding.setBufferPrototype;\n  delete bufferBinding.zeroFill;\n\n  // Create global.Buffer as getters so that we have a\n  // deprecation path for these in ES Modules.\n  // See https://github.com/nodejs/node/pull/26334.\n  let _Buffer = Buffer;\n  ObjectDefineProperty(globalThis\x2C 'Buffer'\x2C {\n    __proto__: null\x2C\n    get() {\n      return _Buffer;\n    }\x2C\n    set(value) {\n      _Buffer = value;\n    }\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n  });\n}\n
code-source-info,0x1e372ce0a838,16,4606,4634,C0O4611C4O4632,,
code-creation,LazyCompile,10,23708,0x1e372ce0b778,52,get node:internal/bootstrap/node:134:6,0x3d9b80192f10,~
code-source-info,0x1e372ce0b778,16,3973,4237,C0O4015C14O4015C20O4054C29O4169C35O4191C43O4176C48O4211C49O4222C51O4233,,
code-creation,LazyCompile,10,23750,0x1e372ce0ba18,33,lazyInterface node:internal/process/pre_execution:219:25,0x1e372ce0a420,~
code-source-info,0x1e372ce0ba18,423,6415,6633,C0O6415C9O6428C14O6494C22O6552C32O6629,,
code-creation,Eval,10,23791,0x1e372ce0bef0,5, node:internal/wasm_web_api:1:1,0x1e372ce0bd48,~
script-source,425,node:internal/wasm_web_api,'use strict';\n\nconst {\n  PromiseResolve\x2C\n} = primordials;\nconst {\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_WEBASSEMBLY_RESPONSE\x2C\n} = require('internal/errors').codes;\n\nlet undici;\nfunction lazyUndici() {\n  return undici ??= require('internal/deps/undici/undici');\n}\n\n// This is essentially an implementation of a v8::WasmStreamingCallback\x2C except\n// that it is implemented in JavaScript because the fetch() implementation is\n// difficult to use from C++. See lib/internal/process/pre_execution.js and\n// src/node_wasm_web_api.cc that interact with this function.\nfunction wasmStreamingCallback(streamState\x2C source) {\n  (async () => {\n    const response = await PromiseResolve(source);\n    if (!(response instanceof lazyUndici().Response)) {\n      throw new ERR_INVALID_ARG_TYPE(\n        'source'\x2C ['Response'\x2C 'Promise resolving to Response']\x2C response);\n    }\n\n    const contentType = response.headers.get('Content-Type');\n    if (contentType !== 'application/wasm') {\n      throw new ERR_WEBASSEMBLY_RESPONSE(\n        `has unsupported MIME type '${contentType}'`);\n    }\n\n    if (!response.ok) {\n      throw new ERR_WEBASSEMBLY_RESPONSE(\n        `has status code ${response.status}`);\n    }\n\n    if (response.bodyUsed !== false) {\n      throw new ERR_WEBASSEMBLY_RESPONSE('body has already been used');\n    }\n\n    if (response.url) {\n      streamState.setURL(response.url);\n    }\n\n    // Pass all data from the response body to the WebAssembly compiler.\n    const { body } = response;\n    if (body != null) {\n      for await (const chunk of body) {\n        streamState.push(chunk);\n      }\n    }\n  })().then(() => {\n    // No error occurred. Tell the implementation that the stream has ended.\n    streamState.finish();\n  }\x2C (err) => {\n    // An error occurred\x2C either because the given object was not a valid\n    // and usable Response or because a network error occurred.\n    streamState.abort(err);\n  });\n}\n\nmodule.exports = {\n  wasmStreamingCallback\n};\n
code-source-info,0x1e372ce0bef0,425,0,1947,C0O0C4O1947,,
code-creation,Function,10,23875,0x1e372ce0c088,88, node:internal/wasm_web_api:1:1,0x1e372ce0be68,~
code-source-info,0x1e372ce0c088,425,0,1947,C0O0C32O25C38O122C44O122C49O148C54O68C60O92C66O161C67O161C69O1901C76O1922C82O1916C87O1946,,
code-creation,LazyCompile,10,23958,0x1e372ce0ca38,256,setupWebCrypto node:internal/process/pre_execution:246:24,0xc1101daf600,~
code-source-info,0x1e372ce0ca38,423,7190,8016,C0O7190C8O7197C13O7209C18O7216C23O7226C33O7260C39O7260C45O7317C46O7324C47O7336C48O7336C50O7349C61O7370C76O7437C107O7437C120O7349C125O7710C133O7714C138O7739C144O7758C158O7772C162O7768C164O7814C175O7830C184O7862C189O7814C194O7875C205O7891C214O7926C219O7875C224O7942C235O7958C244O7996C249O7942C255O8015,,
code-creation,LazyCompile,10,23958,0x1e372ce0cd40,74,setupCustomEvent node:internal/process/pre_execution:270:26,0xc1101daf678,~
code-source-info,0x1e372ce0cd40,423,8149,8410,C0O8156C3O8168C8O8175C13O8185C21O8219C27O8219C33O8278C34O8285C35O8316C41O8316C46O8300C51O8352C58O8368C67O8352C73O8409,,
code-creation,LazyCompile,10,24000,0x1e372ce0cf38,75,setupDebugEnv node:internal/process/pre_execution:322:23,0xc1101daf7e0,~
code-source-info,0x1e372ce0cf38,423,9696,9907,C0O9703C6O9703C11O9736C19O9764C24O9768C29O9737C34O9783C42O9787C48O9831C54O9831C59O9868C64O9882C69O9883C74O9906,,
code-creation,LazyCompile,10,24041,0x1e372ce0d2d0,159,initializeDebugEnv node:internal/util/debuglog:22:28,0xa0ae21dcc30,~
script-source,28,node:internal/util/debuglog,'use strict';\n\nconst {\n  ObjectCreate\x2C\n  ObjectDefineProperty\x2C\n  RegExp\x2C\n  RegExpPrototypeExec\x2C\n  SafeArrayIterator\x2C\n  StringPrototypeToLowerCase\x2C\n  StringPrototypeToUpperCase\x2C\n} = primordials;\n\nconst { inspect\x2C format\x2C formatWithOptions } = require('internal/util/inspect');\n\n// `debugImpls` and `testEnabled` are deliberately not initialized so any call\n// to `debuglog()` before `initializeDebugEnv()` is called will throw.\nlet debugImpls;\nlet testEnabled;\n\n\n// `debugEnv` is initial value of process.env.NODE_DEBUG\nfunction initializeDebugEnv(debugEnv) {\n  debugImpls = ObjectCreate(null);\n  if (debugEnv) {\n    // This is run before any user code\x2C it's OK not to use primordials.\n    debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g\x2C '\\\\$&')\n      .replaceAll('*'\x2C '.*')\n      .replaceAll('\x2C'\x2C '$|^');\n    const debugEnvRegex = new RegExp(`^${debugEnv}$`\x2C 'i');\n    testEnabled = (str) => RegExpPrototypeExec(debugEnvRegex\x2C str) !== null;\n  } else {\n    testEnabled = () => false;\n  }\n}\n\n// Emits warning when user sets\n// NODE_DEBUG=http or NODE_DEBUG=http2.\nfunction emitWarningIfNeeded(set) {\n  if ('HTTP' === set || 'HTTP2' === set) {\n    process.emitWarning('Setting the NODE_DEBUG environment variable ' +\n      'to \\'' + StringPrototypeToLowerCase(set) + '\\' can expose sensitive ' +\n      'data (such as passwords\x2C tokens and authentication headers) ' +\n      'in the resulting log.');\n  }\n}\n\nconst noop = () => {};\n\nfunction debuglogImpl(enabled\x2C set) {\n  if (debugImpls[set] === undefined) {\n    if (enabled) {\n      const pid = process.pid;\n      emitWarningIfNeeded(set);\n      debugImpls[set] = function debug(...args) {\n        const colors = process.stderr.hasColors && process.stderr.hasColors();\n        const msg = formatWithOptions({ colors }\x2C ...args);\n        const coloredPID = inspect(pid\x2C { colors });\n        process.stderr.write(format('%s %s: %s\\n'\x2C set\x2C coloredPID\x2C msg));\n      };\n    } else {\n      debugImpls[set] = noop;\n    }\n  }\n  return debugImpls[set];\n}\n\n// debuglogImpl depends on process.pid and process.env.NODE_DEBUG\x2C\n// so it needs to be called lazily in top scopes of internal modules\n// that may be loaded before these run time states are allowed to\n// be accessed.\nfunction debuglog(set\x2C cb) {\n  function init() {\n    set = StringPrototypeToUpperCase(set);\n    enabled = testEnabled(set);\n  }\n  let debug = (...args) => {\n    init();\n    // Only invokes debuglogImpl() when the debug function is\n    // called for the first time.\n    debug = debuglogImpl(enabled\x2C set);\n    if (typeof cb === 'function')\n      cb(debug);\n    switch (args.length) {\n      case 1: return debug(args[0]);\n      case 2: return debug(args[0]\x2C args[1]);\n      default: return debug(...new SafeArrayIterator(args));\n    }\n  };\n  let enabled;\n  let test = () => {\n    init();\n    test = () => enabled;\n    return enabled;\n  };\n  const logger = (...args) => {\n    switch (args.length) {\n      case 1: return debug(args[0]);\n      case 2: return debug(args[0]\x2C args[1]);\n      default: return debug(...new SafeArrayIterator(args));\n    }\n  };\n  ObjectDefineProperty(logger\x2C 'enabled'\x2C {\n    __proto__: null\x2C\n    get() {\n      return test();\n    }\x2C\n    configurable: true\x2C\n    enumerable: true\n  });\n  return logger;\n}\n\nmodule.exports = {\n  debuglog\x2C\n  initializeDebugEnv\n};\n
code-source-info,0x1e372ce0d2d0,28,546,991,C0O561C7O574C14O572C20O596C31O709C44O709C51O753C62O754C69O782C80O783C88O833C100O848C116O833C121O833C123O871C132O883C144O959C151O971C158O990,,
code-creation,LazyCompile,10,24208,0x1e372ce0d8e0,49,setupStacktracePrinterOnSigint node:internal/process/pre_execution:300:40,0xc1101daf718,~
code-source-info,0x1e372ce0d8e0,423,9240,9426,C0O9247C8O9252C14O9292C15O9299C16O9333C22O9333C27O9314C32O9383C38O9416C43O9416C48O9425,,
code-creation,LazyCompile,10,24208,0x1e372ce0db00,62,initializeReport node:internal/process/pre_execution:310:26,0xc1101daf768,~
code-source-info,0x1e372ce0db00,423,9453,9672,C0O9453C8O9479C16O9479C21O9468C27O9517C42O9538C47O9630C55O9517C61O9671,,
code-creation,Eval,10,24291,0x1e372ce0e078,5, node:internal/process/report:1:1,0x1e372ce0de80,~
script-source,426,node:internal/process/report,'use strict';\nconst {\n  ERR_SYNTHETIC\n} = require('internal/errors').codes;\nconst {\n  validateBoolean\x2C\n  validateObject\x2C\n  validateSignalName\x2C\n  validateString\x2C\n} = require('internal/validators');\nconst nr = internalBinding('report');\nconst {\n  JSONParse\x2C\n} = primordials;\nconst report = {\n  writeReport(file\x2C err) {\n    if (typeof file === 'object' && file !== null) {\n      err = file;\n      file = undefined;\n    } else if (file !== undefined) {\n      validateString(file\x2C 'file');\n    }\n\n    if (err === undefined) {\n      err = new ERR_SYNTHETIC();\n    } else {\n      validateObject(err\x2C 'err');\n    }\n\n    return nr.writeReport('JavaScript API'\x2C 'API'\x2C file\x2C err);\n  }\x2C\n  getReport(err) {\n    if (err === undefined)\n      err = new ERR_SYNTHETIC();\n    else\n      validateObject(err\x2C 'err');\n\n    return JSONParse(nr.getReport(err));\n  }\x2C\n  get directory() {\n    return nr.getDirectory();\n  }\x2C\n  set directory(dir) {\n    validateString(dir\x2C 'directory');\n    nr.setDirectory(dir);\n  }\x2C\n  get filename() {\n    return nr.getFilename();\n  }\x2C\n  set filename(name) {\n    validateString(name\x2C 'filename');\n    nr.setFilename(name);\n  }\x2C\n  get compact() {\n    return nr.getCompact();\n  }\x2C\n  set compact(b) {\n    validateBoolean(b\x2C 'compact');\n    nr.setCompact(b);\n  }\x2C\n  get signal() {\n    return nr.getSignal();\n  }\x2C\n  set signal(sig) {\n    validateSignalName(sig\x2C 'signal');\n    removeSignalHandler();\n    addSignalHandler(sig);\n    nr.setSignal(sig);\n  }\x2C\n  get reportOnFatalError() {\n    return nr.shouldReportOnFatalError();\n  }\x2C\n  set reportOnFatalError(trigger) {\n    validateBoolean(trigger\x2C 'trigger');\n\n    nr.setReportOnFatalError(trigger);\n  }\x2C\n  get reportOnSignal() {\n    return nr.shouldReportOnSignal();\n  }\x2C\n  set reportOnSignal(trigger) {\n    validateBoolean(trigger\x2C 'trigger');\n\n    nr.setReportOnSignal(trigger);\n    removeSignalHandler();\n    addSignalHandler();\n  }\x2C\n  get reportOnUncaughtException() {\n    return nr.shouldReportOnUncaughtException();\n  }\x2C\n  set reportOnUncaughtException(trigger) {\n    validateBoolean(trigger\x2C 'trigger');\n\n    nr.setReportOnUncaughtException(trigger);\n  }\n};\n\nfunction addSignalHandler(sig) {\n  if (nr.shouldReportOnSignal()) {\n    if (typeof sig !== 'string')\n      sig = nr.getSignal();\n\n    process.on(sig\x2C signalHandler);\n  }\n}\n\nfunction removeSignalHandler() {\n  const sig = nr.getSignal();\n\n  if (sig)\n    process.removeListener(sig\x2C signalHandler);\n}\n\nfunction signalHandler(sig) {\n  nr.writeReport(sig\x2C 'Signal'\x2C null\x2C '');\n}\n\nmodule.exports = {\n  addSignalHandler\x2C\n  report\n};\n
code-source-info,0x1e372ce0e078,426,0,2545,C0O0C4O2545,,
code-creation,Function,10,24458,0x1e372ce0eb88,306, node:internal/process/report:1:1,0x1e372ce0dff0,~
code-source-info,0x1e372ce0eb88,426,0,2545,C0O0C48O42C51O42C56O68C61O24C67O165C70O165C75O86C81O105C87O123C93O145C99O208C102O208C106O208C108O245C114O288C119O292C127O678C281O2494C288O2515C294O2535C300O2509C305O2544,,
tick,0x104ea0dcc,24458,1,0x104a8d6ec,3,0x0,0x3d9b8018ed2e,0x109cc956c,0x1e372ce0db10,0xc1101db1e10,0xc1101dae2ac
code-creation,LazyCompile,10,24541,0x1e372ce107d8,21,initializeReportSignalHandlers node:internal/process/pre_execution:330:40,0xc1101daf830,~
code-source-info,0x1e372ce107d8,423,10008,10104,C0O10044C6O10044C11O10023C16O10083C20O10103,,
code-creation,LazyCompile,10,24541,0x1e372ce108e0,57,addSignalHandler node:internal/process/report:98:26,0x1e372ce0e0a8,~
code-source-info,0x1e372ce108e0,426,2144,2290,C0O2154C5O2161C10O2161C16O2191C22O2226C27O2235C32O2235C38O2253C41O2261C49O2261C56O2289,,
code-creation,LazyCompile,10,24583,0x1e372ce10f38,136,initializeHeapSnapshotSignalHandlers node:internal/process/pre_execution:336:46,0xc1101daf880,~
code-source-info,0x1e372ce10f38,423,10151,10687,C0O10151C17O10173C27O10173C31O10173C33O10217C37O10234C38O10241C39O10245C47O10245C52O10275C60O10276C65O10336C73O10336C78O10314C84O10418C89O10426C100O10426C106O10554C113O10558C118O10586C130O10586C135O10686,,
code-creation,LazyCompile,10,24625,0x1e372ce11218,138,setupChildProcessIpcChannel node:internal/process/pre_execution:449:37,0xc1101dafa38,~
code-source-info,0x1e372ce11218,423,13860,14389,C0O13867C3O13879C8O13883C14O13921C20O13921C25O13965C33O13988C38O13992C46O13965C52O14018C53O14028C57O14018C61O14109C64O14124C73O14182C76O14190C81O14194C90O14241C93O14256C102O14298C108O14298C113O14322C118O14323C124O14362C127O14377C132O14362C137O14388,,
code-creation,LazyCompile,10,24666,0x1e372ce11618,455,initializePolicy node:internal/process/pre_execution:477:26,0xc1101dafad8,~
code-source-info,0x1e372ce
code-creation,LazyCompile,10,24708,0x1e372ce11a58,63,initializeClusterIPC node:internal/process/pre_execution:468:30,0xc1101dafa88,~
code-source-info,0x1e372ce11a58,423,14420,14661,C0O14427C3O14439C10O14443C18O14458C23O14462C29O14500C35O14500C40O14532C45O14532C49O14621C52O14636C62O14660,,
code-creation,LazyCompile,10,24750,0x1e372ce11bc8,27,initializeSourceMapsHandlers node:internal/process/pre_execution:572:38,0xc1101dafc18,~
code-source-info,0x1e372ce11bc8,423,18221,18370,C0O18265C6O18265C11O18236C16O18316C21O18345C26O18369,,
code-creation,Eval,10,24875,0x1e372ce127c8,5, node:internal/source_map/source_map_cache:1:1,0x1e372ce12400,~
script-source,427,node:internal/source_map/source_map_cache,'use strict';\n\nconst {\n  ArrayPrototypeMap\x2C\n  JSONParse\x2C\n  ObjectCreate\x2C\n  ObjectKeys\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  RegExpPrototypeExec\x2C\n  RegExpPrototypeSymbolSplit\x2C\n  SafeMap\x2C\n  StringPrototypeSplit\x2C\n} = primordials;\n\nfunction ObjectGetValueSafe(obj\x2C key) {\n  const desc = ObjectGetOwnPropertyDescriptor(obj\x2C key);\n  return ObjectPrototypeHasOwnProperty(desc\x2C 'value') ? desc.value : undefined;\n}\n\n// See https://sourcemaps.info/spec.html for SourceMap V3 specification.\nconst { Buffer } = require('buffer');\nlet debug = require('internal/util/debuglog').debuglog('source_map'\x2C (fn) => {\n  debug = fn;\n});\nconst fs = require('fs');\nconst { getOptionValue } = require('internal/options');\nconst { IterableWeakMap } = require('internal/util/iterable_weak_map');\nconst {\n  normalizeReferrerURL\x2C\n} = require('internal/modules/cjs/helpers');\nconst { validateBoolean } = require('internal/validators');\nconst { setMaybeCacheGeneratedSourceMap } = internalBinding('errors');\n\n// Since the CJS module cache is mutable\x2C which leads to memory leaks when\n// modules are deleted\x2C we use a WeakMap so that the source map cache will\n// be purged automatically:\nconst cjsSourceMapCache = new IterableWeakMap();\n// The esm cache is not mutable\x2C so we can use a Map without memory concerns:\nconst esmSourceMapCache = new SafeMap();\n// The generated sources is not mutable\x2C so we can use a Map without memory concerns:\nconst generatedSourceMapCache = new SafeMap();\nconst kLeadingProtocol = /^\\w+:\\/\\//;\nconst kSourceMappingURLMagicComment = /\\/[*/]#\\s+sourceMappingURL=(?<sourceMappingURL>[^\\s]+)/;\nconst kSourceURLMagicComment = /\\/[*/]#\\s+sourceURL=(?<sourceURL>[^\\s]+)/;\n\nconst { fileURLToPath\x2C pathToFileURL\x2C URL } = require('internal/url');\nlet SourceMap;\n\nlet sourceMapsEnabled;\nfunction getSourceMapsEnabled() {\n  if (sourceMapsEnabled === undefined) {\n    setSourceMapsEnabled(getOptionValue('--enable-source-maps'));\n  }\n  return sourceMapsEnabled;\n}\n\nfunction setSourceMapsEnabled(val) {\n  validateBoolean(val\x2C 'val');\n\n  const {\n    setSourceMapsEnabled\x2C\n    setPrepareStackTraceCallback\n  } = internalBinding('errors');\n  setSourceMapsEnabled(val);\n  if (val) {\n    const {\n      prepareStackTrace\n    } = require('internal/source_map/prepare_stack_trace');\n    setPrepareStackTraceCallback(prepareStackTrace);\n  } else if (sourceMapsEnabled !== undefined) {\n    // Reset prepare stack trace callback only when disabling source maps.\n    const {\n      prepareStackTrace\x2C\n    } = require('internal/errors');\n    setPrepareStackTraceCallback(prepareStackTrace);\n  }\n\n  sourceMapsEnabled = val;\n}\n\nfunction extractSourceURLMagicComment(content) {\n  const matchSourceURL = RegExpPrototypeExec(\n    kSourceURLMagicComment\x2C\n    content\n  );\n  if (matchSourceURL === null) {\n    return null;\n  }\n  let sourceURL = matchSourceURL.groups.sourceURL;\n  if (sourceURL != null && RegExpPrototypeExec(kLeadingProtocol\x2C sourceURL) === null) {\n    sourceURL = pathToFileURL(sourceURL).href;\n  }\n  return sourceURL;\n}\n\nfunction maybeCacheSourceMap(filename\x2C content\x2C cjsModuleInstance\x2C isGeneratedSource\x2C sourceURL) {\n  const sourceMapsEnabled = getSourceMapsEnabled();\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\n  try {\n    filename = normalizeReferrerURL(filename);\n  } catch (err) {\n    // This is most likely an invalid filename in sourceURL of [eval]-wrapper.\n    debug(err);\n    return;\n  }\n  const match = RegExpPrototypeExec(kSourceMappingURLMagicComment\x2C content);\n  if (sourceURL === undefined) {\n    sourceURL = extractSourceURLMagicComment(content);\n  }\n  if (match) {\n    const data = dataFromUrl(filename\x2C match.groups.sourceMappingURL);\n    const url = data ? null : match.groups.sourceMappingURL;\n    if (cjsModuleInstance) {\n      cjsSourceMapCache.set(cjsModuleInstance\x2C {\n        filename\x2C\n        lineLengths: lineLengths(content)\x2C\n        data\x2C\n        url\x2C\n        sourceURL\x2C\n      });\n    } else if (isGeneratedSource) {\n      const entry = {\n        lineLengths: lineLengths(content)\x2C\n        data\x2C\n        url\x2C\n        sourceURL\n      };\n      generatedSourceMapCache.set(filename\x2C entry);\n      if (sourceURL) {\n        generatedSourceMapCache.set(sourceURL\x2C entry);\n      }\n    } else {\n      // If there is no cjsModuleInstance and is not generated source assume we are in a\n      // "modules/esm" context.\n      const entry = {\n        lineLengths: lineLengths(content)\x2C\n        data\x2C\n        url\x2C\n        sourceURL\x2C\n      };\n      esmSourceMapCache.set(filename\x2C entry);\n      if (sourceURL) {\n        esmSourceMapCache.set(sourceURL\x2C entry);\n      }\n    }\n  }\n}\n\nfunction maybeCacheGeneratedSourceMap(content) {\n  const sourceMapsEnabled = getSourceMapsEnabled();\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\n\n  const sourceURL = extractSourceURLMagicComment(content);\n  if (sourceURL === null) {\n    return;\n  }\n  try {\n    maybeCacheSourceMap(sourceURL\x2C content\x2C null\x2C true\x2C sourceURL);\n  } catch (err) {\n    // This can happen if the filename is not a valid URL.\n    // If we fail to cache the source map\x2C we should not fail the whole process.\n    debug(err);\n  }\n}\nsetMaybeCacheGeneratedSourceMap(maybeCacheGeneratedSourceMap);\n\nfunction dataFromUrl(sourceURL\x2C sourceMappingURL) {\n  try {\n    const url = new URL(sourceMappingURL);\n    switch (url.protocol) {\n      case 'data:':\n        return sourceMapFromDataUrl(sourceURL\x2C url.pathname);\n      default:\n        debug(`unknown protocol ${url.protocol}`);\n        return null;\n    }\n  } catch (err) {\n    debug(err);\n    // If no scheme is present\x2C we assume we are dealing with a file path.\n    const mapURL = new URL(sourceMappingURL\x2C sourceURL).href;\n    return sourceMapFromFile(mapURL);\n  }\n}\n\n// Cache the length of each line in the file that a source map was extracted\n// from. This allows translation from byte offset V8 coverage reports\x2C\n// to line/column offset Source Map V3.\nfunction lineLengths(content) {\n  // We purposefully keep \\r as part of the line-length calculation\x2C in\n  // cases where there is a \\r\\n separator\x2C so that this can be taken into\n  // account in coverage calculations.\n  return ArrayPrototypeMap(RegExpPrototypeSymbolSplit(/\\n|\\u2028|\\u2029/\x2C content)\x2C (line) => {\n    return line.length;\n  });\n}\n\nfunction sourceMapFromFile(mapURL) {\n  try {\n    const content = fs.readFileSync(fileURLToPath(mapURL)\x2C 'utf8');\n    const data = JSONParse(content);\n    return sourcesToAbsolute(mapURL\x2C data);\n  } catch (err) {\n    debug(err);\n    return null;\n  }\n}\n\n// data:[<mediatype>][;base64]\x2C<data> see:\n// https://tools.ietf.org/html/rfc2397#section-2\nfunction sourceMapFromDataUrl(sourceURL\x2C url) {\n  const { 0: format\x2C 1: data } = StringPrototypeSplit(url\x2C '\x2C');\n  const splitFormat = StringPrototypeSplit(format\x2C ';');\n  const contentType = splitFormat[0];\n  const base64 = splitFormat[splitFormat.length - 1] === 'base64';\n  if (contentType === 'application/json') {\n    const decodedData = base64 ?\n      Buffer.from(data\x2C 'base64').toString('utf8') : data;\n    try {\n      const parsedData = JSONParse(decodedData);\n      return sourcesToAbsolute(sourceURL\x2C parsedData);\n    } catch (err) {\n      debug(err);\n      return null;\n    }\n  } else {\n    debug(`unknown content-type ${contentType}`);\n    return null;\n  }\n}\n\n// If the sources are not absolute URLs after prepending of the "sourceRoot"\x2C\n// the sources are resolved relative to the SourceMap (like resolving script\n// src in a html document).\nfunction sourcesToAbsolute(baseURL\x2C data) {\n  data.sources = data.sources.map((source) => {\n    source = (data.sourceRoot || '') + source;\n    return new URL(source\x2C baseURL).href;\n  });\n  // The sources array is now resolved to absolute URLs\x2C sourceRoot should\n  // be updated to noop.\n  data.sourceRoot = '';\n  return data;\n}\n\n// WARNING: The `sourceMapCacheToObject` and `appendCJSCache` run during\n// shutdown. In particular\x2C they also run when Workers are terminated\x2C making\n// it important that they do not call out to any user-provided code\x2C including\n// built-in prototypes that might have been tampered with.\n\n// Get serialized representation of source-map cache\x2C this is used\n// to persist a cache of source-maps to disk when NODE_V8_COVERAGE is enabled.\nfunction sourceMapCacheToObject() {\n  const obj = ObjectCreate(null);\n\n  for (const { 0: k\x2C 1: v } of esmSourceMapCache) {\n    obj[k] = v;\n  }\n\n  appendCJSCache(obj);\n\n  if (ObjectKeys(obj).length === 0) {\n    return undefined;\n  }\n  return obj;\n}\n\nfunction appendCJSCache(obj) {\n  for (const value of cjsSourceMapCache) {\n    obj[ObjectGetValueSafe(value\x2C 'filename')] = {\n      lineLengths: ObjectGetValueSafe(value\x2C 'lineLengths')\x2C\n      data: ObjectGetValueSafe(value\x2C 'data')\x2C\n      url: ObjectGetValueSafe(value\x2C 'url')\n    };\n  }\n}\n\nfunction findSourceMap(sourceURL) {\n  if (RegExpPrototypeExec(kLeadingProtocol\x2C sourceURL) === null) {\n    sourceURL = pathToFileURL(sourceURL).href;\n  }\n  if (!SourceMap) {\n    SourceMap = require('internal/source_map/source_map').SourceMap;\n  }\n  let sourceMap = esmSourceMapCache.get(sourceURL) ?? generatedSourceMapCache.get(sourceURL);\n  if (sourceMap === undefined) {\n    for (const value of cjsSourceMapCache) {\n      const filename = ObjectGetValueSafe(value\x2C 'filename');\n      const cachedSourceURL = ObjectGetValueSafe(value\x2C 'sourceURL');\n      if (sourceURL === filename || sourceURL === cachedSourceURL) {\n        sourceMap = {\n          data: ObjectGetValueSafe(value\x2C 'data')\n        };\n      }\n    }\n  }\n  if (sourceMap && sourceMap.data) {\n    return new SourceMap(sourceMap.data);\n  }\n  return null;\n}\n\nmodule.exports = {\n  findSourceMap\x2C\n  getSourceMapsEnabled\x2C\n  setSourceMapsEnabled\x2C\n  maybeCacheSourceMap\x2C\n  sourceMapCacheToObject\x2C\n};\n
code-source-info,0x1e372ce127c8,427,0,9752,C0O0C4O9752,,
code-creation,Function,10,25250,0x1e372ce12f18,506, node:internal/source_map/source_map_cache:1:1,0x1e372ce12740,~
code-source-info,0x1e372ce12f
code-creation,Eval,10,25375,0x1e372ce14298,5, node:internal/util/iterable_weak_map:1:1,0x1e372ce14038,~
script-source,428,node:internal/util/iterable_weak_map,'use strict';\n\nconst {\n  ObjectFreeze\x2C\n  SafeFinalizationRegistry\x2C\n  SafeSet\x2C\n  SafeWeakMap\x2C\n  SafeWeakRef\x2C\n  SymbolIterator\x2C\n} = primordials;\n\n// This class is modified from the example code in the WeakRefs specification:\n// https://github.com/tc39/proposal-weakrefs\n// Licensed under ECMA's MIT-style license\x2C see:\n// https://github.com/tc39/ecma262/blob/HEAD/LICENSE.md\nclass IterableWeakMap {\n  #weakMap = new SafeWeakMap();\n  #refSet = new SafeSet();\n  #finalizationGroup = new SafeFinalizationRegistry(cleanup);\n\n  set(key\x2C value) {\n    const entry = this.#weakMap.get(key);\n    if (entry) {\n      // If there's already an entry for the object represented by "key"\x2C\n      // the value can be updated without creating a new WeakRef:\n      this.#weakMap.set(key\x2C { value\x2C ref: entry.ref });\n    } else {\n      const ref = new SafeWeakRef(key);\n      this.#weakMap.set(key\x2C { value\x2C ref });\n      this.#refSet.add(ref);\n      this.#finalizationGroup.register(key\x2C {\n        set: this.#refSet\x2C\n        ref\n      }\x2C ref);\n    }\n  }\n\n  get(key) {\n    return this.#weakMap.get(key)?.value;\n  }\n\n  has(key) {\n    return this.#weakMap.has(key);\n  }\n\n  delete(key) {\n    const entry = this.#weakMap.get(key);\n    if (!entry) {\n      return false;\n    }\n    this.#weakMap.delete(key);\n    this.#refSet.delete(entry.ref);\n    this.#finalizationGroup.unregister(entry.ref);\n    return true;\n  }\n\n  [SymbolIterator]() {\n    const iterator = this.#refSet[SymbolIterator]();\n\n    const next = () => {\n      const result = iterator.next();\n      if (result.done) return result;\n      const key = result.value.deref();\n      if (key == null) return next();\n      const { value } = this.#weakMap.get(key);\n      return { done: false\x2C value };\n    };\n\n    return {\n      [SymbolIterator]() { return this; }\x2C\n      next\x2C\n    };\n  }\n}\n\nfunction cleanup({ set\x2C ref }) {\n  set.delete(ref);\n}\n\nObjectFreeze(IterableWeakMap.prototype);\n\nmodule.exports = {\n  IterableWeakMap\x2C\n};\n
code-source-info,0x1e372ce14298,428,0,1958,C0O0C4O1958,,
code-creation,Function,10,25458,0x1e372ce149f8,196, node:internal/util/iterable_weak_map:1:1,0x1e372ce14210,~
code-source-info,0x1e372ce149f8,428,0,1958,C0O0C26O25C31O41C37O69C43O80C49O95C55O110C134O1392C168O1904C173O1875C177O1917C184O1938C190O1932C195O1957,,
code-creation,Function,10,25458,0x1e372ce14b78,66,<instance_members_initializer> node:internal/util/iterable_weak_map:16:1,0x1e372ce14520,~
code-source-info,0x1e372ce14b78,428,373,1818,C3O410C10O410C22O441C29O441C41O479C55O479C65O1818,,
code-creation,Eval,10,25625,0x1e372ce157c8,5, node:internal/modules/cjs/helpers:1:1,0x1e372ce15500,~
script-source,429,node:internal/modules/cjs/helpers,'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeSome\x2C\n  ObjectDefineProperty\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeStartsWith\x2C\n} = primordials;\nconst {\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\n  ERR_UNKNOWN_BUILTIN_MODULE\n} = require('internal/errors').codes;\nconst { BuiltinModule } = require('internal/bootstrap/loaders');\n\nconst { validateString } = require('internal/validators');\nconst path = require('path');\nconst { pathToFileURL\x2C fileURLToPath\x2C URL } = require('internal/url');\n\nconst { getOptionValue } = require('internal/options');\nconst { setOwnProperty } = require('internal/util');\nconst userConditions = getOptionValue('--conditions');\n\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\n  debug = fn;\n});\n\nconst noAddons = getOptionValue('--no-addons');\nconst addonConditions = noAddons ? [] : ['node-addons'];\n\n// TODO: Use this set when resolving pkg#exports conditions in loader.js.\nconst cjsConditions = new SafeSet([\n  'require'\x2C\n  'node'\x2C\n  ...addonConditions\x2C\n  ...userConditions\x2C\n]);\n\nfunction loadBuiltinModule(filename\x2C request) {\n  const mod = BuiltinModule.map.get(filename);\n  if (mod?.canBeRequiredByUsers) {\n    debug('load built-in module %s'\x2C request);\n    // compileForPublicLoader() throws if mod.canBeRequiredByUsers is false:\n    mod.compileForPublicLoader();\n    return mod;\n  }\n}\n\n// Invoke with makeRequireFunction(module) where |module| is the Module object\n// to use as the context for the require() function.\n// Use redirects to set up a mapping from a policy and restrict dependencies\nconst urlToFileCache = new SafeMap();\nfunction makeRequireFunction(mod\x2C redirects) {\n  const Module = mod.constructor;\n\n  let require;\n  if (redirects) {\n    const id = mod.filename || mod.id;\n    const conditions = cjsConditions;\n    const { resolve\x2C reaction } = redirects;\n    require = function require(specifier) {\n      let missing = true;\n      const destination = resolve(specifier\x2C conditions);\n      if (destination === true) {\n        missing = false;\n      } else if (destination) {\n        const href = destination.href;\n        if (destination.protocol === 'node:') {\n          const specifier = destination.pathname;\n          const mod = loadBuiltinModule(specifier\x2C href);\n          if (mod && mod.canBeRequiredByUsers) {\n            return mod.exports;\n          }\n          throw new ERR_UNKNOWN_BUILTIN_MODULE(specifier);\n        } else if (destination.protocol === 'file:') {\n          let filepath;\n          if (urlToFileCache.has(href)) {\n            filepath = urlToFileCache.get(href);\n          } else {\n            filepath = fileURLToPath(destination);\n            urlToFileCache.set(href\x2C filepath);\n          }\n          return mod.require(filepath);\n        }\n      }\n      if (missing) {\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\n          id\x2C\n          specifier\x2C\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C ')\n        ));\n      }\n      return mod.require(specifier);\n    };\n  } else {\n    require = function require(path) {\n      return mod.require(path);\n    };\n  }\n\n  function resolve(request\x2C options) {\n    validateString(request\x2C 'request');\n    return Module._resolveFilename(request\x2C mod\x2C false\x2C options);\n  }\n\n  require.resolve = resolve;\n\n  function paths(request) {\n    validateString(request\x2C 'request');\n    return Module._resolveLookupPaths(request\x2C mod);\n  }\n\n  resolve.paths = paths;\n\n  setOwnProperty(require\x2C 'main'\x2C process.mainModule);\n\n  // Enable support to add extra extension types.\n  require.extensions = Module._extensions;\n\n  require.cache = Module._cache;\n\n  return require;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n * because the buffer-to-string conversion in `fs.readFileSync()`\n * translates it to FEFF\x2C the UTF-16 BOM.\n */\nfunction stripBOM(content) {\n  if (StringPrototypeCharCodeAt(content) === 0xFEFF) {\n    content = StringPrototypeSlice(content\x2C 1);\n  }\n  return content;\n}\n\nfunction addBuiltinLibsToObject(object\x2C dummyModuleName) {\n  // Make built-in modules available directly (loaded lazily).\n  const Module = require('internal/modules/cjs/loader').Module;\n  const { builtinModules } = Module;\n\n  // To require built-in modules in user-land and ignore modules whose\n  // `canBeRequiredByUsers` is false. So we create a dummy module object and not\n  // use `require()` directly.\n  const dummyModule = new Module(dummyModuleName);\n\n  ArrayPrototypeForEach(builtinModules\x2C (name) => {\n    // Neither add underscored modules\x2C nor ones that contain slashes (e.g.\x2C\n    // 'fs/promises') or ones that are already defined.\n    if (StringPrototypeStartsWith(name\x2C '_') ||\n        StringPrototypeIncludes(name\x2C '/') ||\n        ObjectPrototypeHasOwnProperty(object\x2C name)) {\n      return;\n    }\n    // Goals of this mechanism are:\n    // - Lazy loading of built-in modules\n    // - Having all built-in modules available as non-enumerable properties\n    // - Allowing the user to re-assign these variables as if there were no\n    //   pre-existing globals with the same name.\n\n    const setReal = (val) => {\n      // Deleting the property before re-assigning it disables the\n      // getter/setter mechanism.\n      delete object[name];\n      object[name] = val;\n    };\n\n    ObjectDefineProperty(object\x2C name\x2C {\n      __proto__: null\x2C\n      get: () => {\n        const lib = dummyModule.require(name);\n\n        // Disable the current getter/setter and set up a new\n        // non-enumerable property.\n        delete object[name];\n        ObjectDefineProperty(object\x2C name\x2C {\n          __proto__: null\x2C\n          get: () => lib\x2C\n          set: setReal\x2C\n          configurable: true\x2C\n          enumerable: false\n        });\n\n        return lib;\n      }\x2C\n      set: setReal\x2C\n      configurable: true\x2C\n      enumerable: false\n    });\n  });\n}\n\n/**\n *\n * @param {string | URL} referrer\n * @returns {string}\n */\nfunction normalizeReferrerURL(referrer) {\n  if (typeof referrer === 'string' && path.isAbsolute(referrer)) {\n    return pathToFileURL(referrer).href;\n  }\n  return new URL(referrer).href;\n}\n\n// For error messages only - used to check if ESM syntax is in use.\nfunction hasEsmSyntax(code) {\n  debug('Checking for ESM syntax');\n  const parser = require('internal/deps/acorn/acorn/dist/acorn').Parser;\n  let root;\n  try {\n    root = parser.parse(code\x2C { sourceType: 'module'\x2C ecmaVersion: 'latest' });\n  } catch {\n    return false;\n  }\n\n  return ArrayPrototypeSome(root.body\x2C (stmt) =>\n    stmt.type === 'ExportDefaultDeclaration' ||\n    stmt.type === 'ExportNamedDeclaration' ||\n    stmt.type === 'ImportDeclaration' ||\n    stmt.type === 'ExportAllDeclaration');\n}\n\nmodule.exports = {\n  addBuiltinLibsToObject\x2C\n  cjsConditions\x2C\n  hasEsmSyntax\x2C\n  loadBuiltinModule\x2C\n  makeRequireFunction\x2C\n  normalizeReferrerURL\x2C\n  stripBOM\x2C\n};\n
code-source-info,0x1e372ce157c8,429,0,6940,C0O0C4O6940,,
code-creation,Function,10,25875,0x1e372ce15d58,556, node:internal/modules/cjs/helpers:1:1,0x1e372ce15740,~
code-source-info,0x1e372ce15d58,429,0,6940,C0O0C107O25C113O50C119O72C125O94C131O118C137O151C142O162C147O173C153O202C159O229C165O253C171O373C177O373C182O399C187O307C193O342C199O433C205O433C210O415C216O500C222O500C227O481C233O545C239O545C243O545C245O608C251O608C256O570C262O585C268O600C274O661C280O661C285O642C290O717C296O717C301O698C307O766C310O766C315O811C321O811C326O844C339O845C345O811C347O910C350O910C355O965C366O1095C373O1137C374O1137C430O1159C485O1095C490O1095C492O1723C494O1723C499O1723C501O6779C508O6800C514O6826C520O6843C526O6859C532O6880C538O6903C544O6927C550O6794C555O6939,,
tick,0x1a4e72c90,25958,1,0x104a8d6ec,3,0x0,0x3d9b8018ed2e,0x109cc956c,0x1e372ce13067,0x3d9b8018ed4f,0x109cc956c,0x1e372ce11bce,0xc1101db1e34,0xc1101dae2ac
code-creation,LazyCompile,10,25958,0x1e372ce16ab0,16,IterableWeakMap node:internal/util/iterable_weak_map:16:1,0x1e372ce14318,~
code-source-info,0x1e372ce16ab0,428,373,373,C0O373C15O373,,
code-creation,LazyCompile,10,26041,0x1e372ce17490,358,initializeDeprecations node:internal/process/pre_execution:388:32,0xc1101daf9e8,~
code-source-info,0x1e372ce17490,423,11902,13822,C0O11931C6O11931C11O11917C16O11986C24O11986C29O12177C35O12177C40O12218C46O12218C51O12271C80O12263C108O12263C111O12589C122O12609C126O12651C137O12725C148O12815C159O12770C168O12636C177O12874C180O12607C184O12252C249O13151C255O13151C260O13130C265O13180C267O13208C278O13229C285O13370C289O13208C294O13402C298O13432C304O13468C314O13545C321O13450C326O13448C330O13631C336O13673C347O13655C352O13653C357O13821,,
code-creation,LazyCompile,10,26083,0x1e372ce177d8,53,initializeWASI node:internal/process/pre_execution:526:24,0xc1101dafb28,~
code-source-info,0x1e372ce177d8,423,16511,16719,C0O16544C6O16544C11O16526C16O16611C21O16615C29O16615C35O16630C37O16661C43O16661C47O16655C52O16718,,
code-creation,LazyCompile,10,26083,0x1e372ce17928,53,runDeserializeCallbacks node:internal/v8/startup_snapshot:30:33,0x25eb221f6738,~
code-source-info,0x1e372ce17928,82,736,877,C0O778C5O771C11O778C16O822C21O843C26O843C31O800C37O813C44O856C48O743C52O876,,
code-creation,LazyCompile,10,26125,0x1e372ce17b28,66,initializeCJSLoader node:internal/process/pre_execution:533:29,0xc1101dafb78,~
code-source-info,0x1e372ce17b28,423,16749,17064,C0O16774C6O16774C11O16816C16O16821C20O16841C26O16879C31O16886C36O16886C40O16982C51O17003C56O17039C60O16997C65O17063,,
code-creation,Eval,10,26583,0x1e372ce1a848,5, node:internal/modules/cjs/loader:1:1,0x1e372ce192f0,~
script-source,430,node:internal/modules/cjs/loader,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeConcat\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSplice\x2C\n  ArrayPrototypeUnshift\x2C\n  ArrayPrototypeUnshiftApply\x2C\n  ArrayPrototypeFlatMap\x2C\n  Boolean\x2C\n  Error\x2C\n  JSONParse\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperty\x2C\n  ObjectFreeze\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectKeys\x2C\n  ObjectPrototype\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  Proxy\x2C\n  ReflectApply\x2C\n  ReflectSet\x2C\n  RegExpPrototypeExec\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  SafeWeakMap\x2C\n  String\x2C\n  StringPrototypeCharAt\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeLastIndexOf\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeRepeat\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n} = primordials;\n\n// Map used to store CJS parsing data.\nconst cjsParseCache = new SafeWeakMap();\n\n// Set first due to cycle with ESM loader functions.\nmodule.exports = {\n  wrapSafe\x2C Module\x2C toRealPath\x2C readPackageScope\x2C cjsParseCache\x2C\n  get hasLoadedAnyUserCJSModule() { return hasLoadedAnyUserCJSModule; }\n};\n\nconst { BuiltinModule } = require('internal/bootstrap/loaders');\nconst {\n  maybeCacheSourceMap\x2C\n} = require('internal/source_map/source_map_cache');\nconst { pathToFileURL\x2C fileURLToPath\x2C isURLInstance } = require('internal/url');\nconst { deprecate\x2C kEmptyObject\x2C filterOwnProperties\x2C setOwnProperty } = require('internal/util');\nconst vm = require('vm');\nconst assert = require('internal/assert');\nconst fs = require('fs');\nconst internalFS = require('internal/fs/utils');\nconst path = require('path');\nconst { sep } = path;\nconst { internalModuleStat } = internalBinding('fs');\nconst packageJsonReader = require('internal/modules/package_json_reader');\nconst { safeGetenv } = internalBinding('credentials');\nconst {\n  cjsConditions\x2C\n  hasEsmSyntax\x2C\n  loadBuiltinModule\x2C\n  makeRequireFunction\x2C\n  normalizeReferrerURL\x2C\n  stripBOM\x2C\n} = require('internal/modules/cjs/helpers');\nconst { getOptionValue } = require('internal/options');\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\n// Do not eagerly grab .manifest\x2C it may be in TDZ\nconst policy = getOptionValue('--experimental-policy') ?\n  require('internal/process/policy') :\n  null;\n\n// Whether any user-provided CJS modules had been loaded (executed).\n// Used for internal assertions.\nlet hasLoadedAnyUserCJSModule = false;\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_MODULE_SPECIFIER\x2C\n    ERR_REQUIRE_ESM\x2C\n    ERR_UNKNOWN_BUILTIN_MODULE\x2C\n  }\x2C\n  setArrowMessage\x2C\n} = require('internal/errors');\nconst { validateString } = require('internal/validators');\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\n\nconst {\n  CHAR_FORWARD_SLASH\x2C\n  CHAR_BACKWARD_SLASH\x2C\n  CHAR_COLON\n} = require('internal/constants');\n\nconst {\n  isProxy\n} = require('internal/util/types');\n\nconst asyncESM = require('internal/process/esm_loader');\nconst { enrichCJSError } = require('internal/modules/esm/translators');\nconst { kEvaluated } = internalBinding('module_wrap');\nconst {\n  encodedSepRegEx\x2C\n  packageExportsResolve\x2C\n  packageImportsResolve\n} = require('internal/modules/esm/resolve');\n\nconst isWindows = process.platform === 'win32';\n\nconst relativeResolveCache = ObjectCreate(null);\n\nlet requireDepth = 0;\nlet statCache = null;\nlet isPreloading = false;\n\nfunction stat(filename) {\n  filename = path.toNamespacedPath(filename);\n  if (statCache !== null) {\n    const result = statCache.get(filename);\n    if (result !== undefined) return result;\n  }\n  const result = internalModuleStat(filename);\n  if (statCache !== null && result >= 0) {\n    // Only set cache when `internalModuleStat(filename)` succeeds.\n    statCache.set(filename\x2C result);\n  }\n  return result;\n}\n\nfunction updateChildren(parent\x2C child\x2C scan) {\n  const children = parent?.children;\n  if (children && !(scan && ArrayPrototypeIncludes(children\x2C child)))\n    ArrayPrototypePush(children\x2C child);\n}\n\nconst moduleParentCache = new SafeWeakMap();\nfunction Module(id = ''\x2C parent) {\n  this.id = id;\n  this.path = path.dirname(id);\n  setOwnProperty(this\x2C 'exports'\x2C {});\n  moduleParentCache.set(this\x2C parent);\n  updateChildren(parent\x2C this\x2C false);\n  this.filename = null;\n  this.loaded = false;\n  this.children = [];\n}\n\nconst builtinModules = [];\nfor (const { 0: id\x2C 1: mod } of BuiltinModule.map) {\n  if (mod.canBeRequiredByUsers &&\n    BuiltinModule.canBeRequiredWithoutScheme(id)) {\n    ArrayPrototypePush(builtinModules\x2C id);\n  }\n}\n\nconst allBuiltins = new SafeSet(\n  ArrayPrototypeFlatMap(builtinModules\x2C (bm) => [bm\x2C `node:${bm}`])\n);\nBuiltinModule.getSchemeOnlyModuleNames().forEach((builtin) => allBuiltins.add(`node:${builtin}`));\n\nObjectFreeze(builtinModules);\nModule.builtinModules = builtinModules;\n\nModule._cache = ObjectCreate(null);\nModule._pathCache = ObjectCreate(null);\nModule._extensions = ObjectCreate(null);\nlet modulePaths = [];\nModule.globalPaths = [];\n\nlet patched = false;\n\n// eslint-disable-next-line func-style\nlet wrap = function(script) {\n  return Module.wrapper[0] + script + Module.wrapper[1];\n};\n\nconst wrapper = [\n  '(function (exports\x2C require\x2C module\x2C __filename\x2C __dirname) { '\x2C\n  '\\n});'\x2C\n];\n\nlet wrapperProxy = new Proxy(wrapper\x2C {\n  __proto__: null\x2C\n\n  set(target\x2C property\x2C value\x2C receiver) {\n    patched = true;\n    return ReflectSet(target\x2C property\x2C value\x2C receiver);\n  }\x2C\n\n  defineProperty(target\x2C property\x2C descriptor) {\n    patched = true;\n    return ObjectDefineProperty(target\x2C property\x2C descriptor);\n  }\n});\n\nObjectDefineProperty(Module\x2C 'wrap'\x2C {\n  __proto__: null\x2C\n  get() {\n    return wrap;\n  }\x2C\n\n  set(value) {\n    patched = true;\n    wrap = value;\n  }\n});\n\nObjectDefineProperty(Module\x2C 'wrapper'\x2C {\n  __proto__: null\x2C\n  get() {\n    return wrapperProxy;\n  }\x2C\n\n  set(value) {\n    patched = true;\n    wrapperProxy = value;\n  }\n});\n\nconst isPreloadingDesc = { get() { return isPreloading; } };\nObjectDefineProperty(Module.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\nObjectDefineProperty(BuiltinModule.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\n\nfunction getModuleParent() {\n  return moduleParentCache.get(this);\n}\n\nfunction setModuleParent(value) {\n  moduleParentCache.set(this\x2C value);\n}\n\nObjectDefineProperty(Module.prototype\x2C 'parent'\x2C {\n  __proto__: null\x2C\n  get: pendingDeprecation ? deprecate(\n    getModuleParent\x2C\n    'module.parent is deprecated due to accuracy issues. Please use ' +\n      'require.main to find program entry point instead.'\x2C\n    'DEP0144'\n  ) : getModuleParent\x2C\n  set: pendingDeprecation ? deprecate(\n    setModuleParent\x2C\n    'module.parent is deprecated due to accuracy issues. Please use ' +\n      'require.main to find program entry point instead.'\x2C\n    'DEP0144'\n  ) : setModuleParent\x2C\n});\n\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\n  debug = fn;\n});\nModule._debug = deprecate(debug\x2C 'Module._debug is deprecated.'\x2C 'DEP0077');\n\n// Given a module name\x2C and a list of paths to test\x2C returns the first\n// matching file in the following precedence.\n//\n// require("a.<ext>")\n//   -> a.<ext>\n//\n// require("a")\n//   -> a\n//   -> a.<ext>\n//   -> a/index.<ext>\n\nconst packageJsonCache = new SafeMap();\n\nfunction readPackage(requestPath) {\n  const jsonPath = path.resolve(requestPath\x2C 'package.json');\n\n  const existing = packageJsonCache.get(jsonPath);\n  if (existing !== undefined) return existing;\n\n  const result = packageJsonReader.read(jsonPath);\n  const json = result.containsKeys === false ? '{}' : result.string;\n  if (json === undefined) {\n    packageJsonCache.set(jsonPath\x2C false);\n    return false;\n  }\n\n  try {\n    const filtered = filterOwnProperties(JSONParse(json)\x2C [\n      'name'\x2C\n      'main'\x2C\n      'exports'\x2C\n      'imports'\x2C\n      'type'\x2C\n    ]);\n    packageJsonCache.set(jsonPath\x2C filtered);\n    return filtered;\n  } catch (e) {\n    e.path = jsonPath;\n    e.message = 'Error parsing ' + jsonPath + ': ' + e.message;\n    throw e;\n  }\n}\n\nfunction readPackageScope(checkPath) {\n  const rootSeparatorIndex = StringPrototypeIndexOf(checkPath\x2C sep);\n  let separatorIndex;\n  do {\n    separatorIndex = StringPrototypeLastIndexOf(checkPath\x2C sep);\n    checkPath = StringPrototypeSlice(checkPath\x2C 0\x2C separatorIndex);\n    if (StringPrototypeEndsWith(checkPath\x2C sep + 'node_modules'))\n      return false;\n    const pjson = readPackage(checkPath + sep);\n    if (pjson) return {\n      data: pjson\x2C\n      path: checkPath\x2C\n    };\n  } while (separatorIndex > rootSeparatorIndex);\n  return false;\n}\n\nfunction tryPackage(requestPath\x2C exts\x2C isMain\x2C originalPath) {\n  const pkg = readPackage(requestPath)?.main;\n\n  if (!pkg) {\n    return tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\n  }\n\n  const filename = path.resolve(requestPath\x2C pkg);\n  let actual = tryFile(filename\x2C isMain) ||\n    tryExtensions(filename\x2C exts\x2C isMain) ||\n    tryExtensions(path.resolve(filename\x2C 'index')\x2C exts\x2C isMain);\n  if (actual === false) {\n    actual = tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\n    if (!actual) {\n      // eslint-disable-next-line no-restricted-syntax\n      const err = new Error(\n        `Cannot find module '${filename}'. ` +\n        'Please verify that the package.json has a valid "main" entry'\n      );\n      err.code = 'MODULE_NOT_FOUND';\n      err.path = path.resolve(requestPath\x2C 'package.json');\n      err.requestPath = originalPath;\n      // TODO(BridgeAR): Add the requireStack as well.\n      throw err;\n    } else {\n      const jsonPath = path.resolve(requestPath\x2C 'package.json');\n      process.emitWarning(\n        `Invalid 'main' field in '${jsonPath}' of '${pkg}'. ` +\n          'Please either fix that or report it to the module author'\x2C\n        'DeprecationWarning'\x2C\n        'DEP0128'\n      );\n    }\n  }\n  return actual;\n}\n\n// In order to minimize unnecessary lstat() calls\x2C\n// this cache is a list of known-real paths.\n// Set to an empty Map to reset.\nconst realpathCache = new SafeMap();\n\n// Check if the file exists and is not a directory\n// if using --preserve-symlinks and isMain is false\x2C\n// keep symlinks intact\x2C otherwise resolve to the\n// absolute realpath.\nfunction tryFile(requestPath\x2C isMain) {\n  const rc = stat(requestPath);\n  if (rc !== 0) return;\n  if (preserveSymlinks && !isMain) {\n    return path.resolve(requestPath);\n  }\n  return toRealPath(requestPath);\n}\n\nfunction toRealPath(requestPath) {\n  return fs.realpathSync(requestPath\x2C {\n    [internalFS.realpathCacheKey]: realpathCache\n  });\n}\n\n// Given a path\x2C check if the file exists with any of the set extensions\nfunction tryExtensions(p\x2C exts\x2C isMain) {\n  for (let i = 0; i < exts.length; i++) {\n    const filename = tryFile(p + exts[i]\x2C isMain);\n\n    if (filename) {\n      return filename;\n    }\n  }\n  return false;\n}\n\n// Find the longest (possibly multi-dot) extension registered in\n// Module._extensions\nfunction findLongestRegisteredExtension(filename) {\n  const name = path.basename(filename);\n  let currentExtension;\n  let index;\n  let startIndex = 0;\n  while ((index = StringPrototypeIndexOf(name\x2C '.'\x2C startIndex)) !== -1) {\n    startIndex = index + 1;\n    if (index === 0) continue; // Skip dotfiles like .gitignore\n    currentExtension = StringPrototypeSlice(name\x2C index);\n    if (Module._extensions[currentExtension]) return currentExtension;\n  }\n  return '.js';\n}\n\nfunction trySelfParentPath(parent) {\n  if (!parent) return false;\n\n  if (parent.filename) {\n    return parent.filename;\n  } else if (parent.id === '<repl>' || parent.id === 'internal/preload') {\n    try {\n      return process.cwd() + path.sep;\n    } catch {\n      return false;\n    }\n  }\n}\n\nfunction trySelf(parentPath\x2C request) {\n  if (!parentPath) return false;\n\n  const { data: pkg\x2C path: pkgPath } = readPackageScope(parentPath) || {};\n  if (!pkg || pkg.exports === undefined) return false;\n  if (typeof pkg.name !== 'string') return false;\n\n  let expansion;\n  if (request === pkg.name) {\n    expansion = '.';\n  } else if (StringPrototypeStartsWith(request\x2C `${pkg.name}/`)) {\n    expansion = '.' + StringPrototypeSlice(request\x2C pkg.name.length);\n  } else {\n    return false;\n  }\n\n  try {\n    return finalizeEsmResolution(packageExportsResolve(\n      pathToFileURL(pkgPath + '/package.json')\x2C expansion\x2C pkg\x2C\n      pathToFileURL(parentPath)\x2C cjsConditions)\x2C parentPath\x2C pkgPath);\n  } catch (e) {\n    if (e.code === 'ERR_MODULE_NOT_FOUND')\n      throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\n    throw e;\n  }\n}\n\n// This only applies to requests of a specific form:\n// 1. name/.*\n// 2. @scope/name/.*\nconst EXPORTS_PATTERN = /^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$/;\nfunction resolveExports(nmPath\x2C request) {\n  // The implementation's behavior is meant to mirror resolution in ESM.\n  const { 1: name\x2C 2: expansion = '' } =\n    RegExpPrototypeExec(EXPORTS_PATTERN\x2C request) || kEmptyObject;\n  if (!name)\n    return;\n  const pkgPath = path.resolve(nmPath\x2C name);\n  const pkg = readPackage(pkgPath);\n  if (pkg?.exports != null) {\n    try {\n      return finalizeEsmResolution(packageExportsResolve(\n        pathToFileURL(pkgPath + '/package.json')\x2C '.' + expansion\x2C pkg\x2C null\x2C\n        cjsConditions)\x2C null\x2C pkgPath);\n    } catch (e) {\n      if (e.code === 'ERR_MODULE_NOT_FOUND')\n        throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\n      throw e;\n    }\n  }\n}\n\nconst trailingSlashRegex = /(?:^|\\/)\\.?\\.$/;\nModule._findPath = function(request\x2C paths\x2C isMain) {\n  const absoluteRequest = path.isAbsolute(request);\n  if (absoluteRequest) {\n    paths = [''];\n  } else if (!paths || paths.length === 0) {\n    return false;\n  }\n\n  const cacheKey = request + '\\x00' + ArrayPrototypeJoin(paths\x2C '\\x00');\n  const entry = Module._pathCache[cacheKey];\n  if (entry)\n    return entry;\n\n  let exts;\n  let trailingSlash = request.length > 0 &&\n    StringPrototypeCharCodeAt(request\x2C request.length - 1) ===\n    CHAR_FORWARD_SLASH;\n  if (!trailingSlash) {\n    trailingSlash = RegExpPrototypeExec(trailingSlashRegex\x2C request) !== null;\n  }\n\n  // For each path\n  for (let i = 0; i < paths.length; i++) {\n    // Don't search further if path doesn't exist\n    const curPath = paths[i];\n    if (curPath && stat(curPath) < 1) continue;\n\n    if (!absoluteRequest) {\n      const exportsResolved = resolveExports(curPath\x2C request);\n      if (exportsResolved)\n        return exportsResolved;\n    }\n\n    const basePath = path.resolve(curPath\x2C request);\n    let filename;\n\n    const rc = stat(basePath);\n    if (!trailingSlash) {\n      if (rc === 0) {  // File.\n        if (!isMain) {\n          if (preserveSymlinks) {\n            filename = path.resolve(basePath);\n          } else {\n            filename = toRealPath(basePath);\n          }\n        } else if (preserveSymlinksMain) {\n          // For the main module\x2C we use the preserveSymlinksMain flag instead\n          // mainly for backward compatibility\x2C as the preserveSymlinks flag\n          // historically has not applied to the main module.  Most likely this\n          // was intended to keep .bin/ binaries working\x2C as following those\n          // symlinks is usually required for the imports in the corresponding\n          // files to resolve; that said\x2C in some use cases following symlinks\n          // causes bigger problems which is why the preserveSymlinksMain option\n          // is needed.\n          filename = path.resolve(basePath);\n        } else {\n          filename = toRealPath(basePath);\n        }\n      }\n\n      if (!filename) {\n        // Try it with each of the extensions\n        if (exts === undefined)\n          exts = ObjectKeys(Module._extensions);\n        filename = tryExtensions(basePath\x2C exts\x2C isMain);\n      }\n    }\n\n    if (!filename && rc === 1) {  // Directory.\n      // try it with each of the extensions at "index"\n      if (exts === undefined)\n        exts = ObjectKeys(Module._extensions);\n      filename = tryPackage(basePath\x2C exts\x2C isMain\x2C request);\n    }\n\n    if (filename) {\n      Module._pathCache[cacheKey] = filename;\n      return filename;\n    }\n  }\n\n  return false;\n};\n\n// 'node_modules' character codes reversed\nconst nmChars = [ 115\x2C 101\x2C 108\x2C 117\x2C 100\x2C 111\x2C 109\x2C 95\x2C 101\x2C 100\x2C 111\x2C 110 ];\nconst nmLen = nmChars.length;\nif (isWindows) {\n  // 'from' is the __dirname of the module.\n  Module._nodeModulePaths = function(from) {\n    // Guarantee that 'from' is absolute.\n    from = path.resolve(from);\n\n    // note: this approach *only* works when the path is guaranteed\n    // to be absolute.  Doing a fully-edge-case-correct path.split\n    // that works on both Windows and Posix is non-trivial.\n\n    // return root node_modules when path is 'D:\\\\'.\n    // path.resolve will make sure from.length >=3 in Windows.\n    if (StringPrototypeCharCodeAt(from\x2C from.length - 1) ===\n          CHAR_BACKWARD_SLASH &&\n        StringPrototypeCharCodeAt(from\x2C from.length - 2) === CHAR_COLON)\n      return [from + 'node_modules'];\n\n    const paths = [];\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\n      const code = StringPrototypeCharCodeAt(from\x2C i);\n      // The path segment separator check ('\\' and '/') was used to get\n      // node_modules path for every path segment.\n      // Use colon as an extra condition since we can get node_modules\n      // path for drive root like 'C:\\node_modules' and don't need to\n      // parse drive name.\n      if (code === CHAR_BACKWARD_SLASH ||\n          code === CHAR_FORWARD_SLASH ||\n          code === CHAR_COLON) {\n        if (p !== nmLen)\n          ArrayPrototypePush(\n            paths\x2C\n            StringPrototypeSlice(from\x2C 0\x2C last) + '\\\\node_modules'\n          );\n        last = i;\n        p = 0;\n      } else if (p !== -1) {\n        if (nmChars[p] === code) {\n          ++p;\n        } else {\n          p = -1;\n        }\n      }\n    }\n\n    return paths;\n  };\n} else { // posix\n  // 'from' is the __dirname of the module.\n  Module._nodeModulePaths = function(from) {\n    // Guarantee that 'from' is absolute.\n    from = path.resolve(from);\n    // Return early not only to avoid unnecessary work\x2C but to *avoid* returning\n    // an array of two items for a root: [ '//node_modules'\x2C '/node_modules' ]\n    if (from === '/')\n      return ['/node_modules'];\n\n    // note: this approach *only* works when the path is guaranteed\n    // to be absolute.  Doing a fully-edge-case-correct path.split\n    // that works on both Windows and Posix is non-trivial.\n    const paths = [];\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\n      const code = StringPrototypeCharCodeAt(from\x2C i);\n      if (code === CHAR_FORWARD_SLASH) {\n        if (p !== nmLen)\n          ArrayPrototypePush(\n            paths\x2C\n            StringPrototypeSlice(from\x2C 0\x2C last) + '/node_modules'\n          );\n        last = i;\n        p = 0;\n      } else if (p !== -1) {\n        if (nmChars[p] === code) {\n          ++p;\n        } else {\n          p = -1;\n        }\n      }\n    }\n\n    // Append /node_modules to handle root paths.\n    ArrayPrototypePush(paths\x2C '/node_modules');\n\n    return paths;\n  };\n}\n\nModule._resolveLookupPaths = function(request\x2C parent) {\n  if (BuiltinModule.canBeRequiredByUsers(request) &&\n      BuiltinModule.canBeRequiredWithoutScheme(request)) {\n    debug('looking for %j in []'\x2C request);\n    return null;\n  }\n\n  // Check for node modules paths.\n  if (StringPrototypeCharAt(request\x2C 0) !== '.' ||\n      (request.length > 1 &&\n      StringPrototypeCharAt(request\x2C 1) !== '.' &&\n      StringPrototypeCharAt(request\x2C 1) !== '/' &&\n      (!isWindows || StringPrototypeCharAt(request\x2C 1) !== '\\\\'))) {\n\n    let paths = modulePaths;\n    if (parent?.paths?.length) {\n      paths = ArrayPrototypeConcat(parent.paths\x2C paths);\n    }\n\n    debug('looking for %j in %j'\x2C request\x2C paths);\n    return paths.length > 0 ? paths : null;\n  }\n\n  // In REPL\x2C parent.filename is null.\n  if (!parent || !parent.id || !parent.filename) {\n    // Make require('./path/to/foo') work - normally the path is taken\n    // from realpath(__filename) but in REPL there is no filename\n    const mainPaths = ['.'];\n\n    debug('looking for %j in %j'\x2C request\x2C mainPaths);\n    return mainPaths;\n  }\n\n  debug('RELATIVE: requested: %s from parent.id %s'\x2C request\x2C parent.id);\n\n  const parentDir = [path.dirname(parent.filename)];\n  debug('looking for %j'\x2C parentDir);\n  return parentDir;\n};\n\nfunction emitCircularRequireWarning(prop) {\n  process.emitWarning(\n    `Accessing non-existent property '${String(prop)}' of module exports ` +\n    'inside circular dependency'\n  );\n}\n\n// A Proxy that can be used as the prototype of a module.exports object and\n// warns when non-existent properties are accessed.\nconst CircularRequirePrototypeWarningProxy = new Proxy({}\x2C {\n  __proto__: null\x2C\n\n  get(target\x2C prop) {\n    // Allow __esModule access in any case because it is used in the output\n    // of transpiled code to determine whether something comes from an\n    // ES module\x2C and is not used as a regular key of `module.exports`.\n    if (prop in target || prop === '__esModule') return target[prop];\n    emitCircularRequireWarning(prop);\n    return undefined;\n  }\x2C\n\n  getOwnPropertyDescriptor(target\x2C prop) {\n    if (ObjectPrototypeHasOwnProperty(target\x2C prop) || prop === '__esModule')\n      return ObjectGetOwnPropertyDescriptor(target\x2C prop);\n    emitCircularRequireWarning(prop);\n    return undefined;\n  }\n});\n\nfunction getExportsForCircularRequire(module) {\n  if (module.exports &&\n      !isProxy(module.exports) &&\n      ObjectGetPrototypeOf(module.exports) === ObjectPrototype &&\n      // Exclude transpiled ES6 modules / TypeScript code because those may\n      // employ unusual patterns for accessing 'module.exports'. That should\n      // be okay because ES6 modules have a different approach to circular\n      // dependencies anyway.\n      !module.exports.__esModule) {\n    // This is later unset once the module is done loading.\n    ObjectSetPrototypeOf(\n      module.exports\x2C CircularRequirePrototypeWarningProxy);\n  }\n\n  return module.exports;\n}\n\n// Check the cache for the requested file.\n// 1. If a module already exists in the cache: return its exports object.\n// 2. If the module is native: call\n//    `BuiltinModule.prototype.compileForPublicLoader()` and return the exports.\n// 3. Otherwise\x2C create a new module for the file and save it to the cache.\n//    Then have it load  the file contents before returning its exports\n//    object.\nModule._load = function(request\x2C parent\x2C isMain) {\n  let relResolveCacheIdentifier;\n  if (parent) {\n    debug('Module._load REQUEST %s parent: %s'\x2C request\x2C parent.id);\n    // Fast path for (lazy loaded) modules in the same directory. The indirect\n    // caching is required to allow cache invalidation without changing the old\n    // cache key names.\n    relResolveCacheIdentifier = `${parent.path}\\x00${request}`;\n    const filename = relativeResolveCache[relResolveCacheIdentifier];\n    if (filename !== undefined) {\n      const cachedModule = Module._cache[filename];\n      if (cachedModule !== undefined) {\n        updateChildren(parent\x2C cachedModule\x2C true);\n        if (!cachedModule.loaded)\n          return getExportsForCircularRequire(cachedModule);\n        return cachedModule.exports;\n      }\n      delete relativeResolveCache[relResolveCacheIdentifier];\n    }\n  }\n\n  if (StringPrototypeStartsWith(request\x2C 'node:')) {\n    // Slice 'node:' prefix\n    const id = StringPrototypeSlice(request\x2C 5);\n\n    const module = loadBuiltinModule(id\x2C request);\n    if (!module?.canBeRequiredByUsers) {\n      throw new ERR_UNKNOWN_BUILTIN_MODULE(request);\n    }\n\n    return module.exports;\n  }\n\n  const filename = Module._resolveFilename(request\x2C parent\x2C isMain);\n  const cachedModule = Module._cache[filename];\n  if (cachedModule !== undefined) {\n    updateChildren(parent\x2C cachedModule\x2C true);\n    if (!cachedModule.loaded) {\n      const parseCachedModule = cjsParseCache.get(cachedModule);\n      if (!parseCachedModule || parseCachedModule.loaded)\n        return getExportsForCircularRequire(cachedModule);\n      parseCachedModule.loaded = true;\n    } else {\n      return cachedModule.exports;\n    }\n  }\n\n  const mod = loadBuiltinModule(filename\x2C request);\n  if (mod?.canBeRequiredByUsers &&\n      BuiltinModule.canBeRequiredWithoutScheme(filename)) {\n    return mod.exports;\n  }\n\n  // Don't call updateChildren()\x2C Module constructor already does.\n  const module = cachedModule || new Module(filename\x2C parent);\n\n  if (isMain) {\n    process.mainModule = module;\n    module.id = '.';\n  }\n\n  Module._cache[filename] = module;\n  if (parent !== undefined) {\n    relativeResolveCache[relResolveCacheIdentifier] = filename;\n  }\n\n  let threw = true;\n  try {\n    module.load(filename);\n    threw = false;\n  } finally {\n    if (threw) {\n      delete Module._cache[filename];\n      if (parent !== undefined) {\n        delete relativeResolveCache[relResolveCacheIdentifier];\n        const children = parent?.children;\n        if (ArrayIsArray(children)) {\n          const index = ArrayPrototypeIndexOf(children\x2C module);\n          if (index !== -1) {\n            ArrayPrototypeSplice(children\x2C index\x2C 1);\n          }\n        }\n      }\n    } else if (module.exports &&\n               !isProxy(module.exports) &&\n               ObjectGetPrototypeOf(module.exports) ===\n                 CircularRequirePrototypeWarningProxy) {\n      ObjectSetPrototypeOf(module.exports\x2C ObjectPrototype);\n    }\n  }\n\n  return module.exports;\n};\n\nModule._resolveFilename = function(request\x2C parent\x2C isMain\x2C options) {\n  if (\n    (\n      StringPrototypeStartsWith(request\x2C 'node:') &&\n      BuiltinModule.canBeRequiredByUsers(StringPrototypeSlice(request\x2C 5))\n    ) || (\n      BuiltinModule.canBeRequiredByUsers(request) &&\n      BuiltinModule.canBeRequiredWithoutScheme(request)\n    )\n  ) {\n    return request;\n  }\n\n  let paths;\n\n  if (typeof options === 'object' && options !== null) {\n    if (ArrayIsArray(options.paths)) {\n      const isRelative = StringPrototypeStartsWith(request\x2C './') ||\n          StringPrototypeStartsWith(request\x2C '../') ||\n          ((isWindows && StringPrototypeStartsWith(request\x2C '.\\\\')) ||\n          StringPrototypeStartsWith(request\x2C '..\\\\'));\n\n      if (isRelative) {\n        paths = options.paths;\n      } else {\n        const fakeParent = new Module(''\x2C null);\n\n        paths = [];\n\n        for (let i = 0; i < options.paths.length; i++) {\n          const path = options.paths[i];\n          fakeParent.paths = Module._nodeModulePaths(path);\n          const lookupPaths = Module._resolveLookupPaths(request\x2C fakeParent);\n\n          for (let j = 0; j < lookupPaths.length; j++) {\n            if (!ArrayPrototypeIncludes(paths\x2C lookupPaths[j]))\n              ArrayPrototypePush(paths\x2C lookupPaths[j]);\n          }\n        }\n      }\n    } else if (options.paths === undefined) {\n      paths = Module._resolveLookupPaths(request\x2C parent);\n    } else {\n      throw new ERR_INVALID_ARG_VALUE('options.paths'\x2C options.paths);\n    }\n  } else {\n    paths = Module._resolveLookupPaths(request\x2C parent);\n  }\n\n  if (request[0] === '#' && (parent?.filename || parent?.id === '<repl>')) {\n    const parentPath = parent?.filename ?? process.cwd() + path.sep;\n    const pkg = readPackageScope(parentPath) || {};\n    if (pkg.data?.imports != null) {\n      try {\n        return finalizeEsmResolution(\n          packageImportsResolve(request\x2C pathToFileURL(parentPath)\x2C\n                                cjsConditions)\x2C parentPath\x2C\n          pkg.path);\n      } catch (e) {\n        if (e.code === 'ERR_MODULE_NOT_FOUND')\n          throw createEsmNotFoundErr(request);\n        throw e;\n      }\n    }\n  }\n\n  // Try module self resolution first\n  const parentPath = trySelfParentPath(parent);\n  const selfResolved = trySelf(parentPath\x2C request);\n  if (selfResolved) {\n    const cacheKey = request + '\\x00' +\n         (paths.length === 1 ? paths[0] : ArrayPrototypeJoin(paths\x2C '\\x00'));\n    Module._pathCache[cacheKey] = selfResolved;\n    return selfResolved;\n  }\n\n  // Look up the filename first\x2C since that's the cache key.\n  const filename = Module._findPath(request\x2C paths\x2C isMain\x2C false);\n  if (filename) return filename;\n  const requireStack = [];\n  for (let cursor = parent;\n    cursor;\n    cursor = moduleParentCache.get(cursor)) {\n    ArrayPrototypePush(requireStack\x2C cursor.filename || cursor.id);\n  }\n  let message = `Cannot find module '${request}'`;\n  if (requireStack.length > 0) {\n    message = message + '\\nRequire stack:\\n- ' +\n              ArrayPrototypeJoin(requireStack\x2C '\\n- ');\n  }\n  // eslint-disable-next-line no-restricted-syntax\n  const err = new Error(message);\n  err.code = 'MODULE_NOT_FOUND';\n  err.requireStack = requireStack;\n  throw err;\n};\n\nfunction finalizeEsmResolution(resolved\x2C parentPath\x2C pkgPath) {\n  if (RegExpPrototypeExec(encodedSepRegEx\x2C resolved) !== null)\n    throw new ERR_INVALID_MODULE_SPECIFIER(\n      resolved\x2C 'must not include encoded "/" or "\\\\" characters'\x2C parentPath);\n  const filename = fileURLToPath(resolved);\n  const actual = tryFile(filename);\n  if (actual)\n    return actual;\n  const err = createEsmNotFoundErr(filename\x2C\n                                   path.resolve(pkgPath\x2C 'package.json'));\n  throw err;\n}\n\nfunction createEsmNotFoundErr(request\x2C path) {\n  // eslint-disable-next-line no-restricted-syntax\n  const err = new Error(`Cannot find module '${request}'`);\n  err.code = 'MODULE_NOT_FOUND';\n  if (path)\n    err.path = path;\n  // TODO(BridgeAR): Add the requireStack as well.\n  return err;\n}\n\n// Given a file name\x2C pass it to the proper extension handler.\nModule.prototype.load = function(filename) {\n  debug('load %j for module %j'\x2C filename\x2C this.id);\n\n  assert(!this.loaded);\n  this.filename = filename;\n  this.paths = Module._nodeModulePaths(path.dirname(filename));\n\n  const extension = findLongestRegisteredExtension(filename);\n  // allow .mjs to be overridden\n  if (StringPrototypeEndsWith(filename\x2C '.mjs') && !Module._extensions['.mjs'])\n    throw new ERR_REQUIRE_ESM(filename\x2C true);\n\n  Module._extensions[extension](this\x2C filename);\n  this.loaded = true;\n\n  const esmLoader = asyncESM.esmLoader;\n  // Create module entry at load time to snapshot exports correctly\n  const exports = this.exports;\n  // Preemptively cache\n  if ((module?.module === undefined ||\n       module.module.getStatus() < kEvaluated) &&\n      !esmLoader.cjsCache.has(this))\n    esmLoader.cjsCache.set(this\x2C exports);\n};\n\n\n// Loads a module at the given file path. Returns that module's\n// `exports` property.\nModule.prototype.require = function(id) {\n  validateString(id\x2C 'id');\n  if (id === '') {\n    throw new ERR_INVALID_ARG_VALUE('id'\x2C id\x2C\n                                    'must be a non-empty string');\n  }\n  requireDepth++;\n  try {\n    return Module._load(id\x2C this\x2C /* isMain */ false);\n  } finally {\n    requireDepth--;\n  }\n};\n\n\n// Resolved path to process.argv[1] will be lazily placed here\n// (needed for setting breakpoint when called with --inspect-brk)\nlet resolvedArgv;\nlet hasPausedEntry = false;\n\nfunction wrapSafe(filename\x2C content\x2C cjsModuleInstance) {\n  if (patched) {\n    const wrapper = Module.wrap(content);\n    return vm.runInThisContext(wrapper\x2C {\n      filename\x2C\n      lineOffset: 0\x2C\n      displayErrors: true\x2C\n      importModuleDynamically: async (specifier\x2C _\x2C importAssertions) => {\n        const loader = asyncESM.esmLoader;\n        return loader.import(specifier\x2C normalizeReferrerURL(filename)\x2C\n                             importAssertions);\n      }\x2C\n    });\n  }\n  try {\n    return vm.compileFunction(content\x2C [\n      'exports'\x2C\n      'require'\x2C\n      'module'\x2C\n      '__filename'\x2C\n      '__dirname'\x2C\n    ]\x2C {\n      filename\x2C\n      importModuleDynamically(specifier\x2C _\x2C importAssertions) {\n        const loader = asyncESM.esmLoader;\n        return loader.import(specifier\x2C normalizeReferrerURL(filename)\x2C\n                             importAssertions);\n      }\x2C\n    });\n  } catch (err) {\n    if (process.mainModule === cjsModuleInstance)\n      enrichCJSError(err\x2C content);\n    throw err;\n  }\n}\n\n// Run the file contents in the correct scope or sandbox. Expose\n// the correct helper variables (require\x2C module\x2C exports) to\n// the file.\n// Returns exception\x2C if any.\nModule.prototype._compile = function(content\x2C filename) {\n  let moduleURL;\n  let redirects;\n  if (policy?.manifest) {\n    moduleURL = pathToFileURL(filename);\n    redirects = policy.manifest.getDependencyMapper(moduleURL);\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\n  }\n\n  maybeCacheSourceMap(filename\x2C content\x2C this);\n  const compiledWrapper = wrapSafe(filename\x2C content\x2C this);\n\n  let inspectorWrapper = null;\n  if (getOptionValue('--inspect-brk') && process._eval == null) {\n    if (!resolvedArgv) {\n      // We enter the repl if we're not given a filename argument.\n      if (process.argv[1]) {\n        try {\n          resolvedArgv = Module._resolveFilename(process.argv[1]\x2C null\x2C false);\n        } catch {\n          // We only expect this codepath to be reached in the case of a\n          // preloaded module (it will fail earlier with the main entry)\n          assert(ArrayIsArray(getOptionValue('--require')));\n        }\n      } else {\n        resolvedArgv = 'repl';\n      }\n    }\n\n    // Set breakpoint on module start\n    if (resolvedArgv && !hasPausedEntry && filename === resolvedArgv) {\n      hasPausedEntry = true;\n      inspectorWrapper = internalBinding('inspector').callAndPauseOnStart;\n    }\n  }\n  const dirname = path.dirname(filename);\n  const require = makeRequireFunction(this\x2C redirects);\n  let result;\n  const exports = this.exports;\n  const thisValue = exports;\n  const module = this;\n  if (requireDepth === 0) statCache = new SafeMap();\n  if (inspectorWrapper) {\n    result = inspectorWrapper(compiledWrapper\x2C thisValue\x2C exports\x2C\n                              require\x2C module\x2C filename\x2C dirname);\n  } else {\n    result = ReflectApply(compiledWrapper\x2C thisValue\x2C\n                          [exports\x2C require\x2C module\x2C filename\x2C dirname]);\n  }\n  hasLoadedAnyUserCJSModule = true;\n  if (requireDepth === 0) statCache = null;\n  return result;\n};\n\n// Native extension for .js\nModule._extensions['.js'] = function(module\x2C filename) {\n  // If already analyzed the source\x2C then it will be cached.\n  const cached = cjsParseCache.get(module);\n  let content;\n  if (cached?.source) {\n    content = cached.source;\n    cached.source = undefined;\n  } else {\n    content = fs.readFileSync(filename\x2C 'utf8');\n  }\n  if (StringPrototypeEndsWith(filename\x2C '.js')) {\n    const pkg = readPackageScope(filename);\n    // Function require shouldn't be used in ES modules.\n    if (pkg?.data?.type === 'module') {\n      const parent = moduleParentCache.get(module);\n      const parentPath = parent?.filename;\n      const packageJsonPath = path.resolve(pkg.path\x2C 'package.json');\n      const usesEsm = hasEsmSyntax(content);\n      const err = new ERR_REQUIRE_ESM(filename\x2C usesEsm\x2C parentPath\x2C\n                                      packageJsonPath);\n      // Attempt to reconstruct the parent require frame.\n      if (Module._cache[parentPath]) {\n        let parentSource;\n        try {\n          parentSource = fs.readFileSync(parentPath\x2C 'utf8');\n        } catch {\n          // Continue regardless of error.\n        }\n        if (parentSource) {\n          const errLine = StringPrototypeSplit(\n            StringPrototypeSlice(err.stack\x2C StringPrototypeIndexOf(\n              err.stack\x2C '    at '))\x2C '\\n'\x2C 1)[0];\n          const { 1: line\x2C 2: col } =\n              RegExpPrototypeExec(/(\\d+):(\\d+)\\)/\x2C errLine) || [];\n          if (line && col) {\n            const srcLine = StringPrototypeSplit(parentSource\x2C '\\n')[line - 1];\n            const frame = `${parentPath}:${line}\\n${srcLine}\\n${\n              StringPrototypeRepeat(' '\x2C col - 1)}^\\n`;\n            setArrowMessage(err\x2C frame);\n          }\n        }\n      }\n      throw err;\n    }\n  }\n  module._compile(content\x2C filename);\n};\n\n\n// Native extension for .json\nModule._extensions['.json'] = function(module\x2C filename) {\n  const content = fs.readFileSync(filename\x2C 'utf8');\n\n  if (policy?.manifest) {\n    const moduleURL = pathToFileURL(filename);\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\n  }\n\n  try {\n    setOwnProperty(module\x2C 'exports'\x2C JSONParse(stripBOM(content)));\n  } catch (err) {\n    err.message = filename + ': ' + err.message;\n    throw err;\n  }\n};\n\n\n// Native extension for .node\nModule._extensions['.node'] = function(module\x2C filename) {\n  if (policy?.manifest) {\n    const content = fs.readFileSync(filename);\n    const moduleURL = pathToFileURL(filename);\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\n  }\n  // Be aware this doesn't use `content`\n  return process.dlopen(module\x2C path.toNamespacedPath(filename));\n};\n\nfunction createRequireFromPath(filename) {\n  // Allow a directory to be passed as the filename\n  const trailingSlash =\n    StringPrototypeEndsWith(filename\x2C '/') ||\n    (isWindows && StringPrototypeEndsWith(filename\x2C '\\\\'));\n\n  const proxyPath = trailingSlash ?\n    path.join(filename\x2C 'noop.js') :\n    filename;\n\n  const m = new Module(proxyPath);\n  m.filename = proxyPath;\n\n  m.paths = Module._nodeModulePaths(m.path);\n  return makeRequireFunction(m\x2C null);\n}\n\nconst createRequireError = 'must be a file URL object\x2C file URL string\x2C or ' +\n  'absolute path string';\n\nfunction createRequire(filename) {\n  let filepath;\n\n  if (isURLInstance(filename) ||\n      (typeof filename === 'string' && !path.isAbsolute(filename))) {\n    try {\n      filepath = fileURLToPath(filename);\n    } catch {\n      throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C\n                                      createRequireError);\n    }\n  } else if (typeof filename !== 'string') {\n    throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C createRequireError);\n  } else {\n    filepath = filename;\n  }\n  return createRequireFromPath(filepath);\n}\n\nModule.createRequire = createRequire;\n\nModule._initPaths = function() {\n  const homeDir = isWindows ? process.env.USERPROFILE : safeGetenv('HOME');\n  const nodePath = isWindows ? process.env.NODE_PATH : safeGetenv('NODE_PATH');\n\n  // process.execPath is $PREFIX/bin/node except on Windows where it is\n  // $PREFIX\\node.exe where $PREFIX is the root of the Node.js installation.\n  const prefixDir = isWindows ?\n    path.resolve(process.execPath\x2C '..') :\n    path.resolve(process.execPath\x2C '..'\x2C '..');\n\n  const paths = [path.resolve(prefixDir\x2C 'lib'\x2C 'node')];\n\n  if (homeDir) {\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_libraries'));\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_modules'));\n  }\n\n  if (nodePath) {\n    ArrayPrototypeUnshiftApply(paths\x2C ArrayPrototypeFilter(\n      StringPrototypeSplit(nodePath\x2C path.delimiter)\x2C\n      Boolean\n    ));\n  }\n\n  modulePaths = paths;\n\n  // Clone as a shallow copy\x2C for introspection.\n  Module.globalPaths = ArrayPrototypeSlice(modulePaths);\n};\n\nModule._preloadModules = function(requests) {\n  if (!ArrayIsArray(requests))\n    return;\n\n  isPreloading = true;\n\n  // Preloaded modules have a dummy parent module which is deemed to exist\n  // in the current working directory. This seeds the search path for\n  // preloaded modules.\n  const parent = new Module('internal/preload'\x2C null);\n  try {\n    parent.paths = Module._nodeModulePaths(process.cwd());\n  } catch (e) {\n    if (e.code !== 'ENOENT') {\n      isPreloading = false;\n      throw e;\n    }\n  }\n  for (let n = 0; n < requests.length; n++)\n    parent.require(requests[n]);\n  isPreloading = false;\n};\n\nModule.syncBuiltinESMExports = function syncBuiltinESMExports() {\n  for (const mod of BuiltinModule.map.values()) {\n    if (mod.canBeRequiredByUsers &&\n        BuiltinModule.canBeRequiredWithoutScheme(mod.id)) {\n      mod.syncExports();\n    }\n  }\n};\n\nModule.isBuiltin = function isBuiltin(moduleName) {\n  return allBuiltins.has(moduleName);\n};\n\n// Backwards compatibility\nModule.Module = Module;\n
code-source-info,0x1e372ce1a848,430,0,41017,C0O0C4O41017,,
code-creation,Function,10,28125,0x1e372ce1c728,2705, node:internal/modules/cjs/loader:1:1,0x1e372ce1a7c0,~
code-source-info,0x1e372ce1c728,430,0,41017,C0O0C452O1159C458O1175C464O1199C470O1223C476O1249C482O1274C488O1296C494O1318C500O1341C506O1365C512O1390C518O1420C523O1445C529O1456C535O1465C541O1478C546O1494C552O1518C557O1534C563O1568C569O1592C575O1606C581O1625C587O1658C593O1682C598O1691C604O1707C610O1721C616O1744C622O1755C627O1766C632O1781C638O1791C644O1816C650O1845C656O1872C662O1902C668O1928C674O1953C680O1977C686O2001C692O2107C694O2107C699O2107C701O2180C713O2201C719O2211C725O2219C731O2231C737O2249C767O2195C771O2366C775O2366C781O2348C787O2440C791O2440C797O2415C803O2545C807O2545C813O2497C819O2512C825O2527C831O2643C835O2643C841O2578C846O2589C852O2603C858O2624C864O2680C868O2680C872O2680C874O2710C878O2710C882O2710C884O2749C888O2749C892O2749C894O2783C898O2783C902O2783C904O2826C908O2826C912O2826C914O2859C918O2851C924O2896C932O2896C938O2873C944O2945C948O2945C952O2945C954O3017C962O3017C968O3002C974O3174C978O3174C984O3059C990O3076C996O3092C1002O3113C1008O3136C1014O3160C1020O3242C1024O3242C1030O3223C1036O3296C1044O3296C1048O3296C1050O3364C1058O3364C1062O3364C1064O3474C1072O3474C1082O3518C1089O3474C1091O3698C1092O3698C1094O3867C1098O3867C1104O3867C1110O3729C1116O3756C1122O3790C1128O3811C1134O3846C1140O3922C1144O3922C1150O3903C1156O3981C1164O3981C1169O4093C1173O4093C1179O4033C1185O4055C1191O4078C1197O4147C1201O4147C1207O4135C1213O4197C1217O4197C1221O4197C1223O4264C1227O4264C1233O4245C1239O4332C1247O4332C1253O4317C1259O4444C1263O4444C1269O4374C1275O4393C1281O4418C1287O4504C1291O4512C1299O4521C1302O4504C1304O4564C1307O4564C1311O4564C1313O4604C1314O4604C1316O4623C1317O4623C1319O4648C1320O4648C1322O5292C1324O5292C1329O5292C1331O5606C1334O5656C1338O5656C1372O5637C1403O5626C1411O5633C1420O5673C1430O5715C1436O5715C1443O5753C1447O5753C1452O5610C1527O5857C1533O5835C1547O5820C1557O5820C1559O5904C1563O5918C1573O5918C1583O5944C1599O5945C1609O6004C1617O6034C1623O6056C1631O6075C1638O6091C1646O6089C1654O6111C1661O6131C1669O6129C1677O6151C1684O6172C1692O6170C1700O6210C1704O6210C1706O6214C1714O6233C1722O6254C1723O6254C1725O6312C1729O6312C1731O6408C1739O6522C1748O6555C1760O6682C1777O6512C1787O6512C1789O6821C1801O6842C1810O6881C1822O6914C1834O6821C1844O6974C1856O6995C1865O7037C1877O7078C1889O6974C1899O7171C1908O7173C1923O7207C1931O7235C1948O7207C1958O7281C1966O7316C1983O7281C1993O7508C2001O7536C2026O7585C2034O7708C2049O7606C2063O7789C2073O7813C2081O7936C2096O7834C2110O8017C2118O7508C2128O8051C2132O8051C2142O8084C2162O8085C2174O8051C2176O8132C2192O8148C2202O8146C2210O8461C2214O8461C2224O8461C2226O11206C2230O11206C2240O11206C2242O13826C2249O13826C2251O14610C2258O14610C2260O14628C2268O14645C2276O17330C2283O17330C2285O17407C2289O17415C2297O17407C2299O17423C2303O17486C2311O17510C2321O19094C2329O19118C2337O20264C2345O20291C2353O21899C2365O21937C2377O22314C2391O21899C2401O21899C2403O23603C2411O23616C2419O26616C2427O26640C2435O30707C2439O30714C2453O30729C2461O31643C2465O31650C2479O31668C2487O32106C2488O32106C2490O32141C2491O32141C2493O33334C2497O33341C2511O33360C2519O35242C2523O35249C2537O35268C2545O37064C2549O37071C2563O37092C2571O37510C2575O37517C2589O37538C2597O38351C2603O38401C2609O38351C2611O38985C2617O39006C2625O39024C2633O39042C2641O40011C2649O40034C2657O40621C2665O40650C2673O40872C2681O40889C2689O40993C2695O41007C2704O41016,,
tick,0x104ea0d4c,28250,1,0x104a8d6ec,3,0x0,0x3d9b8018ed2e,0x109cc956c,0x1e372ce17b2e,0xc1101db1e60,0xc1101dae2ac
tick,0x1a4dfe814,28250,1,0x104a8d6ec,3,0x0,0x3d9b8018ed2e,0x109cc956c,0x1e372ce17b2e,0xc1101db1e60,0xc1101dae2ac
code-creation,Eval,10,28333,0x1e372ce20990,5, node:internal/modules/package_json_reader:1:1,0x1e372ce207e8,~
script-source,431,node:internal/modules/package_json_reader,'use strict';\n\nconst { SafeMap } = primordials;\nconst { internalModuleReadJSON } = internalBinding('fs');\nconst { pathToFileURL } = require('url');\nconst { toNamespacedPath } = require('path');\n\nconst cache = new SafeMap();\n\nlet manifest;\n\n/**\n *\n * @param {string} jsonPath\n */\nfunction read(jsonPath) {\n  if (cache.has(jsonPath)) {\n    return cache.get(jsonPath);\n  }\n\n  const { 0: string\x2C 1: containsKeys } = internalModuleReadJSON(\n    toNamespacedPath(jsonPath)\n  );\n  const result = { string\x2C containsKeys };\n  const { getOptionValue } = require('internal/options');\n  if (string !== undefined) {\n    if (manifest === undefined) {\n      manifest = getOptionValue('--experimental-policy') ?\n        require('internal/process/policy').manifest :\n        null;\n    }\n    if (manifest !== null) {\n      const jsonURL = pathToFileURL(jsonPath);\n      manifest.assertIntegrity(jsonURL\x2C string);\n    }\n  }\n  cache.set(jsonPath\x2C result);\n  return result;\n}\n\nmodule.exports = { read };\n
code-source-info,0x1e372ce20990,431,0,983,C0O0C4O983,,
code-creation,Function,10,28375,0x1e372ce20ae0,113, node:internal/modules/package_json_reader:1:1,0x1e372ce20908,~
code-source-info,0x1e372ce20ae0,431,0,983,C0O0C29O23C34O83C37O83C42O56C48O132C54O132C59O114C65O177C71O177C76O156C82O209C84O209C89O209C91O229C92O229C94O956C101O975C107O971C112O982,,
code-creation,Eval,10,28458,0x1e372ce212a8,5, node:internal/process/esm_loader:1:1,0x1e372ce210a0,~
script-source,432,node:internal/process/esm_loader,'use strict';\n\nconst {\n  ObjectCreate\x2C\n} = primordials;\n\nconst {\n  ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING\x2C\n} = require('internal/errors').codes;\nconst { ESMLoader } = require('internal/modules/esm/loader');\nconst {\n  hasUncaughtExceptionCaptureCallback\x2C\n} = require('internal/process/execution');\nconst { pathToFileURL } = require('internal/url');\nconst {\n  getModuleFromWrap\x2C\n} = require('internal/vm/module');\n\nexports.initializeImportMetaObject = function(wrap\x2C meta) {\n  const { callbackMap } = internalBinding('module_wrap');\n  if (callbackMap.has(wrap)) {\n    const { initializeImportMeta } = callbackMap.get(wrap);\n    if (initializeImportMeta !== undefined) {\n      initializeImportMeta(meta\x2C getModuleFromWrap(wrap) || wrap);\n    }\n  }\n};\n\nexports.importModuleDynamicallyCallback =\nasync function importModuleDynamicallyCallback(wrap\x2C specifier\x2C assertions) {\n  const { callbackMap } = internalBinding('module_wrap');\n  if (callbackMap.has(wrap)) {\n    const { importModuleDynamically } = callbackMap.get(wrap);\n    if (importModuleDynamically !== undefined) {\n      return importModuleDynamically(\n        specifier\x2C getModuleFromWrap(wrap) || wrap\x2C assertions);\n    }\n  }\n  throw new ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING();\n};\n\nconst esmLoader = new ESMLoader();\nexports.esmLoader = esmLoader;\n\n// Module.runMain() causes loadESM() to re-run (which it should do); however\x2C this should NOT cause\n// ESM to be re-initialised; doing so causes duplicate custom loaders to be added to the public\n// esmLoader.\nlet isESMInitialized = false;\n\n/**\n * Causes side-effects: user-defined loader hooks are added to esmLoader.\n * @returns {void}\n */\nasync function initializeLoader() {\n  if (isESMInitialized) { return; }\n\n  const { getOptionValue } = require('internal/options');\n  const customLoaders = getOptionValue('--experimental-loader');\n\n  if (customLoaders.length === 0) return;\n\n  let cwd;\n  try {\n    cwd = process.cwd() + '/';\n  } catch {\n    cwd = 'file:///';\n  }\n\n  // A separate loader instance is necessary to avoid cross-contamination\n  // between internal Node.js and userland. For example\x2C a module with internal\n  // state (such as a counter) should be independent.\n  const internalEsmLoader = new ESMLoader();\n\n  // Importation must be handled by internal loader to avoid poluting userland\n  const keyedExportsList = await internalEsmLoader.import(\n    customLoaders\x2C\n    pathToFileURL(cwd).href\x2C\n    ObjectCreate(null)\x2C\n  );\n\n  // Hooks must then be added to external/public loader\n  // (so they're triggered in userland)\n  await esmLoader.addCustomLoaders(keyedExportsList);\n\n  isESMInitialized = true;\n}\n\nexports.loadESM = async function loadESM(callback) {\n  try {\n    await initializeLoader();\n    await callback(esmLoader);\n  } catch (err) {\n    if (hasUncaughtExceptionCaptureCallback()) {\n      process._fatalException(err);\n      return;\n    }\n    internalBinding('errors').triggerUncaughtException(\n      err\x2C\n      true /* fromPromise */\n    );\n  }\n};\n
code-source-info,0x1e372ce212a8,432,0,2985,C0O0C4O2985,,
code-creation,Function,10,28583,0x1e372ce21548,188, node:internal/process/esm_loader:1:1,0x1e372ce21220,~
code-source-info,0x1e372ce21548,432,0,2985,C0O0C47O25C53O111C59O111C64O137C69O67C75O167C81O167C86O153C92O258C98O258C103O217C109O323C115O323C120O305C126O381C132O381C137O358C143O413C147O448C151O749C155O789C159O1259C162O1259C167O1259C169O1276C171O1294C175O1541C176O1541C178O2630C182O2646C187O2984,,
code-creation,Eval,10,28833,0x1e372ce22bc8,5, node:internal/modules/esm/loader:1:1,0x1e372ce226c8,~
script-source,433,node:internal/modules/esm/loader,'use strict';\n\n// This is needed to avoid cycles in esm/resolve <-> cjs/loader\nrequire('internal/modules/cjs/loader');\n\nconst {\n  Array\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypePush\x2C\n  FunctionPrototypeCall\x2C\n  ObjectAssign\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  PromiseAll\x2C\n  RegExpPrototypeExec\x2C\n  SafeArrayIterator\x2C\n  SafeWeakMap\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeToUpperCase\x2C\n  globalThis\x2C\n} = primordials;\nconst { MessageChannel } = require('internal/worker/io');\n\nconst {\n  ERR_LOADER_CHAIN_INCOMPLETE\x2C\n  ERR_INTERNAL_ASSERTION\x2C\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_INVALID_ARG_VALUE\x2C\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x2C\n  ERR_INVALID_RETURN_VALUE\x2C\n  ERR_UNKNOWN_MODULE_FORMAT\x2C\n} = require('internal/errors').codes;\nconst { pathToFileURL\x2C isURLInstance\x2C URL } = require('internal/url');\nconst { emitExperimentalWarning } = require('internal/util');\nconst {\n  isAnyArrayBuffer\x2C\n  isArrayBufferView\x2C\n} = require('internal/util/types');\nconst {\n  validateObject\x2C\n  validateString\x2C\n} = require('internal/validators');\nconst ModuleMap = require('internal/modules/esm/module_map');\nconst ModuleJob = require('internal/modules/esm/module_job');\n\nconst {\n  defaultResolve\x2C\n  DEFAULT_CONDITIONS\x2C\n} = require('internal/modules/esm/resolve');\nconst {\n  initializeImportMeta\n} = require('internal/modules/esm/initialize_import_meta');\nconst { defaultLoad } = require('internal/modules/esm/load');\nconst { translators } = require(\n  'internal/modules/esm/translators');\nconst { getOptionValue } = require('internal/options');\n\n/**\n * @typedef {object} ExportedHooks\n * @property {Function} globalPreload\n * @property {Function} resolve\n * @property {Function} load\n */\n\n/**\n * @typedef {Record<string\x2C any>} ModuleExports\n */\n\n/**\n * @typedef {object} KeyedExports\n * @property {ModuleExports} exports\n * @property {URL['href']} url\n */\n\n/**\n * @typedef {object} KeyedHook\n * @property {Function} fn\n * @property {URL['href']} url\n */\n\n/**\n * @typedef {'builtin'|'commonjs'|'json'|'module'|'wasm'} ModuleFormat\n */\n\n/**\n * @typedef {ArrayBuffer|TypedArray|string} ModuleSource\n */\n\n// [2] `validate...()`s throw the wrong error\n\nlet emittedSpecifierResolutionWarning = false;\n\n/**\n * A utility function to iterate through a hook chain\x2C track advancement in the\n * chain\x2C and generate and supply the `next<HookName>` argument to the custom\n * hook.\n * @param {KeyedHook[]} chain The whole hook chain.\n * @param {object} meta Properties that change as the current hook advances\n * along the chain.\n * @param {boolean} meta.chainFinished Whether the end of the chain has been\n * reached AND invoked.\n * @param {string} meta.hookErrIdentifier A user-facing identifier to help\n *  pinpoint where an error occurred. Ex "file:///foo.mjs 'resolve'".\n * @param {number} meta.hookIndex A non-negative integer tracking the current\n * position in the hook chain.\n * @param {string} meta.hookName The kind of hook the chain is (ex 'resolve')\n * @param {boolean} meta.shortCircuited Whether a hook signaled a short-circuit.\n * @param {(hookErrIdentifier\x2C hookArgs) => void} validate A wrapper function\n *  containing all validation of a custom loader hook's intermediary output. Any\n *  validation within MUST throw.\n * @returns {function next<HookName>(...hookArgs)} The next hook in the chain.\n */\nfunction nextHookFactory(chain\x2C meta\x2C { validateArgs\x2C validateOutput }) {\n  // First\x2C prepare the current\n  const { hookName } = meta;\n  const {\n    fn: hook\x2C\n    url: hookFilePath\x2C\n  } = chain[meta.hookIndex];\n\n  // ex 'nextResolve'\n  const nextHookName = `next${\n    StringPrototypeToUpperCase(hookName[0]) +\n    StringPrototypeSlice(hookName\x2C 1)\n  }`;\n\n  // When hookIndex is 0\x2C it's reached the default\x2C which does not call next()\n  // so feed it a noop that blows up if called\x2C so the problem is obvious.\n  const generatedHookIndex = meta.hookIndex;\n  let nextNextHook;\n  if (meta.hookIndex > 0) {\n    // Now\x2C prepare the next: decrement the pointer so the next call to the\n    // factory generates the next link in the chain.\n    meta.hookIndex--;\n\n    nextNextHook = nextHookFactory(chain\x2C meta\x2C { validateArgs\x2C validateOutput });\n  } else {\n    // eslint-disable-next-line func-name-matching\n    nextNextHook = function chainAdvancedTooFar() {\n      throw new ERR_INTERNAL_ASSERTION(\n        `ESM custom loader '${hookName}' advanced beyond the end of the chain.`\n      );\n    };\n  }\n\n  return ObjectDefineProperty(\n    async (arg0 = undefined\x2C context) => {\n      // Update only when hook is invoked to avoid fingering the wrong filePath\n      meta.hookErrIdentifier = `${hookFilePath} '${hookName}'`;\n\n      validateArgs(`${meta.hookErrIdentifier} hook's ${nextHookName}()`\x2C arg0\x2C context);\n\n      const outputErrIdentifier = `${chain[generatedHookIndex].url} '${hookName}' hook's ${nextHookName}()`;\n\n      // Set when next<HookName> is actually called\x2C not just generated.\n      if (generatedHookIndex === 0) { meta.chainFinished = true; }\n\n      if (context) { // `context` has already been validated\x2C so no fancy check needed.\n        ObjectAssign(meta.context\x2C context);\n      }\n\n      const output = await hook(arg0\x2C meta.context\x2C nextNextHook);\n\n      validateOutput(outputErrIdentifier\x2C output);\n\n      if (output?.shortCircuit === true) { meta.shortCircuited = true; }\n      return output;\n\n    }\x2C\n    'name'\x2C\n    { __proto__: null\x2C value: nextHookName }\x2C\n  );\n}\n\n/**\n * An ESMLoader instance is used as the main entry point for loading ES modules.\n * Currently\x2C this is a singleton -- there is only one used for loading\n * the main module and everything in its dependency graph.\n */\nclass ESMLoader {\n  /**\n   * Prior to ESM loading. These are called once before any modules are started.\n   * @private\n   * @property {KeyedHook[]} globalPreloaders Last-in-first-out\n   *  list of preload hooks.\n   */\n  #globalPreloaders = [];\n\n  /**\n   * Phase 2 of 2 in ESM loading.\n   * @private\n   * @property {KeyedHook[]} loaders Last-in-first-out\n   *  collection of loader hooks.\n   */\n  #loaders = [\n    {\n      fn: defaultLoad\x2C\n      url: 'node:internal/modules/esm/load'\x2C\n    }\x2C\n  ];\n\n  /**\n   * Phase 1 of 2 in ESM loading.\n   * @private\n   * @property {KeyedHook[]} resolvers Last-in-first-out\n   *  collection of resolver hooks.\n   */\n  #resolvers = [\n    {\n      fn: defaultResolve\x2C\n      url: 'node:internal/modules/esm/resolve'\x2C\n    }\x2C\n  ];\n\n  #importMetaInitializer = initializeImportMeta;\n\n  /**\n   * Map of already-loaded CJS modules to use\n   */\n  cjsCache = new SafeWeakMap();\n\n  /**\n   * The index for assigning unique URLs to anonymous module evaluation\n   */\n  evalIndex = 0;\n\n  /**\n   * Registry of loaded modules\x2C akin to `require.cache`\n   */\n  moduleMap = new ModuleMap();\n\n  /**\n   * Methods which translate input code or other information into ES modules\n   */\n  translators = translators;\n\n  constructor() {\n    if (getOptionValue('--experimental-loader').length > 0) {\n      emitExperimentalWarning('Custom ESM Loaders');\n    }\n    if (getOptionValue('--experimental-network-imports')) {\n      emitExperimentalWarning('Network Imports');\n    }\n    if (\n      !emittedSpecifierResolutionWarning &&\n      getOptionValue('--experimental-specifier-resolution') === 'node'\n    ) {\n      process.emitWarning(\n        'The Node.js specifier resolution flag is experimental. It could change or be removed at any time.'\x2C\n        'ExperimentalWarning'\n      );\n      emittedSpecifierResolutionWarning = true;\n    }\n  }\n\n  /**\n   *\n   * @param {ModuleExports} exports\n   * @returns {ExportedHooks}\n   */\n  static pluckHooks({\n    globalPreload\x2C\n    resolve\x2C\n    load\x2C\n    // obsolete hooks:\n    dynamicInstantiate\x2C\n    getFormat\x2C\n    getGlobalPreloadCode\x2C\n    getSource\x2C\n    transformSource\x2C\n  }) {\n    const obsoleteHooks = [];\n    const acceptedHooks = ObjectCreate(null);\n\n    if (getGlobalPreloadCode) {\n      globalPreload ??= getGlobalPreloadCode;\n\n      process.emitWarning(\n        'Loader hook "getGlobalPreloadCode" has been renamed to "globalPreload"'\n      );\n    }\n    if (dynamicInstantiate) ArrayPrototypePush(\n      obsoleteHooks\x2C\n      'dynamicInstantiate'\n    );\n    if (getFormat) ArrayPrototypePush(\n      obsoleteHooks\x2C\n      'getFormat'\x2C\n    );\n    if (getSource) ArrayPrototypePush(\n      obsoleteHooks\x2C\n      'getSource'\x2C\n    );\n    if (transformSource) ArrayPrototypePush(\n      obsoleteHooks\x2C\n      'transformSource'\x2C\n    );\n\n    if (obsoleteHooks.length) process.emitWarning(\n      `Obsolete loader hook(s) supplied and will be ignored: ${\n        ArrayPrototypeJoin(obsoleteHooks\x2C '\x2C ')\n      }`\x2C\n      'DeprecationWarning'\x2C\n    );\n\n    if (globalPreload) {\n      acceptedHooks.globalPreloader = globalPreload;\n    }\n    if (resolve) {\n      acceptedHooks.resolver = resolve;\n    }\n    if (load) {\n      acceptedHooks.loader = load;\n    }\n\n    return acceptedHooks;\n  }\n\n  /**\n   * Collect custom/user-defined hook(s). After all hooks have been collected\x2C\n   * calls global preload hook(s).\n   * @param {KeyedExports} customLoaders\n   *  A list of exports from user-defined loaders (as returned by\n   *  ESMLoader.import()).\n   */\n  addCustomLoaders(\n    customLoaders = []\x2C\n  ) {\n    for (let i = 0; i < customLoaders.length; i++) {\n      const {\n        exports\x2C\n        url\x2C\n      } = customLoaders[i];\n      const {\n        globalPreloader\x2C\n        resolver\x2C\n        loader\x2C\n      } = ESMLoader.pluckHooks(exports);\n\n      if (globalPreloader) {\n        ArrayPrototypePush(\n          this.#globalPreloaders\x2C\n          {\n            fn: globalPreloader\x2C\n            url\x2C\n          }\x2C\n        );\n      }\n      if (resolver) {\n        ArrayPrototypePush(\n          this.#resolvers\x2C\n          {\n            fn: resolver\x2C\n            url\x2C\n          }\x2C\n        );\n      }\n      if (loader) {\n        ArrayPrototypePush(\n          this.#loaders\x2C\n          {\n            fn: loader\x2C\n            url\x2C\n          }\x2C\n        );\n      }\n    }\n\n    this.preload();\n  }\n\n  async eval(\n    source\x2C\n    url = pathToFileURL(`${process.cwd()}/[eval${++this.evalIndex}]`).href\n  ) {\n    const evalInstance = (url) => {\n      const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\n      const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\n      callbackMap.set(module\x2C {\n        importModuleDynamically: (specifier\x2C { url }\x2C importAssertions) => {\n          return this.import(specifier\x2C url\x2C importAssertions);\n        }\n      });\n\n      return module;\n    };\n    const job = new ModuleJob(\n      this\x2C url\x2C undefined\x2C evalInstance\x2C false\x2C false);\n    this.moduleMap.set(url\x2C undefined\x2C job);\n    const { module } = await job.run();\n\n    return {\n      namespace: module.getNamespace()\x2C\n    };\n  }\n\n  /**\n   * Get a (possibly still pending) module job from the cache\x2C\n   * or create one and return its Promise.\n   * @param {string} specifier The string after `from` in an `import` statement\x2C\n   *                           or the first parameter of an `import()`\n   *                           expression\n   * @param {string | undefined} parentURL The URL of the module importing this\n   *                                     one\x2C unless this is the Node.js entry\n   *                                     point.\n   * @param {Record<string\x2C string>} importAssertions Validations for the\n   *                                                  module import.\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\n   */\n  async getModuleJob(specifier\x2C parentURL\x2C importAssertions) {\n    let importAssertionsForResolve;\n\n    // By default\x2C `this.#loaders` contains just the Node default load hook\n    if (this.#loaders.length !== 1) {\n      // We can skip cloning if there are no user-provided loaders because\n      // the Node.js default resolve hook does not use import assertions.\n      importAssertionsForResolve = ObjectAssign(\n        ObjectCreate(null)\x2C\n        importAssertions\x2C\n      );\n    }\n\n    const { format\x2C url } =\n      await this.resolve(specifier\x2C parentURL\x2C importAssertionsForResolve);\n\n    let job = this.moduleMap.get(url\x2C importAssertions.type);\n\n    // CommonJS will set functions for lazy job evaluation.\n    if (typeof job === 'function') {\n      this.moduleMap.set(url\x2C undefined\x2C job = job());\n    }\n\n    if (job === undefined) {\n      job = this.#createModuleJob(url\x2C importAssertions\x2C parentURL\x2C format);\n    }\n\n    return job;\n  }\n\n  /**\n   * Create and cache an object representing a loaded module.\n   * @param {string} url The absolute URL that was resolved for this module\n   * @param {Record<string\x2C string>} importAssertions Validations for the\n   *                                                  module import.\n   * @param {string} [parentURL] The absolute URL of the module importing this\n   *                             one\x2C unless this is the Node.js entry point\n   * @param {string} [format] The format hint possibly returned by the\n   *                          `resolve` hook\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\n   */\n  #createModuleJob(url\x2C importAssertions\x2C parentURL\x2C format) {\n    const moduleProvider = async (url\x2C isMain) => {\n      const {\n        format: finalFormat\x2C\n        responseURL\x2C\n        source\x2C\n      } = await this.load(url\x2C {\n        format\x2C\n        importAssertions\x2C\n      });\n\n      const translator = translators.get(finalFormat);\n\n      if (!translator) {\n        throw new ERR_UNKNOWN_MODULE_FORMAT(finalFormat\x2C responseURL);\n      }\n\n      return FunctionPrototypeCall(translator\x2C this\x2C responseURL\x2C source\x2C isMain);\n    };\n\n    const inspectBrk = (\n      parentURL === undefined &&\n      getOptionValue('--inspect-brk')\n    );\n\n    const job = new ModuleJob(\n      this\x2C\n      url\x2C\n      importAssertions\x2C\n      moduleProvider\x2C\n      parentURL === undefined\x2C\n      inspectBrk\n    );\n\n    this.moduleMap.set(url\x2C importAssertions.type\x2C job);\n\n    return job;\n  }\n\n  /**\n   * This method is usually called indirectly as part of the loading processes.\n   * Internally\x2C it is used directly to add loaders. Use directly with caution.\n   *\n   * This method must NOT be renamed: it functions as a dynamic import on a\n   * loader module.\n   *\n   * @param {string | string[]} specifiers Path(s) to the module.\n   * @param {string} parentURL Path of the parent importing the module.\n   * @param {Record<string\x2C string>} importAssertions Validations for the\n   *                                                  module import.\n   * @returns {Promise<ExportedHooks | KeyedExports[]>}\n   *  A collection of module export(s) or a list of collections of module\n   *  export(s).\n   */\n  async import(specifiers\x2C parentURL\x2C importAssertions) {\n    // For loaders\x2C `import` is passed multiple things to process\x2C it returns a\n    // list pairing the url and exports collected. This is especially useful for\n    // error messaging\x2C to identity from where an export came. But\x2C in most\n    // cases\x2C only a single url is being "imported" (ex `import()`)\x2C so there is\n    // only 1 possible url from which the exports were collected and it is\n    // already known to the caller. Nesting that in a list would only ever\n    // create redundant work for the caller\x2C so it is later popped off the\n    // internal list.\n    const wasArr = ArrayIsArray(specifiers);\n    if (!wasArr) { specifiers = [specifiers]; }\n\n    const count = specifiers.length;\n    const jobs = new Array(count);\n\n    for (let i = 0; i < count; i++) {\n      jobs[i] = this.getModuleJob(specifiers[i]\x2C parentURL\x2C importAssertions)\n        .then((job) => job.run())\n        .then(({ module }) => module.getNamespace());\n    }\n\n    const namespaces = await PromiseAll(new SafeArrayIterator(jobs));\n\n    if (!wasArr) { return namespaces[0]; } // We can skip the pairing below\n\n    for (let i = 0; i < count; i++) {\n      const namespace = ObjectCreate(null);\n      namespace.url = specifiers[i];\n      namespace.exports = namespaces[i];\n\n      namespaces[i] = namespace;\n    }\n\n    return namespaces;\n  }\n\n  /**\n   * Provide source that is understood by one of Node's translators.\n   *\n   * Internally\x2C this behaves like a backwards iterator\x2C wherein the stack of\n   * hooks starts at the top and each call to `nextLoad()` moves down 1 step\n   * until it reaches the bottom or short-circuits.\n   *\n   * @param {URL['href']} url The URL/path of the module to be loaded\n   * @param {object} context Metadata about the module\n   * @returns {{ format: ModuleFormat\x2C source: ModuleSource }}\n   */\n  async load(url\x2C context = {}) {\n    const chain = this.#loaders;\n    const meta = {\n      chainFinished: null\x2C\n      context\x2C\n      hookErrIdentifier: ''\x2C\n      hookIndex: chain.length - 1\x2C\n      hookName: 'load'\x2C\n      shortCircuited: false\x2C\n    };\n\n    const validateArgs = (hookErrIdentifier\x2C nextUrl\x2C ctx) => {\n      if (typeof nextUrl !== 'string') {\n        // non-strings can be coerced to a url string\n        // validateString() throws a less-specific error\n        throw new ERR_INVALID_ARG_TYPE(\n          `${hookErrIdentifier} url`\x2C\n          'a url string'\x2C\n          nextUrl\x2C\n        );\n      }\n\n      // Try to avoid expensive URL instantiation for known-good urls\n      if (!this.moduleMap.has(nextUrl)) {\n        try {\n          new URL(nextUrl);\n        } catch {\n          throw new ERR_INVALID_ARG_VALUE(\n            `${hookErrIdentifier} url`\x2C\n            nextUrl\x2C\n            'should be a url string'\x2C\n          );\n        }\n      }\n\n      if (ctx) validateObject(ctx\x2C `${hookErrIdentifier} context`);\n    };\n    const validateOutput = (hookErrIdentifier\x2C output) => {\n      if (typeof output !== 'object' || output === null) { // [2]\n        throw new ERR_INVALID_RETURN_VALUE(\n          'an object'\x2C\n          hookErrIdentifier\x2C\n          output\x2C\n        );\n      }\n    };\n\n    const nextLoad = nextHookFactory(chain\x2C meta\x2C { validateArgs\x2C validateOutput });\n\n    const loaded = await nextLoad(url\x2C context);\n    const { hookErrIdentifier } = meta; // Retrieve the value after all settled\n\n    validateOutput(hookErrIdentifier\x2C loaded);\n\n    if (loaded?.shortCircuit === true) { meta.shortCircuited = true; }\n\n    if (!meta.chainFinished && !meta.shortCircuited) {\n      throw new ERR_LOADER_CHAIN_INCOMPLETE(hookErrIdentifier);\n    }\n\n    const {\n      format\x2C\n      source\x2C\n    } = loaded;\n    let responseURL = loaded.responseURL;\n\n    if (responseURL === undefined) {\n      responseURL = url;\n    }\n\n    let responseURLObj;\n    if (typeof responseURL === 'string') {\n      try {\n        responseURLObj = new URL(responseURL);\n      } catch {\n        // responseURLObj not defined will throw in next branch.\n      }\n    }\n\n    if (responseURLObj?.href !== responseURL) {\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\n        'undefined or a fully resolved URL string'\x2C\n        hookErrIdentifier\x2C\n        'responseURL'\x2C\n        responseURL\x2C\n      );\n    }\n\n    if (format == null) {\n      const dataUrl = RegExpPrototypeExec(\n        /^data:([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\n        url\x2C\n      );\n\n      throw new ERR_UNKNOWN_MODULE_FORMAT(\n        dataUrl ? dataUrl[1] : format\x2C\n        url);\n    }\n\n    if (typeof format !== 'string') { // [2]\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\n        'a string'\x2C\n        hookErrIdentifier\x2C\n        'format'\x2C\n        format\x2C\n      );\n    }\n\n    if (\n      source != null &&\n      typeof source !== 'string' &&\n      !isAnyArrayBuffer(source) &&\n      !isArrayBufferView(source)\n    ) {\n      throw ERR_INVALID_RETURN_PROPERTY_VALUE(\n        'a string\x2C an ArrayBuffer\x2C or a TypedArray'\x2C\n        hookErrIdentifier\x2C\n        'source'\x2C\n        source\n      );\n    }\n\n    return {\n      format\x2C\n      responseURL\x2C\n      source\x2C\n    };\n  }\n\n  preload() {\n    for (let i = this.#globalPreloaders.length - 1; i >= 0; i--) {\n      const channel = new MessageChannel();\n      const {\n        port1: insidePreload\x2C\n        port2: insideLoader\x2C\n      } = channel;\n\n      insidePreload.unref();\n      insideLoader.unref();\n\n      const {\n        fn: preloader\x2C\n        url: specifier\x2C\n      } = this.#globalPreloaders[i];\n\n      const preload = preloader({\n        port: insideLoader\x2C\n      });\n\n      if (preload == null) { return; }\n\n      const hookErrIdentifier = `${specifier} globalPreload`;\n\n      if (typeof preload !== 'string') { // [2]\n        throw new ERR_INVALID_RETURN_VALUE(\n          'a string'\x2C\n          hookErrIdentifier\x2C\n          preload\x2C\n        );\n      }\n      const { compileFunction } = require('vm');\n      const preloadInit = compileFunction(\n        preload\x2C\n        ['getBuiltin'\x2C 'port'\x2C 'setImportMetaCallback']\x2C\n        {\n          filename: '<preload>'\x2C\n        }\n      );\n      const { BuiltinModule } = require('internal/bootstrap/loaders');\n      // We only allow replacing the importMetaInitializer during preload\x2C\n      // after preload is finished\x2C we disable the ability to replace it\n      //\n      // This exposes accidentally setting the initializer too late by\n      // throwing an error.\n      let finished = false;\n      let replacedImportMetaInitializer = false;\n      let next = this.#importMetaInitializer;\n      try {\n        // Calls the compiled preload source text gotten from the hook\n        // Since the parameters are named we use positional parameters\n        // see compileFunction above to cross reference the names\n        FunctionPrototypeCall(\n          preloadInit\x2C\n          globalThis\x2C\n          // Param getBuiltin\n          (builtinName) => {\n            if (BuiltinModule.canBeRequiredByUsers(builtinName) &&\n                BuiltinModule.canBeRequiredWithoutScheme(builtinName)) {\n              return require(builtinName);\n            }\n            throw new ERR_INVALID_ARG_VALUE('builtinName'\x2C builtinName);\n          }\x2C\n          // Param port\n          insidePreload\x2C\n          // Param setImportMetaCallback\n          (fn) => {\n            if (finished || typeof fn !== 'function') {\n              throw new ERR_INVALID_ARG_TYPE('fn'\x2C fn);\n            }\n            replacedImportMetaInitializer = true;\n            const parent = next;\n            next = (meta\x2C context) => {\n              return fn(meta\x2C context\x2C parent);\n            };\n          });\n      } finally {\n        finished = true;\n        if (replacedImportMetaInitializer) {\n          this.#importMetaInitializer = next;\n        }\n      }\n    }\n  }\n\n  importMetaInitialize(meta\x2C context) {\n    this.#importMetaInitializer(meta\x2C context);\n  }\n\n  /**\n   * Resolve the location of the module.\n   *\n   * Internally\x2C this behaves like a backwards iterator\x2C wherein the stack of\n   * hooks starts at the top and each call to `nextResolve()` moves down 1 step\n   * until it reaches the bottom or short-circuits.\n   *\n   * @param {string} originalSpecifier The specified URL path of the module to\n   *                                   be resolved.\n   * @param {string} [parentURL] The URL path of the module's parent.\n   * @param {ImportAssertions} [importAssertions] Assertions from the import\n   *                                              statement or expression.\n   * @returns {{ format: string\x2C url: URL['href'] }}\n   */\n  async resolve(\n    originalSpecifier\x2C\n    parentURL\x2C\n    importAssertions = ObjectCreate(null)\n  ) {\n    const isMain = parentURL === undefined;\n\n    if (\n      !isMain &&\n      typeof parentURL !== 'string' &&\n      !isURLInstance(parentURL)\n    ) {\n      throw new ERR_INVALID_ARG_TYPE(\n        'parentURL'\x2C\n        ['string'\x2C 'URL']\x2C\n        parentURL\x2C\n      );\n    }\n    const chain = this.#resolvers;\n    const context = {\n      conditions: DEFAULT_CONDITIONS\x2C\n      importAssertions\x2C\n      parentURL\x2C\n    };\n    const meta = {\n      chainFinished: null\x2C\n      context\x2C\n      hookErrIdentifier: ''\x2C\n      hookIndex: chain.length - 1\x2C\n      hookName: 'resolve'\x2C\n      shortCircuited: false\x2C\n    };\n\n    const validateArgs = (hookErrIdentifier\x2C suppliedSpecifier\x2C ctx) => {\n      validateString(\n        suppliedSpecifier\x2C\n        `${hookErrIdentifier} specifier`\x2C\n      ); // non-strings can be coerced to a url string\n\n      if (ctx) validateObject(ctx\x2C `${hookErrIdentifier} context`);\n    };\n    const validateOutput = (hookErrIdentifier\x2C output) => {\n      if (typeof output !== 'object' || output === null) { // [2]\n        throw new ERR_INVALID_RETURN_VALUE(\n          'an object'\x2C\n          hookErrIdentifier\x2C\n          output\x2C\n        );\n      }\n    };\n\n    const nextResolve = nextHookFactory(chain\x2C meta\x2C { validateArgs\x2C validateOutput });\n\n    const resolution = await nextResolve(originalSpecifier\x2C context);\n    const { hookErrIdentifier } = meta; // Retrieve the value after all settled\n\n    validateOutput(hookErrIdentifier\x2C resolution);\n\n    if (resolution?.shortCircuit === true) { meta.shortCircuited = true; }\n\n    if (!meta.chainFinished && !meta.shortCircuited) {\n      throw new ERR_LOADER_CHAIN_INCOMPLETE(hookErrIdentifier);\n    }\n\n    const {\n      format\x2C\n      url\x2C\n    } = resolution;\n\n    if (\n      format != null &&\n      typeof format !== 'string' // [2]\n    ) {\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\n        'a string'\x2C\n        hookErrIdentifier\x2C\n        'format'\x2C\n        format\x2C\n      );\n    }\n\n    if (typeof url !== 'string') {\n      // non-strings can be coerced to a url string\n      // validateString() throws a less-specific error\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\n        'a url string'\x2C\n        hookErrIdentifier\x2C\n        'url'\x2C\n        url\x2C\n      );\n    }\n\n    // Try to avoid expensive URL instantiation for known-good urls\n    if (!this.moduleMap.has(url)) {\n      try {\n        new URL(url);\n      } catch {\n        throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\n          'a url string'\x2C\n          hookErrIdentifier\x2C\n          'url'\x2C\n          url\x2C\n        );\n      }\n    }\n\n    return {\n      format\x2C\n      url\x2C\n    };\n  }\n}\n\nObjectSetPrototypeOf(ESMLoader.prototype\x2C null);\n\nexports.ESMLoader = ESMLoader;\n
code-source-info,0x1e372ce22bc8,433,0,25864,C0O0C4O25864,,
code-creation,Function,10,29833,0x1e372ce234d8,712, node:internal/modules/esm/loader:1:1,0x1e372ce22b40,~
code-source-info,0x1e372ce234d8,433,0,25864,C0O0C143O79C149O79C153O130C159O139C165O155C171O177C177O199C183O224C189O240C195O256C201O280C206O304C212O318C218O341C224O362C230O377C236O401C242O431C248O487C254O487C259O468C265O731C271O731C276O757C281O529C287O560C293O586C299O610C305O635C311O672C317O700C323O811C329O811C334O773C340O788C346O803C352O872C358O872C363O844C369O951C375O951C380O908C386O928C392O1031C398O1031C403O993C409O1011C415O1081C421O1081C425O1081C427O1143C433O1143C437O1143C439O1240C445O1240C450O1198C456O1216C462O1316C468O1316C473O1291C479O1396C485O1396C490O1380C496O1458C502O1458C507O1442C513O1533C519O1533C524O1514C530O2205C531O2205C692O25814C699O25783C704O25833C706O25851C711O25863,,
code-creation,Function,10,29833,0x1e372ce23a50,145,<instance_members_initializer> node:internal/modules/esm/loader:182:1,0x1e372ce22fe8,~
code-source-info,0x1e372ce23a50,433,5625,25781,C3O5865C12O6032C28O6050C49O6289C65O6307C86O6411C96O6505C103O6505C112O6623C117O6710C124O6710C133O6833C144O25781,,
tick,0x1a4e3ea90,29875,1,0x104a8d6ec,3,0x0,0x3d9b8018ed2e,0x109cc956c,0x1e372ce21599,0x3d9b8018ed4f,0x109cc956c,0x1e372ce1cbe9,0x3d9b8018ed4f,0x109cc956c,0x1e372ce17b2e,0xc1101db1e60,0xc1101dae2ac
code-creation,Eval,10,29916,0x1e372ce25cb8,5, node:internal/modules/esm/module_map:1:1,0x1e372ce25ab8,~
script-source,434,node:internal/modules/esm/module_map,'use strict';\n\nconst ModuleJob = require('internal/modules/esm/module_job');\nconst { kImplicitAssertType } = require('internal/modules/esm/assert');\nconst {\n  ObjectCreate\x2C\n  SafeMap\x2C\n} = primordials;\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\n  debug = fn;\n});\nconst { ERR_INVALID_ARG_TYPE } = require('internal/errors').codes;\nconst { validateString } = require('internal/validators');\n\n// Tracks the state of the loader-level module cache\nclass ModuleMap extends SafeMap {\n  constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  get(url\x2C type = kImplicitAssertType) {\n    validateString(url\x2C 'url');\n    validateString(type\x2C 'type');\n    return super.get(url)?.[type];\n  }\n  set(url\x2C type = kImplicitAssertType\x2C job) {\n    validateString(url\x2C 'url');\n    validateString(type\x2C 'type');\n    if (job instanceof ModuleJob !== true &&\n        typeof job !== 'function') {\n      throw new ERR_INVALID_ARG_TYPE('job'\x2C 'ModuleJob'\x2C job);\n    }\n    debug(`Storing ${url} (${\n      type === kImplicitAssertType ? 'implicit type' : type\n    }) in ModuleMap`);\n    const cachedJobsForUrl = super.get(url) ?? ObjectCreate(null);\n    cachedJobsForUrl[type] = job;\n    return super.set(url\x2C cachedJobsForUrl);\n  }\n  has(url\x2C type = kImplicitAssertType) {\n    validateString(url\x2C 'url');\n    validateString(type\x2C 'type');\n    return super.get(url)?.[type] !== undefined;\n  }\n}\nmodule.exports = ModuleMap;\n
code-source-info,0x1e372ce25cb8,434,0,1444,C0O0C4O1444,,
code-creation,Function,10,30000,0x1e372ce260f0,175, node:internal/modules/esm/module_map:1:1,0x1e372ce25c30,~
code-source-info,0x1e372ce260f0,434,0,1444,C0O0C23O33C26O33C30O33C32O109C35O109C40O85C46O159C52O175C57O213C60O213C65O246C78O247C84O213C86O324C89O324C94O350C99O299C105O385C108O385C113O366C123O495C167O1416C169O1431C174O1443,,
code-creation,Eval,10,30125,0x1e372ce26c08,5, node:internal/modules/esm/module_job:1:1,0x1e372ce26940,~
script-source,435,node:internal/modules/esm/module_job,'use strict';\n\nconst {\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSome\x2C\n  FunctionPrototype\x2C\n  ObjectCreate\x2C\n  ObjectSetPrototypeOf\x2C\n  PromiseResolve\x2C\n  PromisePrototypeThen\x2C\n  ReflectApply\x2C\n  RegExpPrototypeExec\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  SafePromiseAll\x2C\n  SafeSet\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n} = primordials;\n\nconst { ModuleWrap } = internalBinding('module_wrap');\n\nconst { decorateErrorStack } = require('internal/util');\nconst {\n  getSourceMapsEnabled\x2C\n} = require('internal/source_map/source_map_cache');\nconst assert = require('internal/assert');\nconst resolvedPromise = PromiseResolve();\n\nconst noop = FunctionPrototype;\n\nlet hasPausedEntry = false;\n\nconst CJSGlobalLike = [\n  'require'\x2C\n  'module'\x2C\n  'exports'\x2C\n  '__filename'\x2C\n  '__dirname'\x2C\n];\nconst isCommonJSGlobalLikeNotDefinedError = (errorMessage) =>\n  ArrayPrototypeSome(\n    CJSGlobalLike\x2C\n    (globalLike) => errorMessage === `${globalLike} is not defined`\n  );\n\n/* A ModuleJob tracks the loading of a single Module\x2C and the ModuleJobs of\n * its dependencies\x2C over time. */\nclass ModuleJob {\n  // `loader` is the Loader instance used for loading dependencies.\n  // `moduleProvider` is a function\n  constructor(loader\x2C url\x2C importAssertions = ObjectCreate(null)\x2C\n              moduleProvider\x2C isMain\x2C inspectBrk) {\n    this.loader = loader;\n    this.importAssertions = importAssertions;\n    this.isMain = isMain;\n    this.inspectBrk = inspectBrk;\n\n    this.module = undefined;\n    // Expose the promise to the ModuleWrap directly for linking below.\n    // `this.module` is also filled in below.\n    this.modulePromise = ReflectApply(moduleProvider\x2C loader\x2C [url\x2C isMain]);\n\n    // Wait for the ModuleWrap instance being linked with all dependencies.\n    const link = async () => {\n      this.module = await this.modulePromise;\n      assert(this.module instanceof ModuleWrap);\n\n      // Explicitly keeping track of dependency jobs is needed in order\n      // to flatten out the dependency graph below in `_instantiate()`\x2C\n      // so that circular dependencies can't cause a deadlock by two of\n      // these `link` callbacks depending on each other.\n      const dependencyJobs = [];\n      const promises = this.module.link(async (specifier\x2C assertions) => {\n        const jobPromise = this.loader.getModuleJob(specifier\x2C url\x2C assertions);\n        ArrayPrototypePush(dependencyJobs\x2C jobPromise);\n        const job = await jobPromise;\n        return job.modulePromise;\n      });\n\n      if (promises !== undefined)\n        await SafePromiseAll(promises);\n\n      return SafePromiseAll(dependencyJobs);\n    };\n    // Promise for the list of all dependencyJobs.\n    this.linked = link();\n    // This promise is awaited later anyway\x2C so silence\n    // 'unhandled rejection' warnings.\n    PromisePrototypeThen(this.linked\x2C undefined\x2C noop);\n\n    // instantiated == deep dependency jobs wrappers are instantiated\x2C\n    // and module wrapper is instantiated.\n    this.instantiated = undefined;\n  }\n\n  instantiate() {\n    if (this.instantiated === undefined) {\n      this.instantiated = this._instantiate();\n    }\n    return this.instantiated;\n  }\n\n  async _instantiate() {\n    const jobsInGraph = new SafeSet();\n    const addJobsToDependencyGraph = async (moduleJob) => {\n      if (jobsInGraph.has(moduleJob)) {\n        return;\n      }\n      jobsInGraph.add(moduleJob);\n      const dependencyJobs = await moduleJob.linked;\n      return SafePromiseAll(dependencyJobs\x2C addJobsToDependencyGraph);\n    };\n    await addJobsToDependencyGraph(this);\n\n    try {\n      if (!hasPausedEntry && this.inspectBrk) {\n        hasPausedEntry = true;\n        const initWrapper = internalBinding('inspector').callAndPauseOnStart;\n        initWrapper(this.module.instantiate\x2C this.module);\n      } else {\n        this.module.instantiate();\n      }\n    } catch (e) {\n      decorateErrorStack(e);\n      // TODO(@bcoe): Add source map support to exception that occurs as result\n      // of missing named export. This is currently not possible because\n      // stack trace originates in module_job\x2C not the file itself. A hidden\n      // symbol with filename could be set in node_errors.cc to facilitate this.\n      if (!getSourceMapsEnabled() &&\n          StringPrototypeIncludes(e.message\x2C\n                                  ' does not provide an export named')) {\n        const splitStack = StringPrototypeSplit(e.stack\x2C '\\n');\n        const parentFileUrl = RegExpPrototypeSymbolReplace(\n          /:\\d+$/\x2C\n          splitStack[0]\x2C\n          ''\n        );\n        const { 1: childSpecifier\x2C 2: name } = RegExpPrototypeExec(\n          /module '(.*)' does not provide an export named '(.+)'/\x2C\n          e.message);\n        const { url: childFileURL } = await this.loader.resolve(\n          childSpecifier\x2C parentFileUrl\x2C\n        );\n        let format;\n        try {\n          // This might throw for non-CommonJS modules because we aren't passing\n          // in the import assertions and some formats require them; but we only\n          // care about CommonJS for the purposes of this error message.\n          ({ format } =\n            await this.loader.load(childFileURL));\n        } catch {\n          // Continue regardless of error.\n        }\n\n        if (format === 'commonjs') {\n          const importStatement = splitStack[1];\n          // TODO(@ctavan): The original error stack only provides the single\n          // line which causes the error. For multi-line import statements we\n          // cannot generate an equivalent object destructuring assignment by\n          // just parsing the error stack.\n          const oneLineNamedImports = RegExpPrototypeExec(/{.*}/\x2C importStatement);\n          const destructuringAssignment = oneLineNamedImports &&\n            RegExpPrototypeSymbolReplace(/\\s+as\\s+/g\x2C oneLineNamedImports\x2C ': ');\n          e.message = `Named export '${name}' not found. The requested module` +\n            ` '${childSpecifier}' is a CommonJS module\x2C which may not support` +\n            ' all module.exports as named exports.\\nCommonJS modules can ' +\n            'always be imported via the default export\x2C for example using:' +\n            `\\n\\nimport pkg from '${childSpecifier}';\\n${\n              destructuringAssignment ?\n                `const ${destructuringAssignment} = pkg;\\n` : ''}`;\n          const newStack = StringPrototypeSplit(e.stack\x2C '\\n');\n          newStack[3] = `SyntaxError: ${e.message}`;\n          e.stack = ArrayPrototypeJoin(newStack\x2C '\\n');\n        }\n      }\n      throw e;\n    }\n\n    for (const dependencyJob of jobsInGraph) {\n      // Calling `this.module.instantiate()` instantiates not only the\n      // ModuleWrap in this module\x2C but all modules in the graph.\n      dependencyJob.instantiated = resolvedPromise;\n    }\n  }\n\n  async run() {\n    await this.instantiate();\n    const timeout = -1;\n    const breakOnSigint = false;\n    try {\n      await this.module.evaluate(timeout\x2C breakOnSigint);\n    } catch (e) {\n      if (e?.name === 'ReferenceError' &&\n          isCommonJSGlobalLikeNotDefinedError(e.message)) {\n        e.message += ' in ES module scope';\n\n        if (StringPrototypeStartsWith(e.message\x2C 'require ')) {\n          e.message += '\x2C you can use import instead';\n        }\n\n        const packageConfig =\n          StringPrototypeStartsWith(this.module.url\x2C 'file://') &&\n            RegExpPrototypeExec(/\\.js(\\?[^#]*)?(#.*)?$/\x2C this.module.url) !== null &&\n            require('internal/modules/esm/resolve')\n              .getPackageScopeConfig(this.module.url);\n        if (packageConfig.type === 'module') {\n          e.message +=\n            '\\nThis file is being treated as an ES module because it has a ' +\n            `'.js' file extension and '${packageConfig.pjsonPath}' contains ` +\n            '"type": "module". To treat it as a CommonJS script\x2C rename it ' +\n            'to use the \\'.cjs\\' file extension.';\n        }\n      }\n      throw e;\n    }\n    return { module: this.module };\n  }\n}\nObjectSetPrototypeOf(ModuleJob.prototype\x2C null);\nmodule.exports = ModuleJob;\n
code-source-info,0x1e372ce26c08,435,0,8068,C0O0C4O8068,,
code-creation,Function,10,30416,0x1e372ce270e8,316, node:internal/modules/esm/module_job:1:1,0x1e372ce26b80,~
code-source-info,0x1e372ce270e8,435,0,8068,C0O0C79O25C85O47C91O69C97O91C102O112C108O128C113O152C118O170C124O194C130O210C136O233C142O265C148O283C154O294C160O321C166O345C172O413C178O413C183O398C189O477C195O477C200O454C206O539C212O539C217O513C223O603C229O603C233O603C235O655C238O655C240O687C242O687C244O728C245O728C247O758C251O758C253O876C257O876C296O8022C303O7991C308O8040C310O8055C315O8067,,
code-creation,Eval,10,30541,0x1e372ce28ce0,5, node:internal/modules/esm/assert:1:1,0x1e372ce28ae8,~
script-source,436,node:internal/modules/esm/assert,'use strict';\n\nconst {\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIncludes\x2C\n  ObjectCreate\x2C\n  ObjectValues\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n} = primordials;\nconst { validateString } = require('internal/validators');\n\nconst {\n  ERR_IMPORT_ASSERTION_TYPE_FAILED\x2C\n  ERR_IMPORT_ASSERTION_TYPE_MISSING\x2C\n  ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED\x2C\n} = require('internal/errors').codes;\n\n// The HTML spec has an implied default type of `'javascript'`.\nconst kImplicitAssertType = 'javascript';\n\n/**\n * Define a map of module formats to import assertion types (the value of\n * `type` in `assert { type: 'json' }`).\n * @type {Map<string\x2C string>}\n */\nconst formatTypeMap = {\n  '__proto__': null\x2C\n  'builtin': kImplicitAssertType\x2C\n  'commonjs': kImplicitAssertType\x2C\n  'json': 'json'\x2C\n  'module': kImplicitAssertType\x2C\n  'wasm': kImplicitAssertType\x2C // It's unclear whether the HTML spec will require an assertion type or not for Wasm; see https://github.com/WebAssembly/esm-integration/issues/42\n};\n\n/**\n * The HTML spec disallows the default type to be explicitly specified\n * (for now); so `import './file.js'` is okay but\n * `import './file.js' assert { type: 'javascript' }` throws.\n * @type {Array<string\x2C string>}\n */\nconst supportedAssertionTypes = ArrayPrototypeFilter(\n  ObjectValues(formatTypeMap)\x2C\n  (type) => type !== kImplicitAssertType);\n\n\n/**\n * Test a module's import assertions.\n * @param {string} url The URL of the imported module\x2C for error reporting.\n * @param {string} format One of Node's supported translators\n * @param {Record<string\x2C string>} importAssertions Validations for the\n *                                                  module import.\n * @returns {true}\n * @throws {TypeError} If the format and assertion type are incompatible.\n */\nfunction validateAssertions(url\x2C format\x2C\n                            importAssertions = ObjectCreate(null)) {\n  const validType = formatTypeMap[format];\n\n  switch (validType) {\n    case undefined:\n      // Ignore assertions for module formats we don't recognize\x2C to allow new\n      // formats in the future.\n      return true;\n\n    case kImplicitAssertType:\n      // This format doesn't allow an import assertion type\x2C so the property\n      // must not be set on the import assertions object.\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\n        return true;\n      }\n      return handleInvalidType(url\x2C importAssertions.type);\n\n    case importAssertions.type:\n      // The asserted type is the valid type for this format.\n      return true;\n\n    default:\n      // There is an expected type for this format\x2C but the value of\n      // `importAssertions.type` might not have been it.\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\n        // `type` wasn't specified at all.\n        throw new ERR_IMPORT_ASSERTION_TYPE_MISSING(url\x2C validType);\n      }\n      handleInvalidType(url\x2C importAssertions.type);\n  }\n}\n\n/**\n * Throw the correct error depending on what's wrong with the type assertion.\n * @param {string} url The resolved URL for the module to be imported\n * @param {string} type The value of the import assertion `type` property\n */\nfunction handleInvalidType(url\x2C type) {\n  // `type` might have not been a string.\n  validateString(type\x2C 'type');\n\n  // `type` might not have been one of the types we understand.\n  if (!ArrayPrototypeIncludes(supportedAssertionTypes\x2C type)) {\n    throw new ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED(type);\n  }\n\n  // `type` was the wrong value for this format.\n  throw new ERR_IMPORT_ASSERTION_TYPE_FAILED(url\x2C type);\n}\n\n\nmodule.exports = {\n  kImplicitAssertType\x2C\n  validateAssertions\x2C\n};\n
code-source-info,0x1e372ce28ce0,436,0,3624,C0O0C4O3624,,
code-creation,Function,10,30666,0x1e372ce28fb8,201, node:internal/modules/esm/assert:1:1,0x1e372ce28c58,~
code-source-info,0x1e372ce28fb8,436,0,3624,C0O0C46O25C51O49C57O75C63O91C68O107C74O182C77O182C82O163C88O341C91O341C96O367C101O225C107O261C113O298C119O468C121O468C123O659C130O695C136O730C142O781C148O812C154O659C156O1240C159O1264C169O1240C174O1240C176O3557C183O3578C189O3601C195O3572C200O3623,,
tick,0x104a217ec,30708,1,0x104a8d6ec,3,0x0,0x3d9b8018ed2e,0x109cc956c,0x1e372ce26113,0x3d9b8018ed4f,0x109cc956c,0x1e372ce2367d,0x3d9b8018ed4f,0x109cc956c,0x1e372ce21599,0x3d9b8018ed4f,0x109cc956c,0x1e372ce1cbe9,0x3d9b8018ed4f,0x109cc956c,0x1e372ce17b2e,0xc1101db1e60,0xc1101dae2ac
code-creation,LazyCompile,10,30750,0x1e372ce295c8,9, node:internal/modules/esm/assert:43:3,0x1e372ce28db0,~
code-source-info,0x1e372ce295c8,436,1295,1333,C0O1310C2O1314C4O1310C8O1333,,
code-creation,Eval,10,31125,0x1e372ce2be30,5, node:internal/modules/esm/resolve:1:1,0x1e372ce2a980,~
script-source,437,node:internal/modules/esm/resolve,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeConcat\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeShift\x2C\n  JSONParse\x2C\n  JSONStringify\x2C\n  ObjectFreeze\x2C\n  ObjectGetOwnPropertyNames\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  RegExp\x2C\n  RegExpPrototypeExec\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  String\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeLastIndexOf\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n} = primordials;\nconst internalFS = require('internal/fs/utils');\nconst { BuiltinModule } = require('internal/bootstrap/loaders');\nconst {\n  realpathSync\x2C\n  statSync\x2C\n  Stats\x2C\n} = require('fs');\nconst { getOptionValue } = require('internal/options');\n// Do not eagerly grab .manifest\x2C it may be in TDZ\nconst policy = getOptionValue('--experimental-policy') ?\n  require('internal/process/policy') :\n  null;\nconst { sep\x2C relative\x2C resolve } = require('path');\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\nconst experimentalNetworkImports =\n  getOptionValue('--experimental-network-imports');\nconst typeFlag = getOptionValue('--input-type');\nconst { URL\x2C pathToFileURL\x2C fileURLToPath } = require('internal/url');\nconst {\n  ERR_INPUT_TYPE_NOT_ALLOWED\x2C\n  ERR_INVALID_ARG_VALUE\x2C\n  ERR_INVALID_MODULE_SPECIFIER\x2C\n  ERR_INVALID_PACKAGE_CONFIG\x2C\n  ERR_INVALID_PACKAGE_TARGET\x2C\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\n  ERR_MODULE_NOT_FOUND\x2C\n  ERR_PACKAGE_IMPORT_NOT_DEFINED\x2C\n  ERR_PACKAGE_PATH_NOT_EXPORTED\x2C\n  ERR_UNSUPPORTED_DIR_IMPORT\x2C\n  ERR_NETWORK_IMPORT_DISALLOWED\x2C\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\n} = require('internal/errors').codes;\n\nconst { Module: CJSModule } = require('internal/modules/cjs/loader');\nconst packageJsonReader = require('internal/modules/package_json_reader');\nconst { getPackageConfig\x2C getPackageScopeConfig } = require('internal/modules/esm/package_config');\n\n/**\n * @typedef {import('internal/modules/esm/package_config.js').PackageConfig} PackageConfig\n */\n\n\nconst userConditions = getOptionValue('--conditions');\nconst noAddons = getOptionValue('--no-addons');\nconst addonConditions = noAddons ? [] : ['node-addons'];\n\nconst DEFAULT_CONDITIONS = ObjectFreeze([\n  'node'\x2C\n  'import'\x2C\n  ...addonConditions\x2C\n  ...userConditions\x2C\n]);\n\nconst DEFAULT_CONDITIONS_SET = new SafeSet(DEFAULT_CONDITIONS);\n\nconst emittedPackageWarnings = new SafeSet();\n\nfunction emitTrailingSlashPatternDeprecation(match\x2C pjsonUrl\x2C base) {\n  const pjsonPath = fileURLToPath(pjsonUrl);\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\n    return;\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\n  process.emitWarning(\n    `Use of deprecated trailing slash pattern mapping "${match}" in the ` +\n    `"exports" field module resolution of the package at ${pjsonPath}${\n      base ? ` imported from ${fileURLToPath(base)}` :\n        ''}. Mapping specifiers ending in "/" is no longer supported.`\x2C\n    'DeprecationWarning'\x2C\n    'DEP0155'\n  );\n}\n\n/**\n * @param {URL} url\n * @param {URL} packageJSONUrl\n * @param {string | URL | undefined} base\n * @param {string} main\n * @returns {void}\n */\nfunction emitLegacyIndexDeprecation(url\x2C packageJSONUrl\x2C base\x2C main) {\n  const format = defaultGetFormatWithoutErrors(url);\n  if (format !== 'module')\n    return;\n  const path = fileURLToPath(url);\n  const pkgPath = fileURLToPath(new URL('.'\x2C packageJSONUrl));\n  const basePath = fileURLToPath(base);\n  if (main)\n    process.emitWarning(\n      `Package ${pkgPath} has a "main" field set to ${JSONStringify(main)}\x2C ` +\n      `excluding the full filename and extension to the resolved file at "${\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${\n        basePath}.\\n Automatic extension resolution of the "main" field is ` +\n      'deprecated for ES modules.'\x2C\n      'DeprecationWarning'\x2C\n      'DEP0151'\n    );\n  else\n    process.emitWarning(\n      `No "main" or "exports" field defined in the package.json for ${pkgPath\n      } resolving the main entry point "${\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${basePath\n      }.\\nDefault "index" lookups for the main are deprecated for ES modules.`\x2C\n      'DeprecationWarning'\x2C\n      'DEP0151'\n    );\n}\n\n/**\n * @param {string[]} [conditions]\n * @returns {Set<string>}\n */\nfunction getConditionsSet(conditions) {\n  if (conditions !== undefined && conditions !== DEFAULT_CONDITIONS) {\n    if (!ArrayIsArray(conditions)) {\n      throw new ERR_INVALID_ARG_VALUE('conditions'\x2C conditions\x2C\n                                      'expected an array');\n    }\n    return new SafeSet(conditions);\n  }\n  return DEFAULT_CONDITIONS_SET;\n}\n\nconst realpathCache = new SafeMap();\n\n/**\n * @param {string | URL} path\n * @returns {import('fs').Stats}\n */\nconst tryStatSync =\n  (path) => statSync(path\x2C { throwIfNoEntry: false }) ?? new Stats();\n\n/**\n * @param {string | URL} url\n * @returns {boolean}\n */\nfunction fileExists(url) {\n  return statSync(url\x2C { throwIfNoEntry: false })?.isFile() ?? false;\n}\n\n/**\n * Legacy CommonJS main resolution:\n * 1. let M = pkg_url + (json main field)\n * 2. TRY(M\x2C M.js\x2C M.json\x2C M.node)\n * 3. TRY(M/index.js\x2C M/index.json\x2C M/index.node)\n * 4. TRY(pkg_url/index.js\x2C pkg_url/index.json\x2C pkg_url/index.node)\n * 5. NOT_FOUND\n * @param {URL} packageJSONUrl\n * @param {PackageConfig} packageConfig\n * @param {string | URL | undefined} base\n * @returns {URL}\n */\nfunction legacyMainResolve(packageJSONUrl\x2C packageConfig\x2C base) {\n  let guess;\n  if (packageConfig.main !== undefined) {\n    // Note: fs check redundances will be handled by Descriptor cache here.\n    if (fileExists(guess = new URL(`./${packageConfig.main}`\x2C\n                                   packageJSONUrl))) {\n      return guess;\n    } else if (fileExists(guess = new URL(`./${packageConfig.main}.js`\x2C\n                                          packageJSONUrl)));\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.json`\x2C\n                                        packageJSONUrl)));\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.node`\x2C\n                                        packageJSONUrl)));\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.js`\x2C\n                                        packageJSONUrl)));\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.json`\x2C\n                                        packageJSONUrl)));\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.node`\x2C\n                                        packageJSONUrl)));\n    else guess = undefined;\n    if (guess) {\n      emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C\n                                 packageConfig.main);\n      return guess;\n    }\n    // Fallthrough.\n  }\n  if (fileExists(guess = new URL('./index.js'\x2C packageJSONUrl)));\n  // So fs.\n  else if (fileExists(guess = new URL('./index.json'\x2C packageJSONUrl)));\n  else if (fileExists(guess = new URL('./index.node'\x2C packageJSONUrl)));\n  else guess = undefined;\n  if (guess) {\n    emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C packageConfig.main);\n    return guess;\n  }\n  // Not found.\n  throw new ERR_MODULE_NOT_FOUND(\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C fileURLToPath(base));\n}\n\n/**\n * @param {URL} search\n * @returns {URL | undefined}\n */\nfunction resolveExtensionsWithTryExactName(search) {\n  if (fileExists(search)) return search;\n  return resolveExtensions(search);\n}\n\nconst extensions = ['.js'\x2C '.json'\x2C '.node'\x2C '.mjs'];\n\n/**\n * @param {URL} search\n * @returns {URL | undefined}\n */\nfunction resolveExtensions(search) {\n  for (let i = 0; i < extensions.length; i++) {\n    const extension = extensions[i];\n    const guess = new URL(`${search.pathname}${extension}`\x2C search);\n    if (fileExists(guess)) return guess;\n  }\n  return undefined;\n}\n\n/**\n * @param {URL} search\n * @returns {URL | undefined}\n */\nfunction resolveDirectoryEntry(search) {\n  const dirPath = fileURLToPath(search);\n  const pkgJsonPath = resolve(dirPath\x2C 'package.json');\n  if (fileExists(pkgJsonPath)) {\n    const pkgJson = packageJsonReader.read(pkgJsonPath);\n    if (pkgJson.containsKeys) {\n      const { main } = JSONParse(pkgJson.string);\n      if (main != null) {\n        const mainUrl = pathToFileURL(resolve(dirPath\x2C main));\n        return resolveExtensionsWithTryExactName(mainUrl);\n      }\n    }\n  }\n  return resolveExtensions(new URL('index'\x2C search));\n}\n\nconst encodedSepRegEx = /%2F|%5C/i;\n/**\n * @param {URL} resolved\n * @param {string | URL | undefined} base\n * @param {boolean} preserveSymlinks\n * @returns {URL | undefined}\n */\nfunction finalizeResolution(resolved\x2C base\x2C preserveSymlinks) {\n  if (RegExpPrototypeExec(encodedSepRegEx\x2C resolved.pathname) !== null)\n    throw new ERR_INVALID_MODULE_SPECIFIER(\n      resolved.pathname\x2C 'must not include encoded "/" or "\\\\" characters'\x2C\n      fileURLToPath(base));\n\n  let path = fileURLToPath(resolved);\n  if (getOptionValue('--experimental-specifier-resolution') === 'node') {\n    let file = resolveExtensionsWithTryExactName(resolved);\n\n    // Directory\n    if (file === undefined) {\n      file = StringPrototypeEndsWith(path\x2C '/') ?\n        (resolveDirectoryEntry(resolved) || resolved) : resolveDirectoryEntry(new URL(`${resolved}/`));\n\n      if (file === resolved) return file;\n\n      if (file === undefined) {\n        throw new ERR_MODULE_NOT_FOUND(\n          resolved.pathname\x2C fileURLToPath(base)\x2C 'module');\n      }\n    }\n\n    path = file;\n  }\n\n  const stats = tryStatSync(StringPrototypeEndsWith(path\x2C '/') ?\n    StringPrototypeSlice(path\x2C -1) : path);\n  if (stats.isDirectory()) {\n    const err = new ERR_UNSUPPORTED_DIR_IMPORT(path\x2C fileURLToPath(base));\n    err.url = String(resolved);\n    throw err;\n  } else if (!stats.isFile()) {\n    throw new ERR_MODULE_NOT_FOUND(\n      path || resolved.pathname\x2C base && fileURLToPath(base)\x2C 'module');\n  }\n\n  if (!preserveSymlinks) {\n    const real = realpathSync(path\x2C {\n      [internalFS.realpathCacheKey]: realpathCache\n    });\n    const { search\x2C hash } = resolved;\n    resolved =\n        pathToFileURL(real + (StringPrototypeEndsWith(path\x2C sep) ? '/' : ''));\n    resolved.search = search;\n    resolved.hash = hash;\n  }\n\n  return resolved;\n}\n\n/**\n * @param {string} specifier\n * @param {URL} packageJSONUrl\n * @param {string | URL | undefined} base\n */\nfunction throwImportNotDefined(specifier\x2C packageJSONUrl\x2C base) {\n  throw new ERR_PACKAGE_IMPORT_NOT_DEFINED(\n    specifier\x2C packageJSONUrl && fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C\n    fileURLToPath(base));\n}\n\n/**\n * @param {string} subpath\n * @param {URL} packageJSONUrl\n * @param {string | URL | undefined} base\n */\nfunction throwExportsNotFound(subpath\x2C packageJSONUrl\x2C base) {\n  throw new ERR_PACKAGE_PATH_NOT_EXPORTED(\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C\n    base && fileURLToPath(base));\n}\n\n/**\n *\n * @param {string | URL} subpath\n * @param {URL} packageJSONUrl\n * @param {boolean} internal\n * @param {string | URL | undefined} base\n */\nfunction throwInvalidSubpath(subpath\x2C packageJSONUrl\x2C internal\x2C base) {\n  const reason = `request is not a valid subpath for the "${internal ?\n    'imports' : 'exports'}" resolution of ${fileURLToPath(packageJSONUrl)}`;\n  throw new ERR_INVALID_MODULE_SPECIFIER(subpath\x2C reason\x2C\n                                         base && fileURLToPath(base));\n}\n\nfunction throwInvalidPackageTarget(\n  subpath\x2C target\x2C packageJSONUrl\x2C internal\x2C base) {\n  if (typeof target === 'object' && target !== null) {\n    target = JSONStringify(target\x2C null\x2C '');\n  } else {\n    target = `${target}`;\n  }\n  throw new ERR_INVALID_PACKAGE_TARGET(\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C target\x2C\n    internal\x2C base && fileURLToPath(base));\n}\n\nconst invalidSegmentRegEx = /(^|\\\\|\\/)((\\.|%2e)(\\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))(\\\\|\\/|$)/i;\nconst invalidPackageNameRegEx = /^\\.|%|\\\\/;\nconst patternRegEx = /\\*/g;\n\nfunction resolvePackageTargetString(\n  target\x2C subpath\x2C match\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C conditions) {\n\n  if (subpath !== '' && !pattern && target[target.length - 1] !== '/')\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\n\n  if (!StringPrototypeStartsWith(target\x2C './')) {\n    if (internal && !StringPrototypeStartsWith(target\x2C '../') &&\n        !StringPrototypeStartsWith(target\x2C '/')) {\n      let isURL = false;\n      try {\n        new URL(target);\n        isURL = true;\n      } catch {\n        // Continue regardless of error.\n      }\n      if (!isURL) {\n        const exportTarget = pattern ?\n          RegExpPrototypeSymbolReplace(patternRegEx\x2C target\x2C () => subpath) :\n          target + subpath;\n        return packageResolve(\n          exportTarget\x2C packageJSONUrl\x2C conditions);\n      }\n    }\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\n  }\n\n  if (RegExpPrototypeExec(invalidSegmentRegEx\x2C StringPrototypeSlice(target\x2C 2)) !== null)\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\n\n  const resolved = new URL(target\x2C packageJSONUrl);\n  const resolvedPath = resolved.pathname;\n  const packagePath = new URL('.'\x2C packageJSONUrl).pathname;\n\n  if (!StringPrototypeStartsWith(resolvedPath\x2C packagePath))\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\n\n  if (subpath === '') return resolved;\n\n  if (RegExpPrototypeExec(invalidSegmentRegEx\x2C subpath) !== null) {\n    const request = pattern ?\n      StringPrototypeReplace(match\x2C '*'\x2C () => subpath) : match + subpath;\n    throwInvalidSubpath(request\x2C packageJSONUrl\x2C internal\x2C base);\n  }\n\n  if (pattern) {\n    return new URL(\n      RegExpPrototypeSymbolReplace(\n        patternRegEx\x2C\n        resolved.href\x2C\n        () => subpath\n      )\n    );\n  }\n\n  return new URL(subpath\x2C resolved);\n}\n\n/**\n * @param {string} key\n * @returns {boolean}\n */\nfunction isArrayIndex(key) {\n  const keyNum = +key;\n  if (`${keyNum}` !== key) return false;\n  return keyNum >= 0 && keyNum < 0xFFFF_FFFF;\n}\n\nfunction resolvePackageTarget(packageJSONUrl\x2C target\x2C subpath\x2C packageSubpath\x2C\n                              base\x2C pattern\x2C internal\x2C conditions) {\n  if (typeof target === 'string') {\n    return resolvePackageTargetString(\n      target\x2C subpath\x2C packageSubpath\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C\n      conditions);\n  } else if (ArrayIsArray(target)) {\n    if (target.length === 0) {\n      return null;\n    }\n\n    let lastException;\n    for (let i = 0; i < target.length; i++) {\n      const targetItem = target[i];\n      let resolveResult;\n      try {\n        resolveResult = resolvePackageTarget(\n          packageJSONUrl\x2C targetItem\x2C subpath\x2C packageSubpath\x2C base\x2C pattern\x2C\n          internal\x2C conditions);\n      } catch (e) {\n        lastException = e;\n        if (e.code === 'ERR_INVALID_PACKAGE_TARGET') {\n          continue;\n        }\n        throw e;\n      }\n      if (resolveResult === undefined) {\n        continue;\n      }\n      if (resolveResult === null) {\n        lastException = null;\n        continue;\n      }\n      return resolveResult;\n    }\n    if (lastException === undefined || lastException === null)\n      return lastException;\n    throw lastException;\n  } else if (typeof target === 'object' && target !== null) {\n    const keys = ObjectGetOwnPropertyNames(target);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (isArrayIndex(key)) {\n        throw new ERR_INVALID_PACKAGE_CONFIG(\n          fileURLToPath(packageJSONUrl)\x2C base\x2C\n          '"exports" cannot contain numeric property keys.');\n      }\n    }\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (key === 'default' || conditions.has(key)) {\n        const conditionalTarget = target[key];\n        const resolveResult = resolvePackageTarget(\n          packageJSONUrl\x2C conditionalTarget\x2C subpath\x2C packageSubpath\x2C base\x2C\n          pattern\x2C internal\x2C conditions);\n        if (resolveResult === undefined)\n          continue;\n        return resolveResult;\n      }\n    }\n    return undefined;\n  } else if (target === null) {\n    return null;\n  }\n  throwInvalidPackageTarget(packageSubpath\x2C target\x2C packageJSONUrl\x2C internal\x2C\n                            base);\n}\n\n/**\n *\n * @param {import('internal/modules/esm/package_config.js').Exports} exports\n * @param {URL} packageJSONUrl\n * @param {string | URL | undefined} base\n * @returns {boolean}\n */\nfunction isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base) {\n  if (typeof exports === 'string' || ArrayIsArray(exports)) return true;\n  if (typeof exports !== 'object' || exports === null) return false;\n\n  const keys = ObjectGetOwnPropertyNames(exports);\n  let isConditionalSugar = false;\n  let i = 0;\n  for (let j = 0; j < keys.length; j++) {\n    const key = keys[j];\n    const curIsConditionalSugar = key === '' || key[0] !== '.';\n    if (i++ === 0) {\n      isConditionalSugar = curIsConditionalSugar;\n    } else if (isConditionalSugar !== curIsConditionalSugar) {\n      throw new ERR_INVALID_PACKAGE_CONFIG(\n        fileURLToPath(packageJSONUrl)\x2C base\x2C\n        '"exports" cannot contain some keys starting with \\'.\\' and some not.' +\n        ' The exports object must either be an object of package subpath keys' +\n        ' or an object of main entry condition name keys only.');\n    }\n  }\n  return isConditionalSugar;\n}\n\n/**\n * @param {URL} packageJSONUrl\n * @param {string} packageSubpath\n * @param {PackageConfig} packageConfig\n * @param {string | URL | undefined} base\n * @param {Set<string>} conditions\n * @returns {URL}\n */\nfunction packageExportsResolve(\n  packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions) {\n  let exports = packageConfig.exports;\n  if (isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base))\n    exports = { '.': exports };\n\n  if (ObjectPrototypeHasOwnProperty(exports\x2C packageSubpath) &&\n      !StringPrototypeIncludes(packageSubpath\x2C '*') &&\n      !StringPrototypeEndsWith(packageSubpath\x2C '/')) {\n    const target = exports[packageSubpath];\n    const resolveResult = resolvePackageTarget(\n      packageJSONUrl\x2C target\x2C ''\x2C packageSubpath\x2C base\x2C false\x2C false\x2C conditions\n    );\n\n    if (resolveResult == null) {\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\n    }\n\n    return resolveResult;\n  }\n\n  let bestMatch = '';\n  let bestMatchSubpath;\n  const keys = ObjectGetOwnPropertyNames(exports);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const patternIndex = StringPrototypeIndexOf(key\x2C '*');\n    if (patternIndex !== -1 &&\n        StringPrototypeStartsWith(packageSubpath\x2C\n                                  StringPrototypeSlice(key\x2C 0\x2C patternIndex))) {\n      // When this reaches EOL\x2C this can throw at the top of the whole function:\n      //\n      // if (StringPrototypeEndsWith(packageSubpath\x2C '/'))\n      //   throwInvalidSubpath(packageSubpath)\n      //\n      // To match "imports" and the spec.\n      if (StringPrototypeEndsWith(packageSubpath\x2C '/'))\n        emitTrailingSlashPatternDeprecation(packageSubpath\x2C packageJSONUrl\x2C\n                                            base);\n      const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\n      if (packageSubpath.length >= key.length &&\n          StringPrototypeEndsWith(packageSubpath\x2C patternTrailer) &&\n          patternKeyCompare(bestMatch\x2C key) === 1 &&\n          StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\n        bestMatch = key;\n        bestMatchSubpath = StringPrototypeSlice(\n          packageSubpath\x2C patternIndex\x2C\n          packageSubpath.length - patternTrailer.length);\n      }\n    }\n  }\n\n  if (bestMatch) {\n    const target = exports[bestMatch];\n    const resolveResult = resolvePackageTarget(\n      packageJSONUrl\x2C\n      target\x2C\n      bestMatchSubpath\x2C\n      bestMatch\x2C\n      base\x2C\n      true\x2C\n      false\x2C\n      conditions);\n\n    if (resolveResult == null) {\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\n    }\n    return resolveResult;\n  }\n\n  throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\n}\n\nfunction patternKeyCompare(a\x2C b) {\n  const aPatternIndex = StringPrototypeIndexOf(a\x2C '*');\n  const bPatternIndex = StringPrototypeIndexOf(b\x2C '*');\n  const baseLenA = aPatternIndex === -1 ? a.length : aPatternIndex + 1;\n  const baseLenB = bPatternIndex === -1 ? b.length : bPatternIndex + 1;\n  if (baseLenA > baseLenB) return -1;\n  if (baseLenB > baseLenA) return 1;\n  if (aPatternIndex === -1) return 1;\n  if (bPatternIndex === -1) return -1;\n  if (a.length > b.length) return -1;\n  if (b.length > a.length) return 1;\n  return 0;\n}\n\n/**\n * @param {string} name\n * @param {string | URL | undefined} base\n * @param {Set<string>} conditions\n * @returns {URL}\n */\nfunction packageImportsResolve(name\x2C base\x2C conditions) {\n  if (name === '#' || StringPrototypeStartsWith(name\x2C '#/') ||\n      StringPrototypeEndsWith(name\x2C '/')) {\n    const reason = 'is not a valid internal imports specifier name';\n    throw new ERR_INVALID_MODULE_SPECIFIER(name\x2C reason\x2C fileURLToPath(base));\n  }\n  let packageJSONUrl;\n  const packageConfig = getPackageScopeConfig(base);\n  if (packageConfig.exists) {\n    packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\n    const imports = packageConfig.imports;\n    if (imports) {\n      if (ObjectPrototypeHasOwnProperty(imports\x2C name) &&\n          !StringPrototypeIncludes(name\x2C '*')) {\n        const resolveResult = resolvePackageTarget(\n          packageJSONUrl\x2C imports[name]\x2C ''\x2C name\x2C base\x2C false\x2C true\x2C conditions\n        );\n        if (resolveResult != null) {\n          return resolveResult;\n        }\n      } else {\n        let bestMatch = '';\n        let bestMatchSubpath;\n        const keys = ObjectGetOwnPropertyNames(imports);\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i];\n          const patternIndex = StringPrototypeIndexOf(key\x2C '*');\n          if (patternIndex !== -1 &&\n              StringPrototypeStartsWith(name\x2C\n                                        StringPrototypeSlice(key\x2C 0\x2C\n                                                             patternIndex))) {\n            const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\n            if (name.length >= key.length &&\n                StringPrototypeEndsWith(name\x2C patternTrailer) &&\n                patternKeyCompare(bestMatch\x2C key) === 1 &&\n                StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\n              bestMatch = key;\n              bestMatchSubpath = StringPrototypeSlice(\n                name\x2C patternIndex\x2C name.length - patternTrailer.length);\n            }\n          }\n        }\n\n        if (bestMatch) {\n          const target = imports[bestMatch];\n          const resolveResult = resolvePackageTarget(packageJSONUrl\x2C target\x2C\n                                                     bestMatchSubpath\x2C\n                                                     bestMatch\x2C base\x2C true\x2C\n                                                     true\x2C conditions);\n          if (resolveResult != null) {\n            return resolveResult;\n          }\n        }\n      }\n    }\n  }\n  throwImportNotDefined(name\x2C packageJSONUrl\x2C base);\n}\n\n/**\n * @param {URL} url\n * @returns {import('internal/modules/esm/package_config.js').PackageType}\n */\nfunction getPackageType(url) {\n  const packageConfig = getPackageScopeConfig(url);\n  return packageConfig.type;\n}\n\n/**\n * @param {string} specifier\n * @param {string | URL | undefined} base\n * @returns {{ packageName: string\x2C packageSubpath: string\x2C isScoped: boolean }}\n */\nfunction parsePackageName(specifier\x2C base) {\n  let separatorIndex = StringPrototypeIndexOf(specifier\x2C '/');\n  let validPackageName = true;\n  let isScoped = false;\n  if (specifier[0] === '@') {\n    isScoped = true;\n    if (separatorIndex === -1 || specifier.length === 0) {\n      validPackageName = false;\n    } else {\n      separatorIndex = StringPrototypeIndexOf(\n        specifier\x2C '/'\x2C separatorIndex + 1);\n    }\n  }\n\n  const packageName = separatorIndex === -1 ?\n    specifier : StringPrototypeSlice(specifier\x2C 0\x2C separatorIndex);\n\n  // Package name cannot have leading . and cannot have percent-encoding or\n  // \\\\ separators.\n  if (RegExpPrototypeExec(invalidPackageNameRegEx\x2C packageName) !== null)\n    validPackageName = false;\n\n  if (!validPackageName) {\n    throw new ERR_INVALID_MODULE_SPECIFIER(\n      specifier\x2C 'is not a valid package name'\x2C fileURLToPath(base));\n  }\n\n  const packageSubpath = '.' + (separatorIndex === -1 ? '' :\n    StringPrototypeSlice(specifier\x2C separatorIndex));\n\n  return { packageName\x2C packageSubpath\x2C isScoped };\n}\n\n/**\n * @param {string} specifier\n * @param {string | URL | undefined} base\n * @param {Set<string>} conditions\n * @returns {resolved: URL\x2C format? : string}\n */\nfunction packageResolve(specifier\x2C base\x2C conditions) {\n  if (BuiltinModule.canBeRequiredByUsers(specifier) &&\n      BuiltinModule.canBeRequiredWithoutScheme(specifier)) {\n    return new URL('node:' + specifier);\n  }\n\n  const { packageName\x2C packageSubpath\x2C isScoped } =\n    parsePackageName(specifier\x2C base);\n\n  // ResolveSelf\n  const packageConfig = getPackageScopeConfig(base);\n  if (packageConfig.exists) {\n    const packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\n    if (packageConfig.name === packageName &&\n        packageConfig.exports !== undefined && packageConfig.exports !== null) {\n      return packageExportsResolve(\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions);\n    }\n  }\n\n  let packageJSONUrl =\n    new URL('./node_modules/' + packageName + '/package.json'\x2C base);\n  let packageJSONPath = fileURLToPath(packageJSONUrl);\n  let lastPath;\n  do {\n    const stat = tryStatSync(StringPrototypeSlice(packageJSONPath\x2C 0\x2C\n                                                  packageJSONPath.length - 13));\n    if (!stat.isDirectory()) {\n      lastPath = packageJSONPath;\n      packageJSONUrl = new URL((isScoped ?\n        '../../../../node_modules/' : '../../../node_modules/') +\n        packageName + '/package.json'\x2C packageJSONUrl);\n      packageJSONPath = fileURLToPath(packageJSONUrl);\n      continue;\n    }\n\n    // Package match.\n    const packageConfig = getPackageConfig(packageJSONPath\x2C specifier\x2C base);\n    if (packageConfig.exports !== undefined && packageConfig.exports !== null) {\n      return packageExportsResolve(\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions);\n    }\n    if (packageSubpath === '.') {\n      return legacyMainResolve(\n        packageJSONUrl\x2C\n        packageConfig\x2C\n        base\n      );\n    }\n\n    return new URL(packageSubpath\x2C packageJSONUrl);\n    // Cross-platform root check.\n  } while (packageJSONPath.length !== lastPath.length);\n\n  // eslint can't handle the above code.\n  // eslint-disable-next-line no-unreachable\n  throw new ERR_MODULE_NOT_FOUND(packageName\x2C fileURLToPath(base));\n}\n\n/**\n * @param {string} specifier\n * @returns {boolean}\n */\nfunction isBareSpecifier(specifier) {\n  return specifier[0] && specifier[0] !== '/' && specifier[0] !== '.';\n}\n\nfunction isRelativeSpecifier(specifier) {\n  if (specifier[0] === '.') {\n    if (specifier.length === 1 || specifier[1] === '/') return true;\n    if (specifier[1] === '.') {\n      if (specifier.length === 2 || specifier[2] === '/') return true;\n    }\n  }\n  return false;\n}\n\nfunction shouldBeTreatedAsRelativeOrAbsolutePath(specifier) {\n  if (specifier === '') return false;\n  if (specifier[0] === '/') return true;\n  return isRelativeSpecifier(specifier);\n}\n\n/**\n * @param {string} specifier\n * @param {string | URL | undefined} base\n * @param {Set<string>} conditions\n * @param {boolean} preserveSymlinks\n * @returns {url: URL\x2C format?: string}\n */\nfunction moduleResolve(specifier\x2C base\x2C conditions\x2C preserveSymlinks) {\n  const isRemote = base.protocol === 'http:' ||\n    base.protocol === 'https:';\n  // Order swapped from spec for minor perf gain.\n  // Ok since relative URLs cannot parse as URLs.\n  let resolved;\n  if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\n    resolved = new URL(specifier\x2C base);\n  } else if (!isRemote && specifier[0] === '#') {\n    resolved = packageImportsResolve(specifier\x2C base\x2C conditions);\n  } else {\n    try {\n      resolved = new URL(specifier);\n    } catch {\n      if (!isRemote) {\n        resolved = packageResolve(specifier\x2C base\x2C conditions);\n      }\n    }\n  }\n  if (resolved.protocol !== 'file:') {\n    return resolved;\n  }\n  return finalizeResolution(resolved\x2C base\x2C preserveSymlinks);\n}\n\n/**\n * Try to resolve an import as a CommonJS module\n * @param {string} specifier\n * @param {string} parentURL\n * @returns {boolean|string}\n */\nfunction resolveAsCommonJS(specifier\x2C parentURL) {\n  try {\n    const parent = fileURLToPath(parentURL);\n    const tmpModule = new CJSModule(parent\x2C null);\n    tmpModule.paths = CJSModule._nodeModulePaths(parent);\n\n    let found = CJSModule._resolveFilename(specifier\x2C tmpModule\x2C false);\n\n    // If it is a relative specifier return the relative path\n    // to the parent\n    if (isRelativeSpecifier(specifier)) {\n      found = relative(parent\x2C found);\n      // Add '.separator if the path does not start with '..separator'\n      // This should be a safe assumption because when loading\n      // esm modules there should be always a file specified so\n      // there should not be a specifier like '..' or '.'\n      if (!StringPrototypeStartsWith(found\x2C `..${sep}`)) {\n        found = `.${sep}${found}`;\n      }\n    } else if (isBareSpecifier(specifier)) {\n      // If it is a bare specifier return the relative path within the\n      // module\n      const pkg = StringPrototypeSplit(specifier\x2C '/')[0];\n      const index = StringPrototypeIndexOf(found\x2C pkg);\n      if (index !== -1) {\n        found = StringPrototypeSlice(found\x2C index);\n      }\n    }\n    // Normalize the path separator to give a valid suggestion\n    // on Windows\n    if (process.platform === 'win32') {\n      found = RegExpPrototypeSymbolReplace(new RegExp(`\\\\${sep}`\x2C 'g')\x2C\n                                           found\x2C '/');\n    }\n    return found;\n  } catch {\n    return false;\n  }\n}\n\n// TODO(@JakobJingleheimer): de-dupe `specifier` & `parsed`\nfunction checkIfDisallowedImport(specifier\x2C parsed\x2C parsedParentURL) {\n  if (parsedParentURL) {\n    if (\n      parsedParentURL.protocol === 'http:' ||\n      parsedParentURL.protocol === 'https:'\n    ) {\n      if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\n        // data: and blob: disallowed due to allowing file: access via\n        // indirection\n        if (parsed &&\n          parsed.protocol !== 'https:' &&\n          parsed.protocol !== 'http:'\n        ) {\n          throw new ERR_NETWORK_IMPORT_DISALLOWED(\n            specifier\x2C\n            parsedParentURL\x2C\n            'remote imports cannot import from a local location.'\n          );\n        }\n\n        return { url: parsed.href };\n      }\n      if (BuiltinModule.canBeRequiredByUsers(specifier) &&\n          BuiltinModule.canBeRequiredWithoutScheme(specifier)) {\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\n          specifier\x2C\n          parsedParentURL\x2C\n          'remote imports cannot import from a local location.'\n        );\n      }\n\n      throw new ERR_NETWORK_IMPORT_DISALLOWED(\n        specifier\x2C\n        parsedParentURL\x2C\n        'only relative and absolute specifiers are supported.'\n      );\n    }\n  }\n}\n\nfunction throwIfUnsupportedURLProtocol(url) {\n  if (url.protocol !== 'file:' && url.protocol !== 'data:' &&\n      url.protocol !== 'node:') {\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(url);\n  }\n}\n\nfunction throwIfUnsupportedURLScheme(parsed\x2C experimentalNetworkImports) {\n  if (\n    parsed &&\n    parsed.protocol !== 'file:' &&\n    parsed.protocol !== 'data:' &&\n    (\n      !experimentalNetworkImports ||\n      (\n        parsed.protocol !== 'https:' &&\n        parsed.protocol !== 'http:'\n      )\n    )\n  ) {\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed\x2C ArrayPrototypeConcat(\n      'file'\x2C\n      'data'\x2C\n      experimentalNetworkImports ? ['https'\x2C 'http'] : []\x2C\n    ));\n  }\n}\n\nasync function defaultResolve(specifier\x2C context = {}) {\n  let { parentURL\x2C conditions } = context;\n  if (parentURL && policy?.manifest) {\n    const redirects = policy.manifest.getDependencyMapper(parentURL);\n    if (redirects) {\n      const { resolve\x2C reaction } = redirects;\n      const destination = resolve(specifier\x2C new SafeSet(conditions));\n      let missing = true;\n      if (destination === true) {\n        missing = false;\n      } else if (destination) {\n        const href = destination.href;\n        return { url: href };\n      }\n      if (missing) {\n        // Prevent network requests from firing if resolution would be banned.\n        // Network requests can extract data by doing things like putting\n        // secrets in query params\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\n          parentURL\x2C\n          specifier\x2C\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C '))\n        );\n      }\n    }\n  }\n\n  let parsedParentURL;\n  if (parentURL) {\n    try {\n      parsedParentURL = new URL(parentURL);\n    } catch {\n      // Ignore exception\n    }\n  }\n\n  let parsed;\n  try {\n    if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\n      parsed = new URL(specifier\x2C parsedParentURL);\n    } else {\n      parsed = new URL(specifier);\n    }\n\n    if (parsed.protocol === 'data:' ||\n      (experimentalNetworkImports &&\n        (\n          parsed.protocol === 'https:' ||\n          parsed.protocol === 'http:'\n        )\n      )\n    ) {\n      return { url: parsed.href };\n    }\n  } catch {\n    // Ignore exception\n  }\n\n  // There are multiple deep branches that can either throw or return; instead\n  // of duplicating that deeply nested logic for the possible returns\x2C DRY and\n  // check for a return. This seems the least gnarly.\n  const maybeReturn = checkIfDisallowedImport(\n    specifier\x2C\n    parsed\x2C\n    parsedParentURL\x2C\n  );\n\n  if (maybeReturn) return maybeReturn;\n\n  // This must come after checkIfDisallowedImport\n  if (parsed && parsed.protocol === 'node:') return { url: specifier };\n\n  throwIfUnsupportedURLScheme(parsed\x2C experimentalNetworkImports);\n\n  const isMain = parentURL === undefined;\n  if (isMain) {\n    parentURL = pathToFileURL(`${process.cwd()}/`).href;\n\n    // This is the initial entry point to the program\x2C and --input-type has\n    // been passed as an option; but --input-type can only be used with\n    // --eval\x2C --print or STDIN string input. It is not allowed with file\n    // input\x2C to avoid user confusion over how expansive the effect of the\n    // flag should be (i.e. entry point only\x2C package scope surrounding the\n    // entry point\x2C etc.).\n    if (typeFlag) throw new ERR_INPUT_TYPE_NOT_ALLOWED();\n  }\n\n  conditions = getConditionsSet(conditions);\n  let url;\n  try {\n    url = moduleResolve(\n      specifier\x2C\n      parentURL\x2C\n      conditions\x2C\n      isMain ? preserveSymlinksMain : preserveSymlinks\n    );\n  } catch (error) {\n    // Try to give the user a hint of what would have been the\n    // resolved CommonJS module\n    if (error.code === 'ERR_MODULE_NOT_FOUND' ||\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT') {\n      if (StringPrototypeStartsWith(specifier\x2C 'file://')) {\n        specifier = fileURLToPath(specifier);\n      }\n      const found = resolveAsCommonJS(specifier\x2C parentURL);\n      if (found) {\n        // Modify the stack and message string to include the hint\n        const lines = StringPrototypeSplit(error.stack\x2C '\\n');\n        const hint = `Did you mean to import ${found}?`;\n        error.stack =\n          ArrayPrototypeShift(lines) + '\\n' +\n          hint + '\\n' +\n          ArrayPrototypeJoin(lines\x2C '\\n');\n        error.message += `\\n${hint}`;\n      }\n    }\n    throw error;\n  }\n\n  throwIfUnsupportedURLProtocol(url);\n\n  return {\n    // Do NOT cast `url` to a string: that will work even when there are real\n    // problems\x2C silencing them\n    url: url.href\x2C\n    format: defaultGetFormatWithoutErrors(url\x2C context)\x2C\n  };\n}\n\nmodule.exports = {\n  DEFAULT_CONDITIONS\x2C\n  defaultResolve\x2C\n  encodedSepRegEx\x2C\n  getPackageScopeConfig\x2C\n  getPackageType\x2C\n  packageExportsResolve\x2C\n  packageImportsResolve\x2C\n};\n\n// cycle\nconst {\n  defaultGetFormatWithoutErrors\x2C\n} = require('internal/modules/esm/get_format');\n\nif (policy) {\n  const $defaultResolve = defaultResolve;\n  module.exports.defaultResolve = async function defaultResolve(\n    specifier\x2C\n    context\n  ) {\n    const ret = await $defaultResolve(specifier\x2C context);\n    // This is a preflight check to avoid data exfiltration by query params etc.\n    policy.manifest.mightAllow(ret.url\x2C () =>\n      new ERR_MANIFEST_DEPENDENCY_MISSING(\n        context.parentURL\x2C\n        specifier\x2C\n        context.conditions\n      )\n    );\n    return ret;\n  };\n}\n
code-source-info,0x1e372ce2be30,437,0,36790,C0O0C4O36790,,
code-creation,Function,10,32541,0x1e372ce2ce60,1166, node:internal/modules/esm/resolve:1:1,0x1e372ce2bda8,~
code-source-info,0x1e372ce2ce
tick,0x104a218ac,32583,1,0x104a8d6ec,3,0x0,0x3d9b8018ed2e,0x109cc956c,0x1e372ce23695,0x3d9b8018ed4f,0x109cc956c,0x1e372ce21599,0x3d9b8018ed4f,0x109cc956c,0x1e372ce1cbe9,0x3d9b8018ed4f,0x109cc956c,0x1e372ce17b2e,0xc1101db1e60,0xc1101dae2ac
code-creation,Eval,10,32708,0x1e372ce30060,5, node:internal/modules/esm/package_config:1:1,0x1e372ce2fe78,~
script-source,438,node:internal/modules/esm/package_config,'use strict';\n\nconst {\n  JSONParse\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  SafeMap\x2C\n  StringPrototypeEndsWith\x2C\n} = primordials;\nconst { URL\x2C fileURLToPath } = require('internal/url');\nconst {\n  ERR_INVALID_PACKAGE_CONFIG\x2C\n} = require('internal/errors').codes;\n\nconst packageJsonReader = require('internal/modules/package_json_reader');\nconst { filterOwnProperties } = require('internal/util');\n\n\n/**\n * @typedef {string | string[] | Record<string\x2C unknown>} Exports\n * @typedef {'module' | 'commonjs'} PackageType\n * @typedef {{\n *   pjsonPath: string\x2C\n *   exports?: ExportConfig\x2C\n *   name?: string\x2C\n *   main?: string\x2C\n *   type?: PackageType\x2C\n * }} PackageConfig\n */\n\n/** @type {Map<string\x2C PackageConfig>} */\nconst packageJSONCache = new SafeMap();\n\n\n/**\n * @param {string} path\n * @param {string} specifier\n * @param {string | URL | undefined} base\n * @returns {PackageConfig}\n */\nfunction getPackageConfig(path\x2C specifier\x2C base) {\n  const existing = packageJSONCache.get(path);\n  if (existing !== undefined) {\n    return existing;\n  }\n  const source = packageJsonReader.read(path).string;\n  if (source === undefined) {\n    const packageConfig = {\n      pjsonPath: path\x2C\n      exists: false\x2C\n      main: undefined\x2C\n      name: undefined\x2C\n      type: 'none'\x2C\n      exports: undefined\x2C\n      imports: undefined\x2C\n    };\n    packageJSONCache.set(path\x2C packageConfig);\n    return packageConfig;\n  }\n\n  let packageJSON;\n  try {\n    packageJSON = JSONParse(source);\n  } catch (error) {\n    throw new ERR_INVALID_PACKAGE_CONFIG(\n      path\x2C\n      (base ? `"${specifier}" from ` : '') + fileURLToPath(base || specifier)\x2C\n      error.message\n    );\n  }\n\n  let { imports\x2C main\x2C name\x2C type } = filterOwnProperties(packageJSON\x2C ['imports'\x2C 'main'\x2C 'name'\x2C 'type']);\n  const exports = ObjectPrototypeHasOwnProperty(packageJSON\x2C 'exports') ? packageJSON.exports : undefined;\n  if (typeof imports !== 'object' || imports === null) {\n    imports = undefined;\n  }\n  if (typeof main !== 'string') {\n    main = undefined;\n  }\n  if (typeof name !== 'string') {\n    name = undefined;\n  }\n  // Ignore unknown types for forwards compatibility\n  if (type !== 'module' && type !== 'commonjs') {\n    type = 'none';\n  }\n\n  const packageConfig = {\n    pjsonPath: path\x2C\n    exists: true\x2C\n    main\x2C\n    name\x2C\n    type\x2C\n    exports\x2C\n    imports\x2C\n  };\n  packageJSONCache.set(path\x2C packageConfig);\n  return packageConfig;\n}\n\n\n/**\n * @param {URL | string} resolved\n * @returns {PackageConfig}\n */\nfunction getPackageScopeConfig(resolved) {\n  let packageJSONUrl = new URL('./package.json'\x2C resolved);\n  while (true) {\n    const packageJSONPath = packageJSONUrl.pathname;\n    if (StringPrototypeEndsWith(packageJSONPath\x2C 'node_modules/package.json')) {\n      break;\n    }\n    const packageConfig = getPackageConfig(fileURLToPath(packageJSONUrl)\x2C resolved);\n    if (packageConfig.exists) {\n      return packageConfig;\n    }\n\n    const lastPackageJSONUrl = packageJSONUrl;\n    packageJSONUrl = new URL('../package.json'\x2C packageJSONUrl);\n\n    // Terminates at root where ../package.json equals ../../package.json\n    // (can't just check "/package.json" for Windows support).\n    if (packageJSONUrl.pathname === lastPackageJSONUrl.pathname) {\n      break;\n    }\n  }\n  const packageJSONPath = fileURLToPath(packageJSONUrl);\n  const packageConfig = {\n    pjsonPath: packageJSONPath\x2C\n    exists: false\x2C\n    main: undefined\x2C\n    name: undefined\x2C\n    type: 'none'\x2C\n    exports: undefined\x2C\n    imports: undefined\x2C\n  };\n  packageJSONCache.set(packageJSONPath\x2C packageConfig);\n  return packageConfig;\n}\n\n\nmodule.exports = {\n  getPackageConfig\x2C\n  getPackageScopeConfig\x2C\n};\n
code-source-info,0x1e372ce30060,438,0,3627,C0O0C4O3627,,
code-creation,Function,10,32833,0x1e372ce30250,162, node:internal/modules/esm/package_config:1:1,0x1e372ce2ffd8,~
code-source-info,0x1e372ce30250,438,0,3627,C0O0C43O25C49O38C55O71C60O82C66O155C69O155C74O132C80O137C86O222C89O222C94O248C99O190C105O283C108O283C112O283C114O364C117O364C122O340C128O735C130O735C135O735C137O3560C144O3581C150O3601C156O3575C161O3626,,
code-creation,Eval,10,32958,0x1e372ce30f10,5, node:internal/modules/esm/get_format:1:1,0x1e372ce30c88,~
script-source,439,node:internal/modules/esm/get_format,'use strict';\nconst {\n  RegExpPrototypeExec\x2C\n  ObjectAssign\x2C\n  ObjectCreate\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  PromisePrototypeThen\x2C\n  PromiseResolve\x2C\n  StringPrototypeSlice\x2C\n} = primordials;\nconst { basename\x2C extname\x2C relative } = require('path');\nconst { getOptionValue } = require('internal/options');\nconst { fetchModule } = require('internal/modules/esm/fetch_module');\nconst {\n  extensionFormatMap\x2C\n  getLegacyExtensionFormat\x2C\n  mimeToFormat\x2C\n} = require('internal/modules/esm/formats');\n\nconst experimentalNetworkImports =\n  getOptionValue('--experimental-network-imports');\nconst experimentalSpecifierResolution =\n  getOptionValue('--experimental-specifier-resolution');\nconst { getPackageType\x2C getPackageScopeConfig } = require('internal/modules/esm/resolve');\nconst { URL\x2C fileURLToPath } = require('internal/url');\nconst { ERR_UNKNOWN_FILE_EXTENSION } = require('internal/errors').codes;\n\nconst protocolHandlers = ObjectAssign(ObjectCreate(null)\x2C {\n  'data:': getDataProtocolModuleFormat\x2C\n  'file:': getFileProtocolModuleFormat\x2C\n  'http:': getHttpProtocolModuleFormat\x2C\n  'https:': getHttpProtocolModuleFormat\x2C\n  'node:'() { return 'builtin'; }\x2C\n});\n\n/**\n * @param {URL} parsed\n * @returns {string | null}\n */\nfunction getDataProtocolModuleFormat(parsed) {\n  const { 1: mime } = RegExpPrototypeExec(\n    /^([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\n    parsed.pathname\x2C\n  ) || [ null\x2C null\x2C null ];\n\n  return mimeToFormat(mime);\n}\n\n/**\n * @param {URL} url\n * @param {{parentURL: string}} context\n * @param {boolean} ignoreErrors\n * @returns {string}\n */\nfunction getFileProtocolModuleFormat(url\x2C context\x2C ignoreErrors) {\n  const filepath = fileURLToPath(url);\n  const ext = extname(filepath);\n  if (ext === '.js') {\n    return getPackageType(url) === 'module' ? 'module' : 'commonjs';\n  }\n\n  const format = extensionFormatMap[ext];\n  if (format) return format;\n\n  if (experimentalSpecifierResolution !== 'node') {\n    // Explicit undefined return indicates load hook should rerun format check\n    if (ignoreErrors) return undefined;\n    let suggestion = '';\n    if (getPackageType(url) === 'module' && ext === '') {\n      const config = getPackageScopeConfig(url);\n      const fileBasename = basename(filepath);\n      const relativePath = StringPrototypeSlice(relative(config.pjsonPath\x2C filepath)\x2C 1);\n      suggestion = 'Loading extensionless files is not supported inside of ' +\n        '"type":"module" package.json contexts. The package.json file ' +\n        `${config.pjsonPath} caused this "type":"module" context. Try ` +\n        `changing ${filepath} to have a file extension. Note the "bin" ` +\n        'field of package.json can point to a file with an extension\x2C for example ' +\n        `{"type":"module"\x2C"bin":{"${fileBasename}":"${relativePath}.js"}}`;\n    }\n    throw new ERR_UNKNOWN_FILE_EXTENSION(ext\x2C filepath\x2C suggestion);\n  }\n\n  return getLegacyExtensionFormat(ext) ?? null;\n}\n\n/**\n * @param {URL} url\n * @param {{parentURL: string}} context\n * @returns {Promise<string> | undefined} only works when enabled\n */\nfunction getHttpProtocolModuleFormat(url\x2C context) {\n  if (experimentalNetworkImports) {\n    return PromisePrototypeThen(\n      PromiseResolve(fetchModule(url\x2C context))\x2C\n      (entry) => {\n        return mimeToFormat(entry.headers['content-type']);\n      }\n    );\n  }\n}\n\n/**\n * @param {URL | URL['href']} url\n * @param {{parentURL: string}} context\n * @returns {Promise<string> | string | undefined} only works when enabled\n */\nfunction defaultGetFormatWithoutErrors(url\x2C context) {\n  const parsed = new URL(url);\n  if (!ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol))\n    return null;\n  return protocolHandlers[parsed.protocol](parsed\x2C context\x2C true);\n}\n\n/**\n * @param {URL | URL['href']} url\n * @param {{parentURL: string}} context\n * @returns {Promise<string> | string | undefined} only works when enabled\n */\nfunction defaultGetFormat(url\x2C context) {\n  const parsed = new URL(url);\n  return ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol) ?\n    protocolHandlers[parsed.protocol](parsed\x2C context\x2C false) :\n    null;\n}\n\nmodule.exports = {\n  defaultGetFormat\x2C\n  defaultGetFormatWithoutErrors\x2C\n  extensionFormatMap\x2C\n};\n
code-source-info,0x1e372ce30f10,439,0,4193,C0O0C4O4193,,
code-creation,Function,10,33125,0x1e372ce31390,368, node:internal/modules/esm/get_format:1:1,0x1e372ce30e88,~
code-source-info,0x1e372ce31390,439,0,4193,C0O0C90O24C96O47C101O63C106O79C112O112C118O136C124O154C130O233C133O233C138O201C144O211C150O220C156O277C159O277C164O258C169O330C172O330C177O314C183O454C186O454C191O386C197O408C203O436C209O533C212O533C216O533C218O625C221O625C225O625C227O730C230O730C235O688C241O704C247O802C250O802C255O779C261O784C267O866C270O866C275O892C280O835C286O926C288O939C300O972C306O1012C312O1052C318O1093C322O1124C330O926C335O926C337O4096C344O4117C350O4137C356O4170C362O4111C367O4192,,
tick,0x1050898a4,33208,1,0x104a8d6ec,2,0x0,0x3d9b8018ed2e,0x109cc956c,0x1e372ce3143c,0x3d9b8018ed4f,0x109cc956c,0x1e372ce2d2c3,0x3d9b8018ed4f,0x109cc956c,0x1e372ce23695,0x3d9b8018ed4f,0x109cc956c,0x1e372ce21599,0x3d9b8018ed4f,0x109cc956c,0x1e372ce1cbe9,0x3d9b8018ed4f,0x109cc956c,0x1e372ce17b2e,0xc1101db1e60,0xc1101dae2ac
code-creation,Eval,10,33250,0x1e372ce32260,5, node:internal/modules/esm/fetch_module:1:1,0x1e372ce31f78,~
script-source,440,node:internal/modules/esm/fetch_module,'use strict';\nconst {\n  ObjectPrototypeHasOwnProperty\x2C\n  PromisePrototypeThen\x2C\n  SafeMap\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeStartsWith\x2C\n} = primordials;\nconst {\n  Buffer: { concat: BufferConcat }\x2C\n} = require('buffer');\nconst {\n  ERR_NETWORK_IMPORT_DISALLOWED\x2C\n  ERR_NETWORK_IMPORT_BAD_RESPONSE\x2C\n  ERR_MODULE_NOT_FOUND\x2C\n} = require('internal/errors').codes;\nconst { URL } = require('internal/url');\nconst net = require('net');\nconst { once } = require('events');\nconst { compose } = require('stream');\n/**\n * @typedef CacheEntry\n * @property {Promise<string> | string} resolvedHREF\n * @property {Record<string\x2C string>} headers\n * @property {Promise<Buffer> | Buffer} body\n */\n\n/**\n * Only for GET requests\x2C other requests would need new Map\n * HTTP cache semantics keep diff caches\n *\n * It caches either the promise or the cache entry since import.meta.url needs\n * the value synchronously for the response location after all redirects.\n *\n * Maps HREF to pending cache entry\n * @type {Map<string\x2C Promise<CacheEntry> | CacheEntry>}\n */\nconst cacheForGET = new SafeMap();\n\n// [1] The V8 snapshot doesn't like some C++ APIs to be loaded eagerly. Do it\n// lazily/at runtime and not top level of an internal module.\n\n// [2] Creating a new agent instead of using the gloabl agent improves\n// performance and precludes the agent becoming tainted.\n\nlet HTTPSAgent;\nfunction HTTPSGet(url\x2C opts) {\n  const https = require('https'); // [1]\n  HTTPSAgent ??= new https.Agent({ // [2]\n    keepAlive: true\x2C\n  });\n  return https.get(url\x2C {\n    agent: HTTPSAgent\x2C\n    ...opts\x2C\n  });\n}\n\nlet HTTPAgent;\nfunction HTTPGet(url\x2C opts) {\n  const http = require('http'); // [1]\n  HTTPAgent ??= new http.Agent({ // [2]\n    keepAlive: true\x2C\n  });\n  return http.get(url\x2C {\n    agent: HTTPAgent\x2C\n    ...opts\x2C\n  });\n}\n\nfunction dnsLookup(name\x2C opts) {\n  // eslint-disable-next-line no-func-assign\n  dnsLookup = require('dns/promises').lookup;\n  return dnsLookup(name\x2C opts);\n}\n\nlet zlib;\nfunction createBrotliDecompress() {\n  zlib ??= require('zlib'); // [1]\n  // eslint-disable-next-line no-func-assign\n  createBrotliDecompress = zlib.createBrotliDecompress;\n  return createBrotliDecompress();\n}\n\nfunction createUnzip() {\n  zlib ??= require('zlib'); // [1]\n  // eslint-disable-next-line no-func-assign\n  createUnzip = zlib.createUnzip;\n  return createUnzip();\n}\n\n/**\n * Redirection status code as per section 6.4 of RFC 7231:\n * https://datatracker.ietf.org/doc/html/rfc7231#section-6.4\n * and RFC 7238:\n * https://datatracker.ietf.org/doc/html/rfc7238\n * @param {number} statusCode\n * @returns {boolean}\n */\nfunction isRedirect(statusCode) {\n  switch (statusCode) {\n    case 300: // Multiple Choices\n    case 301: // Moved Permanently\n    case 302: // Found\n    case 303: // See Other\n    case 307: // Temporary Redirect\n    case 308: // Permanent Redirect\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * @param {URL} parsed\n * @returns {Promise<CacheEntry> | CacheEntry}\n */\nfunction fetchWithRedirects(parsed) {\n  const existing = cacheForGET.get(parsed.href);\n  if (existing) {\n    return existing;\n  }\n  const handler = parsed.protocol === 'http:' ? HTTPGet : HTTPSGet;\n  const result = (async () => {\n    const req = handler(parsed\x2C {\n      headers: { Accept: '*/*' }\x2C\n    });\n    // Note that `once` is used here to handle `error` and that it hits the\n    // `finally` on network error/timeout.\n    const { 0: res } = await once(req\x2C 'response');\n    try {\n      const hasLocation = ObjectPrototypeHasOwnProperty(res.headers\x2C 'location');\n      if (isRedirect(res.statusCode) && hasLocation) {\n        const location = new URL(res.headers.location\x2C parsed);\n        if (location.protocol !== 'http:' && location.protocol !== 'https:') {\n          throw new ERR_NETWORK_IMPORT_DISALLOWED(\n            res.headers.location\x2C\n            parsed.href\x2C\n            'cannot redirect to non-network location'\n          );\n        }\n        const entry = await fetchWithRedirects(location);\n        cacheForGET.set(parsed.href\x2C entry);\n        return entry;\n      }\n      if (res.statusCode === 404) {\n        const err = new ERR_MODULE_NOT_FOUND(parsed.href\x2C null);\n        err.message = `Cannot find module '${parsed.href}'\x2C HTTP 404`;\n        throw err;\n      }\n      // This condition catches all unsupported status codes\x2C including\n      // 3xx redirection codes without `Location` HTTP header.\n      if (res.statusCode < 200 || res.statusCode >= 300) {\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\n          res.headers.location\x2C\n          parsed.href\x2C\n          'cannot redirect to non-network location');\n      }\n      const { headers } = res;\n      const contentType = headers['content-type'];\n      if (!contentType) {\n        throw new ERR_NETWORK_IMPORT_BAD_RESPONSE(\n          parsed.href\x2C\n          "the 'Content-Type' header is required"\n        );\n      }\n      /**\n       * @type {CacheEntry}\n       */\n      const entry = {\n        resolvedHREF: parsed.href\x2C\n        headers: {\n          'content-type': res.headers['content-type']\x2C\n        }\x2C\n        body: (async () => {\n          let bodyStream = res;\n          if (res.headers['content-encoding'] === 'br') {\n            bodyStream = compose(res\x2C createBrotliDecompress());\n          } else if (\n            res.headers['content-encoding'] === 'gzip' ||\n            res.headers['content-encoding'] === 'deflate'\n          ) {\n            bodyStream = compose(res\x2C createUnzip());\n          }\n          const buffers = await bodyStream.toArray();\n          const body = BufferConcat(buffers);\n          entry.body = body;\n          return body;\n        })()\x2C\n      };\n      cacheForGET.set(parsed.href\x2C entry);\n      await entry.body;\n      return entry;\n    } finally {\n      req.destroy();\n    }\n  })();\n  cacheForGET.set(parsed.href\x2C result);\n  return result;\n}\n\nconst allowList = new net.BlockList();\nallowList.addAddress('::1'\x2C 'ipv6');\nallowList.addRange('127.0.0.1'\x2C '127.255.255.255');\n\n/**\n * Returns if an address has local status by if it is going to a local\n * interface or is an address resolved by DNS to be a local interface\n * @param {string} hostname url.hostname to test\n * @returns {Promise<boolean>}\n */\nasync function isLocalAddress(hostname) {\n  try {\n    if (\n      StringPrototypeStartsWith(hostname\x2C '[') &&\n      StringPrototypeEndsWith(hostname\x2C ']')\n    ) {\n      hostname = StringPrototypeSlice(hostname\x2C 1\x2C -1);\n    }\n    const addr = await dnsLookup(hostname\x2C { verbatim: true });\n    const ipv = addr.family === 4 ? 'ipv4' : 'ipv6';\n    return allowList.check(addr.address\x2C ipv);\n  } catch {\n    // If it errored\x2C the answer is no.\n  }\n  return false;\n}\n\n/**\n * Fetches a location with a shared cache following redirects.\n * Does not respect HTTP cache headers.\n *\n * This splits the header and body Promises so that things only needing\n * headers don't need to wait on the body.\n *\n * In cases where the request & response have already settled\x2C this returns the\n * cache value synchronously.\n *\n * @param {URL} parsed\n * @param {ESModuleContext} context\n * @returns {ReturnType<typeof fetchWithRedirects>}\n */\nfunction fetchModule(parsed\x2C { parentURL }) {\n  const { href } = parsed;\n  const existing = cacheForGET.get(href);\n  if (existing) {\n    return existing;\n  }\n  if (parsed.protocol === 'http:') {\n    return PromisePrototypeThen(isLocalAddress(parsed.hostname)\x2C (is) => {\n      if (is !== true) {\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\n          href\x2C\n          parentURL\x2C\n          'http can only be used to load local resources (use https instead).'\n        );\n      }\n      return fetchWithRedirects(parsed);\n    });\n  }\n  return fetchWithRedirects(parsed);\n}\n\nmodule.exports = {\n  fetchModule\x2C\n};\n
code-source-info,0x1e372ce32260,440,0,7752,C0O0C4O7752,,
code-creation,Function,10,33541,0x1e372ce32718,355, node:internal/modules/esm/fetch_module:1:1,0x1e372ce321d8,~
code-source-info,0x1e372ce32718,440,0,7752,C0O0C113O24C119O57C125O81C130O92C136O119C142O143C148O235C154O235C159O235C164O215C170O358C176O358C181O384C186O264C192O297C198O332C204O408C210O408C215O400C221O445C227O445C232O478C238O478C243O469C249O517C255O517C260O505C266O1093C268O1093C273O1093C275O1383C276O1383C278O1611C279O1611C281O1990C282O1990C284O5892C289O5884C294O5884C296O5905C299O5915C310O5915C316O5942C319O5952C330O5952C336O7715C343O7736C349O7730C354O7751,,
code-creation,Eval,10,34125,0x1e372ce35e68,5, node:net:1:1,0x1e372ce34918,~
script-source,441,node:net,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeIndexOf\x2C\n  Boolean\x2C\n  Number\x2C\n  NumberIsNaN\x2C\n  NumberParseInt\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  Symbol\x2C\n  ObjectCreate\x2C\n} = primordials;\n\nconst EventEmitter = require('events');\nconst stream = require('stream');\nlet debug = require('internal/util/debuglog').debuglog('net'\x2C (fn) => {\n  debug = fn;\n});\nconst {\n  isIP\x2C\n  isIPv4\x2C\n  isIPv6\x2C\n  normalizedArgsSymbol\x2C\n  makeSyncWrite\n} = require('internal/net');\nconst assert = require('internal/assert');\nconst {\n  UV_EADDRINUSE\x2C\n  UV_EINVAL\x2C\n  UV_ENOTCONN\n} = internalBinding('uv');\n\nconst { Buffer } = require('buffer');\nconst { guessHandleType } = internalBinding('util');\nconst { ShutdownWrap } = internalBinding('stream_wrap');\nconst {\n  TCP\x2C\n  TCPConnectWrap\x2C\n  constants: TCPConstants\n} = internalBinding('tcp_wrap');\nconst {\n  Pipe\x2C\n  PipeConnectWrap\x2C\n  constants: PipeConstants\n} = internalBinding('pipe_wrap');\nconst {\n  newAsyncId\x2C\n  defaultTriggerAsyncIdScope\x2C\n  symbols: { async_id_symbol\x2C owner_symbol }\n} = require('internal/async_hooks');\nconst {\n  writevGeneric\x2C\n  writeGeneric\x2C\n  onStreamRead\x2C\n  kAfterAsyncWrite\x2C\n  kHandle\x2C\n  kUpdateTimer\x2C\n  setStreamTimeout\x2C\n  kBuffer\x2C\n  kBufferCb\x2C\n  kBufferGen\n} = require('internal/stream_base_commons');\nconst {\n  codes: {\n    ERR_INVALID_ADDRESS_FAMILY\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_FD_TYPE\x2C\n    ERR_INVALID_IP_ADDRESS\x2C\n    ERR_INVALID_HANDLE_TYPE\x2C\n    ERR_SERVER_ALREADY_LISTEN\x2C\n    ERR_SERVER_NOT_RUNNING\x2C\n    ERR_SOCKET_CLOSED\x2C\n    ERR_MISSING_ARGS\x2C\n  }\x2C\n  errnoException\x2C\n  exceptionWithHostPort\x2C\n  genericNodeError\x2C\n  uvExceptionWithHostPort\x2C\n} = require('internal/errors');\nconst { isUint8Array } = require('internal/util/types');\nconst { queueMicrotask } = require('internal/process/task_queues');\nconst {\n  validateAbortSignal\x2C\n  validateFunction\x2C\n  validateInt32\x2C\n  validateNumber\x2C\n  validatePort\x2C\n  validateString\n} = require('internal/validators');\nconst kLastWriteQueueSize = Symbol('lastWriteQueueSize');\nconst {\n  DTRACE_NET_SERVER_CONNECTION\x2C\n  DTRACE_NET_STREAM_END\n} = require('internal/dtrace');\n\n// Lazy loaded to improve startup performance.\nlet cluster;\nlet dns;\nlet BlockList;\nlet SocketAddress;\n\nconst { clearTimeout } = require('timers');\nconst { kTimeout } = require('internal/timers');\n\nconst DEFAULT_IPV4_ADDR = '0.0.0.0';\nconst DEFAULT_IPV6_ADDR = '::';\n\nconst isWindows = process.platform === 'win32';\n\nconst noop = () => {};\n\nconst kPerfHooksNetConnectContext = Symbol('kPerfHooksNetConnectContext');\n\nlet netClientSocketChannel;\nlet netServerSocketChannel;\nfunction lazyChannels() {\n  // TODO(joyeecheung): support diagnostics channels in the snapshot.\n  // For now it is fine to create them lazily when there isn't a snapshot to\n  // build. If users need the channels they would have to create them first\n  // before invoking any built-ins that would publish to these channels\n  // anyway.\n  if (netClientSocketChannel === undefined) {\n    const dc = require('diagnostics_channel');\n    netClientSocketChannel = dc.channel('net.client.socket');\n    netServerSocketChannel = dc.channel('net.server.socket');\n  }\n}\n\nconst {\n  hasObserver\x2C\n  startPerf\x2C\n  stopPerf\x2C\n} = require('internal/perf/observe');\n\nfunction getFlags(ipv6Only) {\n  return ipv6Only === true ? TCPConstants.UV_TCP_IPV6ONLY : 0;\n}\n\nfunction createHandle(fd\x2C is_server) {\n  validateInt32(fd\x2C 'fd'\x2C 0);\n  const type = guessHandleType(fd);\n  if (type === 'PIPE') {\n    return new Pipe(\n      is_server ? PipeConstants.SERVER : PipeConstants.SOCKET\n    );\n  }\n\n  if (type === 'TCP') {\n    return new TCP(\n      is_server ? TCPConstants.SERVER : TCPConstants.SOCKET\n    );\n  }\n\n  throw new ERR_INVALID_FD_TYPE(type);\n}\n\n\nfunction getNewAsyncId(handle) {\n  return (!handle || typeof handle.getAsyncId !== 'function') ?\n    newAsyncId() : handle.getAsyncId();\n}\n\n\nfunction isPipeName(s) {\n  return typeof s === 'string' && toNumber(s) === false;\n}\n\n/**\n * Creates a new TCP or IPC server\n * @param {{\n *   allowHalfOpen?: boolean;\n *   pauseOnConnect?: boolean;\n *   }} [options]\n * @param {Function} [connectionListener]\n * @returns {Server}\n */\n\nfunction createServer(options\x2C connectionListener) {\n  return new Server(options\x2C connectionListener);\n}\n\n\n// Target API:\n//\n// let s = net.connect({port: 80\x2C host: 'google.com'}\x2C function() {\n//   ...\n// });\n//\n// There are various forms:\n//\n// connect(options\x2C [cb])\n// connect(port\x2C [host]\x2C [cb])\n// connect(path\x2C [cb]);\n//\nfunction connect(...args) {\n  const normalized = normalizeArgs(args);\n  const options = normalized[0];\n  debug('createConnection'\x2C normalized);\n  const socket = new Socket(options);\n  lazyChannels();\n  if (netClientSocketChannel.hasSubscribers) {\n    netClientSocketChannel.publish({\n      socket\x2C\n    });\n  }\n  if (options.timeout) {\n    socket.setTimeout(options.timeout);\n  }\n\n  return socket.connect(normalized);\n}\n\n\n// Returns an array [options\x2C cb]\x2C where options is an object\x2C\n// cb is either a function or null.\n// Used to normalize arguments of Socket.prototype.connect() and\n// Server.prototype.listen(). Possible combinations of parameters:\n//   (options[...][\x2C cb])\n//   (path[...][\x2C cb])\n//   ([port][\x2C host][...][\x2C cb])\n// For Socket.prototype.connect()\x2C the [...] part is ignored\n// For Server.prototype.listen()\x2C the [...] part is [\x2C backlog]\n// but will not be handled here (handled in listen())\nfunction normalizeArgs(args) {\n  let arr;\n\n  if (args.length === 0) {\n    arr = [{}\x2C null];\n    arr[normalizedArgsSymbol] = true;\n    return arr;\n  }\n\n  const arg0 = args[0];\n  let options = {};\n  if (typeof arg0 === 'object' && arg0 !== null) {\n    // (options[...][\x2C cb])\n    options = arg0;\n  } else if (isPipeName(arg0)) {\n    // (path[...][\x2C cb])\n    options.path = arg0;\n  } else {\n    // ([port][\x2C host][...][\x2C cb])\n    options.port = arg0;\n    if (args.length > 1 && typeof args[1] === 'string') {\n      options.host = args[1];\n    }\n  }\n\n  const cb = args[args.length - 1];\n  if (typeof cb !== 'function')\n    arr = [options\x2C null];\n  else\n    arr = [options\x2C cb];\n\n  arr[normalizedArgsSymbol] = true;\n  return arr;\n}\n\n\n// Called when creating new Socket\x2C or when re-using a closed Socket\nfunction initSocketHandle(self) {\n  self._undestroy();\n  self._sockname = null;\n\n  // Handle creation may be deferred to bind() or connect() time.\n  if (self._handle) {\n    self._handle[owner_symbol] = self;\n    self._handle.onread = onStreamRead;\n    self[async_id_symbol] = getNewAsyncId(self._handle);\n\n    let userBuf = self[kBuffer];\n    if (userBuf) {\n      const bufGen = self[kBufferGen];\n      if (bufGen !== null) {\n        userBuf = bufGen();\n        if (!isUint8Array(userBuf))\n          return;\n        self[kBuffer] = userBuf;\n      }\n      self._handle.useUserBuffer(userBuf);\n    }\n  }\n}\n\nfunction closeSocketHandle(self\x2C isException\x2C isCleanupPending = false) {\n  if (self._handle) {\n    self._handle.close(() => {\n      debug('emit close');\n      self.emit('close'\x2C isException);\n      if (isCleanupPending) {\n        self._handle.onread = noop;\n        self._handle = null;\n        self._sockname = null;\n      }\n    });\n  }\n}\n\nconst kBytesRead = Symbol('kBytesRead');\nconst kBytesWritten = Symbol('kBytesWritten');\nconst kSetNoDelay = Symbol('kSetNoDelay');\nconst kSetKeepAlive = Symbol('kSetKeepAlive');\nconst kSetKeepAliveInitialDelay = Symbol('kSetKeepAliveInitialDelay');\n\nfunction Socket(options) {\n  if (!(this instanceof Socket)) return new Socket(options);\n  if (options?.objectMode) {\n    throw new ERR_INVALID_ARG_VALUE(\n      'options.objectMode'\x2C\n      options.objectMode\x2C\n      'is not supported'\n    );\n  } else if (options?.readableObjectMode || options?.writableObjectMode) {\n    throw new ERR_INVALID_ARG_VALUE(\n      `options.${\n        options.readableObjectMode ? 'readableObjectMode' : 'writableObjectMode'\n      }`\x2C\n      options.readableObjectMode || options.writableObjectMode\x2C\n      'is not supported'\n    );\n  }\n  if (typeof options?.keepAliveInitialDelay !== 'undefined') {\n    validateNumber(\n      options?.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\n    );\n\n    if (options.keepAliveInitialDelay < 0) {\n      options.keepAliveInitialDelay = 0;\n    }\n  }\n\n  this.connecting = false;\n  // Problem with this is that users can supply their own handle\x2C that may not\n  // have _handle.getAsyncId(). In this case an[async_id_symbol] should\n  // probably be supplied by async_hooks.\n  this[async_id_symbol] = -1;\n  this._hadError = false;\n  this[kHandle] = null;\n  this._parent = null;\n  this._host = null;\n  this[kLastWriteQueueSize] = 0;\n  this[kTimeout] = null;\n  this[kBuffer] = null;\n  this[kBufferCb] = null;\n  this[kBufferGen] = null;\n  this._closeAfterHandlingError = false;\n\n  if (typeof options === 'number')\n    options = { fd: options }; // Legacy interface.\n  else\n    options = { ...options };\n\n  // Default to *not* allowing half open sockets.\n  options.allowHalfOpen = Boolean(options.allowHalfOpen);\n  // For backwards compat do not emit close on destroy.\n  options.emitClose = false;\n  options.autoDestroy = true;\n  // Handle strings directly.\n  options.decodeStrings = false;\n  stream.Duplex.call(this\x2C options);\n\n  if (options.handle) {\n    this._handle = options.handle; // private\n    this[async_id_symbol] = getNewAsyncId(this._handle);\n  } else if (options.fd !== undefined) {\n    const { fd } = options;\n    let err;\n\n    // createHandle will throw ERR_INVALID_FD_TYPE if `fd` is not\n    // a valid `PIPE` or `TCP` descriptor\n    this._handle = createHandle(fd\x2C false);\n\n    err = this._handle.open(fd);\n\n    // While difficult to fabricate\x2C in some architectures\n    // `open` may return an error code for valid file descriptors\n    // which cannot be opened. This is difficult to test as most\n    // un-openable fds will throw on `createHandle`\n    if (err)\n      throw errnoException(err\x2C 'open');\n\n    this[async_id_symbol] = this._handle.getAsyncId();\n\n    if ((fd === 1 || fd === 2) &&\n        (this._handle instanceof Pipe) && isWindows) {\n      // Make stdout and stderr blocking on Windows\n      err = this._handle.setBlocking(true);\n      if (err)\n        throw errnoException(err\x2C 'setBlocking');\n\n      this._writev = null;\n      this._write = makeSyncWrite(fd);\n      // makeSyncWrite adjusts this value like the original handle would\x2C so\n      // we need to let it do that by turning it into a writable\x2C own\n      // property.\n      ObjectDefineProperty(this._handle\x2C 'bytesWritten'\x2C {\n        __proto__: null\x2C\n        value: 0\x2C writable: true\n      });\n    }\n  }\n\n  const onread = options.onread;\n  if (onread !== null && typeof onread === 'object' &&\n      (isUint8Array(onread.buffer) || typeof onread.buffer === 'function') &&\n      typeof onread.callback === 'function') {\n    if (typeof onread.buffer === 'function') {\n      this[kBuffer] = true;\n      this[kBufferGen] = onread.buffer;\n    } else {\n      this[kBuffer] = onread.buffer;\n    }\n    this[kBufferCb] = onread.callback;\n  }\n\n  this[kSetNoDelay] = Boolean(options.noDelay);\n  this[kSetKeepAlive] = Boolean(options.keepAlive);\n  this[kSetKeepAliveInitialDelay] = ~~(options.keepAliveInitialDelay / 1000);\n\n  // Shut down the socket when we're finished with it.\n  this.on('end'\x2C onReadableStreamEnd);\n\n  initSocketHandle(this);\n\n  this._pendingData = null;\n  this._pendingEncoding = '';\n\n  // If we have a handle\x2C then start the flow of data into the\n  // buffer.  if not\x2C then this will happen when we connect\n  if (this._handle && options.readable !== false) {\n    if (options.pauseOnCreate) {\n      // Stop the handle from reading and pause the stream\n      this._handle.reading = false;\n      this._handle.readStop();\n      this.readableFlowing = false;\n    } else if (!options.manualStart) {\n      this.read(0);\n    }\n  }\n\n  // Reserve properties\n  this.server = null;\n  this._server = null;\n\n  // Used after `.destroy()`\n  this[kBytesRead] = 0;\n  this[kBytesWritten] = 0;\n}\nObjectSetPrototypeOf(Socket.prototype\x2C stream.Duplex.prototype);\nObjectSetPrototypeOf(Socket\x2C stream.Duplex);\n\n// Refresh existing timeouts.\nSocket.prototype._unrefTimer = function _unrefTimer() {\n  for (let s = this; s !== null; s = s._parent) {\n    if (s[kTimeout])\n      s[kTimeout].refresh();\n  }\n};\n\n\n// The user has called .end()\x2C and all the bytes have been\n// sent out to the other side.\nSocket.prototype._final = function(cb) {\n  // If still connecting - defer handling `_final` until 'connect' will happen\n  if (this.pending) {\n    debug('_final: not yet connected');\n    return this.once('connect'\x2C () => this._final(cb));\n  }\n\n  if (!this._handle)\n    return cb();\n\n  debug('_final: not ended\x2C call shutdown()');\n\n  const req = new ShutdownWrap();\n  req.oncomplete = afterShutdown;\n  req.handle = this._handle;\n  req.callback = cb;\n  const err = this._handle.shutdown(req);\n\n  if (err === 1 || err === UV_ENOTCONN)  // synchronous finish\n    return cb();\n  else if (err !== 0)\n    return cb(errnoException(err\x2C 'shutdown'));\n};\n\nfunction afterShutdown() {\n  const self = this.handle[owner_symbol];\n\n  debug('afterShutdown destroyed=%j'\x2C self.destroyed\x2C\n        self._readableState);\n\n  this.callback();\n}\n\n// Provide a better error message when we call end() as a result\n// of the other side sending a FIN.  The standard 'write after end'\n// is overly vague\x2C and makes it seem like the user's code is to blame.\nfunction writeAfterFIN(chunk\x2C encoding\x2C cb) {\n  if (!this.writableEnded) {\n    return stream.Duplex.prototype.write.call(this\x2C chunk\x2C encoding\x2C cb);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  const er = genericNodeError(\n    'This socket has been ended by the other party'\x2C\n    { code: 'EPIPE' }\n  );\n  if (typeof cb === 'function') {\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C process.nextTick\x2C cb\x2C er);\n  }\n  this.destroy(er);\n\n  return false;\n}\n\nSocket.prototype.setTimeout = setStreamTimeout;\n\n\nSocket.prototype._onTimeout = function() {\n  const handle = this._handle;\n  const lastWriteQueueSize = this[kLastWriteQueueSize];\n  if (lastWriteQueueSize > 0 && handle) {\n    // `lastWriteQueueSize !== writeQueueSize` means there is\n    // an active write in progress\x2C so we suppress the timeout.\n    const { writeQueueSize } = handle;\n    if (lastWriteQueueSize !== writeQueueSize) {\n      this[kLastWriteQueueSize] = writeQueueSize;\n      this._unrefTimer();\n      return;\n    }\n  }\n  debug('_onTimeout');\n  this.emit('timeout');\n};\n\n\nSocket.prototype.setNoDelay = function(enable) {\n  // Backwards compatibility: assume true when `enable` is omitted\n  enable = Boolean(enable === undefined ? true : enable);\n\n  if (!this._handle) {\n    this[kSetNoDelay] = enable;\n    return this;\n  }\n\n  if (this._handle.setNoDelay && enable !== this[kSetNoDelay]) {\n    this[kSetNoDelay] = enable;\n    this._handle.setNoDelay(enable);\n  }\n\n  return this;\n};\n\n\nSocket.prototype.setKeepAlive = function(enable\x2C initialDelayMsecs) {\n  enable = Boolean(enable);\n  const initialDelay = ~~(initialDelayMsecs / 1000);\n\n  if (!this._handle) {\n    this[kSetKeepAlive] = enable;\n    this[kSetKeepAliveInitialDelay] = initialDelay;\n    return this;\n  }\n\n  if (!this._handle.setKeepAlive) {\n    return this;\n  }\n\n  if (enable !== this[kSetKeepAlive] ||\n      (\n        enable &&\n        this[kSetKeepAliveInitialDelay] !== initialDelay\n      )\n  ) {\n    this[kSetKeepAlive] = enable;\n    this[kSetKeepAliveInitialDelay] = initialDelay;\n    this._handle.setKeepAlive(enable\x2C initialDelay);\n  }\n\n  return this;\n};\n\n\nSocket.prototype.address = function() {\n  return this._getsockname();\n};\n\n\nObjectDefineProperty(Socket.prototype\x2C '_connecting'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    return this.connecting;\n  }\n});\n\nObjectDefineProperty(Socket.prototype\x2C 'pending'\x2C {\n  __proto__: null\x2C\n  get() {\n    return !this._handle || this.connecting;\n  }\x2C\n  configurable: true\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C 'readyState'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    if (this.connecting) {\n      return 'opening';\n    } else if (this.readable && this.writable) {\n      return 'open';\n    } else if (this.readable && !this.writable) {\n      return 'readOnly';\n    } else if (!this.readable && this.writable) {\n      return 'writeOnly';\n    }\n    return 'closed';\n  }\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C 'bufferSize'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    if (this._handle) {\n      return this.writableLength;\n    }\n  }\n});\n\nObjectDefineProperty(Socket.prototype\x2C kUpdateTimer\x2C {\n  __proto__: null\x2C\n  get: function() {\n    return this._unrefTimer;\n  }\n});\n\n\nfunction tryReadStart(socket) {\n  // Not already reading\x2C start the flow\n  debug('Socket._handle.readStart');\n  socket._handle.reading = true;\n  const err = socket._handle.readStart();\n  if (err)\n    socket.destroy(errnoException(err\x2C 'read'));\n}\n\n// Just call handle.readStart until we have enough in the buffer\nSocket.prototype._read = function(n) {\n  debug('_read');\n\n  if (this.connecting || !this._handle) {\n    debug('_read wait for connection');\n    this.once('connect'\x2C () => this._read(n));\n  } else if (!this._handle.reading) {\n    tryReadStart(this);\n  }\n};\n\n\nSocket.prototype.end = function(data\x2C encoding\x2C callback) {\n  stream.Duplex.prototype.end.call(this\x2C\n                                   data\x2C encoding\x2C callback);\n  DTRACE_NET_STREAM_END(this);\n  return this;\n};\n\nSocket.prototype.resetAndDestroy = function() {\n  if (this._handle) {\n    if (!(this._handle instanceof TCP))\n      throw new ERR_INVALID_HANDLE_TYPE();\n    if (this.connecting) {\n      debug('reset wait for connection');\n      this.once('connect'\x2C () => this._reset());\n    } else {\n      this._reset();\n    }\n  } else {\n    this.destroy(new ERR_SOCKET_CLOSED());\n  }\n  return this;\n};\n\nSocket.prototype.pause = function() {\n  if (this[kBuffer] && !this.connecting && this._handle &&\n      this._handle.reading) {\n    this._handle.reading = false;\n    if (!this.destroyed) {\n      const err = this._handle.readStop();\n      if (err)\n        this.destroy(errnoException(err\x2C 'read'));\n    }\n  }\n  return stream.Duplex.prototype.pause.call(this);\n};\n\n\nSocket.prototype.resume = function() {\n  if (this[kBuffer] && !this.connecting && this._handle &&\n      !this._handle.reading) {\n    tryReadStart(this);\n  }\n  return stream.Duplex.prototype.resume.call(this);\n};\n\n\nSocket.prototype.read = function(n) {\n  if (this[kBuffer] && !this.connecting && this._handle &&\n      !this._handle.reading) {\n    tryReadStart(this);\n  }\n  return stream.Duplex.prototype.read.call(this\x2C n);\n};\n\n\n// Called when the 'end' event is emitted.\nfunction onReadableStreamEnd() {\n  if (!this.allowHalfOpen) {\n    this.write = writeAfterFIN;\n  }\n}\n\n\nSocket.prototype.destroySoon = function() {\n  if (this.writable)\n    this.end();\n\n  if (this.writableFinished)\n    this.destroy();\n  else\n    this.once('finish'\x2C this.destroy);\n};\n\n\nSocket.prototype._destroy = function(exception\x2C cb) {\n  debug('destroy');\n\n  this.connecting = false;\n\n  for (let s = this; s !== null; s = s._parent) {\n    clearTimeout(s[kTimeout]);\n  }\n\n  debug('close');\n  if (this._handle) {\n    if (this !== process.stderr)\n      debug('close handle');\n    const isException = exception ? true : false;\n    // `bytesRead` and `kBytesWritten` should be accessible after `.destroy()`\n    this[kBytesRead] = this._handle.bytesRead;\n    this[kBytesWritten] = this._handle.bytesWritten;\n\n    if (this.resetAndClosing) {\n      this.resetAndClosing = false;\n      const err = this._handle.reset(() => {\n        debug('emit close');\n        this.emit('close'\x2C isException);\n      });\n      if (err)\n        this.emit('error'\x2C errnoException(err\x2C 'reset'));\n    } else if (this._closeAfterHandlingError) {\n      // Enqueue closing the socket as a microtask\x2C so that the socket can be\n      // accessible when an `error` event is handled in the `next tick queue`.\n      queueMicrotask(() => closeSocketHandle(this\x2C isException\x2C true));\n    } else {\n      closeSocketHandle(this\x2C isException);\n    }\n\n    if (!this._closeAfterHandlingError) {\n      this._handle.onread = noop;\n      this._handle = null;\n      this._sockname = null;\n    }\n    cb(exception);\n  } else {\n    cb(exception);\n    process.nextTick(emitCloseNT\x2C this);\n  }\n\n  if (this._server) {\n    debug('has server');\n    this._server._connections--;\n    if (this._server._emitCloseIfDrained) {\n      this._server._emitCloseIfDrained();\n    }\n  }\n};\n\nSocket.prototype._reset = function() {\n  debug('reset connection');\n  this.resetAndClosing = true;\n  return this.destroy();\n};\n\nSocket.prototype._getpeername = function() {\n  if (!this._handle || !this._handle.getpeername || this.connecting) {\n    return this._peername || {};\n  } else if (!this._peername) {\n    const out = {};\n    const err = this._handle.getpeername(out);\n    if (err) return out;\n    this._peername = out;\n  }\n  return this._peername;\n};\n\nfunction protoGetter(name\x2C callback) {\n  ObjectDefineProperty(Socket.prototype\x2C name\x2C {\n    __proto__: null\x2C\n    configurable: false\x2C\n    enumerable: true\x2C\n    get: callback\n  });\n}\n\nprotoGetter('bytesRead'\x2C function bytesRead() {\n  return this._handle ? this._handle.bytesRead : this[kBytesRead];\n});\n\nprotoGetter('remoteAddress'\x2C function remoteAddress() {\n  return this._getpeername().address;\n});\n\nprotoGetter('remoteFamily'\x2C function remoteFamily() {\n  return this._getpeername().family;\n});\n\nprotoGetter('remotePort'\x2C function remotePort() {\n  return this._getpeername().port;\n});\n\n\nSocket.prototype._getsockname = function() {\n  if (!this._handle || !this._handle.getsockname) {\n    return {};\n  } else if (!this._sockname) {\n    this._sockname = {};\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\n    this._handle.getsockname(this._sockname);\n  }\n  return this._sockname;\n};\n\n\nprotoGetter('localAddress'\x2C function localAddress() {\n  return this._getsockname().address;\n});\n\n\nprotoGetter('localPort'\x2C function localPort() {\n  return this._getsockname().port;\n});\n\nprotoGetter('localFamily'\x2C function localFamily() {\n  return this._getsockname().family;\n});\n\nSocket.prototype[kAfterAsyncWrite] = function() {\n  this[kLastWriteQueueSize] = 0;\n};\n\nSocket.prototype._writeGeneric = function(writev\x2C data\x2C encoding\x2C cb) {\n  // If we are still connecting\x2C then buffer this for later.\n  // The Writable logic will buffer up any more writes while\n  // waiting for this one to be done.\n  if (this.connecting) {\n    this._pendingData = data;\n    this._pendingEncoding = encoding;\n    this.once('connect'\x2C function connect() {\n      this._writeGeneric(writev\x2C data\x2C encoding\x2C cb);\n    });\n    return;\n  }\n  this._pendingData = null;\n  this._pendingEncoding = '';\n\n  if (!this._handle) {\n    cb(new ERR_SOCKET_CLOSED());\n    return false;\n  }\n\n  this._unrefTimer();\n\n  let req;\n  if (writev)\n    req = writevGeneric(this\x2C data\x2C cb);\n  else\n    req = writeGeneric(this\x2C data\x2C encoding\x2C cb);\n  if (req.async)\n    this[kLastWriteQueueSize] = req.bytes;\n};\n\n\nSocket.prototype._writev = function(chunks\x2C cb) {\n  this._writeGeneric(true\x2C chunks\x2C ''\x2C cb);\n};\n\n\nSocket.prototype._write = function(data\x2C encoding\x2C cb) {\n  this._writeGeneric(false\x2C data\x2C encoding\x2C cb);\n};\n\n\n// Legacy alias. Having this is probably being overly cautious\x2C but it doesn't\n// really hurt anyone either. This can probably be removed safely if desired.\nprotoGetter('_bytesDispatched'\x2C function _bytesDispatched() {\n  return this._handle ? this._handle.bytesWritten : this[kBytesWritten];\n});\n\nprotoGetter('bytesWritten'\x2C function bytesWritten() {\n  let bytes = this._bytesDispatched;\n  const data = this._pendingData;\n  const encoding = this._pendingEncoding;\n  const writableBuffer = this.writableBuffer;\n\n  if (!writableBuffer)\n    return undefined;\n\n  for (const el of writableBuffer) {\n    bytes += el.chunk instanceof Buffer ?\n      el.chunk.length :\n      Buffer.byteLength(el.chunk\x2C el.encoding);\n  }\n\n  if (ArrayIsArray(data)) {\n    // Was a writev\x2C iterate over chunks to get total length\n    for (let i = 0; i < data.length; i++) {\n      const chunk = data[i];\n\n      if (data.allBuffers || chunk instanceof Buffer)\n        bytes += chunk.length;\n      else\n        bytes += Buffer.byteLength(chunk.chunk\x2C chunk.encoding);\n    }\n  } else if (data) {\n    // Writes are either a string or a Buffer.\n    if (typeof data !== 'string')\n      bytes += data.length;\n    else\n      bytes += Buffer.byteLength(data\x2C encoding);\n  }\n\n  return bytes;\n});\n\n\nfunction checkBindError(err\x2C port\x2C handle) {\n  // EADDRINUSE may not be reported until we call listen() or connect().\n  // To complicate matters\x2C a failed bind() followed by listen() or connect()\n  // will implicitly bind to a random port. Ergo\x2C check that the socket is\n  // bound to the expected port before calling listen() or connect().\n  //\n  // FIXME(bnoordhuis) Doesn't work for pipe handles\x2C they don't have a\n  // getsockname() method. Non-issue for now\x2C the cluster module doesn't\n  // really support pipes anyway.\n  if (err === 0 && port > 0 && handle.getsockname) {\n    const out = {};\n    err = handle.getsockname(out);\n    if (err === 0 && port !== out.port) {\n      debug(`checkBindError\x2C bound to ${out.port} instead of ${port}`);\n      err = UV_EADDRINUSE;\n    }\n  }\n  return err;\n}\n\n\nfunction internalConnect(\n  self\x2C address\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C flags) {\n  // TODO return promise from Socket.prototype.connect which\n  // wraps _connectReq.\n\n  assert(self.connecting);\n\n  let err;\n\n  if (localAddress || localPort) {\n    if (addressType === 4) {\n      localAddress = localAddress || DEFAULT_IPV4_ADDR;\n      err = self._handle.bind(localAddress\x2C localPort);\n    } else { // addressType === 6\n      localAddress = localAddress || DEFAULT_IPV6_ADDR;\n      err = self._handle.bind6(localAddress\x2C localPort\x2C flags);\n    }\n    debug('binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\n          localAddress\x2C localPort\x2C addressType);\n\n    err = checkBindError(err\x2C localPort\x2C self._handle);\n    if (err) {\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort);\n      self.destroy(ex);\n      return;\n    }\n  }\n\n  if (addressType === 6 || addressType === 4) {\n    const req = new TCPConnectWrap();\n    req.oncomplete = afterConnect;\n    req.address = address;\n    req.port = port;\n    req.localAddress = localAddress;\n    req.localPort = localPort;\n\n    if (addressType === 4)\n      err = self._handle.connect(req\x2C address\x2C port);\n    else\n      err = self._handle.connect6(req\x2C address\x2C port);\n  } else {\n    const req = new PipeConnectWrap();\n    req.address = address;\n    req.oncomplete = afterConnect;\n\n    err = self._handle.connect(req\x2C address);\n  }\n\n  if (err) {\n    const sockname = self._getsockname();\n    let details;\n\n    if (sockname) {\n      details = sockname.address + ':' + sockname.port;\n    }\n\n    const ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details);\n    self.destroy(ex);\n  } else if ((addressType === 6 || addressType === 4) && hasObserver('net')) {\n    startPerf(self\x2C kPerfHooksNetConnectContext\x2C { type: 'net'\x2C name: 'connect'\x2C detail: { host: address\x2C port } });\n  }\n}\n\n\nSocket.prototype.connect = function(...args) {\n  let normalized;\n  // If passed an array\x2C it's treated as an array of arguments that have\n  // already been normalized (so we don't normalize more than once). This has\n  // been solved before in https://github.com/nodejs/node/pull/12342\x2C but was\n  // reverted as it had unintended side effects.\n  if (ArrayIsArray(args[0]) && args[0][normalizedArgsSymbol]) {\n    normalized = args[0];\n  } else {\n    normalized = normalizeArgs(args);\n  }\n  const options = normalized[0];\n  const cb = normalized[1];\n\n  // options.port === null will be checked later.\n  if (options.port === undefined && options.path == null)\n    throw new ERR_MISSING_ARGS(['options'\x2C 'port'\x2C 'path']);\n\n  if (this.write !== Socket.prototype.write)\n    this.write = Socket.prototype.write;\n\n  if (this.destroyed) {\n    this._handle = null;\n    this._peername = null;\n    this._sockname = null;\n  }\n\n  const { path } = options;\n  const pipe = !!path;\n  debug('pipe'\x2C pipe\x2C path);\n\n  if (!this._handle) {\n    this._handle = pipe ?\n      new Pipe(PipeConstants.SOCKET) :\n      new TCP(TCPConstants.SOCKET);\n    initSocketHandle(this);\n  }\n\n  if (cb !== null) {\n    this.once('connect'\x2C cb);\n  }\n\n  this._unrefTimer();\n\n  this.connecting = true;\n\n  if (pipe) {\n    validateString(path\x2C 'options.path');\n    defaultTriggerAsyncIdScope(\n      this[async_id_symbol]\x2C internalConnect\x2C this\x2C path\n    );\n  } else {\n    lookupAndConnect(this\x2C options);\n  }\n  return this;\n};\n\nfunction socketToDnsFamily(family) {\n  switch (family) {\n    case 'IPv4':\n      return 4;\n    case 'IPv6':\n      return 6;\n  }\n\n  return family;\n}\n\nfunction lookupAndConnect(self\x2C options) {\n  const { localAddress\x2C localPort } = options;\n  const host = options.host || 'localhost';\n  let { port } = options;\n\n  if (localAddress && !isIP(localAddress)) {\n    throw new ERR_INVALID_IP_ADDRESS(localAddress);\n  }\n\n  if (localPort) {\n    validateNumber(localPort\x2C 'options.localPort');\n  }\n\n  if (typeof port !== 'undefined') {\n    if (typeof port !== 'number' && typeof port !== 'string') {\n      throw new ERR_INVALID_ARG_TYPE('options.port'\x2C\n                                     ['number'\x2C 'string']\x2C port);\n    }\n    validatePort(port);\n  }\n  port |= 0;\n\n  // If host is an IP\x2C skip performing a lookup\n  const addressType = isIP(host);\n  if (addressType) {\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C process.nextTick\x2C () => {\n      if (self.connecting)\n        defaultTriggerAsyncIdScope(\n          self[async_id_symbol]\x2C\n          internalConnect\x2C\n          self\x2C host\x2C port\x2C addressType\x2C localAddress\x2C localPort\n        );\n    });\n    return;\n  }\n\n  if (options.lookup !== undefined)\n    validateFunction(options.lookup\x2C 'options.lookup');\n\n  if (dns === undefined) dns = require('dns');\n  const dnsopts = {\n    family: socketToDnsFamily(options.family)\x2C\n    hints: options.hints || 0\n  };\n\n  if (!isWindows &&\n      dnsopts.family !== 4 &&\n      dnsopts.family !== 6 &&\n      dnsopts.hints === 0) {\n    dnsopts.hints = dns.ADDRCONFIG;\n  }\n\n  debug('connect: find host'\x2C host);\n  debug('connect: dns options'\x2C dnsopts);\n  self._host = host;\n  const lookup = options.lookup || dns.lookup;\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function() {\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C ip\x2C addressType) {\n      self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\n\n      // It's possible we were destroyed while looking this up.\n      // XXX it would be great if we could cancel the promise returned by\n      // the look up.\n      if (!self.connecting) return;\n\n      if (err) {\n        // net.createConnection() creates a net.Socket object and immediately\n        // calls net.Socket.connect() on it (that's us). There are no event\n        // listeners registered yet so defer the error event to the next tick.\n        process.nextTick(connectErrorNT\x2C self\x2C err);\n      } else if (!isIP(ip)) {\n        err = new ERR_INVALID_IP_ADDRESS(ip);\n        process.nextTick(connectErrorNT\x2C self\x2C err);\n      } else if (addressType !== 4 && addressType !== 6) {\n        err = new ERR_INVALID_ADDRESS_FAMILY(addressType\x2C\n                                             options.host\x2C\n                                             options.port);\n        process.nextTick(connectErrorNT\x2C self\x2C err);\n      } else {\n        self._unrefTimer();\n        defaultTriggerAsyncIdScope(\n          self[async_id_symbol]\x2C\n          internalConnect\x2C\n          self\x2C ip\x2C port\x2C addressType\x2C localAddress\x2C localPort\n        );\n      }\n    });\n  });\n}\n\n\nfunction connectErrorNT(self\x2C err) {\n  self.destroy(err);\n}\n\n\nSocket.prototype.ref = function() {\n  if (!this._handle) {\n    this.once('connect'\x2C this.ref);\n    return this;\n  }\n\n  if (typeof this._handle.ref === 'function') {\n    this._handle.ref();\n  }\n\n  return this;\n};\n\n\nSocket.prototype.unref = function() {\n  if (!this._handle) {\n    this.once('connect'\x2C this.unref);\n    return this;\n  }\n\n  if (typeof this._handle.unref === 'function') {\n    this._handle.unref();\n  }\n\n  return this;\n};\n\n\nfunction afterConnect(status\x2C handle\x2C req\x2C readable\x2C writable) {\n  const self = handle[owner_symbol];\n\n  // Callback may come after call to destroy\n  if (self.destroyed) {\n    return;\n  }\n\n  debug('afterConnect');\n\n  assert(self.connecting);\n  self.connecting = false;\n  self._sockname = null;\n\n  if (status === 0) {\n    if (self.readable && !readable) {\n      self.push(null);\n      self.read();\n    }\n    if (self.writable && !writable) {\n      self.end();\n    }\n    self._unrefTimer();\n\n    if (self[kSetNoDelay] && self._handle.setNoDelay) {\n      self._handle.setNoDelay(true);\n    }\n\n    if (self[kSetKeepAlive] && self._handle.setKeepAlive) {\n      self._handle.setKeepAlive(true\x2C self[kSetKeepAliveInitialDelay]);\n    }\n\n    self.emit('connect');\n    self.emit('ready');\n\n    // Start the first read\x2C or get an immediate EOF.\n    // this doesn't actually consume any bytes\x2C because len=0.\n    if (readable && !self.isPaused())\n      self.read(0);\n    if (self[kPerfHooksNetConnectContext] && hasObserver('net')) {\n      stopPerf(self\x2C kPerfHooksNetConnectContext);\n    }\n  } else {\n    let details;\n    if (req.localAddress && req.localPort) {\n      details = req.localAddress + ':' + req.localPort;\n    }\n    const ex = exceptionWithHostPort(status\x2C\n                                     'connect'\x2C\n                                     req.address\x2C\n                                     req.port\x2C\n                                     details);\n    if (details) {\n      ex.localAddress = req.localAddress;\n      ex.localPort = req.localPort;\n    }\n    self.destroy(ex);\n  }\n}\n\nfunction addAbortSignalOption(self\x2C options) {\n  if (options?.signal === undefined) {\n    return;\n  }\n  validateAbortSignal(options.signal\x2C 'options.signal');\n  const { signal } = options;\n  const onAborted = () => {\n    self.close();\n  };\n  if (signal.aborted) {\n    process.nextTick(onAborted);\n  } else {\n    signal.addEventListener('abort'\x2C onAborted);\n    self.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\n  }\n}\n\nfunction Server(options\x2C connectionListener) {\n  if (!(this instanceof Server))\n    return new Server(options\x2C connectionListener);\n\n  EventEmitter.call(this);\n\n  if (typeof options === 'function') {\n    connectionListener = options;\n    options = {};\n    this.on('connection'\x2C connectionListener);\n  } else if (options == null || typeof options === 'object') {\n    options = { ...options };\n\n    if (typeof connectionListener === 'function') {\n      this.on('connection'\x2C connectionListener);\n    }\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\n  }\n  if (typeof options.keepAliveInitialDelay !== 'undefined') {\n    validateNumber(\n      options.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\n    );\n\n    if (options.keepAliveInitialDelay < 0) {\n      options.keepAliveInitialDelay = 0;\n    }\n  }\n\n  this._connections = 0;\n\n  this[async_id_symbol] = -1;\n  this._handle = null;\n  this._usingWorkers = false;\n  this._workers = [];\n  this._unref = false;\n\n  this.allowHalfOpen = options.allowHalfOpen || false;\n  this.pauseOnConnect = !!options.pauseOnConnect;\n  this.noDelay = Boolean(options.noDelay);\n  this.keepAlive = Boolean(options.keepAlive);\n  this.keepAliveInitialDelay = ~~(options.keepAliveInitialDelay / 1000);\n}\nObjectSetPrototypeOf(Server.prototype\x2C EventEmitter.prototype);\nObjectSetPrototypeOf(Server\x2C EventEmitter);\n\n\nfunction toNumber(x) { return (x = Number(x)) >= 0 ? x : false; }\n\n// Returns handle if it can be created\x2C or error code if it can't\nfunction createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\n  let err = 0;\n  // Assign handle in listen\x2C and clean up if bind or listen fails\n  let handle;\n\n  let isTCP = false;\n  if (typeof fd === 'number' && fd >= 0) {\n    try {\n      handle = createHandle(fd\x2C true);\n    } catch (e) {\n      // Not a fd we can listen on.  This will trigger an error.\n      debug('listen invalid fd=%d:'\x2C fd\x2C e.message);\n      return UV_EINVAL;\n    }\n\n    err = handle.open(fd);\n    if (err)\n      return err;\n\n    assert(!address && !port);\n  } else if (port === -1 && addressType === -1) {\n    handle = new Pipe(PipeConstants.SERVER);\n    if (isWindows) {\n      const instances = NumberParseInt(process.env.NODE_PENDING_PIPE_INSTANCES);\n      if (!NumberIsNaN(instances)) {\n        handle.setPendingInstances(instances);\n      }\n    }\n  } else {\n    handle = new TCP(TCPConstants.SERVER);\n    isTCP = true;\n  }\n\n  if (address || port || isTCP) {\n    debug('bind to'\x2C address || 'any');\n    if (!address) {\n      // Try binding to ipv6 first\n      err = handle.bind6(DEFAULT_IPV6_ADDR\x2C port\x2C flags);\n      if (err) {\n        handle.close();\n        // Fallback to ipv4\n        return createServerHandle(DEFAULT_IPV4_ADDR\x2C port);\n      }\n    } else if (addressType === 6) {\n      err = handle.bind6(address\x2C port\x2C flags);\n    } else {\n      err = handle.bind(address\x2C port);\n    }\n  }\n\n  if (err) {\n    handle.close();\n    return err;\n  }\n\n  return handle;\n}\n\nfunction setupListenHandle(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags) {\n  debug('setupListenHandle'\x2C address\x2C port\x2C addressType\x2C backlog\x2C fd);\n\n  // If there is not yet a handle\x2C we need to create one and bind.\n  // In the case of a server sent via IPC\x2C we don't need to do this.\n  if (this._handle) {\n    debug('setupListenHandle: have a handle already');\n  } else {\n    debug('setupListenHandle: create a handle');\n\n    let rval = null;\n\n    // Try to bind to the unspecified IPv6 address\x2C see if IPv6 is available\n    if (!address && typeof fd !== 'number') {\n      rval = createServerHandle(DEFAULT_IPV6_ADDR\x2C port\x2C 6\x2C fd\x2C flags);\n\n      if (typeof rval === 'number') {\n        rval = null;\n        address = DEFAULT_IPV4_ADDR;\n        addressType = 4;\n      } else {\n        address = DEFAULT_IPV6_ADDR;\n        addressType = 6;\n      }\n    }\n\n    if (rval === null)\n      rval = createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\n\n    if (typeof rval === 'number') {\n      const error = uvExceptionWithHostPort(rval\x2C 'listen'\x2C address\x2C port);\n      process.nextTick(emitErrorNT\x2C this\x2C error);\n      return;\n    }\n    this._handle = rval;\n  }\n\n  this[async_id_symbol] = getNewAsyncId(this._handle);\n  this._handle.onconnection = onconnection;\n  this._handle[owner_symbol] = this;\n\n  // Use a backlog of 512 entries. We pass 511 to the listen() call because\n  // the kernel does: backlogsize = roundup_pow_of_two(backlogsize + 1);\n  // which will thus give us a backlog of 512 entries.\n  const err = this._handle.listen(backlog || 511);\n\n  if (err) {\n    const ex = uvExceptionWithHostPort(err\x2C 'listen'\x2C address\x2C port);\n    this._handle.close();\n    this._handle = null;\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\n                               process.nextTick\x2C\n                               emitErrorNT\x2C\n                               this\x2C\n                               ex);\n    return;\n  }\n\n  // Generate connection key\x2C this should be unique to the connection\n  this._connectionKey = addressType + ':' + address + ':' + port;\n\n  // Unref the handle if the server was unref'ed prior to listening\n  if (this._unref)\n    this.unref();\n\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\n                             process.nextTick\x2C\n                             emitListeningNT\x2C\n                             this);\n}\n\nServer.prototype._listen2 = setupListenHandle;  // legacy alias\n\nfunction emitErrorNT(self\x2C err) {\n  self.emit('error'\x2C err);\n}\n\n\nfunction emitListeningNT(self) {\n  // Ensure handle hasn't closed\n  if (self._handle)\n    self.emit('listening');\n}\n\n\nfunction listenInCluster(server\x2C address\x2C port\x2C addressType\x2C\n                         backlog\x2C fd\x2C exclusive\x2C flags\x2C options) {\n  exclusive = !!exclusive;\n\n  if (cluster === undefined) cluster = require('cluster');\n\n  if (cluster.isPrimary || exclusive) {\n    // Will create a new handle\n    // _listen2 sets up the listened handle\x2C it is still named like this\n    // to avoid breaking code that wraps this method\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\n    return;\n  }\n\n  const serverQuery = {\n    address: address\x2C\n    port: port\x2C\n    addressType: addressType\x2C\n    fd: fd\x2C\n    flags\x2C\n    backlog\x2C\n    ...options\x2C\n  };\n  // Get the primary's server handle\x2C and listen on it\n  cluster._getServer(server\x2C serverQuery\x2C listenOnPrimaryHandle);\n\n  function listenOnPrimaryHandle(err\x2C handle) {\n    err = checkBindError(err\x2C port\x2C handle);\n\n    if (err) {\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C address\x2C port);\n      return server.emit('error'\x2C ex);\n    }\n\n    // Reuse primary's server handle\n    server._handle = handle;\n    // _listen2 sets up the listened handle\x2C it is still named like this\n    // to avoid breaking code that wraps this method\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\n  }\n}\n\n\nServer.prototype.listen = function(...args) {\n  const normalized = normalizeArgs(args);\n  let options = normalized[0];\n  const cb = normalized[1];\n\n  if (this._handle) {\n    throw new ERR_SERVER_ALREADY_LISTEN();\n  }\n\n  if (cb !== null) {\n    this.once('listening'\x2C cb);\n  }\n  const backlogFromArgs =\n    // (handle\x2C backlog) or (path\x2C backlog) or (port\x2C backlog)\n    toNumber(args.length > 1 && args[1]) ||\n    toNumber(args.length > 2 && args[2]);  // (port\x2C host\x2C backlog)\n\n  options = options._handle || options.handle || options;\n  const flags = getFlags(options.ipv6Only);\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a handle\n  if (options instanceof TCP) {\n    this._handle = options;\n    this[async_id_symbol] = this._handle.getAsyncId();\n    listenInCluster(this\x2C null\x2C -1\x2C -1\x2C backlogFromArgs);\n    return this;\n  }\n  addAbortSignalOption(this\x2C options);\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a fd\n  if (typeof options.fd === 'number' && options.fd >= 0) {\n    listenInCluster(this\x2C null\x2C null\x2C null\x2C backlogFromArgs\x2C options.fd);\n    return this;\n  }\n\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is omitted\x2C\n  // that is\x2C listen()\x2C listen(null)\x2C listen(cb)\x2C or listen(null\x2C cb)\n  // or (options[\x2C cb]) where options.port is explicitly set as undefined or\n  // null\x2C bind to an arbitrary unused port\n  if (args.length === 0 || typeof args[0] === 'function' ||\n      (typeof options.port === 'undefined' && 'port' in options) ||\n      options.port === null) {\n    options.port = 0;\n  }\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is specified\n  // or (options[\x2C cb]) where options.port is specified\n  // or if options.port is normalized as 0 before\n  let backlog;\n  if (typeof options.port === 'number' || typeof options.port === 'string') {\n    validatePort(options.port\x2C 'options.port');\n    backlog = options.backlog || backlogFromArgs;\n    // start TCP server listening on host:port\n    if (options.host) {\n      lookupAndListen(this\x2C options.port | 0\x2C options.host\x2C backlog\x2C\n                      options.exclusive\x2C flags);\n    } else { // Undefined host\x2C listens on unspecified address\n      // Default addressType 4 will be used to search for primary server\n      listenInCluster(this\x2C null\x2C options.port | 0\x2C 4\x2C\n                      backlog\x2C undefined\x2C options.exclusive);\n    }\n    return this;\n  }\n\n  // (path[\x2C backlog][\x2C cb]) or (options[\x2C cb])\n  // where path or options.path is a UNIX domain socket or Windows pipe\n  if (options.path && isPipeName(options.path)) {\n    const pipeName = this._pipeName = options.path;\n    backlog = options.backlog || backlogFromArgs;\n    listenInCluster(this\x2C\n                    pipeName\x2C\n                    -1\x2C\n                    -1\x2C\n                    backlog\x2C\n                    undefined\x2C\n                    options.exclusive\x2C\n                    undefined\x2C\n                    {\n                      readableAll: options.readableAll\x2C\n                      writableAll: options.writableAll\x2C\n                    });\n\n    if (!this._handle) {\n      // Failed and an error shall be emitted in the next tick.\n      // Therefore\x2C we directly return.\n      return this;\n    }\n\n    let mode = 0;\n    if (options.readableAll === true)\n      mode |= PipeConstants.UV_READABLE;\n    if (options.writableAll === true)\n      mode |= PipeConstants.UV_WRITABLE;\n    if (mode !== 0) {\n      const err = this._handle.fchmod(mode);\n      if (err) {\n        this._handle.close();\n        this._handle = null;\n        throw errnoException(err\x2C 'uv_pipe_chmod');\n      }\n    }\n    return this;\n  }\n\n  if (!(('port' in options) || ('path' in options))) {\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options\x2C\n                                    'must have the property "port" or "path"');\n  }\n\n  throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\n};\n\nfunction lookupAndListen(self\x2C port\x2C address\x2C backlog\x2C exclusive\x2C flags) {\n  if (dns === undefined) dns = require('dns');\n  dns.lookup(address\x2C function doListen(err\x2C ip\x2C addressType) {\n    if (err) {\n      self.emit('error'\x2C err);\n    } else {\n      addressType = ip ? addressType : 4;\n      listenInCluster(self\x2C ip\x2C port\x2C addressType\x2C\n                      backlog\x2C undefined\x2C exclusive\x2C flags);\n    }\n  });\n}\n\nObjectDefineProperty(Server.prototype\x2C 'listening'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    return !!this._handle;\n  }\x2C\n  configurable: true\x2C\n  enumerable: true\n});\n\nServer.prototype.address = function() {\n  if (this._handle && this._handle.getsockname) {\n    const out = {};\n    const err = this._handle.getsockname(out);\n    if (err) {\n      throw errnoException(err\x2C 'address');\n    }\n    return out;\n  } else if (this._pipeName) {\n    return this._pipeName;\n  }\n  return null;\n};\n\nfunction onconnection(err\x2C clientHandle) {\n  const handle = this;\n  const self = handle[owner_symbol];\n\n  debug('onconnection');\n\n  if (err) {\n    self.emit('error'\x2C errnoException(err\x2C 'accept'));\n    return;\n  }\n\n  if (self.maxConnections && self._connections >= self.maxConnections) {\n    if (clientHandle.getsockname || clientHandle.getpeername) {\n      const data = ObjectCreate(null);\n      if (clientHandle.getsockname) {\n        const localInfo = ObjectCreate(null);\n        clientHandle.getsockname(localInfo);\n        data.localAddress = localInfo.address;\n        data.localPort = localInfo.port;\n        data.localFamily = localInfo.family;\n      }\n      if (clientHandle.getpeername) {\n        const remoteInfo = ObjectCreate(null);\n        clientHandle.getpeername(remoteInfo);\n        data.remoteAddress = remoteInfo.address;\n        data.remotePort = remoteInfo.port;\n        data.remoteFamily = remoteInfo.family;\n      }\n      self.emit('drop'\x2C data);\n    } else {\n      self.emit('drop');\n    }\n    clientHandle.close();\n    return;\n  }\n\n  const socket = new Socket({\n    handle: clientHandle\x2C\n    allowHalfOpen: self.allowHalfOpen\x2C\n    pauseOnCreate: self.pauseOnConnect\x2C\n    readable: true\x2C\n    writable: true\n  });\n\n  if (self.noDelay && clientHandle.setNoDelay) {\n    socket[kSetNoDelay] = true;\n    clientHandle.setNoDelay(true);\n  }\n  if (self.keepAlive && clientHandle.setKeepAlive) {\n    socket[kSetKeepAlive] = true;\n    socket[kSetKeepAliveInitialDelay] = self.keepAliveInitialDelay;\n    clientHandle.setKeepAlive(true\x2C self.keepAliveInitialDelay);\n  }\n\n  self._connections++;\n  socket.server = self;\n  socket._server = self;\n\n  DTRACE_NET_SERVER_CONNECTION(socket);\n  self.emit('connection'\x2C socket);\n  lazyChannels();\n  if (netServerSocketChannel.hasSubscribers) {\n    netServerSocketChannel.publish({\n      socket\x2C\n    });\n  }\n}\n\n/**\n * Gets the number of concurrent connections on the server\n * @param {Function} cb\n * @returns {Server}\n */\n\nServer.prototype.getConnections = function(cb) {\n  const self = this;\n\n  function end(err\x2C connections) {\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C\n                               process.nextTick\x2C\n                               cb\x2C\n                               err\x2C\n                               connections);\n  }\n\n  if (!this._usingWorkers) {\n    end(null\x2C this._connections);\n    return this;\n  }\n\n  // Poll workers\n  let left = this._workers.length;\n  let total = this._connections;\n\n  function oncount(err\x2C count) {\n    if (err) {\n      left = -1;\n      return end(err);\n    }\n\n    total += count;\n    if (--left === 0) return end(null\x2C total);\n  }\n\n  for (let n = 0; n < this._workers.length; n++) {\n    this._workers[n].getConnections(oncount);\n  }\n\n  return this;\n};\n\n\nServer.prototype.close = function(cb) {\n  if (typeof cb === 'function') {\n    if (!this._handle) {\n      this.once('close'\x2C function close() {\n        cb(new ERR_SERVER_NOT_RUNNING());\n      });\n    } else {\n      this.once('close'\x2C cb);\n    }\n  }\n\n  if (this._handle) {\n    this._handle.close();\n    this._handle = null;\n  }\n\n  if (this._usingWorkers) {\n    let left = this._workers.length;\n    const onWorkerClose = () => {\n      if (--left !== 0) return;\n\n      this._connections = 0;\n      this._emitCloseIfDrained();\n    };\n\n    // Increment connections to be sure that\x2C even if all sockets will be closed\n    // during polling of workers\x2C `close` event will be emitted only once.\n    this._connections++;\n\n    // Poll workers\n    for (let n = 0; n < this._workers.length; n++)\n      this._workers[n].close(onWorkerClose);\n  } else {\n    this._emitCloseIfDrained();\n  }\n\n  return this;\n};\n\nServer.prototype._emitCloseIfDrained = function() {\n  debug('SERVER _emitCloseIfDrained');\n\n  if (this._handle || this._connections) {\n    debug('SERVER handle? %j   connections? %d'\x2C\n          !!this._handle\x2C this._connections);\n    return;\n  }\n\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\n                             process.nextTick\x2C\n                             emitCloseNT\x2C\n                             this);\n};\n\n\nfunction emitCloseNT(self) {\n  debug('SERVER: emit close');\n  self.emit('close');\n}\n\n\nServer.prototype[EventEmitter.captureRejectionSymbol] = function(\n  err\x2C event\x2C sock) {\n\n  switch (event) {\n    case 'connection':\n      sock.destroy(err);\n      break;\n    default:\n      this.emit('error'\x2C err);\n  }\n};\n\n\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\nObjectDefineProperty(TCP.prototype\x2C 'owner'\x2C {\n  __proto__: null\x2C\n  get() { return this[owner_symbol]; }\x2C\n  set(v) { return this[owner_symbol] = v; }\n});\n\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\n  __proto__: null\x2C\n  get() { return this[kHandle]; }\x2C\n  set(v) { return this[kHandle] = v; }\n});\n\nServer.prototype._setupWorker = function(socketList) {\n  this._usingWorkers = true;\n  this._workers.push(socketList);\n  socketList.once('exit'\x2C (socketList) => {\n    const index = ArrayPrototypeIndexOf(this._workers\x2C socketList);\n    this._workers.splice(index\x2C 1);\n  });\n};\n\nServer.prototype.ref = function() {\n  this._unref = false;\n\n  if (this._handle)\n    this._handle.ref();\n\n  return this;\n};\n\nServer.prototype.unref = function() {\n  this._unref = true;\n\n  if (this._handle)\n    this._handle.unref();\n\n  return this;\n};\n\nlet _setSimultaneousAccepts;\nlet warnSimultaneousAccepts = true;\n\nif (isWindows) {\n  let simultaneousAccepts;\n\n  _setSimultaneousAccepts = function(handle) {\n    if (warnSimultaneousAccepts) {\n      process.emitWarning(\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\n        'DeprecationWarning'\x2C 'DEP0121');\n      warnSimultaneousAccepts = false;\n    }\n    if (handle === undefined) {\n      return;\n    }\n\n    if (simultaneousAccepts === undefined) {\n      simultaneousAccepts = (process.env.NODE_MANY_ACCEPTS &&\n                             process.env.NODE_MANY_ACCEPTS !== '0');\n    }\n\n    if (handle._simultaneousAccepts !== simultaneousAccepts) {\n      handle.setSimultaneousAccepts(!!simultaneousAccepts);\n      handle._simultaneousAccepts = simultaneousAccepts;\n    }\n  };\n} else {\n  _setSimultaneousAccepts = function() {\n    if (warnSimultaneousAccepts) {\n      process.emitWarning(\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\n        'DeprecationWarning'\x2C 'DEP0121');\n      warnSimultaneousAccepts = false;\n    }\n  };\n}\n\nmodule.exports = {\n  _createServerHandle: createServerHandle\x2C\n  _normalizeArgs: normalizeArgs\x2C\n  _setSimultaneousAccepts\x2C\n  get BlockList() {\n    BlockList ??= require('internal/blocklist').BlockList;\n    return BlockList;\n  }\x2C\n  get SocketAddress() {\n    SocketAddress ??= require('internal/socketaddress').SocketAddress;\n    return SocketAddress;\n  }\x2C\n  connect\x2C\n  createConnection: connect\x2C\n  createServer\x2C\n  isIP: isIP\x2C\n  isIPv4: isIPv4\x2C\n  isIPv6: isIPv6\x2C\n  Server\x2C\n  Socket\x2C\n  Stream: Socket\x2C // Legacy naming\n};\n
code-source-info,0x1e372ce35e68,441,0,53847,C0O0C4O53847,,
code-creation,Function,10,36125,0x1e372ce39030,2770, node:net:1:1,0x1e372ce35de0,~
code-source-info,0x1e372ce39030,441,0,53847,C0O0C462O1159C468O1175C474O1200C480O1211C486O1221C492O1236C498O1254C504O1278C509O1302C514O1312C520O1365C526O1365C530O1365C532O1399C538O1399C542O1399C544O1430C550O1430C555O1463C569O1464C575O1430C577O1588C583O1588C588O1518C594O1526C599O1536C604O1546C610O1570C616O1628C622O1628C626O1628C628O1712C631O1712C636O1666C642O1683C648O1696C654O1755C660O1755C665O1744C671O1802C674O1802C679O1782C685O1852C688O1852C693O1835C699O1947C702O1947C707O1894C713O1901C719O1930C725O2042C728O2042C733O1986C739O1994C745O2024C751O2173C757O2173C762O2082C768O2096C779O2137C785O2154C791O2371C797O2371C802O2216C808O2233C814O2249C820O2265C825O2285C831O2296C836O2312C841O2332C847O2343C853O2356C859O2801C865O2801C870O2801C875O2435C881O2467C887O2493C893O2520C899O2545C905O2573C911O2602C917O2633C923O2661C929O2684C935O2709C941O2727C947O2752C953O2772C959O2854C965O2854C970O2837C976O2913C982O2913C987O2894C993O3077C999O3077C1004O2964C1010O2987C1016O3007C1022O3024C1028O3042C1034O3058C1040O3137C1043O3137C1047O3137C1049O3235C1055O3235C1060O3177C1066O3209C1072O3315C1073O3315C1075O3328C1076O3328C1078O3337C1079O3337C1081O3352C1082O3352C1084O3393C1090O3393C1095O3376C1101O3433C1107O3433C1112O3420C1118O3488C1120O3488C1122O3525C1124O3525C1126O3550C1129O3558C1136O3567C1139O3550C1141O3594C1145O3594C1147O3641C1150O3641C1154O3641C1156O3685C1157O3685C1159O3713C1160O3713C1162O4347C1168O4347C1173O4305C1179O4320C1185O4333C1191O8291C1194O8291C1198O8291C1200O8335C1203O8335C1207O8335C1209O8380C1212O8380C1216O8380C1218O8425C1221O8425C1225O8425C1227O8484C1230O8484C1234O8484C1236O13062C1239O13090C1247O13108C1252O13115C1257O13062C1262O13127C1268O13163C1273O13127C1278O13203C1281O13210C1290O13232C1294O13458C1297O13465C1306O13482C1310O14994C1313O15001C1320O15022C1324O15044C1327O15051C1336O15072C1340O15582C1343O15589C1352O15610C1356O15993C1359O16000C1368O16023C1372O16635C1375O16642C1384O16660C1388O16710C1394O16738C1408O16792C1416O16710C1421O16842C1427O16870C1441O16915C1449O16842C1454O17000C1460O17028C1474O17081C1482O17000C1487O17403C1493O17431C1507O17484C1515O17403C1520O17570C1526O17598C1531O17609C1537O17651C1548O17570C1553O18016C1556O18023C1565O18039C1573O18274C1576O18281C1585O18295C1593O18487C1596O18494C1605O18520C1613O18875C1616O18882C1625O18898C1633O19238C1636O19245C1645O19262C1653O19452C1656O19459C1665O19474C1673O19811C1676O19818C1685O19840C1693O19993C1696O20000C1705O20019C1713O21534C1716O21541C1725O21558C1733O21662C1736O21669C1745O21692C1753O22177C1761O22177C1771O22297C1779O22297C1789O22396C1797O22396C1807O22492C1815O22492C1825O22583C1828O22590C1837O22613C1845O22895C1853O22895C1863O22993C1871O22993C1881O23081C1889O23081C1899O23175C1902O23182C1907O23192C1911O23210C1919O23262C1922O23269C1931O23293C1939O24060C1942O24067C1951O24085C1959O24159C1962O24166C1971O24183C1979O24427C1987O24427C1997O24567C2005O24567C2015O28221C2018O28228C2027O28246C2035O32813C2038O32820C2047O32834C2055O33027C2058O33034C2067O33050C2075O36536C2078O36564C2090O36588C2099O36536C2109O36600C2115O36600C2125O40586C2128O40593C2139O40612C2147O42097C2150O42104C2163O42121C2171O46366C2177O46394C2198O46446C2210O46366C2220O46537C2223O46544C2236O46562C2244O48831C2247O48838C2260O48863C2268O49622C2271O49629C2284O49645C2292O50517C2295O50524C2308O50554C2316O51032C2319O51039C2331O51062C2344O51086C2352O51404C2358O51429C2379O51472C2391O51512C2403O51404C2413O51559C2419O51587C2436O51632C2448O51667C2460O51559C2470O51709C2473O51716C2486O51739C2494O51985C2497O51992C2510O52006C2518O52109C2521O52116C2534O52132C2542O52240C2544O52295C2545O52295C2547O52302C2558O52325C2559O52325C2561O52349C2570O53057C2575O53329C2585O53371C2595O53409C2605O53426C2615O53685C2625O53714C2635O53725C2645O53747C2655O53763C2665O53781C2675O53791C2685O53801C2695O53819C2760O53344C2769O53846,,
tick,0x104ea0d4c,36291,1,0x104a8d6ec,3,0x0,0x3d9b8018ed2e,0x109cc956c,0x1e372ce327fb,0x3d9b8018ed4f,0x109cc956c,0x1e372ce3143c,0x3d9b8018ed4f,0x109cc956c,0x1e372ce2d2c3,0x3d9b8018ed4f,0x109cc956c,0x1e372ce23695,0x3d9b8018ed4f,0x109cc956c,0x1e372ce21599,0x3d9b8018ed4f,0x109cc956c,0x1e372ce1cbe9,0x3d9b8018ed4f,0x109cc956c,0x1e372ce17b2e,0xc1101db1e60,0xc1101dae2ac
tick,0x1a4e3b454,36291,1,0x104a8d6ec,3,0x0,0x3d9b8018ed2e,0x109cc956c,0x1e372ce327fb,0x3d9b8018ed4f,0x109cc956c,0x1e372ce3143c,0x3d9b8018ed4f,0x109cc956c,0x1e372ce2d2c3,0x3d9b8018ed4f,0x109cc956c,0x1e372ce23695,0x3d9b8018ed4f,0x109cc956c,0x1e372ce21599,0x3d9b8018ed4f,0x109cc956c,0x1e372ce1cbe9,0x3d9b8018ed4f,0x109cc956c,0x1e372ce17b2e,0xc1101db1e60,0xc1101dae2ac
code-creation,Eval,10,36416,0x1e372ce3f080,5, node:internal/net:1:1,0x1e372ce3eeb8,~
script-source,442,node:internal/net,'use strict';\n\nconst {\n  RegExp\x2C\n  RegExpPrototypeTest\x2C\n  Symbol\x2C\n} = primordials;\n\nconst Buffer = require('buffer').Buffer;\nconst { writeBuffer } = internalBinding('fs');\nconst errors = require('internal/errors');\n\n// IPv4 Segment\nconst v4Seg = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\nconst v4Str = `(${v4Seg}[.]){3}${v4Seg}`;\nconst IPv4Reg = new RegExp(`^${v4Str}$`);\n\n// IPv6 Segment\nconst v6Seg = '(?:[0-9a-fA-F]{1\x2C4})';\nconst IPv6Reg = new RegExp('^(' +\n  `(?:${v6Seg}:){7}(?:${v6Seg}|:)|` +\n  `(?:${v6Seg}:){6}(?:${v4Str}|:${v6Seg}|:)|` +\n  `(?:${v6Seg}:){5}(?::${v4Str}|(:${v6Seg}){1\x2C2}|:)|` +\n  `(?:${v6Seg}:){4}(?:(:${v6Seg}){0\x2C1}:${v4Str}|(:${v6Seg}){1\x2C3}|:)|` +\n  `(?:${v6Seg}:){3}(?:(:${v6Seg}){0\x2C2}:${v4Str}|(:${v6Seg}){1\x2C4}|:)|` +\n  `(?:${v6Seg}:){2}(?:(:${v6Seg}){0\x2C3}:${v4Str}|(:${v6Seg}){1\x2C5}|:)|` +\n  `(?:${v6Seg}:){1}(?:(:${v6Seg}){0\x2C4}:${v4Str}|(:${v6Seg}){1\x2C6}|:)|` +\n  `(?::((?::${v6Seg}){0\x2C5}:${v4Str}|(?::${v6Seg}){1\x2C7}|:))` +\n')(%[0-9a-zA-Z-.:]{1\x2C})?$');\n\nfunction isIPv4(s) {\n  return RegExpPrototypeTest(IPv4Reg\x2C s);\n}\n\nfunction isIPv6(s) {\n  return RegExpPrototypeTest(IPv6Reg\x2C s);\n}\n\nfunction isIP(s) {\n  if (isIPv4(s)) return 4;\n  if (isIPv6(s)) return 6;\n  return 0;\n}\n\nfunction makeSyncWrite(fd) {\n  return function(chunk\x2C enc\x2C cb) {\n    if (enc !== 'buffer')\n      chunk = Buffer.from(chunk\x2C enc);\n\n    this._handle.bytesWritten += chunk.length;\n\n    const ctx = {};\n    writeBuffer(fd\x2C chunk\x2C 0\x2C chunk.length\x2C null\x2C undefined\x2C ctx);\n    if (ctx.errno !== undefined) {\n      const ex = errors.uvException(ctx);\n      ex.errno = ctx.errno;\n      return cb(ex);\n    }\n    cb();\n  };\n}\n\nmodule.exports = {\n  isIP\x2C\n  isIPv4\x2C\n  isIPv6\x2C\n  makeSyncWrite\x2C\n  normalizedArgsSymbol: Symbol('normalizedArgs')\n};\n
code-source-info,0x1e372ce3f080,442,0,1749,C0O0C4O1749,,
code-creation,Function,10,36500,0x1e372ce3f470,617, node:internal/net:1:1,0x1e372ce3eff8,~
code-source-info,0x1e372ce3f470,442,0,1749,C0O0C45O25C50O35C56O58C61O99C64O99C69O116C73O99C75O149C78O149C83O133C89O187C92O187C96O187C98O246C101O316C106O320C119O335C124O360C129O375C142O360C147O360C149O417C152O457C160O483C173O499C183O473C192O521C205O537C218O547C228O511C237O569C250O586C263O597C273O559C282O625C295O643C308O658C321O669C331O615C340O697C353O715C366O730C379O741C389O687C398O769C411O787C424O802C437O813C447O759C456O841C469O859C482O874C495O885C505O831C514O919C527O934C540O947C550O903C556O965C562O457C567O457C569O1633C576O1654C582O1662C588O1672C594O1682C601O1721C611O1648C616O1748,,
new,MemoryChunk,0x1a3e29c80000,262144
code-creation,Eval,10,36666,0x1a3e29c833b8,5, node:internal/dtrace:1:1,0x1a3e29c83270,~
script-source,443,node:internal/dtrace,'use strict';\n\nconst config = internalBinding('config');\n\nconst {\n  DTRACE_HTTP_CLIENT_REQUEST = () => {}\x2C\n  DTRACE_HTTP_CLIENT_RESPONSE = () => {}\x2C\n  DTRACE_HTTP_SERVER_REQUEST = () => {}\x2C\n  DTRACE_HTTP_SERVER_RESPONSE = () => {}\x2C\n  DTRACE_NET_SERVER_CONNECTION = () => {}\x2C\n  DTRACE_NET_STREAM_END = () => {}\n} = (config.hasDtrace ? internalBinding('dtrace') : {});\n\nmodule.exports = {\n  DTRACE_HTTP_CLIENT_REQUEST\x2C\n  DTRACE_HTTP_CLIENT_RESPONSE\x2C\n  DTRACE_HTTP_SERVER_REQUEST\x2C\n  DTRACE_HTTP_SERVER_RESPONSE\x2C\n  DTRACE_NET_SERVER_CONNECTION\x2C\n  DTRACE_NET_STREAM_END\n};\n
code-source-info,0x1a3e29c833b8,443,0,568,C0O0C4O568,,
code-creation,Function,10,36708,0x1a3e29c83890,140, node:internal/dtrace:1:1,0x1a3e29c83330,~
code-source-info,0x1a3e29c83890,443,0,568,C0O30C3O30C8O322C17O334C25O68C36O109C47O151C58O192C69O234C80O277C91O368C98O389C104O419C110O450C116O480C122O511C128O543C134O383C139O567,,
code-creation,LazyCompile,10,36833,0x1a3e29c847a8,34,protoGetter node:net:836:21,0x1e372ce36348,~
code-source-info,0x1a3e29c847a8,441,22014,22175,C0O22035C8O22063C13O22074C20O22159C27O22035C33O22174,,
code-creation,LazyCompile,10,36875,0x1a3e29c88db8,37,get BlockList node:net:1980:16,0x1e372ce38430,~
code-source-info,0x1a3e29c88db8,441,53466,53555,C0O53475C14O53489C19O53518C26O53485C32O53534C36O53551,,
code-creation,Eval,10,36958,0x1a3e29c892b0,5, node:internal/blocklist:1:1,0x1a3e29c890c8,~
script-source,444,node:internal/blocklist,'use strict';\n\nconst {\n  Boolean\x2C\n  ObjectSetPrototypeOf\x2C\n  Symbol\n} = primordials;\n\nconst {\n  BlockList: BlockListHandle\x2C\n} = internalBinding('block_list');\n\nconst {\n  customInspectSymbol: kInspect\x2C\n} = require('internal/util');\n\nconst {\n  SocketAddress\x2C\n  kHandle: kSocketAddressHandle\x2C\n} = require('internal/socketaddress');\n\nconst {\n  JSTransferable\x2C\n  kClone\x2C\n  kDeserialize\x2C\n} = require('internal/worker/js_transferable');\n\nconst { inspect } = require('internal/util/inspect');\n\nconst kHandle = Symbol('kHandle');\nconst { owner_symbol } = internalBinding('symbols');\n\nconst {\n  ERR_INVALID_ARG_VALUE\x2C\n} = require('internal/errors').codes;\n\nconst { validateInt32\x2C validateString } = require('internal/validators');\n\nclass BlockList extends JSTransferable {\n  constructor() {\n    super();\n    this[kHandle] = new BlockListHandle();\n    this[kHandle][owner_symbol] = this;\n  }\n\n  [kInspect](depth\x2C options) {\n    if (depth < 0)\n      return this;\n\n    const opts = {\n      ...options\x2C\n      depth: options.depth == null ? null : options.depth - 1\n    };\n\n    return `BlockList ${inspect({\n      rules: this.rules\n    }\x2C opts)}`;\n  }\n\n  addAddress(address\x2C family = 'ipv4') {\n    if (!SocketAddress.isSocketAddress(address)) {\n      validateString(address\x2C 'address');\n      validateString(family\x2C 'family');\n      address = new SocketAddress({\n        address\x2C\n        family\x2C\n      });\n    }\n    this[kHandle].addAddress(address[kSocketAddressHandle]);\n  }\n\n  addRange(start\x2C end\x2C family = 'ipv4') {\n    if (!SocketAddress.isSocketAddress(start)) {\n      validateString(start\x2C 'start');\n      validateString(family\x2C 'family');\n      start = new SocketAddress({\n        address: start\x2C\n        family\x2C\n      });\n    }\n    if (!SocketAddress.isSocketAddress(end)) {\n      validateString(end\x2C 'end');\n      validateString(family\x2C 'family');\n      end = new SocketAddress({\n        address: end\x2C\n        family\x2C\n      });\n    }\n    const ret = this[kHandle].addRange(\n      start[kSocketAddressHandle]\x2C\n      end[kSocketAddressHandle]);\n    if (ret === false)\n      throw new ERR_INVALID_ARG_VALUE('start'\x2C start\x2C 'must come before end');\n  }\n\n  addSubnet(network\x2C prefix\x2C family = 'ipv4') {\n    if (!SocketAddress.isSocketAddress(network)) {\n      validateString(network\x2C 'network');\n      validateString(family\x2C 'family');\n      network = new SocketAddress({\n        address: network\x2C\n        family\x2C\n      });\n    }\n    switch (network.family) {\n      case 'ipv4':\n        validateInt32(prefix\x2C 'prefix'\x2C 0\x2C 32);\n        break;\n      case 'ipv6':\n        validateInt32(prefix\x2C 'prefix'\x2C 0\x2C 128);\n        break;\n    }\n    this[kHandle].addSubnet(network[kSocketAddressHandle]\x2C prefix);\n  }\n\n  check(address\x2C family = 'ipv4') {\n    if (!SocketAddress.isSocketAddress(address)) {\n      validateString(address\x2C 'address');\n      validateString(family\x2C 'family');\n      try {\n        address = new SocketAddress({\n          address\x2C\n          family\x2C\n        });\n      } catch {\n        // Ignore the error. If it's not a valid address\x2C return false.\n        return false;\n      }\n    }\n    return Boolean(this[kHandle].check(address[kSocketAddressHandle]));\n  }\n\n  get rules() {\n    return this[kHandle].getRules();\n  }\n\n  [kClone]() {\n    const handle = this[kHandle];\n    return {\n      data: { handle }\x2C\n      deserializeInfo: 'internal/blocklist:InternalBlockList'\x2C\n    };\n  }\n\n  [kDeserialize]({ handle }) {\n    this[kHandle] = handle;\n    this[kHandle][owner_symbol] = this;\n  }\n}\n\nclass InternalBlockList extends JSTransferable {\n  constructor(handle) {\n    super();\n    this[kHandle] = handle;\n    if (handle !== undefined)\n      handle[owner_symbol] = this;\n  }\n}\n\nInternalBlockList.prototype.constructor = BlockList.prototype.constructor;\nObjectSetPrototypeOf(InternalBlockList.prototype\x2C BlockList.prototype);\n\nmodule.exports = {\n  BlockList\x2C\n  InternalBlockList\x2C\n};\n
code-source-info,0x1a3e29c892b0,444,0,3877,C0O0C4O3877,,
code-creation,Function,10,37125,0x1a3e29c89cb8,359, node:internal/blocklist:1:1,0x1a3e29c89228,~
code-source-info,0x1a3e29c89cb8,444,0,3877,C0O0C35O25C41O36C46O60C51O127C54O127C59O106C65O204C68O204C73O190C78O293C81O293C86O241C92O267C98O385C101O385C106O339C111O357C116O367C121O450C124O450C129O438C135O501C138O501C142O501C144O545C147O545C152O528C158O611C161O611C166O637C171O584C177O688C180O688C185O654C191O669C197O745C204O884C241O3223C251O3384C278O3519C301O3691C306O3725C311O3735C315O3713C319O3787C324O3808C329O3748C334O3821C341O3842C347O3855C353O3836C358O3876,,
tick,0x104a217b8,37166,1,0x104a8d6ec,3,0x0,0x3d9b8018ed2e,0x109cc956c,0x1a3e29c88dc6,0x1e372ce32834,0x3d9b8018ed4f,0x109cc956c,0x1e372ce3143c,0x3d9b8018ed4f,0x109cc956c,0x1e372ce2d2c3,0x3d9b8018ed4f,0x109cc956c,0x1e372ce23695,0x3d9b8018ed4f,0x109cc956c,0x1e372ce21599,0x3d9b8018ed4f,0x109cc956c,0x1e372ce1cbe9,0x3d9b8018ed4f,0x109cc956c,0x1e372ce17b2e,0xc1101db1e60,0xc1101dae2ac
code-creation,Eval,10,37250,0x1a3e29c8b5a8,5, node:internal/socketaddress:1:1,0x1a3e29c8b3b0,~
script-source,445,node:internal/socketaddress,'use strict';\n\nconst {\n  ObjectSetPrototypeOf\x2C\n  Symbol\x2C\n} = primordials;\n\nconst {\n  SocketAddress: _SocketAddress\x2C\n  AF_INET\x2C\n  AF_INET6\x2C\n} = internalBinding('block_list');\n\nconst {\n  validateObject\x2C\n  validateString\x2C\n  validatePort\x2C\n  validateUint32\x2C\n} = require('internal/validators');\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_VALUE\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  customInspectSymbol: kInspect\x2C\n} = require('internal/util');\n\nconst { inspect } = require('internal/util/inspect');\n\nconst {\n  JSTransferable\x2C\n  kClone\x2C\n  kDeserialize\x2C\n} = require('internal/worker/js_transferable');\n\nconst kHandle = Symbol('kHandle');\nconst kDetail = Symbol('kDetail');\n\nclass SocketAddress extends JSTransferable {\n  static isSocketAddress(value) {\n    return value?.[kHandle] !== undefined;\n  }\n\n  constructor(options = {}) {\n    super();\n    validateObject(options\x2C 'options');\n    let { family = 'ipv4' } = options;\n    const {\n      address = (family === 'ipv4' ? '127.0.0.1' : '::')\x2C\n      port = 0\x2C\n      flowlabel = 0\x2C\n    } = options;\n\n    let type;\n    if (typeof family?.toLowerCase === 'function')\n      family = family.toLowerCase();\n    switch (family) {\n      case 'ipv4':\n        type = AF_INET;\n        break;\n      case 'ipv6':\n        type = AF_INET6;\n        break;\n      default:\n        throw new ERR_INVALID_ARG_VALUE('options.family'\x2C options.family);\n    }\n\n    validateString(address\x2C 'options.address');\n    validatePort(port\x2C 'options.port');\n    validateUint32(flowlabel\x2C 'options.flowlabel'\x2C false);\n\n    this[kHandle] = new _SocketAddress(address\x2C port\x2C type\x2C flowlabel);\n    this[kDetail] = this[kHandle].detail({\n      address: undefined\x2C\n      port: undefined\x2C\n      family: undefined\x2C\n      flowlabel: undefined\x2C\n    });\n  }\n\n  get address() {\n    return this[kDetail].address;\n  }\n\n  get port() {\n    return this[kDetail].port;\n  }\n\n  get family() {\n    return this[kDetail].family === AF_INET ? 'ipv4' : 'ipv6';\n  }\n\n  get flowlabel() {\n    // The flow label can be changed internally.\n    return this[kHandle].flowlabel();\n  }\n\n  [kInspect](depth\x2C options) {\n    if (depth < 0)\n      return this;\n\n    const opts = {\n      ...options\x2C\n      depth: options.depth == null ? null : options.depth - 1\n    };\n\n    return `SocketAddress ${inspect(this.toJSON()\x2C opts)}`;\n  }\n\n  [kClone]() {\n    const handle = this[kHandle];\n    return {\n      data: { handle }\x2C\n      deserializeInfo: 'internal/socketaddress:InternalSocketAddress'\x2C\n    };\n  }\n\n  [kDeserialize]({ handle }) {\n    this[kHandle] = handle;\n    this[kDetail] = handle.detail({\n      address: undefined\x2C\n      port: undefined\x2C\n      family: undefined\x2C\n      flowlabel: undefined\x2C\n    });\n  }\n\n  toJSON() {\n    return {\n      address: this.address\x2C\n      port: this.port\x2C\n      family: this.family\x2C\n      flowlabel: this.flowlabel\x2C\n    };\n  }\n}\n\nclass InternalSocketAddress extends JSTransferable {\n  constructor(handle) {\n    super();\n    this[kHandle] = handle;\n  }\n}\n\nInternalSocketAddress.prototype.constructor =\n  SocketAddress.prototype.constructor;\nObjectSetPrototypeOf(InternalSocketAddress.prototype\x2C SocketAddress.prototype);\n\nmodule.exports = {\n  SocketAddress\x2C\n  InternalSocketAddress\x2C\n  kHandle\x2C\n};\n
code-source-info,0x1a3e29c8b5a8,445,0,3207,C0O0C4O3207,,
code-creation,Function,10,37416,0x1a3e29c8c0d0,366, node:internal/socketaddress:1:1,0x1a3e29c8b520,~
code-source-info,0x1a3e29c8c0d0,445,0,3207,C0O0C38O25C43O49C48O143C51O143C56O100C62O118C68O129C74O257C77O257C82O185C88O203C94O221C100O237C106O345C109O345C114O345C119O313C125O419C128O419C133O405C138O466C141O466C146O454C152O557C155O557C160O511C165O529C170O539C175O618C178O618C182O618C184O653C187O653C191O653C193O701C226O2071C236O2313C246O2482C279O2877C302O2988C307O3028C312O3038C316O3010C320O3094C325O3119C330O3051C335O3132C342O3153C348O3170C354O3195C360O3147C365O3206,,
code-creation,LazyCompile,10,37500,0x1a3e29c8cc88,72,BlockList node:internal/blocklist:40:14,0x1a3e29c892e0,~
code-source-info,0x1a3e29c8cc88,444,775,879,C3O784C11O784C23O797C28O802C33O817C36O813C41O811C45O840C50O845C52O844C58O854C64O868C71O878,,
code-creation,LazyCompile,10,37541,0x1a3e29c8d428,115,addAddress node:internal/blocklist:60:13,0x1a3e29c89380,~
code-source-info,0x1a3e29c8d428,444,1149,1460,C14O1182C19O1201C24O1201C31O1235C39O1235C44O1277C52O1277C57O1317C69O1355C75O1372C81O1327C87O1400C89O1405C91O1404C95O1414C102O1433C104O1432C108O1414C114O1459,,
code-creation,LazyCompile,10,37541,0x1a3e29c8d5a8,20,isSocketAddress node:internal/socketaddress:43:25,0x1a3e29c8b628,~
code-source-info,0x1a3e29c8d5a8,445,742,798,C0O756C9O771C11O770C18O780C19O794,,
code-creation,LazyCompile,10,37583,0x1a3e29c8df68,323,SocketAddress node:internal/socketaddress:47:14,0x1a3e29c8b5d8,~
code-source-info,0x1a3e29c8df68,445,813,1761,C7O813C13O834C21O834C33O847C41O847C46O893C58O940C69O958C81O998C89O1014C97O1055C99O1065C106O1082C117O1134C122O1134C127O1153C146O1198C151O1222C153O1256C158O1281C160O1311C168O1369C175O1317C180O1311C181O1389C189O1389C194O1437C202O1437C207O1477C220O1477C225O1537C230O1542C235O1557C252O1553C257O1551C261O1609C266O1614C274O1630C276O1629C280O1639C291O1663C296O1686C301O1711C306O1739C310O1639C315O1623C322O1760,,
code-creation,LazyCompile,10,37625,0x1a3e29c8e290,128, node:internal/validators:239:3,0xa0ae21c1220,~
script-source,22,node:internal/validators,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  NumberIsInteger\x2C\n  NumberIsNaN\x2C\n  NumberMAX_SAFE_INTEGER\x2C\n  NumberMIN_SAFE_INTEGER\x2C\n  NumberParseInt\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  RegExpPrototypeExec\x2C\n  String\x2C\n  StringPrototypeToUpperCase\x2C\n  StringPrototypeTrim\x2C\n} = primordials;\n\nconst {\n  hideStackFrames\x2C\n  codes: {\n    ERR_SOCKET_BAD_PORT\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_OUT_OF_RANGE\x2C\n    ERR_UNKNOWN_SIGNAL\x2C\n  }\n} = require('internal/errors');\nconst { normalizeEncoding } = require('internal/util');\nconst {\n  isAsyncFunction\x2C\n  isArrayBufferView\n} = require('internal/util/types');\nconst { signals } = internalBinding('constants').os;\n\n/**\n * @param {*} value\n * @returns {boolean}\n */\nfunction isInt32(value) {\n  return value === (value | 0);\n}\n\n/**\n * @param {*} value\n * @returns {boolean}\n */\nfunction isUint32(value) {\n  return value === (value >>> 0);\n}\n\nconst octalReg = /^[0-7]+$/;\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string';\n\n/**\n * Parse and validate values that will be converted into mode_t (the S_*\n * constants). Only valid numbers and octal strings are allowed. They could be\n * converted to 32-bit unsigned integers or non-negative signed integers in the\n * C++ land\x2C but any value higher than 0o777 will result in platform-specific\n * behaviors.\n *\n * @param {*} value Values to be validated\n * @param {string} name Name of the argument\n * @param {number} [def] If specified\x2C will be returned for invalid values\n * @returns {number}\n */\nfunction parseFileMode(value\x2C name\x2C def) {\n  value ??= def;\n  if (typeof value === 'string') {\n    if (RegExpPrototypeExec(octalReg\x2C value) === null) {\n      throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C modeDesc);\n    }\n    value = NumberParseInt(value\x2C 8);\n  }\n\n  validateUint32(value\x2C name);\n  return value;\n}\n\n/**\n * @callback validateInteger\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateInteger} */\nconst validateInteger = hideStackFrames(\n  (value\x2C name\x2C min = NumberMIN_SAFE_INTEGER\x2C max = NumberMAX_SAFE_INTEGER) => {\n    if (typeof value !== 'number')\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\n    if (!NumberIsInteger(value))\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\n    if (value < min || value > max)\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\n  }\n);\n\n/**\n * @callback validateInt32\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateInt32} */\nconst validateInt32 = hideStackFrames(\n  (value\x2C name\x2C min = -2147483648\x2C max = 2147483647) => {\n    // The defaults for min and max correspond to the limits of 32-bit integers.\n    if (typeof value !== 'number') {\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\n    }\n    if (!NumberIsInteger(value)) {\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\n    }\n    if (value < min || value > max) {\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\n    }\n  }\n);\n\n/**\n * @callback validateUint32\n * @param {*} value\n * @param {string} name\n * @param {number|boolean} [positive=false]\n * @returns {asserts value is number}\n */\n\n/** @type {validateUint32} */\nconst validateUint32 = hideStackFrames((value\x2C name\x2C positive = false) => {\n  if (typeof value !== 'number') {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\n  }\n  if (!NumberIsInteger(value)) {\n    throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\n  }\n  const min = positive ? 1 : 0;\n  // 2 ** 32 === 4294967296\n  const max = 4_294_967_295;\n  if (value < min || value > max) {\n    throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\n  }\n});\n\n/**\n * @callback validateString\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is string}\n */\n\n/** @type {validateString} */\nfunction validateString(value\x2C name) {\n  if (typeof value !== 'string')\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'string'\x2C value);\n}\n\n/**\n * @callback validateNumber\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateNumber} */\nfunction validateNumber(value\x2C name\x2C min = undefined\x2C max) {\n  if (typeof value !== 'number')\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\n\n  if ((min != null && value < min) || (max != null && value > max) ||\n      ((min != null || max != null) && NumberIsNaN(value))) {\n    throw new ERR_OUT_OF_RANGE(\n      name\x2C\n      `${min != null ? `>= ${min}` : ''}${min != null && max != null ? ' && ' : ''}${max != null ? `<= ${max}` : ''}`\x2C\n      value);\n  }\n}\n\n/**\n * @callback validateOneOf\n * @template T\n * @param {T} value\n * @param {string} name\n * @param {T[]} oneOf\n */\n\n/** @type {validateOneOf} */\nconst validateOneOf = hideStackFrames((value\x2C name\x2C oneOf) => {\n  if (!ArrayPrototypeIncludes(oneOf\x2C value)) {\n    const allowed = ArrayPrototypeJoin(\n      ArrayPrototypeMap(oneOf\x2C (v) =>\n        (typeof v === 'string' ? `'${v}'` : String(v)))\x2C\n      '\x2C ');\n    const reason = 'must be one of: ' + allowed;\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\n  }\n});\n\n/**\n * @callback validateBoolean\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is boolean}\n */\n\n/** @type {validateBoolean} */\nfunction validateBoolean(value\x2C name) {\n  if (typeof value !== 'boolean')\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'boolean'\x2C value);\n}\n\nfunction getOwnPropertyValueOrDefault(options\x2C key\x2C defaultValue) {\n  return options == null || !ObjectPrototypeHasOwnProperty(options\x2C key) ?\n    defaultValue :\n    options[key];\n}\n\n/**\n * @callback validateObject\n * @param {*} value\n * @param {string} name\n * @param {{\n *   allowArray?: boolean\x2C\n *   allowFunction?: boolean\x2C\n *   nullable?: boolean\n * }} [options]\n */\n\n/** @type {validateObject} */\nconst validateObject = hideStackFrames(\n  (value\x2C name\x2C options = null) => {\n    const allowArray = getOwnPropertyValueOrDefault(options\x2C 'allowArray'\x2C false);\n    const allowFunction = getOwnPropertyValueOrDefault(options\x2C 'allowFunction'\x2C false);\n    const nullable = getOwnPropertyValueOrDefault(options\x2C 'nullable'\x2C false);\n    if ((!nullable && value === null) ||\n        (!allowArray && ArrayIsArray(value)) ||\n        (typeof value !== 'object' && (\n          !allowFunction || typeof value !== 'function'\n        ))) {\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\n    }\n  });\n\n/**\n * @callback validateArray\n * @param {*} value\n * @param {string} name\n * @param {number} [minLength]\n * @returns {asserts value is any[]}\n */\n\n/** @type {validateArray} */\nconst validateArray = hideStackFrames((value\x2C name\x2C minLength = 0) => {\n  if (!ArrayIsArray(value)) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Array'\x2C value);\n  }\n  if (value.length < minLength) {\n    const reason = `must be longer than ${minLength}`;\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\n  }\n});\n\n// eslint-disable-next-line jsdoc/require-returns-check\n/**\n * @param {*} signal\n * @param {string} [name='signal']\n * @returns {asserts signal is keyof signals}\n */\nfunction validateSignalName(signal\x2C name = 'signal') {\n  validateString(signal\x2C name);\n\n  if (signals[signal] === undefined) {\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\n      throw new ERR_UNKNOWN_SIGNAL(signal +\n                                   ' (signals must use all capital letters)');\n    }\n\n    throw new ERR_UNKNOWN_SIGNAL(signal);\n  }\n}\n\n/**\n * @callback validateBuffer\n * @param {*} buffer\n * @param {string} [name='buffer']\n * @returns {asserts buffer is ArrayBufferView}\n */\n\n/** @type {validateBuffer} */\nconst validateBuffer = hideStackFrames((buffer\x2C name = 'buffer') => {\n  if (!isArrayBufferView(buffer)) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n                                   buffer);\n  }\n});\n\n/**\n * @param {string} data\n * @param {string} encoding\n */\nfunction validateEncoding(data\x2C encoding) {\n  const normalizedEncoding = normalizeEncoding(encoding);\n  const length = data.length;\n\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\n    throw new ERR_INVALID_ARG_VALUE('encoding'\x2C encoding\x2C\n                                    `is invalid for data of length ${length}`);\n  }\n}\n\n/**\n * Check that the port number is not NaN when coerced to a number\x2C\n * is an integer and that it falls within the legal range of port numbers.\n * @param {*} port\n * @param {string} [name='Port']\n * @param {boolean} [allowZero=true]\n * @returns {number}\n */\nfunction validatePort(port\x2C name = 'Port'\x2C allowZero = true) {\n  if ((typeof port !== 'number' && typeof port !== 'string') ||\n      (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\n      +port !== (+port >>> 0) ||\n      port > 0xFFFF ||\n      (port === 0 && !allowZero)) {\n    throw new ERR_SOCKET_BAD_PORT(name\x2C port\x2C allowZero);\n  }\n  return port | 0;\n}\n\n/**\n * @callback validateAbortSignal\n * @param {*} signal\n * @param {string} name\n */\n\n/** @type {validateAbortSignal} */\nconst validateAbortSignal = hideStackFrames((signal\x2C name) => {\n  if (signal !== undefined &&\n      (signal === null ||\n       typeof signal !== 'object' ||\n       !('aborted' in signal))) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\n  }\n});\n\n/**\n * @callback validateFunction\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is Function}\n */\n\n/** @type {validateFunction} */\nconst validateFunction = hideStackFrames((value\x2C name) => {\n  if (typeof value !== 'function')\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\n});\n\n/**\n * @callback validatePlainFunction\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is Function}\n */\n\n/** @type {validatePlainFunction} */\nconst validatePlainFunction = hideStackFrames((value\x2C name) => {\n  if (typeof value !== 'function' || isAsyncFunction(value))\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\n});\n\n/**\n * @callback validateUndefined\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is undefined}\n */\n\n/** @type {validateUndefined} */\nconst validateUndefined = hideStackFrames((value\x2C name) => {\n  if (value !== undefined)\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'undefined'\x2C value);\n});\n\n/**\n * @template T\n * @param {T} value\n * @param {string} name\n * @param {T[]} union\n */\nfunction validateUnion(value\x2C name\x2C union) {\n  if (!ArrayPrototypeIncludes(union\x2C value)) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C `('${ArrayPrototypeJoin(union\x2C '|')}')`\x2C value);\n  }\n}\n\nmodule.exports = {\n  isInt32\x2C\n  isUint32\x2C\n  parseFileMode\x2C\n  validateArray\x2C\n  validateBoolean\x2C\n  validateBuffer\x2C\n  validateEncoding\x2C\n  validateFunction\x2C\n  validateInt32\x2C\n  validateInteger\x2C\n  validateNumber\x2C\n  validateObject\x2C\n  validateOneOf\x2C\n  validatePlainFunction\x2C\n  validatePort\x2C\n  validateSignalName\x2C\n  validateString\x2C\n  validateUint32\x2C\n  validateUndefined\x2C\n  validateUnion\x2C\n  validateAbortSignal\x2C\n};\n
code-source-info,0x1a3e29c8e290,22,6112,6667,C16O6170C27O6170C33O6256C44O6256C50O6340C61O6340C67O6402C75O6449C79O6463C82O6463C96O6538C104O6603C120O6609C125O6603C127O6666,,
code-creation,LazyCompile,10,38083,0x1a3e29c8f1a0,27,getOwnPropertyValueOrDefault node:internal/validators:220:38,0xa0ae21c11d0,~
code-source-info,0x1a3e29c8f1a0,22,5703,5847,C0O5736C7O5763C10O5763C23O5839C26O5845,,
code-creation,LazyCompile,10,38125,0x1a3e29c8f2e8,129,validatePort node:internal/validators:328:22,0xa0ae21c13b0,~
code-source-info,0x1a3e29c8f2e8,22,8830,9188,C24O8874C44O8971C47O8971C52O8996C58O9004C65O9020C70O9031C72O9037C75O9026C86O9058C92O9082C99O9092C101O9110C117O9116C122O9110C123O9170C125O9182C128O9186,,
code-creation,LazyCompile,10,38125,0x1a3e29c8f520,148, node:internal/validators:136:40,0x3d9b801bfe28,~
code-source-info,0x1a3e29c8f520,22,3468,3900,C16O3507C22O3544C38O3550C43O3544C44O3605C49O3610C55O3640C71O3646C76O3640C77O3713C87O3773C90O3790C92O3800C99O3815C104O3828C114O3867C127O3880C140O3834C145O3828C147O3899,,
code-creation,LazyCompile,10,38208,0x1a3e29c8f808,229,addRange node:internal/blocklist:72:11,0x1a3e29c893d0,~
code-source-info,0x1a3e29c8f808,444,1472,2142,C17O1508C22O1527C27O1527C34O1559C42O1559C47O1597C55O1597C60O1637C72O1682C78O1697C84O1645C90O1725C95O1744C100O1744C107O1774C115O1774C120O1808C128O1808C133O1848C145O1891C151O1904C157O1854C163O1944C165O1949C167O1948C171O1958C178O1980C180O1979C186O2013C188O2012C192O1958C199O2041C200O2049C205O2066C221O2072C226O2066C228O2141,,
code-creation,Eval,10,38250,0x1a3e29c8fde0,5, node:internal/modules/esm/formats:1:1,0x1a3e29c8fc68,~
script-source,446,node:internal/modules/esm/formats,'use strict';\n\nconst {\n  RegExpPrototypeExec\x2C\n} = primordials;\nconst { getOptionValue } = require('internal/options');\n\n\nconst experimentalWasmModules = getOptionValue('--experimental-wasm-modules');\n\nconst extensionFormatMap = {\n  '__proto__': null\x2C\n  '.cjs': 'commonjs'\x2C\n  '.js': 'module'\x2C\n  '.json': 'json'\x2C\n  '.mjs': 'module'\x2C\n};\n\nconst legacyExtensionFormatMap = {\n  '__proto__': null\x2C\n  '.cjs': 'commonjs'\x2C\n  '.js': 'commonjs'\x2C\n  '.json': 'commonjs'\x2C\n  '.mjs': 'module'\x2C\n  '.node': 'commonjs'\x2C\n};\n\nif (experimentalWasmModules) {\n  extensionFormatMap['.wasm'] = legacyExtensionFormatMap['.wasm'] = 'wasm';\n}\n\n/**\n * @param {string} mime\n * @returns {string | null}\n */\nfunction mimeToFormat(mime) {\n  if (\n    RegExpPrototypeExec(\n      /\\s*(text|application)\\/javascript\\s*(;\\s*charset=utf-?8\\s*)?/i\x2C\n      mime\n    ) !== null\n  ) return 'module';\n  if (mime === 'application/json') return 'json';\n  if (experimentalWasmModules && mime === 'application/wasm') return 'wasm';\n  return null;\n}\n\nfunction getLegacyExtensionFormat(ext) {\n  return legacyExtensionFormatMap[ext];\n}\n\nmodule.exports = {\n  extensionFormatMap\x2C\n  getLegacyExtensionFormat\x2C\n  legacyExtensionFormatMap\x2C\n  mimeToFormat\x2C\n};\n
code-source-info,0x1a3e29c8fde0,446,0,1199,C0O0C4O1199,,
code-creation,Function,10,38333,0x1a3e29c90098,120, node:internal/modules/esm/formats:1:1,0x1a3e29c8fd58,~
code-source-info,0x1a3e29c90098,446,0,1199,C0O0C24O25C30O90C33O90C38O71C43O153C46O153C50O153C52O228C57O368C61O368C63O504C67O537C73O601C79O565C83O1083C90O1104C96O1126C102O1154C108O1182C114O1098C119O1198,,
tick,0x1a4e3ea90,38375,1,0x104a8d6ec,3,0x0,0x3d9b8018ed2e,0x109cc956c,0x1e372ce3144a,0x3d9b8018ed4f,0x109cc956c,0x1e372ce2d2c3,0x3d9b8018ed4f,0x109cc956c,0x1e372ce23695,0x3d9b8018ed4f,0x109cc956c,0x1e372ce21599,0x3d9b8018ed4f,0x109cc956c,0x1e372ce1cbe9,0x3d9b8018ed4f,0x109cc956c,0x1e372ce17b2e,0xc1101db1e60,0xc1101dae2ac
code-creation,Eval,10,38416,0x1a3e29c90a48,5, node:internal/modules/esm/initialize_import_meta:1:1,0x1a3e29c908b0,~
script-source,447,node:internal/modules/esm/initialize_import_meta,'use strict';\n\nconst { getOptionValue } = require('internal/options');\nconst experimentalImportMetaResolve =\n  getOptionValue('--experimental-import-meta-resolve');\nconst {\n  PromisePrototypeThen\x2C\n  PromiseReject\x2C\n} = primordials;\nconst asyncESM = require('internal/process/esm_loader');\n\nfunction createImportMetaResolve(defaultParentUrl) {\n  return async function resolve(specifier\x2C parentUrl = defaultParentUrl) {\n    return PromisePrototypeThen(\n      asyncESM.esmLoader.resolve(specifier\x2C parentUrl)\x2C\n      ({ url }) => url\x2C\n      (error) => (\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT' ?\n          error.url : PromiseReject(error))\n    );\n  };\n}\n\n/**\n * @param {object} meta\n * @param {{url: string}} context\n */\nfunction initializeImportMeta(meta\x2C context) {\n  const { url } = context;\n\n  // Alphabetical\n  if (experimentalImportMetaResolve) {\n    meta.resolve = createImportMetaResolve(url);\n  }\n\n  meta.url = url;\n}\n\nmodule.exports = {\n  initializeImportMeta\n};\n
code-source-info,0x1a3e29c90a48,447,0,980,C0O0C4O980,,
code-creation,Function,10,38458,0x1a3e29c90c10,90, node:internal/modules/esm/initialize_import_meta:1:1,0x1a3e29c909c0,~
code-source-info,0x1a3e29c90c10,447,0,980,C0O0C28O42C31O42C36O23C41O111C44O111C48O111C50O175C56O199C62O248C65O248C69O248C71O935C78O956C84O950C89O979,,
code-creation,Eval,10,38541,0x1a3e29c91288,5, node:internal/modules/esm/load:1:1,0x1a3e29c91050,~
script-source,448,node:internal/modules/esm/load,'use strict';\n\nconst {\n  ArrayPrototypePush\x2C\n  RegExpPrototypeExec\x2C\n  decodeURIComponent\x2C\n} = primordials;\n\nconst { defaultGetFormat } = require('internal/modules/esm/get_format');\nconst { validateAssertions } = require('internal/modules/esm/assert');\nconst { getOptionValue } = require('internal/options');\nconst { fetchModule } = require('internal/modules/esm/fetch_module');\n\n// Do not eagerly grab .manifest\x2C it may be in TDZ\nconst policy = getOptionValue('--experimental-policy') ?\n  require('internal/process/policy') :\n  null;\nconst experimentalNetworkImports =\n  getOptionValue('--experimental-network-imports');\n\nconst { Buffer: { from: BufferFrom } } = require('buffer');\n\nconst { readFile: readFileAsync } = require('internal/fs/promises').exports;\nconst { URL } = require('internal/url');\nconst {\n  ERR_INVALID_URL\x2C\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\n} = require('internal/errors').codes;\n\nconst DATA_URL_PATTERN = /^[^/]+\\/[^\x2C;]+(?:[^\x2C]*?)(;base64)?\x2C([\\s\\S]*)$/;\n\nasync function getSource(url\x2C context) {\n  const parsed = new URL(url);\n  let responseURL = url;\n  let source;\n  if (parsed.protocol === 'file:') {\n    source = await readFileAsync(parsed);\n  } else if (parsed.protocol === 'data:') {\n    const match = RegExpPrototypeExec(DATA_URL_PATTERN\x2C parsed.pathname);\n    if (!match) {\n      throw new ERR_INVALID_URL(url);\n    }\n    const { 1: base64\x2C 2: body } = match;\n    source = BufferFrom(decodeURIComponent(body)\x2C base64 ? 'base64' : 'utf8');\n  } else if (experimentalNetworkImports && (\n    parsed.protocol === 'https:' ||\n    parsed.protocol === 'http:'\n  )) {\n    const res = await fetchModule(parsed\x2C context);\n    source = await res.body;\n    responseURL = res.resolvedHREF;\n  } else {\n    const supportedSchemes = ['file'\x2C 'data'];\n    if (experimentalNetworkImports) {\n      ArrayPrototypePush(supportedSchemes\x2C 'http'\x2C 'https');\n    }\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed\x2C supportedSchemes);\n  }\n  if (policy?.manifest) {\n    policy.manifest.assertIntegrity(parsed\x2C source);\n  }\n  return { responseURL\x2C source };\n}\n\n\n/**\n * Node.js default load hook.\n * @param {string} url\n * @param {object} context\n * @returns {object}\n */\nasync function defaultLoad(url\x2C context) {\n  let responseURL = url;\n  const { importAssertions } = context;\n  let {\n    format\x2C\n    source\x2C\n  } = context;\n\n  if (format == null) {\n    format = await defaultGetFormat(url\x2C context);\n  }\n\n  validateAssertions(url\x2C format\x2C importAssertions);\n\n  if (\n    format === 'builtin' ||\n    format === 'commonjs'\n  ) {\n    source = null;\n  } else if (source == null) {\n    ({ responseURL\x2C source } = await getSource(url\x2C context));\n  }\n\n  return {\n    format\x2C\n    responseURL\x2C\n    source\x2C\n  };\n}\n\nmodule.exports = {\n  defaultLoad\x2C\n};\n
code-source-info,0x1a3e29c91288,448,0,2745,C0O0C4O2745,,
code-creation,Function,10,38625,0x1a3e29c914c8,263, node:internal/modules/esm/load:1:1,0x1a3e29c91200,~
code-source-info,0x1a3e29c914c8,448,0,2745,C0O0C58O25C64O47C70O70C76O137C79O137C84O116C90O212C93O212C98O189C104O279C107O279C112O260C117O332C120O332C125O316C131O445C134O445C143O489C150O445C152O571C155O571C159O571C161O663C164O663C169O663C174O646C180O719C183O719C188O750C193O701C199O776C202O776C207O768C213O866C216O866C221O892C226O811C232O830C238O926C242O926C244O2708C251O2729C257O2723C262O2744,,
code-creation,Eval,10,39000,0x1a3e29c93988,5, node:internal/fs/promises:1:1,0x1a3e29c92478,~
script-source,449,node:internal/fs/promises,'use strict';\n\nconst {\n  ArrayPrototypePush\x2C\n  Error\x2C\n  MathMax\x2C\n  MathMin\x2C\n  NumberIsSafeInteger\x2C\n  Promise\x2C\n  PromisePrototypeThen\x2C\n  PromiseResolve\x2C\n  PromiseReject\x2C\n  SafeArrayIterator\x2C\n  SafePromisePrototypeFinally\x2C\n  Symbol\x2C\n  Uint8Array\x2C\n} = primordials;\n\nconst { fs: constants } = internalBinding('constants');\nconst {\n  F_OK\x2C\n  O_SYMLINK\x2C\n  O_WRONLY\x2C\n  S_IFMT\x2C\n  S_IFREG\n} = constants;\n\nconst binding = internalBinding('fs');\nconst { Buffer } = require('buffer');\n\nconst {\n  codes: {\n    ERR_FS_FILE_TOO_LARGE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_STATE\x2C\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\n  }\x2C\n  AbortError\x2C\n  aggregateTwoErrors\x2C\n} = require('internal/errors');\nconst { isArrayBufferView } = require('internal/util/types');\nconst { rimrafPromises } = require('internal/fs/rimraf');\nconst {\n  constants: {\n    kIoMaxLength\x2C\n    kMaxUserId\x2C\n    kReadFileBufferLength\x2C\n    kReadFileUnknownBufferLength\x2C\n    kWriteFileMaxChunkSize\x2C\n  }\x2C\n  copyObject\x2C\n  emitRecursiveRmdirWarning\x2C\n  getDirents\x2C\n  getOptions\x2C\n  getStatsFromBinding\x2C\n  getValidatedPath\x2C\n  getValidMode\x2C\n  nullCheck\x2C\n  preprocessSymlinkDestination\x2C\n  stringToFlags\x2C\n  stringToSymlinkType\x2C\n  toUnixTimestamp\x2C\n  validateBufferArray\x2C\n  validateCpOptions\x2C\n  validateOffsetLengthRead\x2C\n  validateOffsetLengthWrite\x2C\n  validateRmOptions\x2C\n  validateRmdirOptions\x2C\n  validatePrimitiveStringAfterArrayBufferView\x2C\n  warnOnNonPortableTemplate\x2C\n} = require('internal/fs/utils');\nconst { opendir } = require('internal/fs/dir');\nconst {\n  parseFileMode\x2C\n  validateAbortSignal\x2C\n  validateBoolean\x2C\n  validateBuffer\x2C\n  validateEncoding\x2C\n  validateInteger\x2C\n  validateString\x2C\n} = require('internal/validators');\nconst pathModule = require('path');\nconst {\n  kEmptyObject\x2C\n  lazyDOMException\x2C\n  promisify\x2C\n} = require('internal/util');\nconst { EventEmitterMixin } = require('internal/event_target');\nconst { watch } = require('internal/fs/watchers');\nconst { isIterable } = require('internal/streams/utils');\nconst assert = require('internal/assert');\n\nconst kHandle = Symbol('kHandle');\nconst kFd = Symbol('kFd');\nconst kRefs = Symbol('kRefs');\nconst kClosePromise = Symbol('kClosePromise');\nconst kCloseResolve = Symbol('kCloseResolve');\nconst kCloseReject = Symbol('kCloseReject');\nconst kRef = Symbol('kRef');\nconst kUnref = Symbol('kUnref');\nconst kLocked = Symbol('kLocked');\n\nconst { kUsePromises } = binding;\nconst {\n  JSTransferable\x2C kDeserialize\x2C kTransfer\x2C kTransferList\n} = require('internal/worker/js_transferable');\n\nconst {\n  newReadableStreamFromStreamBase\x2C\n} = require('internal/webstreams/adapters');\n\nconst {\n  readableStreamCancel\x2C\n} = require('internal/webstreams/readablestream');\n\nconst getDirectoryEntriesPromise = promisify(getDirents);\nconst validateRmOptionsPromise = promisify(validateRmOptions);\n\nlet cpPromises;\nfunction lazyLoadCpPromises() {\n  return cpPromises ??= require('internal/fs/cp/cp').cpFn;\n}\n\n// Lazy loaded to avoid circular dependency.\nlet fsStreams;\nfunction lazyFsStreams() {\n  return fsStreams ??= require('internal/fs/streams');\n}\n\nclass FileHandle extends EventEmitterMixin(JSTransferable) {\n  /**\n   * @param {InternalFSBinding.FileHandle | undefined} filehandle\n   */\n  constructor(filehandle) {\n    super();\n    this[kHandle] = filehandle;\n    this[kFd] = filehandle ? filehandle.fd : -1;\n\n    this[kRefs] = 1;\n    this[kClosePromise] = null;\n  }\n\n  getAsyncId() {\n    return this[kHandle].getAsyncId();\n  }\n\n  get fd() {\n    return this[kFd];\n  }\n\n  appendFile(data\x2C options) {\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\n  }\n\n  chmod(mode) {\n    return fsCall(fchmod\x2C this\x2C mode);\n  }\n\n  chown(uid\x2C gid) {\n    return fsCall(fchown\x2C this\x2C uid\x2C gid);\n  }\n\n  datasync() {\n    return fsCall(fdatasync\x2C this);\n  }\n\n  sync() {\n    return fsCall(fsync\x2C this);\n  }\n\n  read(buffer\x2C offset\x2C length\x2C position) {\n    return fsCall(read\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\n  }\n\n  readv(buffers\x2C position) {\n    return fsCall(readv\x2C this\x2C buffers\x2C position);\n  }\n\n  readFile(options) {\n    return fsCall(readFile\x2C this\x2C options);\n  }\n\n  stat(options) {\n    return fsCall(fstat\x2C this\x2C options);\n  }\n\n  truncate(len = 0) {\n    return fsCall(ftruncate\x2C this\x2C len);\n  }\n\n  utimes(atime\x2C mtime) {\n    return fsCall(futimes\x2C this\x2C atime\x2C mtime);\n  }\n\n  write(buffer\x2C offset\x2C length\x2C position) {\n    return fsCall(write\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\n  }\n\n  writev(buffers\x2C position) {\n    return fsCall(writev\x2C this\x2C buffers\x2C position);\n  }\n\n  writeFile(data\x2C options) {\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\n  }\n\n  close = () => {\n    if (this[kFd] === -1) {\n      return PromiseResolve();\n    }\n\n    if (this[kClosePromise]) {\n      return this[kClosePromise];\n    }\n\n    this[kRefs]--;\n    if (this[kRefs] === 0) {\n      this[kFd] = -1;\n      this[kClosePromise] = SafePromisePrototypeFinally(\n        this[kHandle].close()\x2C\n        () => { this[kClosePromise] = undefined; }\n      );\n    } else {\n      this[kClosePromise] = SafePromisePrototypeFinally(\n        new Promise((resolve\x2C reject) => {\n          this[kCloseResolve] = resolve;\n          this[kCloseReject] = reject;\n        })\x2C () => {\n          this[kClosePromise] = undefined;\n          this[kCloseReject] = undefined;\n          this[kCloseResolve] = undefined;\n        }\n      );\n    }\n\n    this.emit('close');\n    return this[kClosePromise];\n  };\n\n  /**\n   * @typedef {import('../webstreams/readablestream').ReadableStream\n   * } ReadableStream\n   * @returns {ReadableStream}\n   */\n  readableWebStream() {\n    if (this[kFd] === -1)\n      throw new ERR_INVALID_STATE('The FileHandle is closed');\n    if (this[kClosePromise])\n      throw new ERR_INVALID_STATE('The FileHandle is closing');\n    if (this[kLocked])\n      throw new ERR_INVALID_STATE('The FileHandle is locked');\n    this[kLocked] = true;\n\n    const readable = newReadableStreamFromStreamBase(\n      this[kHandle]\x2C\n      undefined\x2C\n      { ondone: () => this[kUnref]() });\n\n    this[kRef]();\n    this.once('close'\x2C () => {\n      readableStreamCancel(readable);\n    });\n\n    return readable;\n  }\n\n  /**\n   * @typedef {import('./streams').ReadStream\n   * } ReadStream\n   * @param {{\n   *   encoding?: string;\n   *   autoClose?: boolean;\n   *   emitClose?: boolean;\n   *   start: number;\n   *   end?: number;\n   *   highWaterMark?: number;\n   *   }} [options]\n   * @returns {ReadStream}\n   */\n  createReadStream(options = undefined) {\n    const { ReadStream } = lazyFsStreams();\n    return new ReadStream(undefined\x2C { ...options\x2C fd: this });\n  }\n\n  /**\n   * @typedef {import('./streams').WriteStream\n   * } WriteStream\n   * @param {{\n   *   encoding?: string;\n   *   autoClose?: boolean;\n   *   emitClose?: boolean;\n   *   start: number;\n   *   }} [options]\n   * @returns {WriteStream}\n   */\n  createWriteStream(options = undefined) {\n    const { WriteStream } = lazyFsStreams();\n    return new WriteStream(undefined\x2C { ...options\x2C fd: this });\n  }\n\n  [kTransfer]() {\n    if (this[kClosePromise] || this[kRefs] > 1) {\n      throw lazyDOMException('Cannot transfer FileHandle while in use'\x2C\n                             'DataCloneError');\n    }\n\n    const handle = this[kHandle];\n    this[kFd] = -1;\n    this[kHandle] = null;\n    this[kRefs] = 0;\n\n    return {\n      data: { handle }\x2C\n      deserializeInfo: 'internal/fs/promises:FileHandle'\n    };\n  }\n\n  [kTransferList]() {\n    return [ this[kHandle] ];\n  }\n\n  [kDeserialize]({ handle }) {\n    this[kHandle] = handle;\n    this[kFd] = handle.fd;\n  }\n\n  [kRef]() {\n    this[kRefs]++;\n  }\n\n  [kUnref]() {\n    this[kRefs]--;\n    if (this[kRefs] === 0) {\n      this[kFd] = -1;\n      PromisePrototypeThen(\n        this[kHandle].close()\x2C\n        this[kCloseResolve]\x2C\n        this[kCloseReject]\n      );\n    }\n  }\n}\n\nasync function handleFdClose(fileOpPromise\x2C closeFunc) {\n  return PromisePrototypeThen(\n    fileOpPromise\x2C\n    (result) => PromisePrototypeThen(closeFunc()\x2C () => result)\x2C\n    (opError) =>\n      PromisePrototypeThen(\n        closeFunc()\x2C\n        () => PromiseReject(opError)\x2C\n        (closeError) => PromiseReject(aggregateTwoErrors(closeError\x2C opError))\n      )\n  );\n}\n\nasync function fsCall(fn\x2C handle\x2C ...args) {\n  assert(handle[kRefs] !== undefined\x2C\n         'handle must be an instance of FileHandle');\n\n  if (handle.fd === -1) {\n    // eslint-disable-next-line no-restricted-syntax\n    const err = new Error('file closed');\n    err.code = 'EBADF';\n    err.syscall = fn.name;\n    throw err;\n  }\n\n  try {\n    handle[kRef]();\n    return await fn(handle\x2C ...new SafeArrayIterator(args));\n  } finally {\n    handle[kUnref]();\n  }\n}\n\nfunction checkAborted(signal) {\n  if (signal?.aborted)\n    throw new AbortError(undefined\x2C { cause: signal?.reason });\n}\n\nasync function writeFileHandle(filehandle\x2C data\x2C signal\x2C encoding) {\n  checkAborted(signal);\n  if (isCustomIterable(data)) {\n    for await (const buf of data) {\n      checkAborted(signal);\n      const toWrite =\n        isArrayBufferView(buf) ? buf : Buffer.from(buf\x2C encoding || 'utf8');\n      let remaining = toWrite.byteLength;\n      while (remaining > 0) {\n        const writeSize = MathMin(kWriteFileMaxChunkSize\x2C remaining);\n        const { bytesWritten } = await write(\n          filehandle\x2C toWrite\x2C toWrite.byteLength - remaining\x2C writeSize);\n        remaining -= bytesWritten;\n        checkAborted(signal);\n      }\n    }\n    return;\n  }\n  data = new Uint8Array(data.buffer\x2C data.byteOffset\x2C data.byteLength);\n  let remaining = data.byteLength;\n  if (remaining === 0) return;\n  do {\n    checkAborted(signal);\n    const { bytesWritten } =\n      await write(filehandle\x2C data\x2C 0\x2C\n                  MathMin(kWriteFileMaxChunkSize\x2C data.byteLength));\n    remaining -= bytesWritten;\n    data = new Uint8Array(\n      data.buffer\x2C\n      data.byteOffset + bytesWritten\x2C\n      data.byteLength - bytesWritten\n    );\n  } while (remaining > 0);\n}\n\nasync function readFileHandle(filehandle\x2C options) {\n  const signal = options?.signal;\n\n  checkAborted(signal);\n\n  const statFields = await binding.fstat(filehandle.fd\x2C false\x2C kUsePromises);\n\n  checkAborted(signal);\n\n  let size;\n  if ((statFields[1/* mode */] & S_IFMT) === S_IFREG) {\n    size = statFields[8/* size */];\n  } else {\n    size = 0;\n  }\n\n  if (size > kIoMaxLength)\n    throw new ERR_FS_FILE_TOO_LARGE(size);\n\n  let endOfFile = false;\n  let totalRead = 0;\n  const noSize = size === 0;\n  const buffers = [];\n  const fullBuffer = noSize ? undefined : Buffer.allocUnsafeSlow(size);\n  do {\n    checkAborted(signal);\n    let buffer;\n    let offset;\n    let length;\n    if (noSize) {\n      buffer = Buffer.allocUnsafeSlow(kReadFileUnknownBufferLength);\n      offset = 0;\n      length = kReadFileUnknownBufferLength;\n    } else {\n      buffer = fullBuffer;\n      offset = totalRead;\n      length = MathMin(size - totalRead\x2C kReadFileBufferLength);\n    }\n\n    const bytesRead = (await binding.read(filehandle.fd\x2C buffer\x2C offset\x2C\n                                          length\x2C -1\x2C kUsePromises)) || 0;\n    totalRead += bytesRead;\n    endOfFile = bytesRead === 0 || totalRead === size;\n    if (noSize && bytesRead > 0) {\n      const isBufferFull = bytesRead === kReadFileUnknownBufferLength;\n      const chunkBuffer = isBufferFull ? buffer : buffer.slice(0\x2C bytesRead);\n      ArrayPrototypePush(buffers\x2C chunkBuffer);\n    }\n  } while (!endOfFile);\n\n  let result;\n  if (size > 0) {\n    result = totalRead === size ? fullBuffer : fullBuffer.slice(0\x2C totalRead);\n  } else {\n    result = buffers.length === 1 ? buffers[0] : Buffer.concat(buffers\x2C\n                                                               totalRead);\n  }\n\n  return options.encoding ? result.toString(options.encoding) : result;\n}\n\n// All of the functions are defined as async in order to ensure that errors\n// thrown cause promise rejections rather than being thrown synchronously.\nasync function access(path\x2C mode = F_OK) {\n  path = getValidatedPath(path);\n\n  mode = getValidMode(mode\x2C 'access');\n  return binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C\n                        kUsePromises);\n}\n\nasync function cp(src\x2C dest\x2C options) {\n  options = validateCpOptions(options);\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\n  return lazyLoadCpPromises()(src\x2C dest\x2C options);\n}\n\nasync function copyFile(src\x2C dest\x2C mode) {\n  src = getValidatedPath(src\x2C 'src');\n  dest = getValidatedPath(dest\x2C 'dest');\n  mode = getValidMode(mode\x2C 'copyFile');\n  return binding.copyFile(pathModule.toNamespacedPath(src)\x2C\n                          pathModule.toNamespacedPath(dest)\x2C\n                          mode\x2C\n                          kUsePromises);\n}\n\n// Note that unlike fs.open() which uses numeric file descriptors\x2C\n// fsPromises.open() uses the fs.FileHandle class.\nasync function open(path\x2C flags\x2C mode) {\n  path = getValidatedPath(path);\n  const flagsNumber = stringToFlags(flags);\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\n  return new FileHandle(\n    await binding.openFileHandle(pathModule.toNamespacedPath(path)\x2C\n                                 flagsNumber\x2C mode\x2C kUsePromises));\n}\n\nasync function read(handle\x2C bufferOrParams\x2C offset\x2C length\x2C position) {\n  let buffer = bufferOrParams;\n  if (!isArrayBufferView(buffer)) {\n    // This is fh.read(params)\n    ({\n      buffer = Buffer.alloc(16384)\x2C\n      offset = 0\x2C\n      length = buffer.byteLength - offset\x2C\n      position = null\x2C\n    } = bufferOrParams ?? kEmptyObject);\n\n    validateBuffer(buffer);\n  }\n\n  if (offset !== null && typeof offset === 'object') {\n    // This is fh.read(buffer\x2C options)\n    ({\n      offset = 0\x2C\n      length = buffer.byteLength - offset\x2C\n      position = null\x2C\n    } = offset);\n  }\n\n  if (offset == null) {\n    offset = 0;\n  } else {\n    validateInteger(offset\x2C 'offset'\x2C 0);\n  }\n\n  length |= 0;\n\n  if (length === 0)\n    return { bytesRead: length\x2C buffer };\n\n  if (buffer.byteLength === 0) {\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\n                                    'is empty and cannot be written');\n  }\n\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\n\n  if (!NumberIsSafeInteger(position))\n    position = -1;\n\n  const bytesRead = (await binding.read(handle.fd\x2C buffer\x2C offset\x2C length\x2C\n                                        position\x2C kUsePromises)) || 0;\n\n  return { bytesRead\x2C buffer };\n}\n\nasync function readv(handle\x2C buffers\x2C position) {\n  validateBufferArray(buffers);\n\n  if (typeof position !== 'number')\n    position = null;\n\n  const bytesRead = (await binding.readBuffers(handle.fd\x2C buffers\x2C position\x2C\n                                               kUsePromises)) || 0;\n  return { bytesRead\x2C buffers };\n}\n\nasync function write(handle\x2C buffer\x2C offsetOrOptions\x2C length\x2C position) {\n  if (buffer?.byteLength === 0)\n    return { bytesWritten: 0\x2C buffer };\n\n  let offset = offsetOrOptions;\n  if (isArrayBufferView(buffer)) {\n    if (typeof offset === 'object') {\n      ({\n        offset = 0\x2C\n        length = buffer.byteLength - offset\x2C\n        position = null\x2C\n      } = offsetOrOptions ?? kEmptyObject);\n    }\n\n    if (offset == null) {\n      offset = 0;\n    } else {\n      validateInteger(offset\x2C 'offset'\x2C 0);\n    }\n    if (typeof length !== 'number')\n      length = buffer.byteLength - offset;\n    if (typeof position !== 'number')\n      position = null;\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\n    const bytesWritten =\n      (await binding.writeBuffer(handle.fd\x2C buffer\x2C offset\x2C\n                                 length\x2C position\x2C kUsePromises)) || 0;\n    return { bytesWritten\x2C buffer };\n  }\n\n  validatePrimitiveStringAfterArrayBufferView(buffer\x2C 'buffer');\n  validateEncoding(buffer\x2C length);\n  const bytesWritten = (await binding.writeString(handle.fd\x2C buffer\x2C offset\x2C\n                                                  length\x2C kUsePromises)) || 0;\n  return { bytesWritten\x2C buffer };\n}\n\nasync function writev(handle\x2C buffers\x2C position) {\n  validateBufferArray(buffers);\n\n  if (typeof position !== 'number')\n    position = null;\n\n  if (buffers.length === 0) {\n    return { bytesWritten: 0\x2C buffers };\n  }\n\n  const bytesWritten = (await binding.writeBuffers(handle.fd\x2C buffers\x2C position\x2C\n                                                   kUsePromises)) || 0;\n  return { bytesWritten\x2C buffers };\n}\n\nasync function rename(oldPath\x2C newPath) {\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n  return binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\n                        pathModule.toNamespacedPath(newPath)\x2C\n                        kUsePromises);\n}\n\nasync function truncate(path\x2C len = 0) {\n  const fd = await open(path\x2C 'r+');\n  return handleFdClose(ftruncate(fd\x2C len)\x2C fd.close);\n}\n\nasync function ftruncate(handle\x2C len = 0) {\n  validateInteger(len\x2C 'len');\n  len = MathMax(0\x2C len);\n  return binding.ftruncate(handle.fd\x2C len\x2C kUsePromises);\n}\n\nasync function rm(path\x2C options) {\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\n  options = await validateRmOptionsPromise(path\x2C options\x2C false);\n  return rimrafPromises(path\x2C options);\n}\n\nasync function rmdir(path\x2C options) {\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\n  options = validateRmdirOptions(options);\n\n  if (options.recursive) {\n    emitRecursiveRmdirWarning();\n    const stats = await stat(path);\n    if (stats.isDirectory()) {\n      return rimrafPromises(path\x2C options);\n    }\n  }\n\n  return binding.rmdir(path\x2C kUsePromises);\n}\n\nasync function fdatasync(handle) {\n  return binding.fdatasync(handle.fd\x2C kUsePromises);\n}\n\nasync function fsync(handle) {\n  return binding.fsync(handle.fd\x2C kUsePromises);\n}\n\nasync function mkdir(path\x2C options) {\n  if (typeof options === 'number' || typeof options === 'string') {\n    options = { mode: options };\n  }\n  const {\n    recursive = false\x2C\n    mode = 0o777\n  } = options || kEmptyObject;\n  path = getValidatedPath(path);\n  validateBoolean(recursive\x2C 'options.recursive');\n\n  return binding.mkdir(pathModule.toNamespacedPath(path)\x2C\n                       parseFileMode(mode\x2C 'mode'\x2C 0o777)\x2C recursive\x2C\n                       kUsePromises);\n}\n\nasync function readdir(path\x2C options) {\n  options = getOptions(options);\n  path = getValidatedPath(path);\n  const result = await binding.readdir(pathModule.toNamespacedPath(path)\x2C\n                                       options.encoding\x2C\n                                       !!options.withFileTypes\x2C\n                                       kUsePromises);\n  return options.withFileTypes ?\n    getDirectoryEntriesPromise(path\x2C result) :\n    result;\n}\n\nasync function readlink(path\x2C options) {\n  options = getOptions(options);\n  path = getValidatedPath(path\x2C 'oldPath');\n  return binding.readlink(pathModule.toNamespacedPath(path)\x2C\n                          options.encoding\x2C kUsePromises);\n}\n\nasync function symlink(target\x2C path\x2C type_) {\n  const type = (typeof type_ === 'string' ? type_ : null);\n  target = getValidatedPath(target\x2C 'target');\n  path = getValidatedPath(path);\n  return binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\n                         pathModule.toNamespacedPath(path)\x2C\n                         stringToSymlinkType(type)\x2C\n                         kUsePromises);\n}\n\nasync function fstat(handle\x2C options = { bigint: false }) {\n  const result = await binding.fstat(handle.fd\x2C options.bigint\x2C kUsePromises);\n  return getStatsFromBinding(result);\n}\n\nasync function lstat(path\x2C options = { bigint: false }) {\n  path = getValidatedPath(path);\n  const result = await binding.lstat(pathModule.toNamespacedPath(path)\x2C\n                                     options.bigint\x2C kUsePromises);\n  return getStatsFromBinding(result);\n}\n\nasync function stat(path\x2C options = { bigint: false }) {\n  path = getValidatedPath(path);\n  const result = await binding.stat(pathModule.toNamespacedPath(path)\x2C\n                                    options.bigint\x2C kUsePromises);\n  return getStatsFromBinding(result);\n}\n\nasync function link(existingPath\x2C newPath) {\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n  return binding.link(pathModule.toNamespacedPath(existingPath)\x2C\n                      pathModule.toNamespacedPath(newPath)\x2C\n                      kUsePromises);\n}\n\nasync function unlink(path) {\n  path = getValidatedPath(path);\n  return binding.unlink(pathModule.toNamespacedPath(path)\x2C kUsePromises);\n}\n\nasync function fchmod(handle\x2C mode) {\n  mode = parseFileMode(mode\x2C 'mode');\n  return binding.fchmod(handle.fd\x2C mode\x2C kUsePromises);\n}\n\nasync function chmod(path\x2C mode) {\n  path = getValidatedPath(path);\n  mode = parseFileMode(mode\x2C 'mode');\n  return binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C kUsePromises);\n}\n\nasync function lchmod(path\x2C mode) {\n  if (O_SYMLINK === undefined)\n    throw new ERR_METHOD_NOT_IMPLEMENTED('lchmod()');\n\n  const fd = await open(path\x2C O_WRONLY | O_SYMLINK);\n  return handleFdClose(fchmod(fd\x2C mode)\x2C fd.close);\n}\n\nasync function lchown(path\x2C uid\x2C gid) {\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  return binding.lchown(pathModule.toNamespacedPath(path)\x2C\n                        uid\x2C gid\x2C kUsePromises);\n}\n\nasync function fchown(handle\x2C uid\x2C gid) {\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  return binding.fchown(handle.fd\x2C uid\x2C gid\x2C kUsePromises);\n}\n\nasync function chown(path\x2C uid\x2C gid) {\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  return binding.chown(pathModule.toNamespacedPath(path)\x2C\n                       uid\x2C gid\x2C kUsePromises);\n}\n\nasync function utimes(path\x2C atime\x2C mtime) {\n  path = getValidatedPath(path);\n  return binding.utimes(pathModule.toNamespacedPath(path)\x2C\n                        toUnixTimestamp(atime)\x2C\n                        toUnixTimestamp(mtime)\x2C\n                        kUsePromises);\n}\n\nasync function futimes(handle\x2C atime\x2C mtime) {\n  atime = toUnixTimestamp(atime\x2C 'atime');\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\n  return binding.futimes(handle.fd\x2C atime\x2C mtime\x2C kUsePromises);\n}\n\nasync function lutimes(path\x2C atime\x2C mtime) {\n  path = getValidatedPath(path);\n  return binding.lutimes(pathModule.toNamespacedPath(path)\x2C\n                         toUnixTimestamp(atime)\x2C\n                         toUnixTimestamp(mtime)\x2C\n                         kUsePromises);\n}\n\nasync function realpath(path\x2C options) {\n  options = getOptions(options);\n  path = getValidatedPath(path);\n  return binding.realpath(path\x2C options.encoding\x2C kUsePromises);\n}\n\nasync function mkdtemp(prefix\x2C options) {\n  options = getOptions(options);\n\n  validateString(prefix\x2C 'prefix');\n  nullCheck(prefix);\n  warnOnNonPortableTemplate(prefix);\n  return binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C kUsePromises);\n}\n\nasync function writeFile(path\x2C data\x2C options) {\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\n  const flag = options.flag || 'w';\n\n  if (!isArrayBufferView(data) && !isCustomIterable(data)) {\n    validatePrimitiveStringAfterArrayBufferView(data\x2C 'data');\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\n  }\n\n  validateAbortSignal(options.signal);\n  if (path instanceof FileHandle)\n    return writeFileHandle(path\x2C data\x2C options.signal\x2C options.encoding);\n\n  checkAborted(options.signal);\n\n  const fd = await open(path\x2C flag\x2C options.mode);\n  return handleFdClose(\n    writeFileHandle(fd\x2C data\x2C options.signal\x2C options.encoding)\x2C fd.close);\n}\n\nfunction isCustomIterable(obj) {\n  return isIterable(obj) && !isArrayBufferView(obj) && typeof obj !== 'string';\n}\n\nasync function appendFile(path\x2C data\x2C options) {\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\n  options = copyObject(options);\n  options.flag = options.flag || 'a';\n  return writeFile(path\x2C data\x2C options);\n}\n\nasync function readFile(path\x2C options) {\n  options = getOptions(options\x2C { flag: 'r' });\n  const flag = options.flag || 'r';\n\n  if (path instanceof FileHandle)\n    return readFileHandle(path\x2C options);\n\n  checkAborted(options.signal);\n\n  const fd = await open(path\x2C flag\x2C 0o666);\n  return handleFdClose(readFileHandle(fd\x2C options)\x2C fd.close);\n}\n\nmodule.exports = {\n  exports: {\n    access\x2C\n    copyFile\x2C\n    cp\x2C\n    open\x2C\n    opendir: promisify(opendir)\x2C\n    rename\x2C\n    truncate\x2C\n    rm\x2C\n    rmdir\x2C\n    mkdir\x2C\n    readdir\x2C\n    readlink\x2C\n    symlink\x2C\n    lstat\x2C\n    stat\x2C\n    link\x2C\n    unlink\x2C\n    chmod\x2C\n    lchmod\x2C\n    lchown\x2C\n    chown\x2C\n    utimes\x2C\n    lutimes\x2C\n    realpath\x2C\n    mkdtemp\x2C\n    writeFile\x2C\n    appendFile\x2C\n    readFile\x2C\n    watch\x2C\n    constants\x2C\n  }\x2C\n\n  FileHandle\x2C\n  kRef\x2C\n  kUnref\x2C\n};\n
code-source-info,0x1a3e29c93988,449,0,24685,C0O0C4O24685,,
code-creation,Function,10,39958,0x1a3e29c961c8,1812, node:internal/fs/promises:1:1,0x1a3e29c93900,~
code-source-info,0x1a3e29c961c
code-creation,Function,10,40000,0x1a3e29c96c30,19,<instance_members_initializer> node:internal/fs/promises:130:1,0x1a3e29c95000,~
code-source-info,0x1a3e29c96c30,449,3030,7707,C0O3030C9O4545C18O7707,,
tick,0x1a4d49450,40041,1,0x104a8d6ec,3,0x0,0x3d9b8018ed2e,0x109cc956c,0x1a3e29c9157f,0x3d9b8018ed4f,0x109cc956c,0x1e372ce236bd,0x3d9b8018ed4f,0x109cc956c,0x1e372ce21599,0x3d9b8018ed4f,0x109cc956c,0x1e372ce1cbe9,0x3d9b8018ed4f,0x109cc956c,0x1e372ce17b2e,0xc1101db1e60,0xc1101dae2ac
code-creation,Eval,10,40208,0x1a3e29c99988,5, node:internal/fs/rimraf:1:1,0x1a3e29c99620,~
script-source,450,node:internal/fs/rimraf,// This file is a modified version of the rimraf module on npm. It has been\n// modified in the following ways:\n// - Use of the assert module has been replaced with core's error system.\n// - All code related to the glob dependency has been removed.\n// - Bring your own custom fs module is not currently supported.\n// - Some basic code cleanup.\n'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  Promise\x2C\n  SafeSet\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\nconst fs = require('fs');\nconst {\n  chmod\x2C\n  chmodSync\x2C\n  lstat\x2C\n  lstatSync\x2C\n  readdir\x2C\n  readdirSync\x2C\n  rmdir\x2C\n  rmdirSync\x2C\n  stat\x2C\n  statSync\x2C\n  unlink\x2C\n  unlinkSync\n} = fs;\nconst { sep } = require('path');\nconst { setTimeout } = require('timers');\nconst { sleep } = require('internal/util');\nconst notEmptyErrorCodes = new SafeSet(['ENOTEMPTY'\x2C 'EEXIST'\x2C 'EPERM']);\nconst retryErrorCodes = new SafeSet(\n  ['EBUSY'\x2C 'EMFILE'\x2C 'ENFILE'\x2C 'ENOTEMPTY'\x2C 'EPERM']);\nconst isWindows = process.platform === 'win32';\nconst epermHandler = isWindows ? fixWinEPERM : _rmdir;\nconst epermHandlerSync = isWindows ? fixWinEPERMSync : _rmdirSync;\nconst readdirEncoding = 'buffer';\nconst separator = Buffer.from(sep);\n\n\nfunction rimraf(path\x2C options\x2C callback) {\n  let retries = 0;\n\n  _rimraf(path\x2C options\x2C function CB(err) {\n    if (err) {\n      if (retryErrorCodes.has(err.code) && retries < options.maxRetries) {\n        retries++;\n        const delay = retries * options.retryDelay;\n        return setTimeout(_rimraf\x2C delay\x2C path\x2C options\x2C CB);\n      }\n\n      // The file is already gone.\n      if (err.code === 'ENOENT')\n        err = null;\n    }\n\n    callback(err);\n  });\n}\n\n\nfunction _rimraf(path\x2C options\x2C callback) {\n  // SunOS lets the root user unlink directories. Use lstat here to make sure\n  // it's not a directory.\n  lstat(path\x2C (err\x2C stats) => {\n    if (err) {\n      if (err.code === 'ENOENT')\n        return callback(null);\n\n      // Windows can EPERM on stat.\n      if (isWindows && err.code === 'EPERM')\n        return fixWinEPERM(path\x2C options\x2C err\x2C callback);\n    } else if (stats.isDirectory()) {\n      return _rmdir(path\x2C options\x2C err\x2C callback);\n    }\n\n    unlink(path\x2C (err) => {\n      if (err) {\n        if (err.code === 'ENOENT')\n          return callback(null);\n        if (err.code === 'EISDIR')\n          return _rmdir(path\x2C options\x2C err\x2C callback);\n        if (err.code === 'EPERM') {\n          return epermHandler(path\x2C options\x2C err\x2C callback);\n        }\n      }\n\n      return callback(err);\n    });\n  });\n}\n\n\nfunction fixWinEPERM(path\x2C options\x2C originalErr\x2C callback) {\n  chmod(path\x2C 0o666\x2C (err) => {\n    if (err)\n      return callback(err.code === 'ENOENT' ? null : originalErr);\n\n    stat(path\x2C (err\x2C stats) => {\n      if (err)\n        return callback(err.code === 'ENOENT' ? null : originalErr);\n\n      if (stats.isDirectory())\n        _rmdir(path\x2C options\x2C originalErr\x2C callback);\n      else\n        unlink(path\x2C callback);\n    });\n  });\n}\n\n\nfunction _rmdir(path\x2C options\x2C originalErr\x2C callback) {\n  rmdir(path\x2C (err) => {\n    if (err) {\n      if (notEmptyErrorCodes.has(err.code))\n        return _rmchildren(path\x2C options\x2C callback);\n      if (err.code === 'ENOTDIR')\n        return callback(originalErr);\n    }\n\n    callback(err);\n  });\n}\n\n\nfunction _rmchildren(path\x2C options\x2C callback) {\n  const pathBuf = Buffer.from(path);\n\n  readdir(pathBuf\x2C readdirEncoding\x2C (err\x2C files) => {\n    if (err)\n      return callback(err);\n\n    let numFiles = files.length;\n\n    if (numFiles === 0)\n      return rmdir(path\x2C callback);\n\n    let done = false;\n\n    ArrayPrototypeForEach(files\x2C (child) => {\n      const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\n\n      rimraf(childPath\x2C options\x2C (err) => {\n        if (done)\n          return;\n\n        if (err) {\n          done = true;\n          return callback(err);\n        }\n\n        numFiles--;\n        if (numFiles === 0)\n          rmdir(path\x2C callback);\n      });\n    });\n  });\n}\n\n\nfunction rimrafPromises(path\x2C options) {\n  return new Promise((resolve\x2C reject) => {\n    rimraf(path\x2C options\x2C (err) => {\n      if (err)\n        return reject(err);\n\n      resolve();\n    });\n  });\n}\n\n\nfunction rimrafSync(path\x2C options) {\n  let stats;\n\n  try {\n    stats = lstatSync(path);\n  } catch (err) {\n    if (err.code === 'ENOENT')\n      return;\n\n    // Windows can EPERM on stat.\n    if (isWindows && err.code === 'EPERM')\n      fixWinEPERMSync(path\x2C options\x2C err);\n  }\n\n  try {\n    // SunOS lets the root user unlink directories.\n    if (stats?.isDirectory())\n      _rmdirSync(path\x2C options\x2C null);\n    else\n      _unlinkSync(path\x2C options);\n  } catch (err) {\n    if (err.code === 'ENOENT')\n      return;\n    if (err.code === 'EPERM')\n      return epermHandlerSync(path\x2C options\x2C err);\n    if (err.code !== 'EISDIR')\n      throw err;\n\n    _rmdirSync(path\x2C options\x2C err);\n  }\n}\n\n\nfunction _unlinkSync(path\x2C options) {\n  const tries = options.maxRetries + 1;\n\n  for (let i = 1; i <= tries; i++) {\n    try {\n      return unlinkSync(path);\n    } catch (err) {\n      // Only sleep if this is not the last try\x2C and the delay is greater\n      // than zero\x2C and an error was encountered that warrants a retry.\n      if (retryErrorCodes.has(err.code) &&\n          i < tries &&\n          options.retryDelay > 0) {\n        sleep(i * options.retryDelay);\n      } else if (err.code === 'ENOENT') {\n        // The file is already gone.\n        return;\n      } else if (i === tries) {\n        throw err;\n      }\n    }\n  }\n}\n\n\nfunction _rmdirSync(path\x2C options\x2C originalErr) {\n  try {\n    rmdirSync(path);\n  } catch (err) {\n    if (err.code === 'ENOENT')\n      return;\n    if (err.code === 'ENOTDIR') {\n      throw originalErr || err;\n    }\n\n    if (notEmptyErrorCodes.has(err.code)) {\n      // Removing failed. Try removing all children and then retrying the\n      // original removal. Windows has a habit of not closing handles promptly\n      // when files are deleted\x2C resulting in spurious ENOTEMPTY failures. Work\n      // around that issue by retrying on Windows.\n      const pathBuf = Buffer.from(path);\n\n      ArrayPrototypeForEach(readdirSync(pathBuf\x2C readdirEncoding)\x2C (child) => {\n        const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\n\n        rimrafSync(childPath\x2C options);\n      });\n\n      const tries = options.maxRetries + 1;\n\n      for (let i = 1; i <= tries; i++) {\n        try {\n          return fs.rmdirSync(path);\n        } catch (err) {\n          // Only sleep if this is not the last try\x2C and the delay is greater\n          // than zero\x2C and an error was encountered that warrants a retry.\n          if (retryErrorCodes.has(err.code) &&\n              i < tries &&\n              options.retryDelay > 0) {\n            sleep(i * options.retryDelay);\n          } else if (err.code === 'ENOENT') {\n            // The file is already gone.\n            return;\n          } else if (i === tries) {\n            throw err;\n          }\n        }\n      }\n    }\n\n    throw originalErr || err;\n  }\n}\n\n\nfunction fixWinEPERMSync(path\x2C options\x2C originalErr) {\n  try {\n    chmodSync(path\x2C 0o666);\n  } catch (err) {\n    if (err.code === 'ENOENT')\n      return;\n\n    throw originalErr;\n  }\n\n  let stats;\n\n  try {\n    stats = statSync(path\x2C { throwIfNoEntry: false });\n  } catch {\n    throw originalErr;\n  }\n\n  if (stats === undefined) return;\n\n  if (stats.isDirectory())\n    _rmdirSync(path\x2C options\x2C originalErr);\n  else\n    _unlinkSync(path\x2C options);\n}\n\n\nmodule.exports = { rimraf\x2C rimrafPromises\x2C rimrafSync };\n
code-source-info,0x1a3e29c99988,450,0,7453,C0O0C4O7453,,
code-creation,Function,10,40541,0x1a3e29c99f88,409, node:internal/fs/rimraf:1:1,0x1a3e29c99900,~
code-source-info,0x1a3e29c99f88,450,0,7453,C0O0C139O368C145O393C151O404C156O450C159O450C164O439C170O480C173O480C177O480C179O642C182O505C188O514C194O527C200O536C206O549C212O560C218O575C224O584C230O597C236O605C242O617C248O627C254O662C257O662C262O654C267O702C270O702C275O687C281O739C284O739C289O729C295O792C302O792C307O792C309O863C316O863C321O863C323O958C330O967C333O950C335O1001C345O1001C347O1060C357O1060C359O1126C361O1126C363O1154C366O1161C371O1161C376O1154C378O7396C385O7415C391O7423C397O7439C403O7411C408O7452,,
code-creation,LazyCompile,10,40666,0x1a3e29c9b0f0,302,promisify node:internal/util:326:19,0x3d9b801bc528,~
script-source,21,node:internal/util,'use strict';\n\nconst {\n  ArrayFrom\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSort\x2C\n  Error\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectGetOwnPropertyDescriptors\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectFreeze\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  ObjectValues\x2C\n  Promise\x2C\n  ReflectApply\x2C\n  ReflectConstruct\x2C\n  RegExpPrototypeExec\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeToLowerCase\x2C\n  StringPrototypeToUpperCase\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n} = primordials;\n\nconst {\n  hideStackFrames\x2C\n  codes: {\n    ERR_NO_CRYPTO\x2C\n    ERR_UNKNOWN_SIGNAL\n  }\x2C\n  uvErrmapGet\x2C\n  overrideStackTrace\x2C\n} = require('internal/errors');\nconst { signals } = internalBinding('constants').os;\nconst {\n  getHiddenValue\x2C\n  setHiddenValue\x2C\n  arrow_message_private_symbol: kArrowMessagePrivateSymbolIndex\x2C\n  decorated_private_symbol: kDecoratedPrivateSymbolIndex\x2C\n  sleep: _sleep\x2C\n  toUSVString: _toUSVString\x2C\n} = internalBinding('util');\nconst { isNativeError } = internalBinding('types');\n\nconst noCrypto = !process.versions.openssl;\n\nconst experimentalWarnings = new SafeSet();\n\nconst colorRegExp = /\\u001b\\[\\d\\d?m/g; // eslint-disable-line no-control-regex\n\nconst unpairedSurrogateRe =\n  /(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])/;\nfunction toUSVString(val) {\n  const str = `${val}`;\n  // As of V8 5.5\x2C `str.search()` (and `unpairedSurrogateRe[@@search]()`) are\n  // slower than `unpairedSurrogateRe.exec()`.\n  const match = RegExpPrototypeExec(unpairedSurrogateRe\x2C str);\n  if (!match)\n    return str;\n  return _toUSVString(str\x2C match.index);\n}\n\nlet uvBinding;\n\nfunction lazyUv() {\n  uvBinding ??= internalBinding('uv');\n  return uvBinding;\n}\n\nfunction removeColors(str) {\n  return StringPrototypeReplace(str\x2C colorRegExp\x2C '');\n}\n\nfunction isError(e) {\n  // An error could be an instance of Error while not being a native error\n  // or could be from a different realm and not be instance of Error but still\n  // be a native error.\n  return isNativeError(e) || e instanceof Error;\n}\n\n// Keep a list of deprecation codes that have been warned on so we only warn on\n// each one once.\nconst codesWarned = new SafeSet();\n\nlet validateString;\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set\x2C then it is a no-op.\nfunction deprecate(fn\x2C msg\x2C code) {\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Lazy-load to avoid a circular dependency.\n  if (validateString === undefined)\n    ({ validateString } = require('internal/validators'));\n\n  if (code !== undefined)\n    validateString(code\x2C 'code');\n\n  let warned = false;\n  function deprecated(...args) {\n    if (!warned) {\n      warned = true;\n      if (code !== undefined) {\n        if (!codesWarned.has(code)) {\n          process.emitWarning(msg\x2C 'DeprecationWarning'\x2C code\x2C deprecated);\n          codesWarned.add(code);\n        }\n      } else {\n        process.emitWarning(msg\x2C 'DeprecationWarning'\x2C deprecated);\n      }\n    }\n    if (new.target) {\n      return ReflectConstruct(fn\x2C args\x2C new.target);\n    }\n    return ReflectApply(fn\x2C this\x2C args);\n  }\n\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\n  ObjectSetPrototypeOf(deprecated\x2C fn);\n  if (fn.prototype) {\n    // Setting this (rather than using Object.setPrototype\x2C as above) ensures\n    // that calling the unwrapped constructor gives an instanceof the wrapped\n    // constructor.\n    deprecated.prototype = fn.prototype;\n  }\n\n  return deprecated;\n}\n\nfunction decorateErrorStack(err) {\n  if (!(isError(err) && err.stack) ||\n      getHiddenValue(err\x2C kDecoratedPrivateSymbolIndex) === true)\n    return;\n\n  const arrow = getHiddenValue(err\x2C kArrowMessagePrivateSymbolIndex);\n\n  if (arrow) {\n    err.stack = arrow + err.stack;\n    setHiddenValue(err\x2C kDecoratedPrivateSymbolIndex\x2C true);\n  }\n}\n\nfunction assertCrypto() {\n  if (noCrypto)\n    throw new ERR_NO_CRYPTO();\n}\n\n// Return undefined if there is no match.\n// Move the "slow cases" to a separate function to make sure this function gets\n// inlined properly. That prioritizes the common case.\nfunction normalizeEncoding(enc) {\n  if (enc == null || enc === 'utf8' || enc === 'utf-8') return 'utf8';\n  return slowCases(enc);\n}\n\nfunction slowCases(enc) {\n  switch (enc.length) {\n    case 4:\n      if (enc === 'UTF8') return 'utf8';\n      if (enc === 'ucs2' || enc === 'UCS2') return 'utf16le';\n      enc = `${enc}`.toLowerCase();\n      if (enc === 'utf8') return 'utf8';\n      if (enc === 'ucs2') return 'utf16le';\n      break;\n    case 3:\n      if (enc === 'hex' || enc === 'HEX' ||\n          `${enc}`.toLowerCase() === 'hex')\n        return 'hex';\n      break;\n    case 5:\n      if (enc === 'ascii') return 'ascii';\n      if (enc === 'ucs-2') return 'utf16le';\n      if (enc === 'UTF-8') return 'utf8';\n      if (enc === 'ASCII') return 'ascii';\n      if (enc === 'UCS-2') return 'utf16le';\n      enc = `${enc}`.toLowerCase();\n      if (enc === 'utf-8') return 'utf8';\n      if (enc === 'ascii') return 'ascii';\n      if (enc === 'ucs-2') return 'utf16le';\n      break;\n    case 6:\n      if (enc === 'base64') return 'base64';\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\n      if (enc === 'BASE64') return 'base64';\n      if (enc === 'LATIN1' || enc === 'BINARY') return 'latin1';\n      enc = `${enc}`.toLowerCase();\n      if (enc === 'base64') return 'base64';\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\n      break;\n    case 7:\n      if (enc === 'utf16le' || enc === 'UTF16LE' ||\n          `${enc}`.toLowerCase() === 'utf16le')\n        return 'utf16le';\n      break;\n    case 8:\n      if (enc === 'utf-16le' || enc === 'UTF-16LE' ||\n        `${enc}`.toLowerCase() === 'utf-16le')\n        return 'utf16le';\n      break;\n    case 9:\n      if (enc === 'base64url' || enc === 'BASE64URL' ||\n          `${enc}`.toLowerCase() === 'base64url')\n        return 'base64url';\n      break;\n    default:\n      if (enc === '') return 'utf8';\n  }\n}\n\nfunction emitExperimentalWarning(feature) {\n  if (experimentalWarnings.has(feature)) return;\n  const msg = `${feature} is an experimental feature. This feature could ` +\n       'change at any time';\n  experimentalWarnings.add(feature);\n  process.emitWarning(msg\x2C 'ExperimentalWarning');\n}\n\nfunction filterDuplicateStrings(items\x2C low) {\n  const map = new SafeMap();\n  for (let i = 0; i < items.length; i++) {\n    const item = items[i];\n    const key = StringPrototypeToLowerCase(item);\n    if (low) {\n      map.set(key\x2C key);\n    } else {\n      map.set(key\x2C item);\n    }\n  }\n  return ArrayPrototypeSort(ArrayFrom(map.values()));\n}\n\nfunction cachedResult(fn) {\n  let result;\n  return () => {\n    if (result === undefined)\n      result = fn();\n    return ArrayPrototypeSlice(result);\n  };\n}\n\n// Useful for Wrapping an ES6 Class with a constructor Function that\n// does not require the new keyword. For instance:\n//   class A { constructor(x) {this.x = x;}}\n//   const B = createClassWrapper(A);\n//   B() instanceof A // true\n//   B() instanceof B // true\nfunction createClassWrapper(type) {\n  function fn(...args) {\n    return ReflectConstruct(type\x2C args\x2C new.target || type);\n  }\n  // Mask the wrapper function name and length values\n  ObjectDefineProperties(fn\x2C {\n    name: { __proto__: null\x2C value: type.name }\x2C\n    length: { __proto__: null\x2C value: type.length }\x2C\n  });\n  ObjectSetPrototypeOf(fn\x2C type);\n  fn.prototype = type.prototype;\n  return fn;\n}\n\nlet signalsToNamesMapping;\nfunction getSignalsToNamesMapping() {\n  if (signalsToNamesMapping !== undefined)\n    return signalsToNamesMapping;\n\n  signalsToNamesMapping = ObjectCreate(null);\n  for (const key in signals) {\n    signalsToNamesMapping[signals[key]] = key;\n  }\n\n  return signalsToNamesMapping;\n}\n\nfunction convertToValidSignal(signal) {\n  if (typeof signal === 'number' && getSignalsToNamesMapping()[signal])\n    return signal;\n\n  if (typeof signal === 'string') {\n    const signalName = signals[StringPrototypeToUpperCase(signal)];\n    if (signalName) return signalName;\n  }\n\n  throw new ERR_UNKNOWN_SIGNAL(signal);\n}\n\nfunction getConstructorOf(obj) {\n  while (obj) {\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\n    if (descriptor !== undefined &&\n        typeof descriptor.value === 'function' &&\n        descriptor.value.name !== '') {\n      return descriptor.value;\n    }\n\n    obj = ObjectGetPrototypeOf(obj);\n  }\n\n  return null;\n}\n\nfunction getSystemErrorName(err) {\n  const entry = uvErrmapGet(err);\n  return entry ? entry[0] : `Unknown system error ${err}`;\n}\n\nfunction getSystemErrorMap() {\n  return lazyUv().getErrorMap();\n}\n\nconst kCustomPromisifiedSymbol = SymbolFor('nodejs.util.promisify.custom');\nconst kCustomPromisifyArgsSymbol = Symbol('customPromisifyArgs');\n\nlet validateFunction;\n\nfunction promisify(original) {\n  // Lazy-load to avoid a circular dependency.\n  if (validateFunction === undefined)\n    ({ validateFunction } = require('internal/validators'));\n\n  validateFunction(original\x2C 'original');\n\n  if (original[kCustomPromisifiedSymbol]) {\n    const fn = original[kCustomPromisifiedSymbol];\n\n    validateFunction(fn\x2C 'util.promisify.custom');\n\n    return ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\n      __proto__: null\x2C\n      value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\n    });\n  }\n\n  // Names to create an object from in case the callback receives multiple\n  // arguments\x2C e.g. ['bytesRead'\x2C 'buffer'] for fs.read.\n  const argumentNames = original[kCustomPromisifyArgsSymbol];\n\n  function fn(...args) {\n    return new Promise((resolve\x2C reject) => {\n      ArrayPrototypePush(args\x2C (err\x2C ...values) => {\n        if (err) {\n          return reject(err);\n        }\n        if (argumentNames !== undefined && values.length > 1) {\n          const obj = {};\n          for (let i = 0; i < argumentNames.length; i++)\n            obj[argumentNames[i]] = values[i];\n          resolve(obj);\n        } else {\n          resolve(values[0]);\n        }\n      });\n      ReflectApply(original\x2C this\x2C args);\n    });\n  }\n\n  ObjectSetPrototypeOf(fn\x2C ObjectGetPrototypeOf(original));\n\n  ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\n    __proto__: null\x2C\n    value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\n  });\n\n  const descriptors = ObjectGetOwnPropertyDescriptors(original);\n  const propertiesValues = ObjectValues(descriptors);\n  for (let i = 0; i < propertiesValues.length; i++) {\n    // We want to use null-prototype objects to not rely on globally mutable\n    // %Object.prototype%.\n    ObjectSetPrototypeOf(propertiesValues[i]\x2C null);\n  }\n  return ObjectDefineProperties(fn\x2C descriptors);\n}\n\npromisify.custom = kCustomPromisifiedSymbol;\n\n// The built-in Array#join is slower in v8 6.0\nfunction join(output\x2C separator) {\n  let str = '';\n  if (output.length !== 0) {\n    const lastIndex = output.length - 1;\n    for (let i = 0; i < lastIndex; i++) {\n      // It is faster not to use a template string here\n      str += output[i];\n      str += separator;\n    }\n    str += output[lastIndex];\n  }\n  return str;\n}\n\n// As of V8 6.6\x2C depending on the size of the array\x2C this is anywhere\n// between 1.5-10x faster than the two-arg version of Array#splice()\nfunction spliceOne(list\x2C index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nconst kNodeModulesRE = /^(.*)[\\\\/]node_modules[\\\\/]/;\n\nlet getStructuredStack;\n\nfunction isInsideNodeModules() {\n  if (getStructuredStack === undefined) {\n    // Lazy-load to avoid a circular dependency.\n    const { runInNewContext } = require('vm');\n    // Use `runInNewContext()` to get something tamper-proof and\n    // side-effect-free. Since this is currently only used for a deprecated API\x2C\n    // the perf implications should be okay.\n    getStructuredStack = runInNewContext(`(function() {\n      try { Error.stackTraceLimit = Infinity; } catch {}\n      return function structuredStack() {\n        const e = new Error();\n        overrideStackTrace.set(e\x2C (err\x2C trace) => trace);\n        return e.stack;\n      };\n    })()`\x2C { overrideStackTrace }\x2C { filename: 'structured-stack' });\n  }\n\n  const stack = getStructuredStack();\n\n  // Iterate over all stack frames and look for the first one not coming\n  // from inside Node.js itself:\n  if (ArrayIsArray(stack)) {\n    for (const frame of stack) {\n      const filename = frame.getFileName();\n      // If a filename does not start with / or contain \\\x2C\n      // it's likely from Node.js core.\n      if (RegExpPrototypeExec(/^\\/|\\\\/\x2C filename) === null)\n        continue;\n      return RegExpPrototypeExec(kNodeModulesRE\x2C filename) !== null;\n    }\n  }\n  return false;\n}\n\nfunction once(callback) {\n  let called = false;\n  return function(...args) {\n    if (called) return;\n    called = true;\n    ReflectApply(callback\x2C this\x2C args);\n  };\n}\n\nlet validateUint32;\n\nfunction sleep(msec) {\n  // Lazy-load to avoid a circular dependency.\n  if (validateUint32 === undefined)\n    ({ validateUint32 } = require('internal/validators'));\n\n  validateUint32(msec\x2C 'msec');\n  _sleep(msec);\n}\n\nfunction createDeferredPromise() {\n  let resolve;\n  let reject;\n  const promise = new Promise((res\x2C rej) => {\n    resolve = res;\n    reject = rej;\n  });\n\n  return { promise\x2C resolve\x2C reject };\n}\n\n// https://heycam.github.io/webidl/#define-the-operations\nfunction defineOperation(target\x2C name\x2C method) {\n  ObjectDefineProperty(target\x2C name\x2C {\n    __proto__: null\x2C\n    writable: true\x2C\n    enumerable: true\x2C\n    configurable: true\x2C\n    value: method\n  });\n}\n\n// https://heycam.github.io/webidl/#es-interfaces\nfunction exposeInterface(target\x2C name\x2C interfaceObject) {\n  ObjectDefineProperty(target\x2C name\x2C {\n    __proto__: null\x2C\n    writable: true\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: interfaceObject\n  });\n}\n\nlet _DOMException;\nconst lazyDOMExceptionClass = () => {\n  _DOMException ??= internalBinding('messaging').DOMException;\n  return _DOMException;\n};\n\nconst lazyDOMException = hideStackFrames((message\x2C name) => {\n  _DOMException ??= internalBinding('messaging').DOMException;\n  return new _DOMException(message\x2C name);\n});\n\nconst kEnumerableProperty = ObjectCreate(null);\nkEnumerableProperty.enumerable = true;\nObjectFreeze(kEnumerableProperty);\n\nconst kEmptyObject = ObjectFreeze(ObjectCreate(null));\n\nfunction filterOwnProperties(source\x2C keys) {\n  const filtered = ObjectCreate(null);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if (ObjectPrototypeHasOwnProperty(source\x2C key)) {\n      filtered[key] = source[key];\n    }\n  }\n\n  return filtered;\n}\n\n/**\n * Mimics `obj[key] = value` but ignoring potential prototype inheritance.\n * @param {any} obj\n * @param {string} key\n * @param {any} value\n * @returns {any}\n */\nfunction setOwnProperty(obj\x2C key\x2C value) {\n  return ObjectDefineProperty(obj\x2C key\x2C {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    value\x2C\n    writable: true\x2C\n  });\n}\n\nmodule.exports = {\n  assertCrypto\x2C\n  cachedResult\x2C\n  convertToValidSignal\x2C\n  createClassWrapper\x2C\n  createDeferredPromise\x2C\n  decorateErrorStack\x2C\n  defineOperation\x2C\n  deprecate\x2C\n  emitExperimentalWarning\x2C\n  exposeInterface\x2C\n  filterDuplicateStrings\x2C\n  filterOwnProperties\x2C\n  getConstructorOf\x2C\n  getSystemErrorMap\x2C\n  getSystemErrorName\x2C\n  isError\x2C\n  isInsideNodeModules\x2C\n  join\x2C\n  lazyDOMException\x2C\n  lazyDOMExceptionClass\x2C\n  normalizeEncoding\x2C\n  once\x2C\n  promisify\x2C\n  sleep\x2C\n  spliceOne\x2C\n  toUSVString\x2C\n  removeColors\x2C\n\n  // Symbol used to customize promisify conversion\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\n\n  // Symbol used to provide a custom inspect function for an object as an\n  // alternative to using 'inspect'\n  customInspectSymbol: SymbolFor('nodejs.util.inspect.custom')\x2C\n\n  // Used by the buffer module to capture an internal reference to the\n  // default isEncoding implementation\x2C just in case userland overrides it.\n  kIsEncodingSymbol: Symbol('kIsEncodingSymbol')\x2C\n  kVmBreakFirstLineSymbol: Symbol('kVmBreakFirstLineSymbol')\x2C\n\n  kEmptyObject\x2C\n  kEnumerableProperty\x2C\n  setOwnProperty\x2C\n};\n
code-source-info,0x1a3e29c9b0f0,21,8922,10763,C0O8922C17O8984C25O9024C33O9048C38O9027C55O9084C68O9084C73O9127C80O9140C82O9139C87O9184C94O9193C96O9192C100O9225C110O9225C115O9277C126O9309C136O9373C143O9284C148O9439C149O9602C156O9611C158O9610C161O9602C163O10166C174O10191C180O10191C185O10166C190O10227C201O10252C211O10312C218O10227C223O10400C233O10400C238O10470C245O10470C250O10512C252O10536C256O10517C261O10659C270O10696C276O10659C281O10545C286O10499C289O10714C296O10721C301O10761,,
tick,0x105ce54f8,41291,0,0x0,3,0x0,0x1a3e29c966dc,0x3d9b8018ed4f,0x109cc956c,0x1a3e29c9157f,0x3d9b8018ed4f,0x109cc956c,0x1e372ce236bd,0x3d9b8018ed4f,0x109cc956c,0x1e372ce21599,0x3d9b8018ed4f,0x109cc956c,0x1e372ce1cbe9,0x3d9b8018ed4f,0x109cc956c,0x1e372ce17b2e,0xc1101db1e60,0xc1101dae2ac
code-creation,LazyCompile,10,41333,0x1a3e29c9c9c0,112,EventEmitterMixin node:internal/event_target:1057:27,0x111f698edbd8,~
script-source,46,node:internal/event_target,'use strict';\n\nconst {\n  ArrayFrom\x2C\n  Boolean\x2C\n  Error\x2C\n  FunctionPrototypeCall\x2C\n  NumberIsInteger\x2C\n  ObjectAssign\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectGetOwnPropertyDescriptors\x2C\n  ObjectSetPrototypeOf\x2C\n  ObjectValues\x2C\n  ReflectApply\x2C\n  SafeArrayIterator\x2C\n  SafeFinalizationRegistry\x2C\n  SafeMap\x2C\n  SafeWeakMap\x2C\n  SafeWeakRef\x2C\n  SafeWeakSet\x2C\n  String\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n  SymbolToStringTag\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_EVENT_RECURSION\x2C\n    ERR_MISSING_ARGS\x2C\n    ERR_INVALID_THIS\x2C\n  }\n} = require('internal/errors');\nconst { validateObject\x2C validateString } = require('internal/validators');\n\nconst {\n  customInspectSymbol\x2C\n  kEmptyObject\x2C\n  kEnumerableProperty\x2C\n} = require('internal/util');\nconst { inspect } = require('util');\n\nconst kIsEventTarget = SymbolFor('nodejs.event_target');\nconst kIsNodeEventTarget = Symbol('kIsNodeEventTarget');\n\nconst EventEmitter = require('events');\nconst {\n  kMaxEventTargetListeners\x2C\n  kMaxEventTargetListenersWarned\x2C\n} = EventEmitter;\n\nconst kEvents = Symbol('kEvents');\nconst kIsBeingDispatched = Symbol('kIsBeingDispatched');\nconst kStop = Symbol('kStop');\nconst kTarget = Symbol('kTarget');\nconst kHandlers = Symbol('khandlers');\nconst kWeakHandler = Symbol('kWeak');\n\nconst kHybridDispatch = SymbolFor('nodejs.internal.kHybridDispatch');\nconst kCreateEvent = Symbol('kCreateEvent');\nconst kNewListener = Symbol('kNewListener');\nconst kRemoveListener = Symbol('kRemoveListener');\nconst kIsNodeStyleListener = Symbol('kIsNodeStyleListener');\nconst kTrustEvent = Symbol('kTrustEvent');\n\nconst { now } = require('internal/perf/utils');\n\nconst kType = Symbol('type');\nconst kDetail = Symbol('detail');\n\nconst isTrustedSet = new SafeWeakSet();\nconst isTrusted = ObjectGetOwnPropertyDescriptor({\n  get isTrusted() {\n    return isTrustedSet.has(this);\n  }\n}\x2C 'isTrusted').get;\n\nfunction isEvent(value) {\n  return typeof value?.[kType] === 'string';\n}\n\nclass Event {\n  #cancelable = false;\n  #bubbles = false;\n  #composed = false;\n  #defaultPrevented = false;\n  #timestamp = now();\n  #propagationStopped = false;\n\n  /**\n   * @param {string} type\n   * @param {{\n   *   bubbles?: boolean\x2C\n   *   cancelable?: boolean\x2C\n   *   composed?: boolean\x2C\n   * }} [options]\n   */\n  constructor(type\x2C options = kEmptyObject) {\n    if (arguments.length === 0)\n      throw new ERR_MISSING_ARGS('type');\n    validateObject(options\x2C 'options');\n    const { bubbles\x2C cancelable\x2C composed } = options;\n    this.#cancelable = !!cancelable;\n    this.#bubbles = !!bubbles;\n    this.#composed = !!composed;\n\n    this[kType] = `${type}`;\n    if (options?.[kTrustEvent]) {\n      isTrustedSet.add(this);\n    }\n\n    // isTrusted is special (LegacyUnforgeable)\n    ObjectDefineProperty(this\x2C 'isTrusted'\x2C {\n      __proto__: null\x2C\n      get: isTrusted\x2C\n      enumerable: true\x2C\n      configurable: false\n    });\n    this[kTarget] = null;\n    this[kIsBeingDispatched] = false;\n  }\n\n  [customInspectSymbol](depth\x2C options) {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    const name = this.constructor.name;\n    if (depth < 0)\n      return name;\n\n    const opts = ObjectAssign({}\x2C options\x2C {\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\n    });\n\n    return `${name} ${inspect({\n      type: this[kType]\x2C\n      defaultPrevented: this.#defaultPrevented\x2C\n      cancelable: this.#cancelable\x2C\n      timeStamp: this.#timestamp\x2C\n    }\x2C opts)}`;\n  }\n\n  stopImmediatePropagation() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    this[kStop] = true;\n  }\n\n  preventDefault() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    this.#defaultPrevented = true;\n  }\n\n  /**\n   * @type {EventTarget}\n   */\n  get target() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this[kTarget];\n  }\n\n  /**\n   * @type {EventTarget}\n   */\n  get currentTarget() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this[kTarget];\n  }\n\n  /**\n   * @type {EventTarget}\n   */\n  get srcElement() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this[kTarget];\n  }\n\n  /**\n   * @type {string}\n   */\n  get type() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this[kType];\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get cancelable() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this.#cancelable;\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get defaultPrevented() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this.#cancelable && this.#defaultPrevented;\n  }\n\n  /**\n   * @type {number}\n   */\n  get timeStamp() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this.#timestamp;\n  }\n\n\n  // The following are non-op and unused properties/methods from Web API Event.\n  // These are not supported in Node.js and are provided purely for\n  // API completeness.\n  /**\n   * @returns {EventTarget[]}\n   */\n  composedPath() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this[kIsBeingDispatched] ? [this[kTarget]] : [];\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get returnValue() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return !this.defaultPrevented;\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get bubbles() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this.#bubbles;\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get composed() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this.#composed;\n  }\n\n  /**\n   * @type {number}\n   */\n  get eventPhase() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this[kIsBeingDispatched] ? Event.AT_TARGET : Event.NONE;\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get cancelBubble() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this.#propagationStopped;\n  }\n\n  /**\n   * @type {boolean}\n   */\n  set cancelBubble(value) {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    if (value) {\n      this.stopPropagation();\n    }\n  }\n\n  stopPropagation() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    this.#propagationStopped = true;\n  }\n\n  static NONE = 0;\n  static CAPTURING_PHASE = 1;\n  static AT_TARGET = 2;\n  static BUBBLING_PHASE = 3;\n}\n\nObjectDefineProperties(\n  Event.prototype\x2C {\n    [SymbolToStringTag]: {\n      __proto__: null\x2C\n      writable: false\x2C\n      enumerable: false\x2C\n      configurable: true\x2C\n      value: 'Event'\x2C\n    }\x2C\n    stopImmediatePropagation: kEnumerableProperty\x2C\n    preventDefault: kEnumerableProperty\x2C\n    target: kEnumerableProperty\x2C\n    currentTarget: kEnumerableProperty\x2C\n    srcElement: kEnumerableProperty\x2C\n    type: kEnumerableProperty\x2C\n    cancelable: kEnumerableProperty\x2C\n    defaultPrevented: kEnumerableProperty\x2C\n    timeStamp: kEnumerableProperty\x2C\n    composedPath: kEnumerableProperty\x2C\n    returnValue: kEnumerableProperty\x2C\n    bubbles: kEnumerableProperty\x2C\n    composed: kEnumerableProperty\x2C\n    eventPhase: kEnumerableProperty\x2C\n    cancelBubble: kEnumerableProperty\x2C\n    stopPropagation: kEnumerableProperty\x2C\n  });\n\nfunction isCustomEvent(value) {\n  return isEvent(value) && (value?.[kDetail] !== undefined);\n}\n\nclass CustomEvent extends Event {\n  /**\n   * @constructor\n   * @param {string} type\n   * @param {{\n   *   bubbles?: boolean\x2C\n   *   cancelable?: boolean\x2C\n   *   composed?: boolean\x2C\n   *   detail?: any\x2C\n   * }} [options]\n   */\n  constructor(type\x2C options = kEmptyObject) {\n    if (arguments.length === 0)\n      throw new ERR_MISSING_ARGS('type');\n    super(type\x2C options);\n    this[kDetail] = options?.detail ?? null;\n  }\n\n  /**\n   * @type {any}\n   */\n  get detail() {\n    if (!isCustomEvent(this))\n      throw new ERR_INVALID_THIS('CustomEvent');\n    return this[kDetail];\n  }\n}\n\nObjectDefineProperties(CustomEvent.prototype\x2C {\n  [SymbolToStringTag]: {\n    __proto__: null\x2C\n    writable: false\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: 'CustomEvent'\x2C\n  }\x2C\n  detail: kEnumerableProperty\x2C\n});\n\nclass NodeCustomEvent extends Event {\n  constructor(type\x2C options) {\n    super(type\x2C options);\n    if (options?.detail) {\n      this.detail = options.detail;\n    }\n  }\n}\n\n// Weak listener cleanup\n// This has to be lazy for snapshots to work\nlet weakListenersState = null;\n// The resource needs to retain the callback so that it doesn't\n// get garbage collected now that it's weak.\nlet objectToWeakListenerMap = null;\nfunction weakListeners() {\n  weakListenersState ??= new SafeFinalizationRegistry(\n    (listener) => listener.remove()\n  );\n  objectToWeakListenerMap ??= new SafeWeakMap();\n  return { registry: weakListenersState\x2C map: objectToWeakListenerMap };\n}\n\nconst kFlagOnce = 1 << 0;\nconst kFlagCapture = 1 << 1;\nconst kFlagPassive = 1 << 2;\nconst kFlagNodeStyle = 1 << 3;\nconst kFlagWeak = 1 << 4;\nconst kFlagRemoved = 1 << 5;\n\n// The listeners for an EventTarget are maintained as a linked list.\n// Unfortunately\x2C the way EventTarget is defined\x2C listeners are accounted\n// using the tuple [handler\x2Ccapture]\x2C and even if we don't actually make\n// use of capture or bubbling\x2C in order to be spec compliant we have to\n// take on the additional complexity of supporting it. Fortunately\x2C using\n// the linked list makes dispatching faster\x2C even if adding/removing is\n// slower.\nclass Listener {\n  constructor(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\n              isNodeStyleListener\x2C weak) {\n    this.next = undefined;\n    if (previous !== undefined)\n      previous.next = this;\n    this.previous = previous;\n    this.listener = listener;\n\n    let flags = 0b0;\n    if (once)\n      flags |= kFlagOnce;\n    if (capture)\n      flags |= kFlagCapture;\n    if (passive)\n      flags |= kFlagPassive;\n    if (isNodeStyleListener)\n      flags |= kFlagNodeStyle;\n    if (weak)\n      flags |= kFlagWeak;\n    this.flags = flags;\n\n    this.removed = false;\n\n    if (this.weak) {\n      this.callback = new SafeWeakRef(listener);\n      weakListeners().registry.register(listener\x2C this\x2C this);\n      // Make the retainer retain the listener in a WeakMap\n      weakListeners().map.set(weak\x2C listener);\n      this.listener = this.callback;\n    } else if (typeof listener === 'function') {\n      this.callback = listener;\n      this.listener = listener;\n    } else {\n      this.callback = async (...args) => {\n        if (listener.handleEvent)\n          await ReflectApply(listener.handleEvent\x2C listener\x2C args);\n      };\n      this.listener = listener;\n    }\n  }\n\n  get once() {\n    return Boolean(this.flags & kFlagOnce);\n  }\n  get capture() {\n    return Boolean(this.flags & kFlagCapture);\n  }\n  get passive() {\n    return Boolean(this.flags & kFlagPassive);\n  }\n  get isNodeStyleListener() {\n    return Boolean(this.flags & kFlagNodeStyle);\n  }\n  get weak() {\n    return Boolean(this.flags & kFlagWeak);\n  }\n  get removed() {\n    return Boolean(this.flags & kFlagRemoved);\n  }\n  set removed(value) {\n    if (value)\n      this.flags |= kFlagRemoved;\n    else\n      this.flags &= ~kFlagRemoved;\n  }\n\n  same(listener\x2C capture) {\n    const myListener = this.weak ? this.listener.deref() : this.listener;\n    return myListener === listener && this.capture === capture;\n  }\n\n  remove() {\n    if (this.previous !== undefined)\n      this.previous.next = this.next;\n    if (this.next !== undefined)\n      this.next.previous = this.previous;\n    this.removed = true;\n    if (this.weak)\n      weakListeners().registry.unregister(this);\n  }\n}\n\nfunction initEventTarget(self) {\n  self[kEvents] = new SafeMap();\n  self[kMaxEventTargetListeners] = EventEmitter.defaultMaxListeners;\n  self[kMaxEventTargetListenersWarned] = false;\n}\n\nclass EventTarget {\n  // Used in checking whether an object is an EventTarget. This is a well-known\n  // symbol as EventTarget may be used cross-realm.\n  // Ref: https://github.com/nodejs/node/pull/33661\n  static [kIsEventTarget] = true;\n\n  constructor() {\n    initEventTarget(this);\n  }\n\n  [kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak) {\n    if (this[kMaxEventTargetListeners] > 0 &&\n        size > this[kMaxEventTargetListeners] &&\n        !this[kMaxEventTargetListenersWarned]) {\n      this[kMaxEventTargetListenersWarned] = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      const w = new Error('Possible EventTarget memory leak detected. ' +\n                          `${size} ${type} listeners ` +\n                          `added to ${inspect(this\x2C { depth: -1 })}. Use ` +\n                          'events.setMaxListeners() to increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.target = this;\n      w.type = type;\n      w.count = size;\n      process.emitWarning(w);\n    }\n  }\n  [kRemoveListener](size\x2C type\x2C listener\x2C capture) {}\n\n  /**\n   * @callback EventTargetCallback\n   * @param {Event} event\n   */\n\n  /**\n   * @typedef {{ handleEvent: EventTargetCallback }} EventListener\n   */\n\n  /**\n   * @param {string} type\n   * @param {EventTargetCallback|EventListener} listener\n   * @param {{\n   *   capture?: boolean\x2C\n   *   once?: boolean\x2C\n   *   passive?: boolean\x2C\n   *   signal?: AbortSignal\n   * }} [options]\n   */\n  addEventListener(type\x2C listener\x2C options = kEmptyObject) {\n    if (!isEventTarget(this))\n      throw new ERR_INVALID_THIS('EventTarget');\n    if (arguments.length < 2)\n      throw new ERR_MISSING_ARGS('type'\x2C 'listener');\n\n    // We validateOptions before the validateListener check because the spec\n    // requires us to hit getters.\n    const {\n      once\x2C\n      capture\x2C\n      passive\x2C\n      signal\x2C\n      isNodeStyleListener\x2C\n      weak\x2C\n    } = validateEventListenerOptions(options);\n\n    if (!validateEventListener(listener)) {\n      // The DOM silently allows passing undefined as a second argument\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      const w = new Error(`addEventListener called with ${listener}` +\n                          ' which has no effect.');\n      w.name = 'AddEventListenerArgumentTypeWarning';\n      w.target = this;\n      w.type = type;\n      process.emitWarning(w);\n      return;\n    }\n    type = String(type);\n\n    if (signal) {\n      if (signal.aborted) {\n        return;\n      }\n      // TODO(benjamingr) make this weak somehow? ideally the signal would\n      // not prevent the event target from GC.\n      signal.addEventListener('abort'\x2C () => {\n        this.removeEventListener(type\x2C listener\x2C options);\n      }\x2C { once: true\x2C [kWeakHandler]: this });\n    }\n\n    let root = this[kEvents].get(type);\n\n    if (root === undefined) {\n      root = { size: 1\x2C next: undefined };\n      // This is the first handler in our linked list.\n      new Listener(root\x2C listener\x2C once\x2C capture\x2C passive\x2C\n                   isNodeStyleListener\x2C weak);\n      this[kNewListener](\n        root.size\x2C\n        type\x2C\n        listener\x2C\n        once\x2C\n        capture\x2C\n        passive\x2C\n        weak);\n      this[kEvents].set(type\x2C root);\n      return;\n    }\n\n    let handler = root.next;\n    let previous = root;\n\n    // We have to walk the linked list to see if we have a match\n    while (handler !== undefined && !handler.same(listener\x2C capture)) {\n      previous = handler;\n      handler = handler.next;\n    }\n\n    if (handler !== undefined) { // Duplicate! Ignore\n      return;\n    }\n\n    new Listener(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\n                 isNodeStyleListener\x2C weak);\n    root.size++;\n    this[kNewListener](root.size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak);\n  }\n\n  /**\n   * @param {string} type\n   * @param {EventTargetCallback|EventListener} listener\n   * @param {{\n   *   capture?: boolean\x2C\n   * }} [options]\n   */\n  removeEventListener(type\x2C listener\x2C options = kEmptyObject) {\n    if (!isEventTarget(this))\n      throw new ERR_INVALID_THIS('EventTarget');\n    if (!validateEventListener(listener))\n      return;\n\n    type = String(type);\n    const capture = options?.capture === true;\n\n    const root = this[kEvents].get(type);\n    if (root === undefined || root.next === undefined)\n      return;\n\n    let handler = root.next;\n    while (handler !== undefined) {\n      if (handler.same(listener\x2C capture)) {\n        handler.remove();\n        root.size--;\n        if (root.size === 0)\n          this[kEvents].delete(type);\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\n        break;\n      }\n      handler = handler.next;\n    }\n  }\n\n  /**\n   * @param {Event} event\n   */\n  dispatchEvent(event) {\n    if (!isEventTarget(this))\n      throw new ERR_INVALID_THIS('EventTarget');\n\n    if (!(event instanceof Event))\n      throw new ERR_INVALID_ARG_TYPE('event'\x2C 'Event'\x2C event);\n\n    if (event[kIsBeingDispatched])\n      throw new ERR_EVENT_RECURSION(event.type);\n\n    this[kHybridDispatch](event\x2C event.type\x2C event);\n\n    return event.defaultPrevented !== true;\n  }\n\n  [kHybridDispatch](nodeValue\x2C type\x2C event) {\n    const createEvent = () => {\n      if (event === undefined) {\n        event = this[kCreateEvent](nodeValue\x2C type);\n        event[kTarget] = this;\n        event[kIsBeingDispatched] = true;\n      }\n      return event;\n    };\n    if (event !== undefined) {\n      event[kTarget] = this;\n      event[kIsBeingDispatched] = true;\n    }\n\n    const root = this[kEvents].get(type);\n    if (root === undefined || root.next === undefined) {\n      if (event !== undefined)\n        event[kIsBeingDispatched] = false;\n      return true;\n    }\n\n    let handler = root.next;\n    let next;\n\n    while (handler !== undefined &&\n           (handler.passive || event?.[kStop] !== true)) {\n      // Cache the next item in case this iteration removes the current one\n      next = handler.next;\n\n      if (handler.removed) {\n        // Deal with the case an event is removed while event handlers are\n        // Being processed (removeEventListener called from a listener)\n        handler = next;\n        continue;\n      }\n      if (handler.once) {\n        handler.remove();\n        root.size--;\n        const { listener\x2C capture } = handler;\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\n      }\n\n      try {\n        let arg;\n        if (handler.isNodeStyleListener) {\n          arg = nodeValue;\n        } else {\n          arg = createEvent();\n        }\n        const callback = handler.weak ?\n          handler.callback.deref() : handler.callback;\n        let result;\n        if (callback) {\n          result = FunctionPrototypeCall(callback\x2C this\x2C arg);\n          if (!handler.isNodeStyleListener) {\n            arg[kIsBeingDispatched] = false;\n          }\n        }\n        if (result !== undefined && result !== null)\n          addCatch(result);\n      } catch (err) {\n        emitUncaughtException(err);\n      }\n\n      handler = next;\n    }\n\n    if (event !== undefined)\n      event[kIsBeingDispatched] = false;\n  }\n\n  [kCreateEvent](nodeValue\x2C type) {\n    return new NodeCustomEvent(type\x2C { detail: nodeValue });\n  }\n  [customInspectSymbol](depth\x2C options) {\n    if (!isEventTarget(this))\n      throw new ERR_INVALID_THIS('EventTarget');\n    const name = this.constructor.name;\n    if (depth < 0)\n      return name;\n\n    const opts = ObjectAssign({}\x2C options\x2C {\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\n    });\n\n    return `${name} ${inspect({}\x2C opts)}`;\n  }\n}\n\nObjectDefineProperties(EventTarget.prototype\x2C {\n  addEventListener: kEnumerableProperty\x2C\n  removeEventListener: kEnumerableProperty\x2C\n  dispatchEvent: kEnumerableProperty\x2C\n  [SymbolToStringTag]: {\n    __proto__: null\x2C\n    writable: false\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: 'EventTarget'\x2C\n  }\n});\n\nfunction initNodeEventTarget(self) {\n  initEventTarget(self);\n}\n\nclass NodeEventTarget extends EventTarget {\n  static [kIsNodeEventTarget] = true;\n  static defaultMaxListeners = 10;\n\n  constructor() {\n    super();\n    initNodeEventTarget(this);\n  }\n\n  /**\n   * @param {number} n\n   */\n  setMaxListeners(n) {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    EventEmitter.setMaxListeners(n\x2C this);\n  }\n\n  /**\n   * @returns {number}\n   */\n  getMaxListeners() {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    return this[kMaxEventTargetListeners];\n  }\n\n  /**\n   * @returns {string[]}\n   */\n  eventNames() {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    return ArrayFrom(this[kEvents].keys());\n  }\n\n  /**\n   * @param {string} [type]\n   * @returns {number}\n   */\n  listenerCount(type) {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    const root = this[kEvents].get(String(type));\n    return root !== undefined ? root.size : 0;\n  }\n\n  /**\n   * @param {string} type\n   * @param {EventTargetCallback|EventListener} listener\n   * @param {{\n   *   capture?: boolean\x2C\n   * }} [options]\n   * @returns {NodeEventTarget}\n   */\n  off(type\x2C listener\x2C options) {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    this.removeEventListener(type\x2C listener\x2C options);\n    return this;\n  }\n\n  /**\n   * @param {string} type\n   * @param {EventTargetCallback|EventListener} listener\n   * @param {{\n   *   capture?: boolean\x2C\n   * }} [options]\n   * @returns {NodeEventTarget}\n   */\n  removeListener(type\x2C listener\x2C options) {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    this.removeEventListener(type\x2C listener\x2C options);\n    return this;\n  }\n\n  /**\n   * @param {string} type\n   * @param {EventTargetCallback|EventListener} listener\n   * @returns {NodeEventTarget}\n   */\n  on(type\x2C listener) {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\n    return this;\n  }\n\n  /**\n   * @param {string} type\n   * @param {EventTargetCallback|EventListener} listener\n   * @returns {NodeEventTarget}\n   */\n  addListener(type\x2C listener) {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\n    return this;\n  }\n\n  /**\n   * @param {string} type\n   * @param {any} arg\n   * @returns {boolean}\n   */\n  emit(type\x2C arg) {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    validateString(type\x2C 'type');\n    const hadListeners = this.listenerCount(type) > 0;\n    this[kHybridDispatch](arg\x2C type);\n    return hadListeners;\n  }\n\n  /**\n   * @param {string} type\n   * @param {EventTargetCallback|EventListener} listener\n   * @returns {NodeEventTarget}\n   */\n  once(type\x2C listener) {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    this.addEventListener(type\x2C listener\x2C\n                          { once: true\x2C [kIsNodeStyleListener]: true });\n    return this;\n  }\n\n  /**\n   * @param {string} type\n   * @returns {NodeEventTarget}\n   */\n  removeAllListeners(type) {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    if (type !== undefined) {\n      this[kEvents].delete(String(type));\n    } else {\n      this[kEvents].clear();\n    }\n\n    return this;\n  }\n}\n\nObjectDefineProperties(NodeEventTarget.prototype\x2C {\n  setMaxListeners: kEnumerableProperty\x2C\n  getMaxListeners: kEnumerableProperty\x2C\n  eventNames: kEnumerableProperty\x2C\n  listenerCount: kEnumerableProperty\x2C\n  off: kEnumerableProperty\x2C\n  removeListener: kEnumerableProperty\x2C\n  on: kEnumerableProperty\x2C\n  addListener: kEnumerableProperty\x2C\n  once: kEnumerableProperty\x2C\n  emit: kEnumerableProperty\x2C\n  removeAllListeners: kEnumerableProperty\x2C\n});\n\n// EventTarget API\n\nfunction validateEventListener(listener) {\n  if (typeof listener === 'function' ||\n      typeof listener?.handleEvent === 'function') {\n    return true;\n  }\n\n  if (listener == null)\n    return false;\n\n  if (typeof listener === 'object') {\n    // Require `handleEvent` lazily.\n    return true;\n  }\n\n  throw new ERR_INVALID_ARG_TYPE('listener'\x2C 'EventListener'\x2C listener);\n}\n\nfunction validateEventListenerOptions(options) {\n  if (typeof options === 'boolean')\n    return { capture: options };\n\n  if (options === null)\n    return kEmptyObject;\n  validateObject(options\x2C 'options'\x2C {\n    allowArray: true\x2C allowFunction: true\x2C\n  });\n  return {\n    once: Boolean(options.once)\x2C\n    capture: Boolean(options.capture)\x2C\n    passive: Boolean(options.passive)\x2C\n    signal: options.signal\x2C\n    weak: options[kWeakHandler]\x2C\n    isNodeStyleListener: Boolean(options[kIsNodeStyleListener])\n  };\n}\n\n// Test whether the argument is an event object. This is far from a fool-proof\n// test\x2C for example this input will result in a false positive:\n// > isEventTarget({ constructor: EventTarget })\n// It stands in its current implementation as a compromise.\n// Ref: https://github.com/nodejs/node/pull/33661\nfunction isEventTarget(obj) {\n  return obj?.constructor?.[kIsEventTarget];\n}\n\nfunction isNodeEventTarget(obj) {\n  return obj?.constructor?.[kIsNodeEventTarget];\n}\n\nfunction addCatch(promise) {\n  const then = promise.then;\n  if (typeof then === 'function') {\n    FunctionPrototypeCall(then\x2C promise\x2C undefined\x2C function(err) {\n      // The callback is called with nextTick to avoid a follow-up\n      // rejection from this promise.\n      emitUncaughtException(err);\n    });\n  }\n}\n\nfunction emitUncaughtException(err) {\n  process.nextTick(() => { throw err; });\n}\n\nfunction makeEventHandler(handler) {\n  // Event handlers are dispatched in the order they were first set\n  // See https://github.com/nodejs/node/pull/35949#issuecomment-722496598\n  function eventHandler(...args) {\n    if (typeof eventHandler.handler !== 'function') {\n      return;\n    }\n    return ReflectApply(eventHandler.handler\x2C this\x2C args);\n  }\n  eventHandler.handler = handler;\n  return eventHandler;\n}\n\nfunction defineEventHandler(emitter\x2C name) {\n  // 8.1.5.1 Event handlers - basically `on[eventName]` attributes\n  ObjectDefineProperty(emitter\x2C `on${name}`\x2C {\n    __proto__: null\x2C\n    get() {\n      return this[kHandlers]?.get(name)?.handler ?? null;\n    }\x2C\n    set(value) {\n      if (!this[kHandlers]) {\n        this[kHandlers] = new SafeMap();\n      }\n      let wrappedHandler = this[kHandlers]?.get(name);\n      if (wrappedHandler) {\n        if (typeof wrappedHandler.handler === 'function') {\n          this[kEvents].get(name).size--;\n          const size = this[kEvents].get(name).size;\n          this[kRemoveListener](size\x2C name\x2C wrappedHandler.handler\x2C false);\n        }\n        wrappedHandler.handler = value;\n        if (typeof wrappedHandler.handler === 'function') {\n          this[kEvents].get(name).size++;\n          const size = this[kEvents].get(name).size;\n          this[kNewListener](size\x2C name\x2C value\x2C false\x2C false\x2C false\x2C false);\n        }\n      } else {\n        wrappedHandler = makeEventHandler(value);\n        this.addEventListener(name\x2C wrappedHandler);\n      }\n      this[kHandlers].set(name\x2C wrappedHandler);\n    }\x2C\n    configurable: true\x2C\n    enumerable: true\n  });\n}\n\nconst EventEmitterMixin = (Superclass) => {\n  class MixedEventEmitter extends Superclass {\n    constructor(...args) {\n      args = new SafeArrayIterator(args);\n      super(...args);\n      FunctionPrototypeCall(EventEmitter\x2C this);\n    }\n  }\n  const protoProps = ObjectGetOwnPropertyDescriptors(EventEmitter.prototype);\n  delete protoProps.constructor;\n  const propertiesValues = ObjectValues(protoProps);\n  for (let i = 0; i < propertiesValues.length; i++) {\n    // We want to use null-prototype objects to not rely on globally mutable\n    // %Object.prototype%.\n    ObjectSetPrototypeOf(propertiesValues[i]\x2C null);\n  }\n  ObjectDefineProperties(MixedEventEmitter.prototype\x2C protoProps);\n  return MixedEventEmitter;\n};\n\nmodule.exports = {\n  Event\x2C\n  CustomEvent\x2C\n  EventEmitterMixin\x2C\n  EventTarget\x2C\n  NodeEventTarget\x2C\n  defineEventHandler\x2C\n  initEventTarget\x2C\n  initNodeEventTarget\x2C\n  kCreateEvent\x2C\n  kNewListener\x2C\n  kTrustEvent\x2C\n  kRemoveListener\x2C\n  kEvents\x2C\n  kWeakHandler\x2C\n  isEventTarget\x2C\n};\n
code-source-info,0x1a3e29c9c9c0,46,27271,27961,C0O27323C23O27507C30O27539C33O27552C38O27507C43O27566C47O27624C52O27624C57O27665C59O27689C63O27670C68O27812C75O27849C81O27812C86O27698C91O27652C94O27867C99O27908C104O27867C109O27934C111O27959,,
tick,0x1a4d3a620,42375,0,0x0,3,0x0,0x1a3e29c966ee,0x3d9b8018ed4f,0x109cc956c,0x1a3e29c9157f,0x3d9b8018ed4f,0x109cc956c,0x1e372ce236bd,0x3d9b8018ed4f,0x109cc956c,0x1e372ce21599,0x3d9b8018ed4f,0x109cc956c,0x1e372ce1cbe9,0x3d9b8018ed4f,0x109cc956c,0x1e372ce17b2e,0xc1101db1e60,0xc1101dae2ac
code-creation,Eval,10,42583,0x1a3e29c9f750,5, node:internal/modules/esm/translators:1:1,0x1a3e29c9f2e8,~
script-source,451,node:internal/modules/esm/translators,'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeMap\x2C\n  Boolean\x2C\n  JSONParse\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectKeys\x2C\n  SafeArrayIterator\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeStartsWith\x2C\n  SyntaxErrorPrototype\x2C\n  globalThis: { WebAssembly }\x2C\n} = primordials;\n\nlet _TYPES = null;\nfunction lazyTypes() {\n  if (_TYPES !== null) return _TYPES;\n  return _TYPES = require('internal/util/types');\n}\n\nconst { readFileSync } = require('fs');\nconst { extname\x2C isAbsolute } = require('path');\nconst {\n  hasEsmSyntax\x2C\n  loadBuiltinModule\x2C\n  stripBOM\x2C\n} = require('internal/modules/cjs/helpers');\nconst {\n  Module: CJSModule\x2C\n  cjsParseCache\n} = require('internal/modules/cjs/loader');\nconst internalURLModule = require('internal/url');\nconst createDynamicModule = require(\n  'internal/modules/esm/create_dynamic_module');\nconst { fileURLToPath\x2C URL } = require('url');\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\n  debug = fn;\n});\nconst { emitExperimentalWarning } = require('internal/util');\nconst {\n  ERR_UNKNOWN_BUILTIN_MODULE\x2C\n  ERR_INVALID_RETURN_PROPERTY_VALUE\n} = require('internal/errors').codes;\nconst { maybeCacheSourceMap } = require('internal/source_map/source_map_cache');\nconst moduleWrap = internalBinding('module_wrap');\nconst { ModuleWrap } = moduleWrap;\nconst asyncESM = require('internal/process/esm_loader');\nconst { emitWarningSync } = require('internal/process/warning');\nconst { TextDecoder } = require('internal/encoding');\n\nlet cjsParse;\nasync function initCJSParse() {\n  if (typeof WebAssembly === 'undefined') {\n    cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\n  } else {\n    const { parse\x2C init } =\n        require('internal/deps/cjs-module-lexer/dist/lexer');\n    try {\n      await init();\n      cjsParse = parse;\n    } catch {\n      cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\n    }\n  }\n}\n\nconst translators = new SafeMap();\nexports.translators = translators;\nexports.enrichCJSError = enrichCJSError;\n\nlet DECODER = null;\nfunction assertBufferSource(body\x2C allowString\x2C hookName) {\n  if (allowString && typeof body === 'string') {\n    return;\n  }\n  const { isArrayBufferView\x2C isAnyArrayBuffer } = lazyTypes();\n  if (isArrayBufferView(body) || isAnyArrayBuffer(body)) {\n    return;\n  }\n  throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\n    `${allowString ? 'string\x2C ' : ''}array buffer\x2C or typed array`\x2C\n    hookName\x2C\n    'source'\x2C\n    body\n  );\n}\n\nfunction stringify(body) {\n  if (typeof body === 'string') return body;\n  assertBufferSource(body\x2C false\x2C 'transformSource');\n  DECODER = DECODER === null ? new TextDecoder() : DECODER;\n  return DECODER.decode(body);\n}\n\nfunction errPath(url) {\n  const parsed = new URL(url);\n  if (parsed.protocol === 'file:') {\n    return fileURLToPath(parsed);\n  }\n  return url;\n}\n\nasync function importModuleDynamically(specifier\x2C { url }\x2C assertions) {\n  return asyncESM.esmLoader.import(specifier\x2C url\x2C assertions);\n}\n\n// Strategy for loading a standard JavaScript module.\ntranslators.set('module'\x2C async function moduleStrategy(url\x2C source\x2C isMain) {\n  assertBufferSource(source\x2C true\x2C 'load');\n  source = stringify(source);\n  maybeCacheSourceMap(url\x2C source);\n  debug(`Translating StandardModule ${url}`);\n  const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\n  moduleWrap.callbackMap.set(module\x2C {\n    initializeImportMeta: (meta\x2C wrap) => this.importMetaInitialize(meta\x2C { url })\x2C\n    importModuleDynamically\x2C\n  });\n  return module;\n});\n\n/**\n * @param {Error | any} err\n * @param {string} [content] Content of the file\x2C if known.\n * @param {string} [filename] Useful only if `content` is unknown.\n */\nfunction enrichCJSError(err\x2C content\x2C filename) {\n  if (err != null && ObjectGetPrototypeOf(err) === SyntaxErrorPrototype &&\n      hasEsmSyntax(content || readFileSync(filename\x2C 'utf-8'))) {\n    // Emit the warning synchronously because we are in the middle of handling\n    // a SyntaxError that will throw and likely terminate the process before an\n    // asynchronous warning would be emitted.\n    emitWarningSync(\n      'To load an ES module\x2C set "type": "module" in the package.json or use ' +\n      'the .mjs extension.'\n    );\n  }\n}\n\n// Strategy for loading a node-style CommonJS module\nconst isWindows = process.platform === 'win32';\nconst winSepRegEx = /\\//g;\ntranslators.set('commonjs'\x2C async function commonjsStrategy(url\x2C source\x2C\n                                                            isMain) {\n  debug(`Translating CJSModule ${url}`);\n\n  let filename = internalURLModule.fileURLToPath(new URL(url));\n  if (isWindows)\n    filename = StringPrototypeReplace(filename\x2C winSepRegEx\x2C '\\\\');\n\n  if (!cjsParse) await initCJSParse();\n  const { module\x2C exportNames } = cjsPreparseModuleExports(filename);\n  const namesWithDefault = exportNames.has('default') ?\n    [...exportNames] : ['default'\x2C ...exportNames];\n\n  return new ModuleWrap(url\x2C undefined\x2C namesWithDefault\x2C function() {\n    debug(`Loading CJSModule ${url}`);\n\n    let exports;\n    if (asyncESM.esmLoader.cjsCache.has(module)) {\n      exports = asyncESM.esmLoader.cjsCache.get(module);\n      asyncESM.esmLoader.cjsCache.delete(module);\n    } else {\n      try {\n        exports = CJSModule._load(filename\x2C undefined\x2C isMain);\n      } catch (err) {\n        enrichCJSError(err\x2C undefined\x2C filename);\n        throw err;\n      }\n    }\n\n    for (const exportName of exportNames) {\n      if (!ObjectPrototypeHasOwnProperty(exports\x2C exportName) ||\n          exportName === 'default')\n        continue;\n      // We might trigger a getter -> dont fail.\n      let value;\n      try {\n        value = exports[exportName];\n      } catch {\n        // Continue regardless of error.\n      }\n      this.setExport(exportName\x2C value);\n    }\n    this.setExport('default'\x2C exports);\n  });\n});\n\nfunction cjsPreparseModuleExports(filename) {\n  let module = CJSModule._cache[filename];\n  if (module) {\n    const cached = cjsParseCache.get(module);\n    if (cached)\n      return { module\x2C exportNames: cached.exportNames };\n  }\n  const loaded = Boolean(module);\n  if (!loaded) {\n    module = new CJSModule(filename);\n    module.filename = filename;\n    module.paths = CJSModule._nodeModulePaths(module.path);\n    CJSModule._cache[filename] = module;\n  }\n\n  let source;\n  try {\n    source = readFileSync(filename\x2C 'utf8');\n  } catch {\n    // Continue regardless of error.\n  }\n\n  let exports\x2C reexports;\n  try {\n    ({ exports\x2C reexports } = cjsParse(source || ''));\n  } catch {\n    exports = [];\n    reexports = [];\n  }\n\n  const exportNames = new SafeSet(new SafeArrayIterator(exports));\n\n  // Set first for cycles.\n  cjsParseCache.set(module\x2C { source\x2C exportNames\x2C loaded });\n\n  if (reexports.length) {\n    module.filename = filename;\n    module.paths = CJSModule._nodeModulePaths(module.path);\n  }\n  ArrayPrototypeForEach(reexports\x2C (reexport) => {\n    let resolved;\n    try {\n      resolved = CJSModule._resolveFilename(reexport\x2C module);\n    } catch {\n      return;\n    }\n    const ext = extname(resolved);\n    if ((ext === '.js' || ext === '.cjs' || !CJSModule._extensions[ext]) &&\n        isAbsolute(resolved)) {\n      const { exportNames: reexportNames } = cjsPreparseModuleExports(resolved);\n      for (const name of reexportNames)\n        exportNames.add(name);\n    }\n  });\n\n  return { module\x2C exportNames };\n}\n\n// Strategy for loading a node builtin CommonJS module that isn't\n// through normal resolution\ntranslators.set('builtin'\x2C async function builtinStrategy(url) {\n  debug(`Translating BuiltinModule ${url}`);\n  // Slice 'node:' scheme\n  const id = StringPrototypeSlice(url\x2C 5);\n  const module = loadBuiltinModule(id\x2C url);\n  if (!StringPrototypeStartsWith(url\x2C 'node:') || !module) {\n    throw new ERR_UNKNOWN_BUILTIN_MODULE(url);\n  }\n  debug(`Loading BuiltinModule ${url}`);\n  return module.getESMFacade();\n});\n\n// Strategy for loading a JSON file\ntranslators.set('json'\x2C async function jsonStrategy(url\x2C source) {\n  emitExperimentalWarning('Importing JSON modules');\n  assertBufferSource(source\x2C true\x2C 'load');\n  debug(`Loading JSONModule ${url}`);\n  const pathname = StringPrototypeStartsWith(url\x2C 'file:') ?\n    fileURLToPath(url) : null;\n  let modulePath;\n  let module;\n  if (pathname) {\n    modulePath = isWindows ?\n      StringPrototypeReplace(pathname\x2C winSepRegEx\x2C '\\\\') : pathname;\n    module = CJSModule._cache[modulePath];\n    if (module && module.loaded) {\n      const exports = module.exports;\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\n        this.setExport('default'\x2C exports);\n      });\n    }\n  }\n  source = stringify(source);\n  if (pathname) {\n    // A require call could have been called on the same file during loading and\n    // that resolves synchronously. To make sure we always return the identical\n    // export\x2C we have to check again if the module already exists or not.\n    module = CJSModule._cache[modulePath];\n    if (module && module.loaded) {\n      const exports = module.exports;\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\n        this.setExport('default'\x2C exports);\n      });\n    }\n  }\n  try {\n    const exports = JSONParse(stripBOM(source));\n    module = {\n      exports\x2C\n      loaded: true\n    };\n  } catch (err) {\n    // TODO (BridgeAR): We could add a NodeCore error that wraps the JSON\n    // parse error instead of just manipulating the original error message.\n    // That would allow to add further properties and maybe additional\n    // debugging information.\n    err.message = errPath(url) + ': ' + err.message;\n    throw err;\n  }\n  if (pathname) {\n    CJSModule._cache[modulePath] = module;\n  }\n  return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\n    debug(`Parsing JSONModule ${url}`);\n    this.setExport('default'\x2C module.exports);\n  });\n});\n\n// Strategy for loading a wasm module\ntranslators.set('wasm'\x2C async function(url\x2C source) {\n  emitExperimentalWarning('Importing WebAssembly modules');\n\n  assertBufferSource(source\x2C false\x2C 'load');\n\n  debug(`Translating WASMModule ${url}`);\n\n  let compiled;\n  try {\n    compiled = await WebAssembly.compile(source);\n  } catch (err) {\n    err.message = errPath(url) + ': ' + err.message;\n    throw err;\n  }\n\n  const imports =\n      ArrayPrototypeMap(WebAssembly.Module.imports(compiled)\x2C\n                        ({ module }) => module);\n  const exports =\n    ArrayPrototypeMap(WebAssembly.Module.exports(compiled)\x2C\n                      ({ name }) => name);\n\n  return createDynamicModule(imports\x2C exports\x2C url\x2C (reflect) => {\n    const { exports } = new WebAssembly.Instance(compiled\x2C reflect.imports);\n    for (const expt of ObjectKeys(exports))\n      reflect.exports[expt].set(exports[expt]);\n  }).module;\n});\n
code-source-info,0x1a3e29c9f750,451,0,10765,C0O0C4O10765,,
code-creation,Function,10,43000,0x1a3e29c9fef8,715, node:internal/modules/esm/translators:1:1,0x1a3e29c9f6c8,~
code-source-info,0x1a3e29c9fef
code-creation,Eval,10,43083,0x1a3e29ca1408,5, node:internal/modules/esm/create_dynamic_module:1:1,0x1a3e29ca1230,~
script-source,452,node:internal/modules/esm/create_dynamic_module,'use strict';\n\nconst {\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  JSONStringify\x2C\n  ObjectCreate\x2C\n  SafeSet\x2C\n} = primordials;\n\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\n  debug = fn;\n});\n\nfunction createImport(impt\x2C index) {\n  const imptPath = JSONStringify(impt);\n  return `import * as $import_${index} from ${imptPath};\nimport.meta.imports[${imptPath}] = $import_${index};`;\n}\n\nfunction createExport(expt) {\n  const name = `${expt}`;\n  return `let $${name};\nexport { $${name} as ${name} };\nimport.meta.exports.${name} = {\n  get: () => $${name}\x2C\n  set: (v) => $${name} = v\x2C\n};`;\n}\n\nconst createDynamicModule = (imports\x2C exports\x2C url = ''\x2C evaluate) => {\n  debug('creating ESM facade for %s with exports: %j'\x2C url\x2C exports);\n  const source = `\n${ArrayPrototypeJoin(ArrayPrototypeMap(imports\x2C createImport)\x2C '\\n')}\n${ArrayPrototypeJoin(ArrayPrototypeMap(exports\x2C createExport)\x2C '\\n')}\nimport.meta.done();\n`;\n  const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\n  const m = new ModuleWrap(`${url}`\x2C undefined\x2C source\x2C 0\x2C 0);\n\n  const readyfns = new SafeSet();\n  const reflect = {\n    exports: ObjectCreate(null)\x2C\n    onReady: (cb) => { readyfns.add(cb); }\x2C\n  };\n\n  if (imports.length)\n    reflect.imports = ObjectCreate(null);\n\n  callbackMap.set(m\x2C {\n    initializeImportMeta: (meta\x2C wrap) => {\n      meta.exports = reflect.exports;\n      if (reflect.imports)\n        meta.imports = reflect.imports;\n      meta.done = () => {\n        evaluate(reflect);\n        reflect.onReady = (cb) => cb(reflect);\n        for (const fn of readyfns) {\n          readyfns.delete(fn);\n          fn(reflect);\n        }\n      };\n    }\x2C\n  });\n\n  return {\n    module: m\x2C\n    reflect\x2C\n  };\n};\n\nmodule.exports = createDynamicModule;\n
code-source-info,0x1a3e29ca1408,452,0,1756,C0O0C4O1756,,
code-creation,Function,10,43166,0x1a3e29ca1630,111, node:internal/modules/esm/create_dynamic_module:1:1,0x1a3e29ca1380,~
code-source-info,0x1a3e29ca1630,452,0,1756,C0O0C39O25C45O47C51O68C57O85C63O101C69O140C72O140C77O173C90O174C96O140C98O642C103O1718C105O1733C110O1755,,
tick,0x105088df0,43291,1,0x104a8d6ec,2,0x0,0x3d9b8018ed2e,0x109cc956c,0x1e372ce215cc,0x3d9b8018ed4f,0x109cc956c,0x1e372ce1cbe9,0x3d9b8018ed4f,0x109cc956c,0x1e372ce17b2e,0xc1101db1e60,0xc1101dae2ac
code-creation,Eval,10,43375,0x1a3e29ca2568,5, node:internal/vm/module:1:1,0x1a3e29ca1ff0,~
script-source,453,node:internal/vm/module,'use strict';\n\nconst assert = require('internal/assert');\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypeSome\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  SafePromiseAll\x2C\n  SafeWeakMap\x2C\n  Symbol\x2C\n  SymbolToStringTag\x2C\n  TypeError\x2C\n} = primordials;\n\nconst { isContext } = internalBinding('contextify');\nconst {\n  isModuleNamespaceObject\x2C\n  isArrayBufferView\x2C\n} = require('internal/util/types');\nconst {\n  customInspectSymbol\x2C\n  emitExperimentalWarning\x2C\n  getConstructorOf\x2C\n  kEmptyObject\x2C\n} = require('internal/util');\nconst {\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_INVALID_ARG_VALUE\x2C\n  ERR_VM_MODULE_ALREADY_LINKED\x2C\n  ERR_VM_MODULE_DIFFERENT_CONTEXT\x2C\n  ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA\x2C\n  ERR_VM_MODULE_LINK_FAILURE\x2C\n  ERR_VM_MODULE_NOT_MODULE\x2C\n  ERR_VM_MODULE_STATUS\x2C\n} = require('internal/errors').codes;\nconst {\n  validateBoolean\x2C\n  validateFunction\x2C\n  validateInt32\x2C\n  validateObject\x2C\n  validateUint32\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst binding = internalBinding('module_wrap');\nconst {\n  ModuleWrap\x2C\n  kUninstantiated\x2C\n  kInstantiating\x2C\n  kInstantiated\x2C\n  kEvaluating\x2C\n  kEvaluated\x2C\n  kErrored\x2C\n} = binding;\n\nconst STATUS_MAP = {\n  [kUninstantiated]: 'unlinked'\x2C\n  [kInstantiating]: 'linking'\x2C\n  [kInstantiated]: 'linked'\x2C\n  [kEvaluating]: 'evaluating'\x2C\n  [kEvaluated]: 'evaluated'\x2C\n  [kErrored]: 'errored'\x2C\n};\n\nlet globalModuleId = 0;\nconst defaultModuleName = 'vm:module';\nconst wrapToModuleMap = new SafeWeakMap();\n\nconst kWrap = Symbol('kWrap');\nconst kContext = Symbol('kContext');\nconst kPerContextModuleId = Symbol('kPerContextModuleId');\nconst kLink = Symbol('kLink');\n\nclass Module {\n  constructor(options) {\n    emitExperimentalWarning('VM Modules');\n\n    if (new.target === Module) {\n      // eslint-disable-next-line no-restricted-syntax\n      throw new TypeError('Module is not a constructor');\n    }\n\n    const {\n      context\x2C\n      sourceText\x2C\n      syntheticExportNames\x2C\n      syntheticEvaluationSteps\x2C\n    } = options;\n\n    if (context !== undefined) {\n      validateObject(context\x2C 'context');\n      if (!isContext(context)) {\n        throw new ERR_INVALID_ARG_TYPE('options.context'\x2C 'vm.Context'\x2C\n                                       context);\n      }\n    }\n\n    let { identifier } = options;\n    if (identifier !== undefined) {\n      validateString(identifier\x2C 'options.identifier');\n    } else if (context === undefined) {\n      identifier = `${defaultModuleName}(${globalModuleId++})`;\n    } else if (context[kPerContextModuleId] !== undefined) {\n      const curId = context[kPerContextModuleId];\n      identifier = `${defaultModuleName}(${curId})`;\n      context[kPerContextModuleId] += 1;\n    } else {\n      identifier = `${defaultModuleName}(0)`;\n      ObjectDefineProperty(context\x2C kPerContextModuleId\x2C {\n        __proto__: null\x2C\n        value: 1\x2C\n        writable: true\x2C\n        enumerable: false\x2C\n        configurable: true\x2C\n      });\n    }\n\n    if (sourceText !== undefined) {\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C sourceText\x2C\n                                   options.lineOffset\x2C options.columnOffset\x2C\n                                   options.cachedData);\n\n      binding.callbackMap.set(this[kWrap]\x2C {\n        initializeImportMeta: options.initializeImportMeta\x2C\n        importModuleDynamically: options.importModuleDynamically ?\n          importModuleDynamicallyWrap(options.importModuleDynamically) :\n          undefined\x2C\n      });\n    } else {\n      assert(syntheticEvaluationSteps);\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C\n                                   syntheticExportNames\x2C\n                                   syntheticEvaluationSteps);\n    }\n\n    wrapToModuleMap.set(this[kWrap]\x2C this);\n\n    this[kContext] = context;\n  }\n\n  get identifier() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    return this[kWrap].url;\n  }\n\n  get context() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    return this[kContext];\n  }\n\n  get namespace() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    if (this[kWrap].getStatus() < kInstantiated) {\n      throw new ERR_VM_MODULE_STATUS('must not be unlinked or linking');\n    }\n    return this[kWrap].getNamespace();\n  }\n\n  get status() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    return STATUS_MAP[this[kWrap].getStatus()];\n  }\n\n  get error() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    if (this[kWrap].getStatus() !== kErrored) {\n      throw new ERR_VM_MODULE_STATUS('must be errored');\n    }\n    return this[kWrap].getError();\n  }\n\n  async link(linker) {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    validateFunction(linker\x2C 'linker');\n    if (this.status === 'linked') {\n      throw new ERR_VM_MODULE_ALREADY_LINKED();\n    }\n    if (this.status !== 'unlinked') {\n      throw new ERR_VM_MODULE_STATUS('must be unlinked');\n    }\n    await this[kLink](linker);\n    this[kWrap].instantiate();\n  }\n\n  async evaluate(options = kEmptyObject) {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n\n    validateObject(options\x2C 'options');\n\n    let timeout = options.timeout;\n    if (timeout === undefined) {\n      timeout = -1;\n    } else {\n      validateUint32(timeout\x2C 'options.timeout'\x2C true);\n    }\n    const { breakOnSigint = false } = options;\n    validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\n    const status = this[kWrap].getStatus();\n    if (status !== kInstantiated &&\n        status !== kEvaluated &&\n        status !== kErrored) {\n      throw new ERR_VM_MODULE_STATUS(\n        'must be one of linked\x2C evaluated\x2C or errored'\n      );\n    }\n    await this[kWrap].evaluate(timeout\x2C breakOnSigint);\n  }\n\n  [customInspectSymbol](depth\x2C options) {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    if (typeof depth === 'number' && depth < 0)\n      return this;\n\n    const constructor = getConstructorOf(this) || Module;\n    const o = ObjectCreate({ constructor });\n    o.status = this.status;\n    o.identifier = this.identifier;\n    o.context = this.context;\n\n    ObjectSetPrototypeOf(o\x2C ObjectGetPrototypeOf(this));\n    ObjectDefineProperty(o\x2C SymbolToStringTag\x2C {\n      __proto__: null\x2C\n      value: constructor.name\x2C\n      configurable: true\n    });\n\n    // Lazy to avoid circular dependency\n    const { inspect } = require('internal/util/inspect');\n    return inspect(o\x2C { ...options\x2C customInspect: false });\n  }\n}\n\nconst kDependencySpecifiers = Symbol('kDependencySpecifiers');\nconst kNoError = Symbol('kNoError');\n\nclass SourceTextModule extends Module {\n  #error = kNoError;\n  #statusOverride;\n\n  constructor(sourceText\x2C options = kEmptyObject) {\n    validateString(sourceText\x2C 'sourceText');\n    validateObject(options\x2C 'options');\n\n    const {\n      lineOffset = 0\x2C\n      columnOffset = 0\x2C\n      initializeImportMeta\x2C\n      importModuleDynamically\x2C\n      context\x2C\n      identifier\x2C\n      cachedData\x2C\n    } = options;\n\n    validateInt32(lineOffset\x2C 'options.lineOffset');\n    validateInt32(columnOffset\x2C 'options.columnOffset');\n\n    if (initializeImportMeta !== undefined &&\n        typeof initializeImportMeta !== 'function') {\n      throw new ERR_INVALID_ARG_TYPE(\n        'options.initializeImportMeta'\x2C 'function'\x2C initializeImportMeta);\n    }\n\n    if (importModuleDynamically !== undefined &&\n        typeof importModuleDynamically !== 'function') {\n      throw new ERR_INVALID_ARG_TYPE(\n        'options.importModuleDynamically'\x2C 'function'\x2C\n        importModuleDynamically);\n    }\n\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\n      throw new ERR_INVALID_ARG_TYPE(\n        'options.cachedData'\x2C\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n        cachedData\n      );\n    }\n\n    super({\n      sourceText\x2C\n      context\x2C\n      identifier\x2C\n      lineOffset\x2C\n      columnOffset\x2C\n      cachedData\x2C\n      initializeImportMeta\x2C\n      importModuleDynamically\x2C\n    });\n\n    this[kLink] = async (linker) => {\n      this.#statusOverride = 'linking';\n\n      const promises = this[kWrap].link(async (identifier\x2C assert) => {\n        const module = await linker(identifier\x2C this\x2C { assert });\n        if (module[kWrap] === undefined) {\n          throw new ERR_VM_MODULE_NOT_MODULE();\n        }\n        if (module.context !== this.context) {\n          throw new ERR_VM_MODULE_DIFFERENT_CONTEXT();\n        }\n        if (module.status === 'errored') {\n          throw new ERR_VM_MODULE_LINK_FAILURE(`request for '${identifier}' resolved to an errored module`\x2C module.error);\n        }\n        if (module.status === 'unlinked') {\n          await module[kLink](linker);\n        }\n        return module[kWrap];\n      });\n\n      try {\n        if (promises !== undefined) {\n          await SafePromiseAll(promises);\n        }\n      } catch (e) {\n        this.#error = e;\n        throw e;\n      } finally {\n        this.#statusOverride = undefined;\n      }\n    };\n\n    this[kDependencySpecifiers] = undefined;\n  }\n\n  get dependencySpecifiers() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    if (this[kDependencySpecifiers] === undefined) {\n      this[kDependencySpecifiers] = this[kWrap].getStaticDependencySpecifiers();\n    }\n    return this[kDependencySpecifiers];\n  }\n\n  get status() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    if (this.#error !== kNoError) {\n      return 'errored';\n    }\n    if (this.#statusOverride) {\n      return this.#statusOverride;\n    }\n    return super.status;\n  }\n\n  get error() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    if (this.#error !== kNoError) {\n      return this.#error;\n    }\n    return super.error;\n  }\n\n  createCachedData() {\n    const { status } = this;\n    if (status === 'evaluating' ||\n        status === 'evaluated' ||\n        status === 'errored') {\n      throw new ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA();\n    }\n    return this[kWrap].createCachedData();\n  }\n}\n\nclass SyntheticModule extends Module {\n  constructor(exportNames\x2C evaluateCallback\x2C options = kEmptyObject) {\n    if (!ArrayIsArray(exportNames) ||\n      ArrayPrototypeSome(exportNames\x2C (e) => typeof e !== 'string')) {\n      throw new ERR_INVALID_ARG_TYPE('exportNames'\x2C\n                                     'Array of unique strings'\x2C\n                                     exportNames);\n    } else {\n      ArrayPrototypeForEach(exportNames\x2C (name\x2C i) => {\n        if (ArrayPrototypeIndexOf(exportNames\x2C name\x2C i + 1) !== -1) {\n          throw new ERR_INVALID_ARG_VALUE(`exportNames.${name}`\x2C\n                                          name\x2C\n                                          'is duplicated');\n        }\n      });\n    }\n    validateFunction(evaluateCallback\x2C 'evaluateCallback');\n\n    validateObject(options\x2C 'options');\n\n    const { context\x2C identifier } = options;\n\n    super({\n      syntheticExportNames: exportNames\x2C\n      syntheticEvaluationSteps: evaluateCallback\x2C\n      context\x2C\n      identifier\x2C\n    });\n\n    this[kLink] = () => this[kWrap].link(() => {\n      assert.fail('link callback should not be called');\n    });\n  }\n\n  setExport(name\x2C value) {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    validateString(name\x2C 'name');\n    if (this[kWrap].getStatus() < kInstantiated) {\n      throw new ERR_VM_MODULE_STATUS('must be linked');\n    }\n    this[kWrap].setExport(name\x2C value);\n  }\n}\n\nfunction importModuleDynamicallyWrap(importModuleDynamically) {\n  const importModuleDynamicallyWrapper = async (...args) => {\n    const m = await ReflectApply(importModuleDynamically\x2C this\x2C args);\n    if (isModuleNamespaceObject(m)) {\n      return m;\n    }\n    if (!m || m[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    if (m.status === 'errored') {\n      throw m.error;\n    }\n    return m.namespace;\n  };\n  return importModuleDynamicallyWrapper;\n}\n\nmodule.exports = {\n  Module\x2C\n  SourceTextModule\x2C\n  SyntheticModule\x2C\n  importModuleDynamicallyWrap\x2C\n  getModuleFromWrap: (wrap) => wrapToModuleMap.get(wrap)\x2C\n};\n
code-source-info,0x1a3e29ca2568,453,0,12372,C0O0C4O12372,,
code-creation,Function,10,43833,0x1a3e29ca37d0,881, node:internal/vm/module:1:1,0x1a3e29ca24e0,~
code-source-info,0x1a3e29ca37d0,453,0,12372,C0O0C159O30C165O30C169O30C171O68C177O84C183O109C189O134C195O156C201O172C207O196C213O220C219O244C225O260C231O278C236O293C241O303C247O324C253O375C256O375C261O361C267O466C273O466C278O416C284O443C290O596C296O596C301O508C306O531C312O558C318O578C324O875C330O875C335O901C340O632C346O656C352O681C358O713C364O748C370O791C376O821C382O849C388O1031C394O1031C399O919C405O938C411O958C417O975C423O993C429O1011C435O1080C438O1080C442O1080C444O1233C447O1122C453O1136C458O1155C463O1173C469O1190C474O1205C480O1219C486O1262C493O1267C497O1285C504O1300C508O1317C515O1331C519O1347C526O1360C530O1374C537O1391C541O1404C548O1420C552O1431C559O1262C561O1467C562O1467C564O1496C566O1496C568O1533C570O1533C575O1533C577O1567C580O1567C584O1567C586O1601C589O1601C593O1601C595O1649C598O1649C602O1649C604O1694C607O1694C611O1694C669O5975C697O6758C700O6758C704O6758C706O6808C709O6808C713O6808C745O6860C808O10317C836O12212C843O12233C849O12243C855O12263C861O12282C865O12332C875O12227C880O12371,,
code-creation,Function,10,43875,0x1a3e29ca3d20,23,<instance_members_initializer> node:internal/vm/module:258:1,0x1a3e29ca2b50,~
code-source-info,0x1a3e29ca3d20,453,6829,10285,C3O6880C17O6892C22O10285,,
code-creation,LazyCompile,10,44000,0x1a3e29ca5388,161,ESMLoader node:internal/modules/esm/loader:239:14,0x1e372ce22cc8,~
code-source-info,0x1a3e29ca5388,433,6860,7466,C5O6860C23O6869C33O6873C38O6912C44O6920C49O6933C59O6933C63O6990C73O6994C79O7052C89O7052C93O7106C105O7161C111O7161C118O7215C123O7240C128O7248C139O7248C145O7415C151O7449C160O7465,,
code-creation,LazyCompile,10,44000,0x1a3e29ca7198,27,ModuleMap node:internal/modules/esm/module_map:17:14,0x1e372ce25d38,~
code-source-info,0x1a3e29ca7198,434,518,535,C3O524C7O530C11O524C26O534,,
code-creation,LazyCompile,10,44041,0x1a3e29ca7438,13,desc.value node:internal/per_context/primordials:340:32,0x3d9b80188cb0,~
script-source,12,node:internal/per_context/primordials,'use strict';\n\n/* eslint-disable node-core/prefer-primordials */\n\n// This file subclasses and stores the JS builtins that come from the VM\n// so that Node.js's builtin modules do not need to later look these up from\n// the global proxy\x2C which can be mutated by users.\n\n// Use of primordials have sometimes a dramatic impact on performance\x2C please\n// benchmark all changes made in performance-sensitive areas of the codebase.\n// See: https://github.com/nodejs/node/pull/38248\n\nconst {\n  defineProperty: ReflectDefineProperty\x2C\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor\x2C\n  ownKeys: ReflectOwnKeys\x2C\n} = Reflect;\n\n// `uncurryThis` is equivalent to `func => Function.prototype.call.bind(func)`.\n// It is using `bind.bind(call)` to avoid using `Function.prototype.bind`\n// and `Function.prototype.call` after it may have been mutated by users.\nconst { apply\x2C bind\x2C call } = Function.prototype;\nconst uncurryThis = bind.bind(call);\nprimordials.uncurryThis = uncurryThis;\n\n// `applyBind` is equivalent to `func => Function.prototype.apply.bind(func)`.\n// It is using `bind.bind(apply)` to avoid using `Function.prototype.bind`\n// and `Function.prototype.apply` after it may have been mutated by users.\nconst applyBind = bind.bind(apply);\nprimordials.applyBind = applyBind;\n\n// Methods that accept a variable number of arguments\x2C and thus it's useful to\n// also create `${prefix}${key}Apply`\x2C which uses `Function.prototype.apply`\x2C\n// instead of `Function.prototype.call`\x2C and thus doesn't require iterator\n// destructuring.\nconst varargsMethods = [\n  // 'ArrayPrototypeConcat' is omitted\x2C because it performs the spread\n  // on its own for arrays and array-likes with a truthy\n  // @@isConcatSpreadable symbol property.\n  'ArrayOf'\x2C\n  'ArrayPrototypePush'\x2C\n  'ArrayPrototypeUnshift'\x2C\n  // 'FunctionPrototypeCall' is omitted\x2C since there's 'ReflectApply'\n  // and 'FunctionPrototypeApply'.\n  'MathHypot'\x2C\n  'MathMax'\x2C\n  'MathMin'\x2C\n  'StringPrototypeConcat'\x2C\n  'TypedArrayOf'\x2C\n];\n\nfunction getNewKey(key) {\n  return typeof key === 'symbol' ?\n    `Symbol${key.description[7].toUpperCase()}${key.description.slice(8)}` :\n    `${key[0].toUpperCase()}${key.slice(1)}`;\n}\n\nfunction copyAccessor(dest\x2C prefix\x2C key\x2C { enumerable\x2C get\x2C set }) {\n  ReflectDefineProperty(dest\x2C `${prefix}Get${key}`\x2C {\n    __proto__: null\x2C\n    value: uncurryThis(get)\x2C\n    enumerable\n  });\n  if (set !== undefined) {\n    ReflectDefineProperty(dest\x2C `${prefix}Set${key}`\x2C {\n      __proto__: null\x2C\n      value: uncurryThis(set)\x2C\n      enumerable\n    });\n  }\n}\n\nfunction copyPropsRenamed(src\x2C dest\x2C prefix) {\n  for (const key of ReflectOwnKeys(src)) {\n    const newKey = getNewKey(key);\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\n    if ('get' in desc) {\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\n    } else {\n      const name = `${prefix}${newKey}`;\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\n      if (varargsMethods.includes(name)) {\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\n          __proto__: null\x2C\n          // `src` is bound as the `this` so that the static `this` points\n          // to the object it was defined on\x2C\n          // e.g.: `ArrayOfApply` gets a `this` of `Array`:\n          value: applyBind(desc.value\x2C src)\x2C\n        });\n      }\n    }\n  }\n}\n\nfunction copyPropsRenamedBound(src\x2C dest\x2C prefix) {\n  for (const key of ReflectOwnKeys(src)) {\n    const newKey = getNewKey(key);\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\n    if ('get' in desc) {\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\n    } else {\n      const { value } = desc;\n      if (typeof value === 'function') {\n        desc.value = value.bind(src);\n      }\n\n      const name = `${prefix}${newKey}`;\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\n      if (varargsMethods.includes(name)) {\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\n          __proto__: null\x2C\n          value: applyBind(value\x2C src)\x2C\n        });\n      }\n    }\n  }\n}\n\nfunction copyPrototype(src\x2C dest\x2C prefix) {\n  for (const key of ReflectOwnKeys(src)) {\n    const newKey = getNewKey(key);\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\n    if ('get' in desc) {\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\n    } else {\n      const { value } = desc;\n      if (typeof value === 'function') {\n        desc.value = uncurryThis(value);\n      }\n\n      const name = `${prefix}${newKey}`;\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\n      if (varargsMethods.includes(name)) {\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\n          __proto__: null\x2C\n          value: applyBind(value)\x2C\n        });\n      }\n    }\n  }\n}\n\n// Create copies of configurable value properties of the global object\n[\n  'Proxy'\x2C\n  'globalThis'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  primordials[name] = globalThis[name];\n});\n\n// Create copies of URI handling functions\n[\n  decodeURI\x2C\n  decodeURIComponent\x2C\n  encodeURI\x2C\n  encodeURIComponent\x2C\n].forEach((fn) => {\n  primordials[fn.name] = fn;\n});\n\n// Create copies of legacy functions\n[\n  escape\x2C\n  eval\x2C\n  unescape\x2C\n].forEach((fn) => {\n  primordials[fn.name] = fn;\n});\n\n// Create copies of the namespace objects\n[\n  'JSON'\x2C\n  'Math'\x2C\n  'Proxy'\x2C\n  'Reflect'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  copyPropsRenamed(globalThis[name]\x2C primordials\x2C name);\n});\n\n// Create copies of intrinsic objects\n[\n  'AggregateError'\x2C\n  'Array'\x2C\n  'ArrayBuffer'\x2C\n  'BigInt'\x2C\n  'BigInt64Array'\x2C\n  'BigUint64Array'\x2C\n  'Boolean'\x2C\n  'DataView'\x2C\n  'Date'\x2C\n  'Error'\x2C\n  'EvalError'\x2C\n  'FinalizationRegistry'\x2C\n  'Float32Array'\x2C\n  'Float64Array'\x2C\n  'Function'\x2C\n  'Int16Array'\x2C\n  'Int32Array'\x2C\n  'Int8Array'\x2C\n  'Map'\x2C\n  'Number'\x2C\n  'Object'\x2C\n  'RangeError'\x2C\n  'ReferenceError'\x2C\n  'RegExp'\x2C\n  'Set'\x2C\n  'String'\x2C\n  'Symbol'\x2C\n  'SyntaxError'\x2C\n  'TypeError'\x2C\n  'URIError'\x2C\n  'Uint16Array'\x2C\n  'Uint32Array'\x2C\n  'Uint8Array'\x2C\n  'Uint8ClampedArray'\x2C\n  'WeakMap'\x2C\n  'WeakRef'\x2C\n  'WeakSet'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  const original = globalThis[name];\n  primordials[name] = original;\n  copyPropsRenamed(original\x2C primordials\x2C name);\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\n});\n\n// Create copies of intrinsic objects that require a valid `this` to call\n// static methods.\n// Refs: https://www.ecma-international.org/ecma-262/#sec-promise.all\n[\n  'Promise'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  const original = globalThis[name];\n  primordials[name] = original;\n  copyPropsRenamedBound(original\x2C primordials\x2C name);\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\n});\n\n// Create copies of abstract intrinsic objects that are not directly exposed\n// on the global object.\n// Refs: https://tc39.es/ecma262/#sec-%typedarray%-intrinsic-object\n[\n  { name: 'TypedArray'\x2C original: Reflect.getPrototypeOf(Uint8Array) }\x2C\n  { name: 'ArrayIterator'\x2C original: {\n    prototype: Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]())\x2C\n  } }\x2C\n  { name: 'StringIterator'\x2C original: {\n    prototype: Reflect.getPrototypeOf(String.prototype[Symbol.iterator]())\x2C\n  } }\x2C\n].forEach(({ name\x2C original }) => {\n  primordials[name] = original;\n  // The static %TypedArray% methods require a valid `this`\x2C but can't be bound\x2C\n  // as they need a subclass constructor as the receiver:\n  copyPrototype(original\x2C primordials\x2C name);\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\n});\n\n/* eslint-enable node-core/prefer-primordials */\n\nconst {\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeMap\x2C\n  FinalizationRegistry\x2C\n  FunctionPrototypeCall\x2C\n  Map\x2C\n  ObjectFreeze\x2C\n  ObjectSetPrototypeOf\x2C\n  Promise\x2C\n  PromisePrototypeThen\x2C\n  Set\x2C\n  SymbolIterator\x2C\n  WeakMap\x2C\n  WeakRef\x2C\n  WeakSet\x2C\n} = primordials;\n\n// Because these functions are used by `makeSafe`\x2C which is exposed\n// on the `primordials` object\x2C it's important to use const references\n// to the primordials that they use:\nconst createSafeIterator = (factory\x2C next) => {\n  class SafeIterator {\n    constructor(iterable) {\n      this._iterator = factory(iterable);\n    }\n    next() {\n      return next(this._iterator);\n    }\n    [SymbolIterator]() {\n      return this;\n    }\n  }\n  ObjectSetPrototypeOf(SafeIterator.prototype\x2C null);\n  ObjectFreeze(SafeIterator.prototype);\n  ObjectFreeze(SafeIterator);\n  return SafeIterator;\n};\n\nprimordials.SafeArrayIterator = createSafeIterator(\n  primordials.ArrayPrototypeSymbolIterator\x2C\n  primordials.ArrayIteratorPrototypeNext\n);\nprimordials.SafeStringIterator = createSafeIterator(\n  primordials.StringPrototypeSymbolIterator\x2C\n  primordials.StringIteratorPrototypeNext\n);\n\nconst copyProps = (src\x2C dest) => {\n  ArrayPrototypeForEach(ReflectOwnKeys(src)\x2C (key) => {\n    if (!ReflectGetOwnPropertyDescriptor(dest\x2C key)) {\n      ReflectDefineProperty(\n        dest\x2C\n        key\x2C\n        { __proto__: null\x2C ...ReflectGetOwnPropertyDescriptor(src\x2C key) });\n    }\n  });\n};\n\n/**\n * @type {typeof primordials.makeSafe}\n */\nconst makeSafe = (unsafe\x2C safe) => {\n  if (SymbolIterator in unsafe.prototype) {\n    const dummy = new unsafe();\n    let next; // We can reuse the same `next` method.\n\n    ArrayPrototypeForEach(ReflectOwnKeys(unsafe.prototype)\x2C (key) => {\n      if (!ReflectGetOwnPropertyDescriptor(safe.prototype\x2C key)) {\n        const desc = ReflectGetOwnPropertyDescriptor(unsafe.prototype\x2C key);\n        if (\n          typeof desc.value === 'function' &&\n          desc.value.length === 0 &&\n          SymbolIterator in (FunctionPrototypeCall(desc.value\x2C dummy) ?? {})\n        ) {\n          const createIterator = uncurryThis(desc.value);\n          next ??= uncurryThis(createIterator(dummy).next);\n          const SafeIterator = createSafeIterator(createIterator\x2C next);\n          desc.value = function() {\n            return new SafeIterator(this);\n          };\n        }\n        ReflectDefineProperty(safe.prototype\x2C key\x2C { __proto__: null\x2C ...desc });\n      }\n    });\n  } else {\n    copyProps(unsafe.prototype\x2C safe.prototype);\n  }\n  copyProps(unsafe\x2C safe);\n\n  ObjectSetPrototypeOf(safe.prototype\x2C null);\n  ObjectFreeze(safe.prototype);\n  ObjectFreeze(safe);\n  return safe;\n};\nprimordials.makeSafe = makeSafe;\n\n// Subclass the constructors because we need to use their prototype\n// methods later.\n// Defining the `constructor` is necessary here to avoid the default\n// constructor which uses the user-mutable `%ArrayIteratorPrototype%.next`.\nprimordials.SafeMap = makeSafe(\n  Map\x2C\n  class SafeMap extends Map {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\n);\nprimordials.SafeWeakMap = makeSafe(\n  WeakMap\x2C\n  class SafeWeakMap extends WeakMap {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\n);\n\nprimordials.SafeSet = makeSafe(\n  Set\x2C\n  class SafeSet extends Set {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\n);\nprimordials.SafeWeakSet = makeSafe(\n  WeakSet\x2C\n  class SafeWeakSet extends WeakSet {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\n);\n\nprimordials.SafeFinalizationRegistry = makeSafe(\n  FinalizationRegistry\x2C\n  class SafeFinalizationRegistry extends FinalizationRegistry {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(cleanupCallback) { super(cleanupCallback); }\n  }\n);\nprimordials.SafeWeakRef = makeSafe(\n  WeakRef\x2C\n  class SafeWeakRef extends WeakRef {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(target) { super(target); }\n  }\n);\n\nconst SafePromise = makeSafe(\n  Promise\x2C\n  class SafePromise extends Promise {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(executor) { super(executor); }\n  }\n);\n\n/**\n * Attaches a callback that is invoked when the Promise is settled (fulfilled or\n * rejected). The resolved value cannot be modified from the callback.\n * Prefer using async functions when possible.\n * @param {Promise<any>} thisPromise\n * @param {() => void) | undefined | null} onFinally The callback to execute\n *        when the Promise is settled (fulfilled or rejected).\n * @returns {Promise} A Promise for the completion of the callback.\n */\nprimordials.SafePromisePrototypeFinally = (thisPromise\x2C onFinally) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    new SafePromise((a\x2C b) => PromisePrototypeThen(thisPromise\x2C a\x2C b))\n      .finally(onFinally)\n      .then(a\x2C b)\n  );\n\nprimordials.AsyncIteratorPrototype =\n  primordials.ReflectGetPrototypeOf(\n    primordials.ReflectGetPrototypeOf(\n      async function* () {}).prototype);\n\nconst arrayToSafePromiseIterable = (promises\x2C mapFn) =>\n  new primordials.SafeArrayIterator(\n    ArrayPrototypeMap(\n      promises\x2C\n      (promise\x2C i) =>\n        new SafePromise((a\x2C b) => PromisePrototypeThen(mapFn == null ? promise : mapFn(promise\x2C i)\x2C a\x2C b))\n    )\n  );\n\n/**\n * @param {Promise<any>[]} promises\n * @param {(v: Promise<any>\x2C k: number) => Promise<any>} [mapFn]\n * @returns {Promise<any[]>}\n */\nprimordials.SafePromiseAll = (promises\x2C mapFn) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    SafePromise.all(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\n  );\n\n/**\n * @param {Promise<any>[]} promises\n * @param {(v: Promise<any>\x2C k: number) => Promise<any>} [mapFn]\n * @returns {Promise<PromiseSettledResult<any>[]>}\n */\nprimordials.SafePromiseAllSettled = (promises\x2C mapFn) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    SafePromise.allSettled(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\n  );\n\n/**\n * @param {Promise<any>[]} promises\n * @param {(v: Promise<any>\x2C k: number) => Promise<any>} [mapFn]\n * @returns {Promise<any>}\n */\nprimordials.SafePromiseAny = (promises\x2C mapFn) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    SafePromise.any(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\n  );\n\n/**\n * @param {Promise<any>[]} promises\n * @param {(v: Promise<any>\x2C k: number) => Promise<any>} [mapFn]\n * @returns {Promise<any>}\n */\nprimordials.SafePromiseRace = (promises\x2C mapFn) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    SafePromise.race(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\n  );\n\n\nObjectSetPrototypeOf(primordials\x2C null);\nObjectFreeze(primordials);\n
code-source-info,0x1a3e29ca7438,12,9873,9932,C0O9890C7O9897C12O9920,,
code-creation,LazyCompile,10,44625,0x1a3e29ca84f8,19,canBeRequiredWithoutScheme node:internal/bootstrap/loaders:254:36,0x3d9b8018eac0,~
code-source-info,0x1a3e29ca84f8,15,7781,7832,C0O7792C7O7820C12O7820C18O7828,,
tick,0x1a4d49618,44666,0,0x0,3,0x0,0x1e372ce1cc68,0x3d9b8018ed4f,0x109cc956c,0x1e372ce17b2e,0xc1101db1e60,0xc1101dae2ac
code-creation,LazyCompile,10,44750,0x1a3e29ca8730,32, node:internal/modules/cjs/loader:192:41,0x1e372ce1b008,~
code-source-info,0x1a3e29ca8730,430,5873,5899,C0O5881C9O5882C21O5894C31O5899,,
code-creation,LazyCompile,10,44791,0x1a3e29cab1f8,19,getSchemeOnlyModuleNames node:internal/bootstrap/loaders:258:34,0x3d9b8018eb10,~
code-source-info,0x1a3e29cab1f8,15,7867,7918,C0O7876C11O7893C14O7883C18O7914,,
code-creation,LazyCompile,10,44833,0x1a3e29cab340,26, node:internal/modules/cjs/loader:194:50,0x1e372ce1b058,~
code-source-info,0x1a3e29cab340,430,5953,6000,C0O5978C5O5978C15O5990C20O5978C25O6000,,
code-creation,LazyCompile,10,44875,0x1a3e29caba30,28,getEmbedderOptions node:internal/options:32:28,0xd141ccca170,~
code-source-info,0x1a3e29caba30,88,760,877,C0O767C6O795C11O813C17O811C23O852C27O875,,
code-creation,LazyCompile,10,44916,0x1a3e29cabcd8,315,Module._initPaths node:internal/modules/cjs/loader:1247:29,0x1e372ce1bb68,~
code-source-info,0x1a3e29cabcd
code-creation,Eval,10,45000,0x1a3e29cac368,5, node:internal/modules/run_main:1:1,0x1a3e29cac140,~
script-source,454,node:internal/modules/run_main,'use strict';\n\nconst {\n  ObjectCreate\x2C\n  StringPrototypeEndsWith\x2C\n} = primordials;\nconst CJSLoader = require('internal/modules/cjs/loader');\nconst { Module\x2C toRealPath\x2C readPackageScope } = CJSLoader;\nconst { getOptionValue } = require('internal/options');\nconst path = require('path');\nconst {\n  handleProcessExit\x2C\n} = require('internal/modules/esm/handle_process_exit');\n\nfunction resolveMainPath(main) {\n  // Note extension resolution for the main entry point can be deprecated in a\n  // future major.\n  // Module._findPath is monkey-patchable here.\n  let mainPath = Module._findPath(path.resolve(main)\x2C null\x2C true);\n  if (!mainPath)\n    return;\n\n  const preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\n  if (!preserveSymlinksMain)\n    mainPath = toRealPath(mainPath);\n\n  return mainPath;\n}\n\nfunction shouldUseESMLoader(mainPath) {\n  /**\n   * @type {string[]} userLoaders A list of custom loaders registered by the user\n   * (or an empty list when none have been registered).\n   */\n  const userLoaders = getOptionValue('--experimental-loader');\n  if (userLoaders.length > 0)\n    return true;\n  const esModuleSpecifierResolution =\n    getOptionValue('--experimental-specifier-resolution');\n  if (esModuleSpecifierResolution === 'node')\n    return true;\n  // Determine the module format of the main\n  if (mainPath && StringPrototypeEndsWith(mainPath\x2C '.mjs'))\n    return true;\n  if (!mainPath || StringPrototypeEndsWith(mainPath\x2C '.cjs'))\n    return false;\n  const pkg = readPackageScope(mainPath);\n  return pkg && pkg.data.type === 'module';\n}\n\nfunction runMainESM(mainPath) {\n  const { loadESM } = require('internal/process/esm_loader');\n  const { pathToFileURL } = require('internal/url');\n\n  handleMainPromise(loadESM((esmLoader) => {\n    const main = path.isAbsolute(mainPath) ?\n      pathToFileURL(mainPath).href : mainPath;\n    return esmLoader.import(main\x2C undefined\x2C ObjectCreate(null));\n  }));\n}\n\nasync function handleMainPromise(promise) {\n  process.on('exit'\x2C handleProcessExit);\n  try {\n    return await promise;\n  } finally {\n    process.off('exit'\x2C handleProcessExit);\n  }\n}\n\n// For backwards compatibility\x2C we have to run a bunch of\n// monkey-patchable code that belongs to the CJS loader (exposed by\n// `require('module')`) even when the entry point is ESM.\nfunction executeUserEntryPoint(main = process.argv[1]) {\n  const resolvedMain = resolveMainPath(main);\n  const useESMLoader = shouldUseESMLoader(resolvedMain);\n  if (useESMLoader) {\n    runMainESM(resolvedMain || main);\n  } else {\n    // Module._load is the monkey-patchable CJS module loader.\n    Module._load(main\x2C null\x2C true);\n  }\n}\n\nmodule.exports = {\n  executeUserEntryPoint\x2C\n  handleMainPromise\x2C\n};\n
code-source-info,0x1a3e29cac368,454,0,2700,C0O0C4O2700,,
code-creation,Function,10,45125,0x1a3e29cac650,178, node:internal/modules/run_main:1:1,0x1a3e29cac2e0,~
code-source-info,0x1a3e29cac650,454,0,2700,C0O0C66O25C72O41C78O101C84O101C89O149C95O157C101O169C107O228C113O228C118O209C124O270C130O270C134O270C136O320C142O320C147O297C153O2632C160O2653C166O2678C172O2647C177O2699,,
code-creation,LazyCompile,10,45166,0x1a3e29cacc68,163,initializeESMLoader node:internal/process/pre_execution:543:29,0xc1101dafbc8,~
code-source-info,0x1a3e29cacc68,423,17094,18182,C0O17176C6O17176C13O17225C16O17221C21O17219C25O17243C30O17247C34O17267C40O17296C41O17303C42O17403C48O17403C53O17319C58O17359C63O17449C69O17449C74O17650C79O17608C83O17720C88O17681C92O17886C100O17890C106O18006C112O18006C117O17955C122O17963C127O17981C132O18052C138O18052C143O18071C145O18081C149O18095C151O18115C155O18139C157O18158C162O18181,,
code-creation,LazyCompile,10,45208,0x1a3e29cace80,5,get hasLoadedAnyUserCJSModule node:internal/modules/cjs/loader:74:32,0x1e372ce1afb8,~
code-source-info,0x1a3e29cace80,430,2295,2335,C0O2300C4O2333,,
code-creation,LazyCompile,10,45208,0x1a3e29cacf28,21,assert node:internal/assert:11:16,0xa0ae21dbc70,~
script-source,27,node:internal/assert,'use strict';\n\nlet error;\nfunction lazyError() {\n  if (!error) {\n    error = require('internal/errors').codes.ERR_INTERNAL_ASSERTION;\n  }\n  return error;\n}\n\nfunction assert(value\x2C message) {\n  if (!value) {\n    const ERR_INTERNAL_ASSERTION = lazyError();\n    throw new ERR_INTERNAL_ASSERTION(message);\n  }\n}\n\nfunction fail(message) {\n  const ERR_INTERNAL_ASSERTION = lazyError();\n  throw new ERR_INTERNAL_ASSERTION(message);\n}\n\nassert.fail = fail;\n\nmodule.exports = assert;\n
code-source-info,0x1a3e29cacf28,27,172,307,C0O193C4O242C7O242C11O259C13O265C18O259C20O306,,
code-creation,LazyCompile,10,45250,0x1a3e29cad128,53,loadPreloadModules node:internal/process/pre_execution:586:28,0xc1101dafcb8,~
code-source-info,0x1a3e29cad128,423,18658,18978,C0O18745C8O18745C13O18776C15O18813C21O18820C26O18896C32O18896C37O18896C42O18863C47O18940C52O18977,,
code-creation,LazyCompile,10,45291,0x1a3e29cad310,50,initializeFrozenIntrinsics node:internal/process/pre_execution:578:36,0xc1101dafc68,~
code-source-info,0x1a3e29cad310,423,18407,18629,C0O18414C8O18418C14O18463C17O18471C28O18471C34O18583C40O18583C45O18620C49O18628,,
code-creation,LazyCompile,10,45291,0x1a3e29cad438,22,markBootstrapComplete node:internal/process/pre_execution:599:31,0xc1101dafd08,~
code-source-info,0x1a3e29cad438,423,19010,19074,C0O19017C6O19017C11O19047C16O19048C21O19073,,
code-creation,LazyCompile,10,45333,0x1a3e29cad538,80,executeUserEntryPoint node:internal/modules/run_main:74:31,0x1a3e29cac4d8,~
code-source-info,0x1a3e29cad538,454,2325,2630,C7O2341C14O2345C22O2375C25O2375C30O2421C33O2421C38O2457C40O2481C45O2492C50O2481C56O2593C61O2600C73O2600C79O2629,,
code-creation,LazyCompile,10,45333,0x1a3e29cad988,68,resolveMainPath node:internal/modules/run_main:15:25,0x1a3e29cac398,~
code-source-info,0x1a3e29cad988,454,398,812,C0O570C5O577C12O587C15O592C20O592C30O577C36O622C38O641C39O648C40O681C48O681C53O727C55O758C60O769C65O794C67O810,,
code-creation,LazyCompile,10,45416,0x1a3e29cadc80,438,Module._findPath node:internal/modules/cjs/loader:504:28,0x1e372ce1b378,~
code-source-info,0x1a3e29cadc
code-creation,LazyCompile,10,45458,0x1a3e29cae030,45,isAbsolute node:path:1156:13,0x25eb221f3898,~
code-source-info,0x1a3e29cae030,71,35447,35593,C0O35460C8O35460C13O35506C19O35513C26O35531C31O35531C39O35570C41O35566C44O35589,,
code-creation,LazyCompile,10,45541,0x1a3e29cae250,85,stat node:internal/modules/cjs/loader:151:14,0x1e372ce1a878,~
code-source-info,0x1a3e29cae250,430,4669,5066,C0O4684C5O4700C10O4700C17O4730C23O4775C28O4785C33O4785C39O4804C41O4830C43O4844C44O4866C49O4866C54O4898C61O4931C66O5011C71O5021C76O5021C82O5050C84O5064,,
code-creation,LazyCompile,10,45541,0x1a3e29cae390,3,toNamespacedPath node:path:1266:19,0x25eb221f3988,~
code-source-info,0x1a3e29cae390,71,38608,38668,C0O38652C2O38664,,
code-creation,LazyCompile,10,45583,0x1a3e29cae458,44,tryExtensions node:internal/modules/cjs/loader:410:23,0x1e372ce1ab98,~
code-source-info,0x1a3e29cae458,430,11838,12022,C0O11873C2O11885C6O11878C11O11921C16O11937C19O11931C23O11921C29O11956C31O11978C33O11994C34O11894C39O11860C42O12007C43O12020,,
code-creation,LazyCompile,10,45625,0x1a3e29cae588,50,tryFile node:internal/modules/cjs/loader:394:17,0x1e372ce1aaf8,~
code-source-info,0x1a3e29cae588,430,11414,11608,C0O11451C3O11451C8O11472C9O11479C14O11486C15O11493C16O11496C24O11521C26O11535C31O11547C36O11547C41O11568C42O11575C45O11582C49O11606,,
code-creation,LazyCompile,10,45666,0x1a3e29cae6d8,42,toRealPath node:internal/modules/cjs/loader:403:20,0x1e372ce1ab48,~
code-source-info,0x1a3e29cae6d8,430,11629,11741,C0O11647C5O11657C10O11670C17O11690C20O11701C28O11720C35O11657C41O11739,,
code-creation,LazyCompile,10,45833,0x1a3e29caeb08,1079,realpathSync node:fs:2474:22,0x3b46b2018b50,~
script-source,73,node:fs,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// Maintainers\x2C keep in mind that ES1-style octal literals (`0666`) are not\n// allowed in strict mode. Use ES6-style octal literals instead (`0o666`).\n\n'use strict';\n\n// When using FSReqCallback\x2C make sure to create the object only *after* all\n// parameter validation has happened\x2C so that the objects are not kept in memory\n// in case they are created but never used due to an exception.\n\nconst {\n  ArrayPrototypePush\x2C\n  BigIntPrototypeToString\x2C\n  MathMax\x2C\n  Number\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  Promise\x2C\n  ReflectApply\x2C\n  RegExpPrototypeExec\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  String\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeSlice\x2C\n} = primordials;\n\nconst { fs: constants } = internalBinding('constants');\nconst {\n  S_IFIFO\x2C\n  S_IFLNK\x2C\n  S_IFMT\x2C\n  S_IFREG\x2C\n  S_IFSOCK\x2C\n  F_OK\x2C\n  R_OK\x2C\n  W_OK\x2C\n  X_OK\x2C\n  O_WRONLY\x2C\n  O_SYMLINK\n} = constants;\n\nconst pathModule = require('path');\nconst { isArrayBufferView } = require('internal/util/types');\n\n// We need to get the statValues from the binding at the callsite since\n// it's re-initialized after deserialization.\n\nconst binding = internalBinding('fs');\nconst { Buffer } = require('buffer');\nconst {\n  aggregateTwoErrors\x2C\n  codes: {\n    ERR_FS_FILE_TOO_LARGE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_FEATURE_UNAVAILABLE_ON_PLATFORM\x2C\n  }\x2C\n  AbortError\x2C\n  uvErrmapGet\x2C\n  uvException\n} = require('internal/errors');\n\nconst { FSReqCallback } = binding;\nconst { toPathIfFileURL } = require('internal/url');\nconst {\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\n  deprecate\x2C\n  kEmptyObject\x2C\n  promisify: {\n    custom: kCustomPromisifiedSymbol\x2C\n  }\x2C\n} = require('internal/util');\nconst {\n  constants: {\n    kIoMaxLength\x2C\n    kMaxUserId\x2C\n  }\x2C\n  copyObject\x2C\n  Dirent\x2C\n  emitRecursiveRmdirWarning\x2C\n  getDirents\x2C\n  getOptions\x2C\n  getValidatedFd\x2C\n  getValidatedPath\x2C\n  getValidMode\x2C\n  handleErrorFromBinding\x2C\n  nullCheck\x2C\n  preprocessSymlinkDestination\x2C\n  Stats\x2C\n  getStatsFromBinding\x2C\n  realpathCacheKey\x2C\n  stringToFlags\x2C\n  stringToSymlinkType\x2C\n  toUnixTimestamp\x2C\n  validateBufferArray\x2C\n  validateCpOptions\x2C\n  validateOffsetLengthRead\x2C\n  validateOffsetLengthWrite\x2C\n  validatePath\x2C\n  validatePosition\x2C\n  validateRmOptions\x2C\n  validateRmOptionsSync\x2C\n  validateRmdirOptions\x2C\n  validateStringAfterArrayBufferView\x2C\n  validatePrimitiveStringAfterArrayBufferView\x2C\n  warnOnNonPortableTemplate\n} = require('internal/fs/utils');\nconst {\n  Dir\x2C\n  opendir\x2C\n  opendirSync\n} = require('internal/fs/dir');\nconst {\n  CHAR_FORWARD_SLASH\x2C\n  CHAR_BACKWARD_SLASH\x2C\n} = require('internal/constants');\nconst {\n  isUint32\x2C\n  parseFileMode\x2C\n  validateBoolean\x2C\n  validateBuffer\x2C\n  validateEncoding\x2C\n  validateFunction\x2C\n  validateInteger\x2C\n  validateObject\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst watchers = require('internal/fs/watchers');\nconst ReadFileContext = require('internal/fs/read_file_context');\n\nlet truncateWarn = true;\nlet fs;\n\n// Lazy loaded\nlet cpFn;\nlet cpSyncFn;\nlet promises = null;\nlet ReadStream;\nlet WriteStream;\nlet rimraf;\nlet rimrafSync;\n\n// These have to be separate because of how graceful-fs happens to do it's\n// monkeypatching.\nlet FileReadStream;\nlet FileWriteStream;\n\nconst isWindows = process.platform === 'win32';\nconst isOSX = process.platform === 'darwin';\n\n\nconst showStringCoercionDeprecation = deprecate(\n  () => {}\x2C\n  'Implicit coercion of objects with own toString property is deprecated.'\x2C\n  'DEP0162'\n);\nfunction showTruncateDeprecation() {\n  if (truncateWarn) {\n    process.emitWarning(\n      'Using fs.truncate with a file descriptor is deprecated. Please use ' +\n      'fs.ftruncate with a file descriptor instead.'\x2C\n      'DeprecationWarning'\x2C 'DEP0081');\n    truncateWarn = false;\n  }\n}\n\nfunction maybeCallback(cb) {\n  validateFunction(cb\x2C 'cb');\n\n  return cb;\n}\n\n// Ensure that callbacks run in the global context. Only use this function\n// for callbacks that are passed to the binding layer\x2C callbacks that are\n// invoked from JS already run in the proper scope.\nfunction makeCallback(cb) {\n  validateFunction(cb\x2C 'cb');\n\n  return (...args) => ReflectApply(cb\x2C this\x2C args);\n}\n\n// Special case of `makeCallback()` that is specific to async `*stat()` calls as\n// an optimization\x2C since the data passed back to the callback needs to be\n// transformed anyway.\nfunction makeStatsCallback(cb) {\n  validateFunction(cb\x2C 'cb');\n\n  return (err\x2C stats) => {\n    if (err) return cb(err);\n    cb(err\x2C getStatsFromBinding(stats));\n  };\n}\n\nconst isFd = isUint32;\n\nfunction isFileType(stats\x2C fileType) {\n  // Use stats array directly to avoid creating an fs.Stats instance just for\n  // our internal use.\n  let mode = stats[1];\n  if (typeof mode === 'bigint')\n    mode = Number(mode);\n  return (mode & S_IFMT) === fileType;\n}\n\n/**\n * Tests a user's permissions for the file or directory\n * specified by `path`.\n * @param {string | Buffer | URL} path\n * @param {number} [mode]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction access(path\x2C mode\x2C callback) {\n  if (typeof mode === 'function') {\n    callback = mode;\n    mode = F_OK;\n  }\n\n  path = getValidatedPath(path);\n  mode = getValidMode(mode\x2C 'access');\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\n}\n\n/**\n * Synchronously tests a user's permissions for the file or\n * directory specified by `path`.\n * @param {string | Buffer | URL} path\n * @param {number} [mode]\n * @returns {void}\n */\nfunction accessSync(path\x2C mode) {\n  path = getValidatedPath(path);\n  mode = getValidMode(mode\x2C 'access');\n\n  const ctx = { path };\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Tests whether or not the given path exists.\n * @param {string | Buffer | URL} path\n * @param {(exists?: boolean) => any} callback\n * @returns {void}\n */\nfunction exists(path\x2C callback) {\n  maybeCallback(callback);\n\n  function suppressedCallback(err) {\n    callback(err ? false : true);\n  }\n\n  try {\n    fs.access(path\x2C F_OK\x2C suppressedCallback);\n  } catch {\n    return callback(false);\n  }\n}\n\nObjectDefineProperty(exists\x2C kCustomPromisifiedSymbol\x2C {\n  __proto__: null\x2C\n  value: function exists(path) { // eslint-disable-line func-name-matching\n    return new Promise((resolve) => fs.exists(path\x2C resolve));\n  }\x2C\n});\n\n// fs.existsSync never throws\x2C it only returns true or false.\n// Since fs.existsSync never throws\x2C users have established\n// the expectation that passing invalid arguments to it\x2C even like\n// fs.existsSync()\x2C would only get a false in return\x2C so we cannot signal\n// validation errors to users properly out of compatibility concerns.\n// TODO(joyeecheung): deprecate the never-throw-on-invalid-arguments behavior\n/**\n * Synchronously tests whether or not the given path exists.\n * @param {string | Buffer | URL} path\n * @returns {boolean}\n */\nfunction existsSync(path) {\n  try {\n    path = getValidatedPath(path);\n  } catch {\n    return false;\n  }\n  const ctx = { path };\n  const nPath = pathModule.toNamespacedPath(path);\n  binding.access(nPath\x2C F_OK\x2C undefined\x2C ctx);\n\n  // In case of an invalid symlink\x2C `binding.access()` on win32\n  // will **not** return an error and is therefore not enough.\n  // Double check with `binding.stat()`.\n  if (isWindows && ctx.errno === undefined) {\n    binding.stat(nPath\x2C false\x2C undefined\x2C ctx);\n  }\n\n  return ctx.errno === undefined;\n}\n\nfunction readFileAfterOpen(err\x2C fd) {\n  const context = this.context;\n\n  if (err) {\n    context.callback(err);\n    return;\n  }\n\n  context.fd = fd;\n\n  const req = new FSReqCallback();\n  req.oncomplete = readFileAfterStat;\n  req.context = context;\n  binding.fstat(fd\x2C false\x2C req);\n}\n\nfunction readFileAfterStat(err\x2C stats) {\n  const context = this.context;\n\n  if (err)\n    return context.close(err);\n\n  const size = context.size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\n\n  if (size > kIoMaxLength) {\n    err = new ERR_FS_FILE_TOO_LARGE(size);\n    return context.close(err);\n  }\n\n  try {\n    if (size === 0) {\n      context.buffers = [];\n    } else {\n      context.buffer = Buffer.allocUnsafeSlow(size);\n    }\n  } catch (err) {\n    return context.close(err);\n  }\n  context.read();\n}\n\nfunction checkAborted(signal\x2C callback) {\n  if (signal?.aborted) {\n    callback(new AbortError(undefined\x2C { cause: signal?.reason }));\n    return true;\n  }\n  return false;\n}\n\n/**\n * Asynchronously reads the entire contents of a file.\n * @param {string | Buffer | URL | number} path\n * @param {{\n *   encoding?: string | null;\n *   flag?: string;\n *   signal?: AbortSignal;\n *   } | string} [options]\n * @param {(\n *   err?: Error\x2C\n *   data?: string | Buffer\n *   ) => any} callback\n * @returns {void}\n */\nfunction readFile(path\x2C options\x2C callback) {\n  callback = maybeCallback(callback || options);\n  options = getOptions(options\x2C { flag: 'r' });\n  const context = new ReadFileContext(callback\x2C options.encoding);\n  context.isUserFd = isFd(path); // File descriptor ownership\n\n  if (options.signal) {\n    context.signal = options.signal;\n  }\n  if (context.isUserFd) {\n    process.nextTick(function tick(context) {\n      ReflectApply(readFileAfterOpen\x2C { context }\x2C [null\x2C path]);\n    }\x2C context);\n    return;\n  }\n\n  if (checkAborted(options.signal\x2C callback))\n    return;\n\n  const flagsNumber = stringToFlags(options.flag\x2C 'options.flag');\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback();\n  req.context = context;\n  req.oncomplete = readFileAfterOpen;\n  binding.open(pathModule.toNamespacedPath(path)\x2C\n               flagsNumber\x2C\n               0o666\x2C\n               req);\n}\n\nfunction tryStatSync(fd\x2C isUserFd) {\n  const ctx = {};\n  const stats = binding.fstat(fd\x2C false\x2C undefined\x2C ctx);\n  if (ctx.errno !== undefined && !isUserFd) {\n    fs.closeSync(fd);\n    throw uvException(ctx);\n  }\n  return stats;\n}\n\nfunction tryCreateBuffer(size\x2C fd\x2C isUserFd) {\n  let threw = true;\n  let buffer;\n  try {\n    if (size > kIoMaxLength) {\n      throw new ERR_FS_FILE_TOO_LARGE(size);\n    }\n    buffer = Buffer.allocUnsafe(size);\n    threw = false;\n  } finally {\n    if (threw && !isUserFd) fs.closeSync(fd);\n  }\n  return buffer;\n}\n\nfunction tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C len) {\n  let threw = true;\n  let bytesRead;\n  try {\n    bytesRead = fs.readSync(fd\x2C buffer\x2C pos\x2C len);\n    threw = false;\n  } finally {\n    if (threw && !isUserFd) fs.closeSync(fd);\n  }\n  return bytesRead;\n}\n\n/**\n * Synchronously reads the entire contents of a file.\n * @param {string | Buffer | URL | number} path\n * @param {{\n *   encoding?: string | null;\n *   flag?: string;\n *   }} [options]\n * @returns {string | Buffer}\n */\nfunction readFileSync(path\x2C options) {\n  options = getOptions(options\x2C { flag: 'r' });\n  const isUserFd = isFd(path); // File descriptor ownership\n  const fd = isUserFd ? path : fs.openSync(path\x2C options.flag\x2C 0o666);\n\n  const stats = tryStatSync(fd\x2C isUserFd);\n  const size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\n  let pos = 0;\n  let buffer; // Single buffer with file data\n  let buffers; // List for when size is unknown\n\n  if (size === 0) {\n    buffers = [];\n  } else {\n    buffer = tryCreateBuffer(size\x2C fd\x2C isUserFd);\n  }\n\n  let bytesRead;\n\n  if (size !== 0) {\n    do {\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C size - pos);\n      pos += bytesRead;\n    } while (bytesRead !== 0 && pos < size);\n  } else {\n    do {\n      // The kernel lies about many files.\n      // Go ahead and try to read some bytes.\n      buffer = Buffer.allocUnsafe(8192);\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C 0\x2C 8192);\n      if (bytesRead !== 0) {\n        ArrayPrototypePush(buffers\x2C buffer.slice(0\x2C bytesRead));\n      }\n      pos += bytesRead;\n    } while (bytesRead !== 0);\n  }\n\n  if (!isUserFd)\n    fs.closeSync(fd);\n\n  if (size === 0) {\n    // Data was collected into the buffers list.\n    buffer = Buffer.concat(buffers\x2C pos);\n  } else if (pos < size) {\n    buffer = buffer.slice(0\x2C pos);\n  }\n\n  if (options.encoding) buffer = buffer.toString(options.encoding);\n  return buffer;\n}\n\nfunction defaultCloseCallback(err) {\n  if (err != null) throw err;\n}\n\n/**\n * Closes the file descriptor.\n * @param {number} fd\n * @param {(err?: Error) => any} [callback]\n * @returns {void}\n */\nfunction close(fd\x2C callback = defaultCloseCallback) {\n  fd = getValidatedFd(fd);\n  if (callback !== defaultCloseCallback)\n    callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.close(fd\x2C req);\n}\n\n/**\n * Synchronously closes the file descriptor.\n * @param {number} fd\n * @returns {void}\n */\nfunction closeSync(fd) {\n  fd = getValidatedFd(fd);\n\n  const ctx = {};\n  binding.close(fd\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Asynchronously opens a file.\n * @param {string | Buffer | URL} path\n * @param {string | number} [flags]\n * @param {string | number} [mode]\n * @param {(\n *   err?: Error\x2C\n *   fd?: number\n *   ) => any} callback\n * @returns {void}\n */\nfunction open(path\x2C flags\x2C mode\x2C callback) {\n  path = getValidatedPath(path);\n  if (arguments.length < 3) {\n    callback = flags;\n    flags = 'r';\n    mode = 0o666;\n  } else if (typeof mode === 'function') {\n    callback = mode;\n    mode = 0o666;\n  } else {\n    mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\n  }\n  const flagsNumber = stringToFlags(flags);\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n\n  binding.open(pathModule.toNamespacedPath(path)\x2C\n               flagsNumber\x2C\n               mode\x2C\n               req);\n}\n\n/**\n * Synchronously opens a file.\n * @param {string | Buffer | URL} path\n * @param {string | number} [flags]\n * @param {string | number} [mode]\n * @returns {number}\n */\nfunction openSync(path\x2C flags\x2C mode) {\n  path = getValidatedPath(path);\n  const flagsNumber = stringToFlags(flags);\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\n\n  const ctx = { path };\n  const result = binding.open(pathModule.toNamespacedPath(path)\x2C\n                              flagsNumber\x2C mode\x2C\n                              undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Reads file from the specified `fd` (file descriptor).\n * @param {number} fd\n * @param {Buffer | TypedArray | DataView} buffer\n * @param {number} offsetOrOptions\n * @param {number} length\n * @param {number | bigint | null} position\n * @param {(\n *   err?: Error\x2C\n *   bytesRead?: number\x2C\n *   buffer?: Buffer\n *   ) => any} callback\n * @returns {void}\n */\nfunction read(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position\x2C callback) {\n  fd = getValidatedFd(fd);\n\n  let offset = offsetOrOptions;\n  let params = null;\n  if (arguments.length <= 4) {\n    if (arguments.length === 4) {\n      // This is fs.read(fd\x2C buffer\x2C options\x2C callback)\n      validateObject(offsetOrOptions\x2C 'options'\x2C { nullable: true });\n      callback = length;\n      params = offsetOrOptions;\n    } else if (arguments.length === 3) {\n      // This is fs.read(fd\x2C bufferOrParams\x2C callback)\n      if (!isArrayBufferView(buffer)) {\n        // This is fs.read(fd\x2C params\x2C callback)\n        params = buffer;\n        ({ buffer = Buffer.alloc(16384) } = params ?? kEmptyObject);\n      }\n      callback = offsetOrOptions;\n    } else {\n      // This is fs.read(fd\x2C callback)\n      callback = buffer;\n      buffer = Buffer.alloc(16384);\n    }\n\n    ({\n      offset = 0\x2C\n      length = buffer.byteLength - offset\x2C\n      position = null\x2C\n    } = params ?? kEmptyObject);\n  }\n\n  validateBuffer(buffer);\n  callback = maybeCallback(callback);\n\n  if (offset == null) {\n    offset = 0;\n  } else {\n    validateInteger(offset\x2C 'offset'\x2C 0);\n  }\n\n  length |= 0;\n\n  if (length === 0) {\n    return process.nextTick(function tick() {\n      callback(null\x2C 0\x2C buffer);\n    });\n  }\n\n  if (buffer.byteLength === 0) {\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\n                                    'is empty and cannot be written');\n  }\n\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\n\n  if (position == null)\n    position = -1;\n\n  validatePosition(position\x2C 'position');\n\n  function wrapper(err\x2C bytesRead) {\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\n    callback(err\x2C bytesRead || 0\x2C buffer);\n  }\n\n  const req = new FSReqCallback();\n  req.oncomplete = wrapper;\n\n  binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\n}\n\nObjectDefineProperty(read\x2C kCustomPromisifyArgsSymbol\x2C\n                     { __proto__: null\x2C value: ['bytesRead'\x2C 'buffer']\x2C enumerable: false });\n\n/**\n * Synchronously reads the file from the\n * specified `fd` (file descriptor).\n * @param {number} fd\n * @param {Buffer | TypedArray | DataView} buffer\n * @param {{\n *   offset?: number;\n *   length?: number;\n *   position?: number | bigint | null;\n *   }} [offset]\n * @returns {number}\n */\nfunction readSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\n  fd = getValidatedFd(fd);\n\n  validateBuffer(buffer);\n\n  if (arguments.length <= 3) {\n    // Assume fs.readSync(fd\x2C buffer\x2C options)\n    const options = offset || kEmptyObject;\n\n    ({\n      offset = 0\x2C\n      length = buffer.byteLength - offset\x2C\n      position = null\x2C\n    } = options);\n  }\n\n  if (offset == null) {\n    offset = 0;\n  } else {\n    validateInteger(offset\x2C 'offset'\x2C 0);\n  }\n\n  length |= 0;\n\n  if (length === 0) {\n    return 0;\n  }\n\n  if (buffer.byteLength === 0) {\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\n                                    'is empty and cannot be written');\n  }\n\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\n\n  if (position == null)\n    position = -1;\n\n  validatePosition(position\x2C 'position');\n\n  const ctx = {};\n  const result = binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\n                              undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Reads file from the specified `fd` (file descriptor)\n * and writes to an array of `ArrayBufferView`s.\n * @param {number} fd\n * @param {ArrayBufferView[]} buffers\n * @param {number | null} [position]\n * @param {(\n *   err?: Error\x2C\n *   bytesRead?: number\x2C\n *   buffers?: ArrayBufferView[];\n *   ) => any} callback\n * @returns {void}\n */\nfunction readv(fd\x2C buffers\x2C position\x2C callback) {\n  function wrapper(err\x2C read) {\n    callback(err\x2C read || 0\x2C buffers);\n  }\n\n  fd = getValidatedFd(fd);\n  validateBufferArray(buffers);\n  callback = maybeCallback(callback || position);\n\n  const req = new FSReqCallback();\n  req.oncomplete = wrapper;\n\n  if (typeof position !== 'number')\n    position = null;\n\n  return binding.readBuffers(fd\x2C buffers\x2C position\x2C req);\n}\n\nObjectDefineProperty(readv\x2C kCustomPromisifyArgsSymbol\x2C\n                     { __proto__: null\x2C value: ['bytesRead'\x2C 'buffers']\x2C enumerable: false });\n\n/**\n * Synchronously reads file from the\n * specified `fd` (file descriptor) and writes to an array\n * of `ArrayBufferView`s.\n * @param {number} fd\n * @param {ArrayBufferView[]} buffers\n * @param {number | null} [position]\n * @returns {number}\n */\nfunction readvSync(fd\x2C buffers\x2C position) {\n  fd = getValidatedFd(fd);\n  validateBufferArray(buffers);\n\n  const ctx = {};\n\n  if (typeof position !== 'number')\n    position = null;\n\n  const result = binding.readBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Writes `buffer` to the specified `fd` (file descriptor).\n * @param {number} fd\n * @param {Buffer | TypedArray | DataView | string | object} buffer\n * @param {number | object} [offsetOrOptions]\n * @param {number} [length]\n * @param {number | null} [position]\n * @param {(\n *   err?: Error\x2C\n *   bytesWritten?: number;\n *   buffer?: Buffer | TypedArray | DataView\n *   ) => any} callback\n * @returns {void}\n */\nfunction write(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position\x2C callback) {\n  function wrapper(err\x2C written) {\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\n    callback(err\x2C written || 0\x2C buffer);\n  }\n\n  fd = getValidatedFd(fd);\n\n  let offset = offsetOrOptions;\n  if (isArrayBufferView(buffer)) {\n    callback = maybeCallback(callback || position || length || offset);\n\n    if (typeof offset === 'object') {\n      ({\n        offset = 0\x2C\n        length = buffer.byteLength - offset\x2C\n        position = null\x2C\n      } = offsetOrOptions ?? kEmptyObject);\n    }\n\n    if (offset == null || typeof offset === 'function') {\n      offset = 0;\n    } else {\n      validateInteger(offset\x2C 'offset'\x2C 0);\n    }\n    if (typeof length !== 'number')\n      length = buffer.byteLength - offset;\n    if (typeof position !== 'number')\n      position = null;\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\n\n    const req = new FSReqCallback();\n    req.oncomplete = wrapper;\n    return binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\n  }\n\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\n  if (typeof buffer !== 'string') {\n    showStringCoercionDeprecation();\n  }\n\n  if (typeof position !== 'function') {\n    if (typeof offset === 'function') {\n      position = offset;\n      offset = null;\n    } else {\n      position = length;\n    }\n    length = 'utf8';\n  }\n\n  const str = String(buffer);\n  validateEncoding(str\x2C length);\n  callback = maybeCallback(position);\n\n  const req = new FSReqCallback();\n  req.oncomplete = wrapper;\n  return binding.writeString(fd\x2C str\x2C offset\x2C length\x2C req);\n}\n\nObjectDefineProperty(write\x2C kCustomPromisifyArgsSymbol\x2C\n                     { __proto__: null\x2C value: ['bytesWritten'\x2C 'buffer']\x2C enumerable: false });\n\n/**\n * Synchronously writes `buffer` to the\n * specified `fd` (file descriptor).\n * @param {number} fd\n * @param {Buffer | TypedArray | DataView | string} buffer\n * @param {{\n *   offset?: number;\n *   length?: number;\n *   position?: number | null;\n *   }} [offsetOrOptions]\n * @returns {number}\n */\nfunction writeSync(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position) {\n  fd = getValidatedFd(fd);\n  const ctx = {};\n  let result;\n\n  let offset = offsetOrOptions;\n  if (isArrayBufferView(buffer)) {\n    if (typeof offset === 'object') {\n      ({\n        offset = 0\x2C\n        length = buffer.byteLength - offset\x2C\n        position = null\x2C\n      } = offsetOrOptions ?? kEmptyObject);\n    }\n    if (position === undefined)\n      position = null;\n    if (offset == null) {\n      offset = 0;\n    } else {\n      validateInteger(offset\x2C 'offset'\x2C 0);\n    }\n    if (typeof length !== 'number')\n      length = buffer.byteLength - offset;\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\n    result = binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\n                                 undefined\x2C ctx);\n  } else {\n    validatePrimitiveStringAfterArrayBufferView(buffer\x2C 'buffer');\n    validateEncoding(buffer\x2C length);\n\n    if (offset === undefined)\n      offset = null;\n    result = binding.writeString(fd\x2C buffer\x2C offset\x2C length\x2C\n                                 undefined\x2C ctx);\n  }\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Writes an array of `ArrayBufferView`s to the\n * specified `fd` (file descriptor).\n * @param {number} fd\n * @param {ArrayBufferView[]} buffers\n * @param {number | null} [position]\n * @param {(\n *   err?: Error\x2C\n *   bytesWritten?: number\x2C\n *   buffers?: ArrayBufferView[]\n *   ) => any} callback\n * @returns {void}\n */\nfunction writev(fd\x2C buffers\x2C position\x2C callback) {\n  function wrapper(err\x2C written) {\n    callback(err\x2C written || 0\x2C buffers);\n  }\n\n  fd = getValidatedFd(fd);\n  validateBufferArray(buffers);\n  callback = maybeCallback(callback || position);\n\n  if (buffers.length === 0) {\n    process.nextTick(callback\x2C null\x2C 0\x2C buffers);\n    return;\n  }\n\n  const req = new FSReqCallback();\n  req.oncomplete = wrapper;\n\n  if (typeof position !== 'number')\n    position = null;\n\n  return binding.writeBuffers(fd\x2C buffers\x2C position\x2C req);\n}\n\nObjectDefineProperty(writev\x2C kCustomPromisifyArgsSymbol\x2C {\n  __proto__: null\x2C\n  value: ['bytesWritten'\x2C 'buffer']\x2C\n  enumerable: false\n});\n\n/**\n * Synchronously writes an array of `ArrayBufferView`s\n * to the specified `fd` (file descriptor).\n * @param {number} fd\n * @param {ArrayBufferView[]} buffers\n * @param {number | null} [position]\n * @returns {number}\n */\nfunction writevSync(fd\x2C buffers\x2C position) {\n  fd = getValidatedFd(fd);\n  validateBufferArray(buffers);\n\n  if (buffers.length === 0) {\n    return 0;\n  }\n\n  const ctx = {};\n\n  if (typeof position !== 'number')\n    position = null;\n\n  const result = binding.writeBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\n\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Asynchronously renames file at `oldPath` to\n * the pathname provided as `newPath`.\n * @param {string | Buffer | URL} oldPath\n * @param {string | Buffer | URL} newPath\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction rename(oldPath\x2C newPath\x2C callback) {\n  callback = makeCallback(callback);\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\n                 pathModule.toNamespacedPath(newPath)\x2C\n                 req);\n}\n\n\n/**\n * Synchronously renames file at `oldPath` to\n * the pathname provided as `newPath`.\n * @param {string | Buffer | URL} oldPath\n * @param {string | Buffer | URL} newPath\n * @returns {void}\n */\nfunction renameSync(oldPath\x2C newPath) {\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n  const ctx = { path: oldPath\x2C dest: newPath };\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\n                 pathModule.toNamespacedPath(newPath)\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Truncates the file.\n * @param {string | Buffer | URL} path\n * @param {number} [len]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction truncate(path\x2C len\x2C callback) {\n  if (typeof path === 'number') {\n    showTruncateDeprecation();\n    return fs.ftruncate(path\x2C len\x2C callback);\n  }\n  if (typeof len === 'function') {\n    callback = len;\n    len = 0;\n  } else if (len === undefined) {\n    len = 0;\n  }\n\n  validateInteger(len\x2C 'len');\n  len = MathMax(0\x2C len);\n  callback = maybeCallback(callback);\n  fs.open(path\x2C 'r+'\x2C (er\x2C fd) => {\n    if (er) return callback(er);\n    const req = new FSReqCallback();\n    req.oncomplete = function oncomplete(er) {\n      fs.close(fd\x2C (er2) => {\n        callback(aggregateTwoErrors(er2\x2C er));\n      });\n    };\n    binding.ftruncate(fd\x2C len\x2C req);\n  });\n}\n\n/**\n * Synchronously truncates the file.\n * @param {string | Buffer | URL} path\n * @param {number} [len]\n * @returns {void}\n */\nfunction truncateSync(path\x2C len) {\n  if (typeof path === 'number') {\n    // legacy\n    showTruncateDeprecation();\n    return fs.ftruncateSync(path\x2C len);\n  }\n  if (len === undefined) {\n    len = 0;\n  }\n  // Allow error to be thrown\x2C but still close fd.\n  const fd = fs.openSync(path\x2C 'r+');\n  let ret;\n\n  try {\n    ret = fs.ftruncateSync(fd\x2C len);\n  } finally {\n    fs.closeSync(fd);\n  }\n  return ret;\n}\n\n/**\n * Truncates the file descriptor.\n * @param {number} fd\n * @param {number} [len]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction ftruncate(fd\x2C len = 0\x2C callback) {\n  if (typeof len === 'function') {\n    callback = len;\n    len = 0;\n  }\n  fd = getValidatedFd(fd);\n  validateInteger(len\x2C 'len');\n  len = MathMax(0\x2C len);\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.ftruncate(fd\x2C len\x2C req);\n}\n\n/**\n * Synchronously truncates the file descriptor.\n * @param {number} fd\n * @param {number} [len]\n * @returns {void}\n */\nfunction ftruncateSync(fd\x2C len = 0) {\n  fd = getValidatedFd(fd);\n  validateInteger(len\x2C 'len');\n  len = MathMax(0\x2C len);\n  const ctx = {};\n  binding.ftruncate(fd\x2C len\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\nfunction lazyLoadCp() {\n  if (cpFn === undefined) {\n    ({ cpFn } = require('internal/fs/cp/cp'));\n    cpFn = require('util').callbackify(cpFn);\n    ({ cpSyncFn } = require('internal/fs/cp/cp-sync'));\n  }\n}\n\nfunction lazyLoadRimraf() {\n  if (rimraf === undefined)\n    ({ rimraf\x2C rimrafSync } = require('internal/fs/rimraf'));\n}\n\n/**\n * Asynchronously removes a directory.\n * @param {string | Buffer | URL} path\n * @param {{\n *   maxRetries?: number;\n *   recursive?: boolean;\n *   retryDelay?: number;\n *   }} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction rmdir(path\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n\n  callback = makeCallback(callback);\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\n\n  if (options?.recursive) {\n    emitRecursiveRmdirWarning();\n    validateRmOptions(\n      path\x2C\n      { ...options\x2C force: false }\x2C\n      true\x2C\n      (err\x2C options) => {\n        if (err === false) {\n          const req = new FSReqCallback();\n          req.oncomplete = callback;\n          return binding.rmdir(path\x2C req);\n        }\n        if (err) {\n          return callback(err);\n        }\n\n        lazyLoadRimraf();\n        rimraf(path\x2C options\x2C callback);\n      });\n  } else {\n    validateRmdirOptions(options);\n    const req = new FSReqCallback();\n    req.oncomplete = callback;\n    return binding.rmdir(path\x2C req);\n  }\n}\n\n/**\n * Synchronously removes a directory.\n * @param {string | Buffer | URL} path\n * @param {{\n *   maxRetries?: number;\n *   recursive?: boolean;\n *   retryDelay?: number;\n *   }} [options]\n * @returns {void}\n */\nfunction rmdirSync(path\x2C options) {\n  path = getValidatedPath(path);\n\n  if (options?.recursive) {\n    emitRecursiveRmdirWarning();\n    options = validateRmOptionsSync(path\x2C { ...options\x2C force: false }\x2C true);\n    if (options !== false) {\n      lazyLoadRimraf();\n      return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\n    }\n  } else {\n    validateRmdirOptions(options);\n  }\n\n  const ctx = { path };\n  binding.rmdir(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\n  return handleErrorFromBinding(ctx);\n}\n\n/**\n * Asynchronously removes files and\n * directories (modeled on the standard POSIX `rm` utility).\n * @param {string | Buffer | URL} path\n * @param {{\n *   force?: boolean;\n *   maxRetries?: number;\n *   recursive?: boolean;\n *   retryDelay?: number;\n *   }} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction rm(path\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  path = getValidatedPath(path);\n\n  validateRmOptions(path\x2C options\x2C false\x2C (err\x2C options) => {\n    if (err) {\n      return callback(err);\n    }\n    lazyLoadRimraf();\n    return rimraf(pathModule.toNamespacedPath(path)\x2C options\x2C callback);\n  });\n}\n\n/**\n * Synchronously removes files and\n * directories (modeled on the standard POSIX `rm` utility).\n * @param {string | Buffer | URL} path\n * @param {{\n *   force?: boolean;\n *   maxRetries?: number;\n *   recursive?: boolean;\n *   retryDelay?: number;\n *   }} [options]\n * @returns {void}\n */\nfunction rmSync(path\x2C options) {\n  path = getValidatedPath(path);\n  options = validateRmOptionsSync(path\x2C options\x2C false);\n\n  lazyLoadRimraf();\n  return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\n}\n\n/**\n * Forces all currently queued I/O operations associated\n * with the file to the operating system's synchronized\n * I/O completion state.\n * @param {number} fd\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction fdatasync(fd\x2C callback) {\n  fd = getValidatedFd(fd);\n  const req = new FSReqCallback();\n  req.oncomplete = makeCallback(callback);\n  binding.fdatasync(fd\x2C req);\n}\n\n/**\n * Synchronously forces all currently queued I/O operations\n * associated with the file to the operating\n * system's synchronized I/O completion state.\n * @param {number} fd\n * @returns {void}\n */\nfunction fdatasyncSync(fd) {\n  fd = getValidatedFd(fd);\n  const ctx = {};\n  binding.fdatasync(fd\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Requests for all data for the open file descriptor\n * to be flushed to the storage device.\n * @param {number} fd\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction fsync(fd\x2C callback) {\n  fd = getValidatedFd(fd);\n  const req = new FSReqCallback();\n  req.oncomplete = makeCallback(callback);\n  binding.fsync(fd\x2C req);\n}\n\n/**\n * Synchronously requests for all data for the open\n * file descriptor to be flushed to the storage device.\n * @param {number} fd\n * @returns {void}\n */\nfunction fsyncSync(fd) {\n  fd = getValidatedFd(fd);\n  const ctx = {};\n  binding.fsync(fd\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Asynchronously creates a directory.\n * @param {string | Buffer | URL} path\n * @param {{\n *   recursive?: boolean;\n *   mode?: string | number;\n *   } | number} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction mkdir(path\x2C options\x2C callback) {\n  let mode = 0o777;\n  let recursive = false;\n  if (typeof options === 'function') {\n    callback = options;\n  } else if (typeof options === 'number' || typeof options === 'string') {\n    mode = options;\n  } else if (options) {\n    if (options.recursive !== undefined)\n      recursive = options.recursive;\n    if (options.mode !== undefined)\n      mode = options.mode;\n  }\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n\n  validateBoolean(recursive\x2C 'options.recursive');\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.mkdir(pathModule.toNamespacedPath(path)\x2C\n                parseFileMode(mode\x2C 'mode')\x2C recursive\x2C req);\n}\n\n/**\n * Synchronously creates a directory.\n * @param {string | Buffer | URL} path\n * @param {{\n *   recursive?: boolean;\n *   mode?: string | number;\n *   } | number} [options]\n * @returns {string | void}\n */\nfunction mkdirSync(path\x2C options) {\n  let mode = 0o777;\n  let recursive = false;\n  if (typeof options === 'number' || typeof options === 'string') {\n    mode = options;\n  } else if (options) {\n    if (options.recursive !== undefined)\n      recursive = options.recursive;\n    if (options.mode !== undefined)\n      mode = options.mode;\n  }\n  path = getValidatedPath(path);\n  validateBoolean(recursive\x2C 'options.recursive');\n\n  const ctx = { path };\n  const result = binding.mkdir(pathModule.toNamespacedPath(path)\x2C\n                               parseFileMode(mode\x2C 'mode')\x2C recursive\x2C\n                               undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  if (recursive) {\n    return result;\n  }\n}\n\n/**\n * Reads the contents of a directory.\n * @param {string | Buffer | URL} path\n * @param {string | {\n *   encoding?: string;\n *   withFileTypes?: boolean;\n *   }} [options]\n * @param {(\n *   err?: Error\x2C\n *   files?: string[] | Buffer[] | Direct[];\n *   ) => any} callback\n * @returns {void}\n */\nfunction readdir(path\x2C options\x2C callback) {\n  callback = makeCallback(typeof options === 'function' ? options : callback);\n  options = getOptions(options);\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback();\n  if (!options.withFileTypes) {\n    req.oncomplete = callback;\n  } else {\n    req.oncomplete = (err\x2C result) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n      getDirents(path\x2C result\x2C callback);\n    };\n  }\n  binding.readdir(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C\n                  !!options.withFileTypes\x2C req);\n}\n\n/**\n * Synchronously reads the contents of a directory.\n * @param {string | Buffer | URL} path\n * @param {string | {\n *   encoding?: string;\n *   withFileTypes?: boolean;\n *   }} [options]\n * @returns {string | Buffer[] | Dirent[]}\n */\nfunction readdirSync(path\x2C options) {\n  options = getOptions(options);\n  path = getValidatedPath(path);\n  const ctx = { path };\n  const result = binding.readdir(pathModule.toNamespacedPath(path)\x2C\n                                 options.encoding\x2C !!options.withFileTypes\x2C\n                                 undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return options.withFileTypes ? getDirents(path\x2C result) : result;\n}\n\n/**\n * Invokes the callback with the `fs.Stats`\n * for the file descriptor.\n * @param {number} fd\n * @param {{ bigint?: boolean; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   stats?: Stats\n *   ) => any} callback\n * @returns {void}\n */\nfunction fstat(fd\x2C options = { bigint: false }\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = kEmptyObject;\n  }\n  fd = getValidatedFd(fd);\n  callback = makeStatsCallback(callback);\n\n  const req = new FSReqCallback(options.bigint);\n  req.oncomplete = callback;\n  binding.fstat(fd\x2C options.bigint\x2C req);\n}\n\n/**\n * Retrieves the `fs.Stats` for the symbolic link\n * referred to by the `path`.\n * @param {string | Buffer | URL} path\n * @param {{ bigint?: boolean; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   stats?: Stats\n *   ) => any} callback\n * @returns {void}\n */\nfunction lstat(path\x2C options = { bigint: false }\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = kEmptyObject;\n  }\n  callback = makeStatsCallback(callback);\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback(options.bigint);\n  req.oncomplete = callback;\n  binding.lstat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\n}\n\n/**\n * Asynchronously gets the stats of a file.\n * @param {string | Buffer | URL} path\n * @param {{ bigint?: boolean; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   stats?: Stats\n *   ) => any} callback\n * @returns {void}\n */\nfunction stat(path\x2C options = { bigint: false }\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = kEmptyObject;\n  }\n  callback = makeStatsCallback(callback);\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback(options.bigint);\n  req.oncomplete = callback;\n  binding.stat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\n}\n\nfunction hasNoEntryError(ctx) {\n  if (ctx.errno) {\n    const uvErr = uvErrmapGet(ctx.errno);\n    return uvErr?.[0] === 'ENOENT';\n  }\n\n  if (ctx.error) {\n    return ctx.error.code === 'ENOENT';\n  }\n\n  return false;\n}\n\n/**\n * Synchronously retrieves the `fs.Stats` for\n * the file descriptor.\n * @param {number} fd\n * @param {{\n *   bigint?: boolean;\n *   throwIfNoEntry?: boolean;\n *   }} [options]\n * @returns {Stats}\n */\nfunction fstatSync(fd\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\n  fd = getValidatedFd(fd);\n  const ctx = { fd };\n  const stats = binding.fstat(fd\x2C options.bigint\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return getStatsFromBinding(stats);\n}\n\n/**\n * Synchronously retrieves the `fs.Stats` for\n * the symbolic link referred to by the `path`.\n * @param {string | Buffer | URL} path\n * @param {{\n *   bigint?: boolean;\n *   throwIfNoEntry?: boolean;\n *   }} [options]\n * @returns {Stats}\n */\nfunction lstatSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\n  path = getValidatedPath(path);\n  const ctx = { path };\n  const stats = binding.lstat(pathModule.toNamespacedPath(path)\x2C\n                              options.bigint\x2C undefined\x2C ctx);\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\n    return undefined;\n  }\n  handleErrorFromBinding(ctx);\n  return getStatsFromBinding(stats);\n}\n\n/**\n * Synchronously retrieves the `fs.Stats`\n * for the `path`.\n * @param {string | Buffer | URL} path\n * @param {{\n *   bigint?: boolean;\n *   throwIfNoEntry?: boolean;\n *   }} [options]\n * @returns {Stats}\n */\nfunction statSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\n  path = getValidatedPath(path);\n  const ctx = { path };\n  const stats = binding.stat(pathModule.toNamespacedPath(path)\x2C\n                             options.bigint\x2C undefined\x2C ctx);\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\n    return undefined;\n  }\n  handleErrorFromBinding(ctx);\n  return getStatsFromBinding(stats);\n}\n\n/**\n * Reads the contents of a symbolic link\n * referred to by `path`.\n * @param {string | Buffer | URL} path\n * @param {{ encoding?: string; } | string} [options]\n * @param {(\n *   err?: Error\x2C\n *   linkString?: string | Buffer\n *   ) => any} callback\n * @returns {void}\n */\nfunction readlink(path\x2C options\x2C callback) {\n  callback = makeCallback(typeof options === 'function' ? options : callback);\n  options = getOptions(options);\n  path = getValidatedPath(path\x2C 'oldPath');\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.readlink(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\n}\n\n/**\n * Synchronously reads the contents of a symbolic link\n * referred to by `path`.\n * @param {string | Buffer | URL} path\n * @param {{ encoding?: string; } | string} [options]\n * @returns {string | Buffer}\n */\nfunction readlinkSync(path\x2C options) {\n  options = getOptions(options);\n  path = getValidatedPath(path\x2C 'oldPath');\n  const ctx = { path };\n  const result = binding.readlink(pathModule.toNamespacedPath(path)\x2C\n                                  options.encoding\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Creates the link called `path` pointing to `target`.\n * @param {string | Buffer | URL} target\n * @param {string | Buffer | URL} path\n * @param {string | null} [type_]\n * @param {(err?: Error) => any} callback_\n * @returns {void}\n */\nfunction symlink(target\x2C path\x2C type_\x2C callback_) {\n  const type = (typeof type_ === 'string' ? type_ : null);\n  const callback = makeCallback(arguments[arguments.length - 1]);\n\n  target = getValidatedPath(target\x2C 'target');\n  path = getValidatedPath(path);\n\n  if (isWindows && type === null) {\n    let absoluteTarget;\n    try {\n      // Symlinks targets can be relative to the newly created path.\n      // Calculate absolute file name of the symlink target\x2C and check\n      // if it is a directory. Ignore resolve error to keep symlink\n      // errors consistent between platforms if invalid path is\n      // provided.\n      absoluteTarget = pathModule.resolve(path\x2C '..'\x2C target);\n    } catch {\n      // Continue regardless of error.\n    }\n    if (absoluteTarget !== undefined) {\n      stat(absoluteTarget\x2C (err\x2C stat) => {\n        const resolvedType = !err && stat.isDirectory() ? 'dir' : 'file';\n        const resolvedFlags = stringToSymlinkType(resolvedType);\n        const destination = preprocessSymlinkDestination(target\x2C\n                                                         resolvedType\x2C\n                                                         path);\n\n        const req = new FSReqCallback();\n        req.oncomplete = callback;\n        binding.symlink(destination\x2C\n                        pathModule.toNamespacedPath(path)\x2C resolvedFlags\x2C req);\n      });\n      return;\n    }\n  }\n\n  const destination = preprocessSymlinkDestination(target\x2C type\x2C path);\n\n  const flags = stringToSymlinkType(type);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.symlink(destination\x2C pathModule.toNamespacedPath(path)\x2C flags\x2C req);\n}\n\n/**\n * Synchronously creates the link called `path`\n * pointing to `target`.\n * @param {string | Buffer | URL} target\n * @param {string | Buffer | URL} path\n * @param {string | null} [type]\n * @returns {void}\n */\nfunction symlinkSync(target\x2C path\x2C type) {\n  type = (typeof type === 'string' ? type : null);\n  if (isWindows && type === null) {\n    const absoluteTarget = pathModule.resolve(`${path}`\x2C '..'\x2C `${target}`);\n    if (statSync(absoluteTarget\x2C { throwIfNoEntry: false })?.isDirectory()) {\n      type = 'dir';\n    }\n  }\n  target = getValidatedPath(target\x2C 'target');\n  path = getValidatedPath(path);\n  const flags = stringToSymlinkType(type);\n\n  const ctx = { path: target\x2C dest: path };\n  binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\n                  pathModule.toNamespacedPath(path)\x2C flags\x2C undefined\x2C ctx);\n\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Creates a new link from the `existingPath`\n * to the `newPath`.\n * @param {string | Buffer | URL} existingPath\n * @param {string | Buffer | URL} newPath\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction link(existingPath\x2C newPath\x2C callback) {\n  callback = makeCallback(callback);\n\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n\n  binding.link(pathModule.toNamespacedPath(existingPath)\x2C\n               pathModule.toNamespacedPath(newPath)\x2C\n               req);\n}\n\n/**\n * Synchronously creates a new link from the `existingPath`\n * to the `newPath`.\n * @param {string | Buffer | URL} existingPath\n * @param {string | Buffer | URL} newPath\n * @returns {void}\n */\nfunction linkSync(existingPath\x2C newPath) {\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n\n  const ctx = { path: existingPath\x2C dest: newPath };\n  const result = binding.link(pathModule.toNamespacedPath(existingPath)\x2C\n                              pathModule.toNamespacedPath(newPath)\x2C\n                              undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Asynchronously removes a file or symbolic link.\n * @param {string | Buffer | URL} path\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction unlink(path\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C req);\n}\n\n/**\n * Synchronously removes a file or symbolic link.\n * @param {string | Buffer | URL} path\n * @returns {void}\n */\nfunction unlinkSync(path) {\n  path = getValidatedPath(path);\n  const ctx = { path };\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Sets the permissions on the file.\n * @param {number} fd\n * @param {string | number} mode\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction fchmod(fd\x2C mode\x2C callback) {\n  fd = getValidatedFd(fd);\n  mode = parseFileMode(mode\x2C 'mode');\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.fchmod(fd\x2C mode\x2C req);\n}\n\n/**\n * Synchronously sets the permissions on the file.\n * @param {number} fd\n * @param {string | number} mode\n * @returns {void}\n */\nfunction fchmodSync(fd\x2C mode) {\n  fd = getValidatedFd(fd);\n  mode = parseFileMode(mode\x2C 'mode');\n  const ctx = {};\n  binding.fchmod(fd\x2C mode\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Changes the permissions on a symbolic link.\n * @param {string | Buffer | URL} path\n * @param {number} mode\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction lchmod(path\x2C mode\x2C callback) {\n  callback = maybeCallback(callback);\n  mode = parseFileMode(mode\x2C 'mode');\n  fs.open(path\x2C O_WRONLY | O_SYMLINK\x2C (err\x2C fd) => {\n    if (err) {\n      callback(err);\n      return;\n    }\n    // Prefer to return the chmod error\x2C if one occurs\x2C\n    // but still try to close\x2C and report closing errors if they occur.\n    fs.fchmod(fd\x2C mode\x2C (err) => {\n      fs.close(fd\x2C (err2) => {\n        callback(aggregateTwoErrors(err2\x2C err));\n      });\n    });\n  });\n}\n\n/**\n * Synchronously changes the permissions on a symbolic link.\n * @param {string | Buffer | URL} path\n * @param {number} mode\n * @returns {void}\n */\nfunction lchmodSync(path\x2C mode) {\n  const fd = fs.openSync(path\x2C O_WRONLY | O_SYMLINK);\n\n  // Prefer to return the chmod error\x2C if one occurs\x2C\n  // but still try to close\x2C and report closing errors if they occur.\n  let ret;\n  try {\n    ret = fs.fchmodSync(fd\x2C mode);\n  } finally {\n    fs.closeSync(fd);\n  }\n  return ret;\n}\n\n/**\n * Asynchronously changes the permissions of a file.\n * @param {string | Buffer | URL} path\n * @param {string | number} mode\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction chmod(path\x2C mode\x2C callback) {\n  path = getValidatedPath(path);\n  mode = parseFileMode(mode\x2C 'mode');\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\n}\n\n/**\n * Synchronously changes the permissions of a file.\n * @param {string | Buffer | URL} path\n * @param {string | number} mode\n * @returns {void}\n */\nfunction chmodSync(path\x2C mode) {\n  path = getValidatedPath(path);\n  mode = parseFileMode(mode\x2C 'mode');\n\n  const ctx = { path };\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Sets the owner of the symbolic link.\n * @param {string | Buffer | URL} path\n * @param {number} uid\n * @param {number} gid\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction lchown(path\x2C uid\x2C gid\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\n}\n\n/**\n * Synchronously sets the owner of the symbolic link.\n * @param {string | Buffer | URL} path\n * @param {number} uid\n * @param {number} gid\n * @returns {void}\n */\nfunction lchownSync(path\x2C uid\x2C gid) {\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  const ctx = { path };\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Sets the owner of the file.\n * @param {number} fd\n * @param {number} uid\n * @param {number} gid\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction fchown(fd\x2C uid\x2C gid\x2C callback) {\n  fd = getValidatedFd(fd);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.fchown(fd\x2C uid\x2C gid\x2C req);\n}\n\n/**\n * Synchronously sets the owner of the file.\n * @param {number} fd\n * @param {number} uid\n * @param {number} gid\n * @returns {void}\n */\nfunction fchownSync(fd\x2C uid\x2C gid) {\n  fd = getValidatedFd(fd);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n\n  const ctx = {};\n  binding.fchown(fd\x2C uid\x2C gid\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Asynchronously changes the owner and group\n * of a file.\n * @param {string | Buffer | URL} path\n * @param {number} uid\n * @param {number} gid\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction chown(path\x2C uid\x2C gid\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\n}\n\n/**\n * Synchronously changes the owner and group\n * of a file.\n * @param {string | Buffer | URL} path\n * @param {number} uid\n * @param {number} gid\n * @returns {void}\n */\nfunction chownSync(path\x2C uid\x2C gid) {\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  const ctx = { path };\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Changes the file system timestamps of the object\n * referenced by `path`.\n * @param {string | Buffer | URL} path\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction utimes(path\x2C atime\x2C mtime\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\n                 toUnixTimestamp(atime)\x2C\n                 toUnixTimestamp(mtime)\x2C\n                 req);\n}\n\n/**\n * Synchronously changes the file system timestamps\n * of the object referenced by `path`.\n * @param {string | Buffer | URL} path\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @returns {void}\n */\nfunction utimesSync(path\x2C atime\x2C mtime) {\n  path = getValidatedPath(path);\n  const ctx = { path };\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\n                 toUnixTimestamp(atime)\x2C toUnixTimestamp(mtime)\x2C\n                 undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Changes the file system timestamps of the object\n * referenced by the supplied `fd` (file descriptor).\n * @param {number} fd\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction futimes(fd\x2C atime\x2C mtime\x2C callback) {\n  fd = getValidatedFd(fd);\n  atime = toUnixTimestamp(atime\x2C 'atime');\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.futimes(fd\x2C atime\x2C mtime\x2C req);\n}\n\n/**\n * Synchronously changes the file system timestamps\n * of the object referenced by the\n * supplied `fd` (file descriptor).\n * @param {number} fd\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @returns {void}\n */\nfunction futimesSync(fd\x2C atime\x2C mtime) {\n  fd = getValidatedFd(fd);\n  atime = toUnixTimestamp(atime\x2C 'atime');\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\n  const ctx = {};\n  binding.futimes(fd\x2C atime\x2C mtime\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Changes the access and modification times of\n * a file in the same way as `fs.utimes()`.\n * @param {string | Buffer | URL} path\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction lutimes(path\x2C atime\x2C mtime\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\n                  toUnixTimestamp(atime)\x2C\n                  toUnixTimestamp(mtime)\x2C\n                  req);\n}\n\n/**\n * Synchronously changes the access and modification\n * times of a file in the same way as `fs.utimesSync()`.\n * @param {string | Buffer | URL} path\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @returns {void}\n */\nfunction lutimesSync(path\x2C atime\x2C mtime) {\n  path = getValidatedPath(path);\n  const ctx = { path };\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\n                  toUnixTimestamp(atime)\x2C\n                  toUnixTimestamp(mtime)\x2C\n                  undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\nfunction writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback) {\n  if (signal?.aborted) {\n    const abortError = new AbortError(undefined\x2C { cause: signal?.reason });\n    if (isUserFd) {\n      callback(abortError);\n    } else {\n      fs.close(fd\x2C (err) => {\n        callback(aggregateTwoErrors(err\x2C abortError));\n      });\n    }\n    return;\n  }\n  // write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback)\n  fs.write(fd\x2C buffer\x2C offset\x2C length\x2C null\x2C (writeErr\x2C written) => {\n    if (writeErr) {\n      if (isUserFd) {\n        callback(writeErr);\n      } else {\n        fs.close(fd\x2C (err) => {\n          callback(aggregateTwoErrors(err\x2C writeErr));\n        });\n      }\n    } else if (written === length) {\n      if (isUserFd) {\n        callback(null);\n      } else {\n        fs.close(fd\x2C callback);\n      }\n    } else {\n      offset += written;\n      length -= written;\n      writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback);\n    }\n  });\n}\n\n/**\n * Asynchronously writes data to the file.\n * @param {string | Buffer | URL | number} path\n * @param {string | Buffer | TypedArray | DataView | object} data\n * @param {{\n *   encoding?: string | null;\n *   mode?: number;\n *   flag?: string;\n *   signal?: AbortSignal;\n *   } | string} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction writeFile(path\x2C data\x2C options\x2C callback) {\n  callback = maybeCallback(callback || options);\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\n  const flag = options.flag || 'w';\n\n  if (!isArrayBufferView(data)) {\n    validateStringAfterArrayBufferView(data\x2C 'data');\n    if (typeof data !== 'string') {\n      showStringCoercionDeprecation();\n    }\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\n  }\n\n  if (isFd(path)) {\n    const isUserFd = true;\n    const signal = options.signal;\n    writeAll(path\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\n    return;\n  }\n\n  if (checkAborted(options.signal\x2C callback))\n    return;\n\n  fs.open(path\x2C flag\x2C options.mode\x2C (openErr\x2C fd) => {\n    if (openErr) {\n      callback(openErr);\n    } else {\n      const isUserFd = false;\n      const signal = options.signal;\n      writeAll(fd\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\n    }\n  });\n}\n\n/**\n * Synchronously writes data to the file.\n * @param {string | Buffer | URL | number} path\n * @param {string | Buffer | TypedArray | DataView | object} data\n * @param {{\n *   encoding?: string | null;\n *   mode?: number;\n *   flag?: string;\n *   } | string} [options]\n * @returns {void}\n */\nfunction writeFileSync(path\x2C data\x2C options) {\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\n\n  if (!isArrayBufferView(data)) {\n    validateStringAfterArrayBufferView(data\x2C 'data');\n    if (typeof data !== 'string') {\n      showStringCoercionDeprecation();\n    }\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\n  }\n\n  const flag = options.flag || 'w';\n\n  const isUserFd = isFd(path); // File descriptor ownership\n  const fd = isUserFd ? path : fs.openSync(path\x2C flag\x2C options.mode);\n\n  let offset = 0;\n  let length = data.byteLength;\n  try {\n    while (length > 0) {\n      const written = fs.writeSync(fd\x2C data\x2C offset\x2C length);\n      offset += written;\n      length -= written;\n    }\n  } finally {\n    if (!isUserFd) fs.closeSync(fd);\n  }\n}\n\n/**\n * Asynchronously appends data to a file.\n * @param {string | Buffer | URL | number} path\n * @param {string | Buffer} data\n * @param {{\n *   encoding?: string | null;\n *   mode?: number;\n *   flag?: string;\n *   } | string} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction appendFile(path\x2C data\x2C options\x2C callback) {\n  callback = maybeCallback(callback || options);\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\n\n  // Don't make changes directly on options object\n  options = copyObject(options);\n\n  // Force append behavior when using a supplied file descriptor\n  if (!options.flag || isFd(path))\n    options.flag = 'a';\n\n  fs.writeFile(path\x2C data\x2C options\x2C callback);\n}\n\n/**\n * Synchronously appends data to a file.\n * @param {string | Buffer | URL | number} path\n * @param {string | Buffer} data\n * @param {{\n *   encoding?: string | null;\n *   mode?: number;\n *   flag?: string;\n *   } | string} [options]\n * @returns {void}\n */\nfunction appendFileSync(path\x2C data\x2C options) {\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\n\n  // Don't make changes directly on options object\n  options = copyObject(options);\n\n  // Force append behavior when using a supplied file descriptor\n  if (!options.flag || isFd(path))\n    options.flag = 'a';\n\n  fs.writeFileSync(path\x2C data\x2C options);\n}\n\n/**\n * Watches for the changes on `filename`.\n * @param {string | Buffer | URL} filename\n * @param {string | {\n *   persistent?: boolean;\n *   recursive?: boolean;\n *   encoding?: string;\n *   signal?: AbortSignal;\n *   }} [options]\n * @param {(\n *   eventType?: string\x2C\n *   filename?: string | Buffer\n *   ) => any} [listener]\n * @returns {watchers.FSWatcher}\n */\nfunction watch(filename\x2C options\x2C listener) {\n  if (typeof options === 'function') {\n    listener = options;\n  }\n  options = getOptions(options);\n\n  // Don't make changes directly on options object\n  options = copyObject(options);\n\n  if (options.persistent === undefined) options.persistent = true;\n  if (options.recursive === undefined) options.recursive = false;\n  if (options.recursive && !(isOSX || isWindows))\n    throw new ERR_FEATURE_UNAVAILABLE_ON_PLATFORM('watch recursively');\n  const watcher = new watchers.FSWatcher();\n  watcher[watchers.kFSWatchStart](filename\x2C\n                                  options.persistent\x2C\n                                  options.recursive\x2C\n                                  options.encoding);\n\n  if (listener) {\n    watcher.addListener('change'\x2C listener);\n  }\n  if (options.signal) {\n    if (options.signal.aborted) {\n      process.nextTick(() => watcher.close());\n    } else {\n      const listener = () => watcher.close();\n      options.signal.addEventListener('abort'\x2C listener);\n      watcher.once('close'\x2C () => {\n        options.signal.removeEventListener('abort'\x2C listener);\n      });\n    }\n  }\n\n  return watcher;\n}\n\n\nconst statWatchers = new SafeMap();\n\n/**\n * Watches for changes on `filename`.\n * @param {string | Buffer | URL} filename\n * @param {{\n *   bigint?: boolean;\n *   persistent?: boolean;\n *   interval?: number;\n *   }} [options]\n * @param {(\n *   current?: Stats\x2C\n *   previous?: Stats\n *   ) => any} listener\n * @returns {watchers.StatWatcher}\n */\nfunction watchFile(filename\x2C options\x2C listener) {\n  filename = getValidatedPath(filename);\n  filename = pathModule.resolve(filename);\n  let stat;\n\n  if (options === null || typeof options !== 'object') {\n    listener = options;\n    options = null;\n  }\n\n  options = {\n    // Poll interval in milliseconds. 5007 is what libev used to use. It's\n    // a little on the slow side but let's stick with it for now to keep\n    // behavioral changes to a minimum.\n    interval: 5007\x2C\n    persistent: true\x2C\n    ...options\n  };\n\n  validateFunction(listener\x2C 'listener');\n\n  stat = statWatchers.get(filename);\n\n  if (stat === undefined) {\n    stat = new watchers.StatWatcher(options.bigint);\n    stat[watchers.kFSStatWatcherStart](filename\x2C\n                                       options.persistent\x2C options.interval);\n    statWatchers.set(filename\x2C stat);\n  } else {\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('add');\n  }\n\n  stat.addListener('change'\x2C listener);\n  return stat;\n}\n\n/**\n * Stops watching for changes on `filename`.\n * @param {string | Buffer | URL} filename\n * @param {() => any} [listener]\n * @returns {void}\n */\nfunction unwatchFile(filename\x2C listener) {\n  filename = getValidatedPath(filename);\n  filename = pathModule.resolve(filename);\n  const stat = statWatchers.get(filename);\n\n  if (stat === undefined) return;\n\n  if (typeof listener === 'function') {\n    const beforeListenerCount = stat.listenerCount('change');\n    stat.removeListener('change'\x2C listener);\n    if (stat.listenerCount('change') < beforeListenerCount)\n      stat[watchers.kFSStatWatcherAddOrCleanRef]('clean');\n  } else {\n    stat.removeAllListeners('change');\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('cleanAll');\n  }\n\n  if (stat.listenerCount('change') === 0) {\n    stat.stop();\n    statWatchers.delete(filename);\n  }\n}\n\n\nlet splitRoot;\nif (isWindows) {\n  // Regex to find the device root on Windows (e.g. 'c:\\\\')\x2C including trailing\n  // slash.\n  const splitRootRe = /^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*/;\n  splitRoot = function splitRoot(str) {\n    return RegExpPrototypeExec(splitRootRe\x2C str)[0];\n  };\n} else {\n  splitRoot = function splitRoot(str) {\n    for (let i = 0; i < str.length; ++i) {\n      if (StringPrototypeCharCodeAt(str\x2C i) !== CHAR_FORWARD_SLASH)\n        return StringPrototypeSlice(str\x2C 0\x2C i);\n    }\n    return str;\n  };\n}\n\nfunction encodeRealpathResult(result\x2C options) {\n  if (!options || !options.encoding || options.encoding === 'utf8')\n    return result;\n  const asBuffer = Buffer.from(result);\n  if (options.encoding === 'buffer') {\n    return asBuffer;\n  }\n  return asBuffer.toString(options.encoding);\n}\n\n// Finds the next portion of a (partial) path\x2C up to the next path delimiter\nlet nextPart;\nif (isWindows) {\n  nextPart = function nextPart(p\x2C i) {\n    for (; i < p.length; ++i) {\n      const ch = StringPrototypeCharCodeAt(p\x2C i);\n\n      // Check for a separator character\n      if (ch === CHAR_BACKWARD_SLASH || ch === CHAR_FORWARD_SLASH)\n        return i;\n    }\n    return -1;\n  };\n} else {\n  nextPart = function nextPart(p\x2C i) {\n    return StringPrototypeIndexOf(p\x2C '/'\x2C i);\n  };\n}\n\n/**\n * Returns the resolved pathname.\n * @param {string | Buffer | URL} p\n * @param {string | { encoding?: string | null; }} [options]\n * @returns {string | Buffer}\n */\nfunction realpathSync(p\x2C options) {\n  options = getOptions(options);\n  p = toPathIfFileURL(p);\n  if (typeof p !== 'string') {\n    p += '';\n  }\n  validatePath(p);\n  p = pathModule.resolve(p);\n\n  const cache = options[realpathCacheKey];\n  const maybeCachedResult = cache?.get(p);\n  if (maybeCachedResult) {\n    return maybeCachedResult;\n  }\n\n  const seenLinks = new SafeMap();\n  const knownHard = new SafeSet();\n  const original = p;\n\n  // Current character position in p\n  let pos;\n  // The partial path so far\x2C including a trailing slash if any\n  let current;\n  // The partial path without a trailing slash (except when pointing at a root)\n  let base;\n  // The partial path scanned in the previous round\x2C with slash\n  let previous;\n\n  // Skip over roots\n  current = base = splitRoot(p);\n  pos = current.length;\n\n  // On windows\x2C check that the root exists. On unix there is no need.\n  if (isWindows) {\n    const ctx = { path: base };\n    binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\n    handleErrorFromBinding(ctx);\n    knownHard.add(base);\n  }\n\n  // Walk down the path\x2C swapping out linked path parts for their real\n  // values\n  // NB: p.length changes.\n  while (pos < p.length) {\n    // find the next part\n    const result = nextPart(p\x2C pos);\n    previous = current;\n    if (result === -1) {\n      const last = StringPrototypeSlice(p\x2C pos);\n      current += last;\n      base = previous + last;\n      pos = p.length;\n    } else {\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\n      pos = result + 1;\n    }\n\n    // Continue if not a symlink\x2C break if a pipe/socket\n    if (knownHard.has(base) || cache?.get(base) === base) {\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\n        break;\n      }\n      continue;\n    }\n\n    let resolvedLink;\n    const maybeCachedResolved = cache?.get(base);\n    if (maybeCachedResolved) {\n      resolvedLink = maybeCachedResolved;\n    } else {\n      // Use stats array directly to avoid creating an fs.Stats instance just\n      // for our internal use.\n\n      const baseLong = pathModule.toNamespacedPath(base);\n      const ctx = { path: base };\n      const stats = binding.lstat(baseLong\x2C true\x2C undefined\x2C ctx);\n      handleErrorFromBinding(ctx);\n\n      if (!isFileType(stats\x2C S_IFLNK)) {\n        knownHard.add(base);\n        cache?.set(base\x2C base);\n        continue;\n      }\n\n      // Read the link if it wasn't read before\n      // dev/ino always return 0 on windows\x2C so skip the check.\n      let linkTarget = null;\n      let id;\n      if (!isWindows) {\n        const dev = BigIntPrototypeToString(stats[0]\x2C 32);\n        const ino = BigIntPrototypeToString(stats[7]\x2C 32);\n        id = `${dev}:${ino}`;\n        if (seenLinks.has(id)) {\n          linkTarget = seenLinks.get(id);\n        }\n      }\n      if (linkTarget === null) {\n        const ctx = { path: base };\n        binding.stat(baseLong\x2C false\x2C undefined\x2C ctx);\n        handleErrorFromBinding(ctx);\n        linkTarget = binding.readlink(baseLong\x2C undefined\x2C undefined\x2C ctx);\n        handleErrorFromBinding(ctx);\n      }\n      resolvedLink = pathModule.resolve(previous\x2C linkTarget);\n\n      cache?.set(base\x2C resolvedLink);\n      if (!isWindows) seenLinks.set(id\x2C linkTarget);\n    }\n\n    // Resolve the link\x2C then start over\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\n\n    // Skip over roots\n    current = base = splitRoot(p);\n    pos = current.length;\n\n    // On windows\x2C check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard.has(base)) {\n      const ctx = { path: base };\n      binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\n      handleErrorFromBinding(ctx);\n      knownHard.add(base);\n    }\n  }\n\n  cache?.set(original\x2C p);\n  return encodeRealpathResult(p\x2C options);\n}\n\n/**\n * Returns the resolved pathname.\n * @param {string | Buffer | URL} path\n * @param {string | { encoding?: string; }} [options]\n * @returns {string | Buffer}\n */\nrealpathSync.native = (path\x2C options) => {\n  options = getOptions(options);\n  path = getValidatedPath(path);\n  const ctx = { path };\n  const result = binding.realpath(path\x2C options.encoding\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return result;\n};\n\n/**\n * Asynchronously computes the canonical pathname by\n * resolving `.`\x2C `..` and symbolic links.\n * @param {string | Buffer | URL} p\n * @param {string | { encoding?: string; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   resolvedPath?: string | Buffer\n *   ) => any} callback\n * @returns {void}\n */\nfunction realpath(p\x2C options\x2C callback) {\n  callback = typeof options === 'function' ? options : maybeCallback(callback);\n  options = getOptions(options);\n  p = toPathIfFileURL(p);\n\n  if (typeof p !== 'string') {\n    p += '';\n  }\n  validatePath(p);\n  p = pathModule.resolve(p);\n\n  const seenLinks = new SafeMap();\n  const knownHard = new SafeSet();\n\n  // Current character position in p\n  let pos;\n  // The partial path so far\x2C including a trailing slash if any\n  let current;\n  // The partial path without a trailing slash (except when pointing at a root)\n  let base;\n  // The partial path scanned in the previous round\x2C with slash\n  let previous;\n\n  current = base = splitRoot(p);\n  pos = current.length;\n\n  // On windows\x2C check that the root exists. On unix there is no need.\n  if (isWindows && !knownHard.has(base)) {\n    fs.lstat(base\x2C (err\x2C stats) => {\n      if (err) return callback(err);\n      knownHard.add(base);\n      LOOP();\n    });\n  } else {\n    process.nextTick(LOOP);\n  }\n\n  // Walk down the path\x2C swapping out linked path parts for their real\n  // values\n  function LOOP() {\n    // Stop if scanned past end of path\n    if (pos >= p.length) {\n      return callback(null\x2C encodeRealpathResult(p\x2C options));\n    }\n\n    // find the next part\n    const result = nextPart(p\x2C pos);\n    previous = current;\n    if (result === -1) {\n      const last = StringPrototypeSlice(p\x2C pos);\n      current += last;\n      base = previous + last;\n      pos = p.length;\n    } else {\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\n      pos = result + 1;\n    }\n\n    // Continue if not a symlink\x2C break if a pipe/socket\n    if (knownHard.has(base)) {\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\n        return callback(null\x2C encodeRealpathResult(p\x2C options));\n      }\n      return process.nextTick(LOOP);\n    }\n\n    return fs.lstat(base\x2C { bigint: true }\x2C gotStat);\n  }\n\n  function gotStat(err\x2C stats) {\n    if (err) return callback(err);\n\n    // If not a symlink\x2C skip to the next path part\n    if (!stats.isSymbolicLink()) {\n      knownHard.add(base);\n      return process.nextTick(LOOP);\n    }\n\n    // Stat & read the link if not read before.\n    // Call `gotTarget()` as soon as the link target is known.\n    // `dev`/`ino` always return 0 on windows\x2C so skip the check.\n    let id;\n    if (!isWindows) {\n      const dev = BigIntPrototypeToString(stats.dev\x2C 32);\n      const ino = BigIntPrototypeToString(stats.ino\x2C 32);\n      id = `${dev}:${ino}`;\n      if (seenLinks.has(id)) {\n        return gotTarget(null\x2C seenLinks.get(id));\n      }\n    }\n    fs.stat(base\x2C (err) => {\n      if (err) return callback(err);\n\n      fs.readlink(base\x2C (err\x2C target) => {\n        if (!isWindows) seenLinks.set(id\x2C target);\n        gotTarget(err\x2C target);\n      });\n    });\n  }\n\n  function gotTarget(err\x2C target) {\n    if (err) return callback(err);\n\n    gotResolvedLink(pathModule.resolve(previous\x2C target));\n  }\n\n  function gotResolvedLink(resolvedLink) {\n    // Resolve the link\x2C then start over\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\n    current = base = splitRoot(p);\n    pos = current.length;\n\n    // On windows\x2C check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard.has(base)) {\n      fs.lstat(base\x2C (err) => {\n        if (err) return callback(err);\n        knownHard.add(base);\n        LOOP();\n      });\n    } else {\n      process.nextTick(LOOP);\n    }\n  }\n}\n\n/**\n * Asynchronously computes the canonical pathname by\n * resolving `.`\x2C `..` and symbolic links.\n * @param {string | Buffer | URL} path\n * @param {string | { encoding?: string; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   resolvedPath?: string | Buffer\n *   ) => any} callback\n * @returns {void}\n */\nrealpath.native = (path\x2C options\x2C callback) => {\n  callback = makeCallback(callback || options);\n  options = getOptions(options);\n  path = getValidatedPath(path);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  return binding.realpath(path\x2C options.encoding\x2C req);\n};\n\n/**\n * Creates a unique temporary directory.\n * @param {string} prefix\n * @param {string | { encoding?: string; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   directory?: string\n *   ) => any} callback\n * @returns {void}\n */\nfunction mkdtemp(prefix\x2C options\x2C callback) {\n  callback = makeCallback(typeof options === 'function' ? options : callback);\n  options = getOptions(options);\n\n  validateString(prefix\x2C 'prefix');\n  nullCheck(prefix\x2C 'prefix');\n  warnOnNonPortableTemplate(prefix);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C req);\n}\n\n/**\n * Synchronously creates a unique temporary directory.\n * @param {string} prefix\n * @param {string | { encoding?: string; }} [options]\n * @returns {string}\n */\nfunction mkdtempSync(prefix\x2C options) {\n  options = getOptions(options);\n\n  validateString(prefix\x2C 'prefix');\n  nullCheck(prefix\x2C 'prefix');\n  warnOnNonPortableTemplate(prefix);\n  const path = `${prefix}XXXXXX`;\n  const ctx = { path };\n  const result = binding.mkdtemp(path\x2C options.encoding\x2C\n                                 undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Asynchronously copies `src` to `dest`. By\n * default\x2C `dest` is overwritten if it already exists.\n * @param {string | Buffer | URL} src\n * @param {string | Buffer | URL} dest\n * @param {number} [mode]\n * @param {() => any} callback\n * @returns {void}\n */\nfunction copyFile(src\x2C dest\x2C mode\x2C callback) {\n  if (typeof mode === 'function') {\n    callback = mode;\n    mode = 0;\n  }\n\n  src = getValidatedPath(src\x2C 'src');\n  dest = getValidatedPath(dest\x2C 'dest');\n\n  src = pathModule._makeLong(src);\n  dest = pathModule._makeLong(dest);\n  mode = getValidMode(mode\x2C 'copyFile');\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.copyFile(src\x2C dest\x2C mode\x2C req);\n}\n\n/**\n * Synchronously copies `src` to `dest`. By\n * default\x2C `dest` is overwritten if it already exists.\n * @param {string | Buffer | URL} src\n * @param {string | Buffer | URL} dest\n * @param {number} [mode]\n * @returns {void}\n */\nfunction copyFileSync(src\x2C dest\x2C mode) {\n  src = getValidatedPath(src\x2C 'src');\n  dest = getValidatedPath(dest\x2C 'dest');\n\n  const ctx = { path: src\x2C dest };  // non-prefixed\n\n  src = pathModule._makeLong(src);\n  dest = pathModule._makeLong(dest);\n  mode = getValidMode(mode\x2C 'copyFile');\n  binding.copyFile(src\x2C dest\x2C mode\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Asynchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\n * symlink. The contents of directories will be copied recursively.\n * @param {string | URL} src\n * @param {string | URL} dest\n * @param {object} [options]\n * @param {() => any} callback\n * @returns {void}\n */\nfunction cp(src\x2C dest\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  callback = makeCallback(callback);\n  options = validateCpOptions(options);\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\n  lazyLoadCp();\n  cpFn(src\x2C dest\x2C options\x2C callback);\n}\n\n/**\n * Synchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\n * symlink. The contents of directories will be copied recursively.\n * @param {string | URL} src\n * @param {string | URL} dest\n * @param {object} [options]\n * @returns {void}\n */\nfunction cpSync(src\x2C dest\x2C options) {\n  options = validateCpOptions(options);\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\n  lazyLoadCp();\n  cpSyncFn(src\x2C dest\x2C options);\n}\n\nfunction lazyLoadStreams() {\n  if (!ReadStream) {\n    ({ ReadStream\x2C WriteStream } = require('internal/fs/streams'));\n    FileReadStream = ReadStream;\n    FileWriteStream = WriteStream;\n  }\n}\n\n/**\n * Creates a readable stream with a default `highWaterMark`\n * of 64 KiB.\n * @param {string | Buffer | URL} path\n * @param {string | {\n *   flags?: string;\n *   encoding?: string;\n *   fd?: number | FileHandle;\n *   mode?: number;\n *   autoClose?: boolean;\n *   emitClose?: boolean;\n *   start: number;\n *   end?: number;\n *   highWaterMark?: number;\n *   fs?: object | null;\n *   }} [options]\n * @returns {ReadStream}\n */\nfunction createReadStream(path\x2C options) {\n  lazyLoadStreams();\n  return new ReadStream(path\x2C options);\n}\n\n/**\n * Creates a write stream.\n * @param {string | Buffer | URL} path\n * @param {string | {\n *   flags?: string;\n *   encoding?: string;\n *   fd?: number | FileHandle;\n *   mode?: number;\n *   autoClose?: boolean;\n *   emitClose?: boolean;\n *   start: number;\n *   fs?: object | null;\n *   }} [options]\n * @returns {WriteStream}\n */\nfunction createWriteStream(path\x2C options) {\n  lazyLoadStreams();\n  return new WriteStream(path\x2C options);\n}\n\nmodule.exports = fs = {\n  appendFile\x2C\n  appendFileSync\x2C\n  access\x2C\n  accessSync\x2C\n  chown\x2C\n  chownSync\x2C\n  chmod\x2C\n  chmodSync\x2C\n  close\x2C\n  closeSync\x2C\n  copyFile\x2C\n  copyFileSync\x2C\n  cp\x2C\n  cpSync\x2C\n  createReadStream\x2C\n  createWriteStream\x2C\n  exists\x2C\n  existsSync\x2C\n  fchown\x2C\n  fchownSync\x2C\n  fchmod\x2C\n  fchmodSync\x2C\n  fdatasync\x2C\n  fdatasyncSync\x2C\n  fstat\x2C\n  fstatSync\x2C\n  fsync\x2C\n  fsyncSync\x2C\n  ftruncate\x2C\n  ftruncateSync\x2C\n  futimes\x2C\n  futimesSync\x2C\n  lchown\x2C\n  lchownSync\x2C\n  lchmod: constants.O_SYMLINK !== undefined ? lchmod : undefined\x2C\n  lchmodSync: constants.O_SYMLINK !== undefined ? lchmodSync : undefined\x2C\n  link\x2C\n  linkSync\x2C\n  lstat\x2C\n  lstatSync\x2C\n  lutimes\x2C\n  lutimesSync\x2C\n  mkdir\x2C\n  mkdirSync\x2C\n  mkdtemp\x2C\n  mkdtempSync\x2C\n  open\x2C\n  openSync\x2C\n  opendir\x2C\n  opendirSync\x2C\n  readdir\x2C\n  readdirSync\x2C\n  read\x2C\n  readSync\x2C\n  readv\x2C\n  readvSync\x2C\n  readFile\x2C\n  readFileSync\x2C\n  readlink\x2C\n  readlinkSync\x2C\n  realpath\x2C\n  realpathSync\x2C\n  rename\x2C\n  renameSync\x2C\n  rm\x2C\n  rmSync\x2C\n  rmdir\x2C\n  rmdirSync\x2C\n  stat\x2C\n  statSync\x2C\n  symlink\x2C\n  symlinkSync\x2C\n  truncate\x2C\n  truncateSync\x2C\n  unwatchFile\x2C\n  unlink\x2C\n  unlinkSync\x2C\n  utimes\x2C\n  utimesSync\x2C\n  watch\x2C\n  watchFile\x2C\n  writeFile\x2C\n  writeFileSync\x2C\n  write\x2C\n  writeSync\x2C\n  writev\x2C\n  writevSync\x2C\n  Dir\x2C\n  Dirent\x2C\n  Stats\x2C\n\n  get ReadStream() {\n    lazyLoadStreams();\n    return ReadStream;\n  }\x2C\n\n  set ReadStream(val) {\n    ReadStream = val;\n  }\x2C\n\n  get WriteStream() {\n    lazyLoadStreams();\n    return WriteStream;\n  }\x2C\n\n  set WriteStream(val) {\n    WriteStream = val;\n  }\x2C\n\n  // Legacy names... these have to be separate because of how graceful-fs\n  // (and possibly other) modules monkey patch the values.\n  get FileReadStream() {\n    lazyLoadStreams();\n    return FileReadStream;\n  }\x2C\n\n  set FileReadStream(val) {\n    FileReadStream = val;\n  }\x2C\n\n  get FileWriteStream() {\n    lazyLoadStreams();\n    return FileWriteStream;\n  }\x2C\n\n  set FileWriteStream(val) {\n    FileWriteStream = val;\n  }\x2C\n\n  // For tests\n  _toUnixTimestamp: toUnixTimestamp\n};\n\nObjectDefineProperties(fs\x2C {\n  F_OK: { __proto__: null\x2C enumerable: true\x2C value: F_OK || 0 }\x2C\n  R_OK: { __proto__: null\x2C enumerable: true\x2C value: R_OK || 0 }\x2C\n  W_OK: { __proto__: null\x2C enumerable: true\x2C value: W_OK || 0 }\x2C\n  X_OK: { __proto__: null\x2C enumerable: true\x2C value: X_OK || 0 }\x2C\n  constants: {\n    __proto__: null\x2C\n    configurable: false\x2C\n    enumerable: true\x2C\n    value: constants\n  }\x2C\n  promises: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() {\n      promises ??= require('internal/fs/promises').exports;\n      return promises;\n    }\n  }\n});\n
code-source-info,0x1a3e29caeb
tick,0x104d64404,49000,0,0x0,3,0x0,0x1a3e29cae6fb,0x1a3e29cae5b5,0x1a3e29cae46f,0x1a3e29caddd8,0x1a3e29cad9a6,0x1a3e29cad551,0xc1101dae2d0
tick,0x104ea0f0c,49000,0,0x0,3,0x0,0x1a3e29cae6fb,0x1a3e29cae5b5,0x1a3e29cae46f,0x1a3e29caddd8,0x1a3e29cad9a6,0x1a3e29cad551,0xc1101dae2d0
tick,0x1a4db2bb8,49000,0,0x0,3,0x0,0x1a3e29cae6fb,0x1a3e29cae5b5,0x1a3e29cae46f,0x1a3e29caddd8,0x1a3e29cad9a6,0x1a3e29cad551,0xc1101dae2d0
code-creation,LazyCompile,10,49041,0x1a3e29cb53f8,135,getOptions node:internal/fs/utils:319:20,0x3b46b2034b68,~
script-source,77,node:internal/fs/utils,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  BigInt\x2C\n  Date\x2C\n  DateNow\x2C\n  DatePrototypeGetTime\x2C\n  ErrorCaptureStackTrace\x2C\n  FunctionPrototypeCall\x2C\n  Number\x2C\n  NumberIsFinite\x2C\n  NumberIsInteger\x2C\n  MathMin\x2C\n  MathRound\x2C\n  ObjectIs\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  ReflectOwnKeys\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeIncludes\x2C\n  Symbol\x2C\n  TypedArrayPrototypeIncludes\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\nconst {\n  codes: {\n    ERR_FS_EISDIR\x2C\n    ERR_FS_INVALID_SYMLINK_TYPE\x2C\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_OUT_OF_RANGE\n  }\x2C\n  hideStackFrames\x2C\n  uvException\n} = require('internal/errors');\nconst {\n  isArrayBufferView\x2C\n  isBigInt64Array\x2C\n  isDate\x2C\n  isUint8Array\x2C\n} = require('internal/util/types');\nconst {\n  kEmptyObject\x2C\n  once\x2C\n} = require('internal/util');\nconst { toPathIfFileURL } = require('internal/url');\nconst {\n  validateAbortSignal\x2C\n  validateBoolean\x2C\n  validateFunction\x2C\n  validateInt32\x2C\n  validateInteger\x2C\n  validateObject\x2C\n  validateUint32\x2C\n} = require('internal/validators');\nconst pathModule = require('path');\nconst kType = Symbol('type');\nconst kStats = Symbol('stats');\nconst assert = require('internal/assert');\n\nconst {\n  fs: {\n    F_OK = 0\x2C\n    W_OK = 0\x2C\n    R_OK = 0\x2C\n    X_OK = 0\x2C\n    COPYFILE_EXCL\x2C\n    COPYFILE_FICLONE\x2C\n    COPYFILE_FICLONE_FORCE\x2C\n    O_APPEND\x2C\n    O_CREAT\x2C\n    O_EXCL\x2C\n    O_RDONLY\x2C\n    O_RDWR\x2C\n    O_SYNC\x2C\n    O_TRUNC\x2C\n    O_WRONLY\x2C\n    S_IFBLK\x2C\n    S_IFCHR\x2C\n    S_IFDIR\x2C\n    S_IFIFO\x2C\n    S_IFLNK\x2C\n    S_IFMT\x2C\n    S_IFREG\x2C\n    S_IFSOCK\x2C\n    UV_FS_SYMLINK_DIR\x2C\n    UV_FS_SYMLINK_JUNCTION\x2C\n    UV_DIRENT_UNKNOWN\x2C\n    UV_DIRENT_FILE\x2C\n    UV_DIRENT_DIR\x2C\n    UV_DIRENT_LINK\x2C\n    UV_DIRENT_FIFO\x2C\n    UV_DIRENT_SOCKET\x2C\n    UV_DIRENT_CHAR\x2C\n    UV_DIRENT_BLOCK\n  }\x2C\n  os: {\n    errno: {\n      EISDIR\n    }\n  }\n} = internalBinding('constants');\n\n// The access modes can be any of F_OK\x2C R_OK\x2C W_OK or X_OK. Some might not be\n// available on specific systems. They can be used in combination as well\n// (F_OK | R_OK | W_OK | X_OK).\nconst kMinimumAccessMode = MathMin(F_OK\x2C W_OK\x2C R_OK\x2C X_OK);\nconst kMaximumAccessMode = F_OK | W_OK | R_OK | X_OK;\n\nconst kDefaultCopyMode = 0;\n// The copy modes can be any of COPYFILE_EXCL\x2C COPYFILE_FICLONE or\n// COPYFILE_FICLONE_FORCE. They can be used in combination as well\n// (COPYFILE_EXCL | COPYFILE_FICLONE | COPYFILE_FICLONE_FORCE).\nconst kMinimumCopyMode = MathMin(\n  kDefaultCopyMode\x2C\n  COPYFILE_EXCL\x2C\n  COPYFILE_FICLONE\x2C\n  COPYFILE_FICLONE_FORCE\n);\nconst kMaximumCopyMode = COPYFILE_EXCL |\n                         COPYFILE_FICLONE |\n                         COPYFILE_FICLONE_FORCE;\n\n// Most platforms don't allow reads or writes >= 2 GiB.\n// See https://github.com/libuv/libuv/pull/1501.\nconst kIoMaxLength = 2 ** 31 - 1;\n\n// Use 64kb in case the file type is not a regular file and thus do not know the\n// actual file size. Increasing the value further results in more frequent over\n// allocation for small files and consumes CPU time and memory that should be\n// used else wise.\n// Use up to 512kb per read otherwise to partition reading big files to prevent\n// blocking other threads in case the available threads are all in use.\nconst kReadFileUnknownBufferLength = 64 * 1024;\nconst kReadFileBufferLength = 512 * 1024;\n\nconst kWriteFileMaxChunkSize = 512 * 1024;\n\nconst kMaxUserId = 2 ** 32 - 1;\n\nconst isWindows = process.platform === 'win32';\n\nlet fs;\nfunction lazyLoadFs() {\n  if (!fs) {\n    fs = require('fs');\n  }\n  return fs;\n}\n\nfunction assertEncoding(encoding) {\n  if (encoding && !Buffer.isEncoding(encoding)) {\n    const reason = 'is invalid encoding';\n    throw new ERR_INVALID_ARG_VALUE(encoding\x2C 'encoding'\x2C reason);\n  }\n}\n\nclass Dirent {\n  constructor(name\x2C type) {\n    this.name = name;\n    this[kType] = type;\n  }\n\n  isDirectory() {\n    return this[kType] === UV_DIRENT_DIR;\n  }\n\n  isFile() {\n    return this[kType] === UV_DIRENT_FILE;\n  }\n\n  isBlockDevice() {\n    return this[kType] === UV_DIRENT_BLOCK;\n  }\n\n  isCharacterDevice() {\n    return this[kType] === UV_DIRENT_CHAR;\n  }\n\n  isSymbolicLink() {\n    return this[kType] === UV_DIRENT_LINK;\n  }\n\n  isFIFO() {\n    return this[kType] === UV_DIRENT_FIFO;\n  }\n\n  isSocket() {\n    return this[kType] === UV_DIRENT_SOCKET;\n  }\n}\n\nclass DirentFromStats extends Dirent {\n  constructor(name\x2C stats) {\n    super(name\x2C null);\n    this[kStats] = stats;\n  }\n}\n\nfor (const name of ReflectOwnKeys(Dirent.prototype)) {\n  if (name === 'constructor') {\n    continue;\n  }\n  DirentFromStats.prototype[name] = function() {\n    return this[kStats][name]();\n  };\n}\n\nfunction copyObject(source) {\n  const target = {};\n  for (const key in source)\n    target[key] = source[key];\n  return target;\n}\n\nconst bufferSep = Buffer.from(pathModule.sep);\n\nfunction join(path\x2C name) {\n  if ((typeof path === 'string' || isUint8Array(path)) &&\n      name === undefined) {\n    return path;\n  }\n\n  if (typeof path === 'string' && isUint8Array(name)) {\n    const pathBuffer = Buffer.from(pathModule.join(path\x2C pathModule.sep));\n    return Buffer.concat([pathBuffer\x2C name]);\n  }\n\n  if (typeof path === 'string' && typeof name === 'string') {\n    return pathModule.join(path\x2C name);\n  }\n\n  if (isUint8Array(path) && isUint8Array(name)) {\n    return Buffer.concat([path\x2C bufferSep\x2C name]);\n  }\n\n  throw new ERR_INVALID_ARG_TYPE(\n    'path'\x2C ['string'\x2C 'Buffer']\x2C path);\n}\n\nfunction getDirents(path\x2C { 0: names\x2C 1: types }\x2C callback) {\n  let i;\n  if (typeof callback === 'function') {\n    const len = names.length;\n    let toFinish = 0;\n    callback = once(callback);\n    for (i = 0; i < len; i++) {\n      const type = types[i];\n      if (type === UV_DIRENT_UNKNOWN) {\n        const name = names[i];\n        const idx = i;\n        toFinish++;\n        let filepath;\n        try {\n          filepath = join(path\x2C name);\n        } catch (err) {\n          callback(err);\n          return;\n        }\n        lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\n          if (err) {\n            callback(err);\n            return;\n          }\n          names[idx] = new DirentFromStats(name\x2C stats);\n          if (--toFinish === 0) {\n            callback(null\x2C names);\n          }\n        });\n      } else {\n        names[i] = new Dirent(names[i]\x2C types[i]);\n      }\n    }\n    if (toFinish === 0) {\n      callback(null\x2C names);\n    }\n  } else {\n    const len = names.length;\n    for (i = 0; i < len; i++) {\n      names[i] = getDirent(path\x2C names[i]\x2C types[i]);\n    }\n    return names;\n  }\n}\n\nfunction getDirent(path\x2C name\x2C type\x2C callback) {\n  if (typeof callback === 'function') {\n    if (type === UV_DIRENT_UNKNOWN) {\n      let filepath;\n      try {\n        filepath = join(path\x2C name);\n      } catch (err) {\n        callback(err);\n        return;\n      }\n      lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\n        if (err) {\n          callback(err);\n          return;\n        }\n        callback(null\x2C new DirentFromStats(name\x2C stats));\n      });\n    } else {\n      callback(null\x2C new Dirent(name\x2C type));\n    }\n  } else if (type === UV_DIRENT_UNKNOWN) {\n    const stats = lazyLoadFs().lstatSync(join(path\x2C name));\n    return new DirentFromStats(name\x2C stats);\n  } else {\n    return new Dirent(name\x2C type);\n  }\n}\n\nfunction getOptions(options\x2C defaultOptions = kEmptyObject) {\n  if (options == null || typeof options === 'function') {\n    return defaultOptions;\n  }\n\n  if (typeof options === 'string') {\n    defaultOptions = { ...defaultOptions };\n    defaultOptions.encoding = options;\n    options = defaultOptions;\n  } else if (typeof options !== 'object') {\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C ['string'\x2C 'Object']\x2C options);\n  }\n\n  if (options.encoding !== 'buffer')\n    assertEncoding(options.encoding);\n\n  if (options.signal !== undefined) {\n    validateAbortSignal(options.signal\x2C 'options.signal');\n  }\n  return options;\n}\n\n/**\n * @param {InternalFSBinding.FSSyncContext} ctx\n */\nfunction handleErrorFromBinding(ctx) {\n  if (ctx.errno !== undefined) {  // libuv error numbers\n    const err = uvException(ctx);\n    ErrorCaptureStackTrace(err\x2C handleErrorFromBinding);\n    throw err;\n  }\n  if (ctx.error !== undefined) {  // Errors created in C++ land.\n    // TODO(joyeecheung): currently\x2C ctx.error are encoding errors\n    // usually caused by memory problems. We need to figure out proper error\n    // code(s) for this.\n    ErrorCaptureStackTrace(ctx.error\x2C handleErrorFromBinding);\n    throw ctx.error;\n  }\n}\n\n// Check if the path contains null types if it is a string nor Uint8Array\x2C\n// otherwise return silently.\nconst nullCheck = hideStackFrames((path\x2C propName\x2C throwError = true) => {\n  const pathIsString = typeof path === 'string';\n  const pathIsUint8Array = isUint8Array(path);\n\n  // We can only perform meaningful checks on strings and Uint8Arrays.\n  if ((!pathIsString && !pathIsUint8Array) ||\n      (pathIsString && !StringPrototypeIncludes(path\x2C '\\u0000')) ||\n      (pathIsUint8Array && !TypedArrayPrototypeIncludes(path\x2C 0))) {\n    return;\n  }\n\n  const err = new ERR_INVALID_ARG_VALUE(\n    propName\x2C\n    path\x2C\n    'must be a string or Uint8Array without null bytes'\n  );\n  if (throwError) {\n    throw err;\n  }\n  return err;\n});\n\nfunction preprocessSymlinkDestination(path\x2C type\x2C linkPath) {\n  if (!isWindows) {\n    // No preprocessing is needed on Unix.\n    return path;\n  }\n  path = '' + path;\n  if (type === 'junction') {\n    // Junctions paths need to be absolute and \\\\?\\-prefixed.\n    // A relative target is relative to the link's parent directory.\n    path = pathModule.resolve(linkPath\x2C '..'\x2C path);\n    return pathModule.toNamespacedPath(path);\n  }\n  if (pathModule.isAbsolute(path)) {\n    // If the path is absolute\x2C use the \\\\?\\-prefix to enable long filenames\n    return pathModule.toNamespacedPath(path);\n  }\n  // Windows symlinks don't tolerate forward slashes.\n  return RegExpPrototypeSymbolReplace(/\\//g\x2C path\x2C '\\\\');\n}\n\n// Constructor for file stats.\nfunction StatsBase(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\n                   ino\x2C size\x2C blocks) {\n  this.dev = dev;\n  this.mode = mode;\n  this.nlink = nlink;\n  this.uid = uid;\n  this.gid = gid;\n  this.rdev = rdev;\n  this.blksize = blksize;\n  this.ino = ino;\n  this.size = size;\n  this.blocks = blocks;\n}\n\nStatsBase.prototype.isDirectory = function() {\n  return this._checkModeProperty(S_IFDIR);\n};\n\nStatsBase.prototype.isFile = function() {\n  return this._checkModeProperty(S_IFREG);\n};\n\nStatsBase.prototype.isBlockDevice = function() {\n  return this._checkModeProperty(S_IFBLK);\n};\n\nStatsBase.prototype.isCharacterDevice = function() {\n  return this._checkModeProperty(S_IFCHR);\n};\n\nStatsBase.prototype.isSymbolicLink = function() {\n  return this._checkModeProperty(S_IFLNK);\n};\n\nStatsBase.prototype.isFIFO = function() {\n  return this._checkModeProperty(S_IFIFO);\n};\n\nStatsBase.prototype.isSocket = function() {\n  return this._checkModeProperty(S_IFSOCK);\n};\n\nconst kNsPerMsBigInt = 10n ** 6n;\nconst kNsPerSecBigInt = 10n ** 9n;\nconst kMsPerSec = 10 ** 3;\nconst kNsPerMs = 10 ** 6;\nfunction msFromTimeSpec(sec\x2C nsec) {\n  return sec * kMsPerSec + nsec / kNsPerMs;\n}\n\nfunction nsFromTimeSpecBigInt(sec\x2C nsec) {\n  return sec * kNsPerSecBigInt + nsec;\n}\n\n// The Date constructor performs Math.floor() on the absolute value\n// of the timestamp: https://tc39.es/ecma262/#sec-timeclip\n// Since there may be a precision loss when the timestamp is\n// converted to a floating point number\x2C we manually round\n// the timestamp here before passing it to Date().\n// Refs: https://github.com/nodejs/node/pull/12607\n// Refs: https://github.com/nodejs/node/pull/43714\nfunction dateFromMs(ms) {\n  // Coercing to number\x2C ms can be bigint\n  return new Date(MathRound(Number(ms)));\n}\n\nfunction BigIntStats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\n                     ino\x2C size\x2C blocks\x2C\n                     atimeNs\x2C mtimeNs\x2C ctimeNs\x2C birthtimeNs) {\n  ReflectApply(StatsBase\x2C this\x2C [dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\n                                 ino\x2C size\x2C blocks]);\n\n  this.atimeMs = atimeNs / kNsPerMsBigInt;\n  this.mtimeMs = mtimeNs / kNsPerMsBigInt;\n  this.ctimeMs = ctimeNs / kNsPerMsBigInt;\n  this.birthtimeMs = birthtimeNs / kNsPerMsBigInt;\n  this.atimeNs = atimeNs;\n  this.mtimeNs = mtimeNs;\n  this.ctimeNs = ctimeNs;\n  this.birthtimeNs = birthtimeNs;\n  this.atime = dateFromMs(this.atimeMs);\n  this.mtime = dateFromMs(this.mtimeMs);\n  this.ctime = dateFromMs(this.ctimeMs);\n  this.birthtime = dateFromMs(this.birthtimeMs);\n}\n\nObjectSetPrototypeOf(BigIntStats.prototype\x2C StatsBase.prototype);\nObjectSetPrototypeOf(BigIntStats\x2C StatsBase);\n\nBigIntStats.prototype._checkModeProperty = function(property) {\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\n    property === S_IFSOCK)) {\n    return false;  // Some types are not available on Windows\n  }\n  return (this.mode & BigInt(S_IFMT)) === BigInt(property);\n};\n\nfunction Stats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\n               ino\x2C size\x2C blocks\x2C\n               atimeMs\x2C mtimeMs\x2C ctimeMs\x2C birthtimeMs) {\n  FunctionPrototypeCall(StatsBase\x2C this\x2C dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C\n                        blksize\x2C ino\x2C size\x2C blocks);\n  this.atimeMs = atimeMs;\n  this.mtimeMs = mtimeMs;\n  this.ctimeMs = ctimeMs;\n  this.birthtimeMs = birthtimeMs;\n  this.atime = dateFromMs(atimeMs);\n  this.mtime = dateFromMs(mtimeMs);\n  this.ctime = dateFromMs(ctimeMs);\n  this.birthtime = dateFromMs(birthtimeMs);\n}\n\nObjectSetPrototypeOf(Stats.prototype\x2C StatsBase.prototype);\nObjectSetPrototypeOf(Stats\x2C StatsBase);\n\n// HACK: Workaround for https://github.com/standard-things/esm/issues/821.\n// TODO(ronag): Remove this as soon as `esm` publishes a fixed version.\nStats.prototype.isFile = StatsBase.prototype.isFile;\n\nStats.prototype._checkModeProperty = function(property) {\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\n    property === S_IFSOCK)) {\n    return false;  // Some types are not available on Windows\n  }\n  return (this.mode & S_IFMT) === property;\n};\n\n/**\n * @param {Float64Array | BigInt64Array} stats\n * @param {number} offset\n * @returns {BigIntStats | Stats}\n */\nfunction getStatsFromBinding(stats\x2C offset = 0) {\n  if (isBigInt64Array(stats)) {\n    return new BigIntStats(\n      stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\n      stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\n      stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\n      stats[9 + offset]\x2C\n      nsFromTimeSpecBigInt(stats[10 + offset]\x2C stats[11 + offset])\x2C\n      nsFromTimeSpecBigInt(stats[12 + offset]\x2C stats[13 + offset])\x2C\n      nsFromTimeSpecBigInt(stats[14 + offset]\x2C stats[15 + offset])\x2C\n      nsFromTimeSpecBigInt(stats[16 + offset]\x2C stats[17 + offset])\n    );\n  }\n  return new Stats(\n    stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\n    stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\n    stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\n    stats[9 + offset]\x2C\n    msFromTimeSpec(stats[10 + offset]\x2C stats[11 + offset])\x2C\n    msFromTimeSpec(stats[12 + offset]\x2C stats[13 + offset])\x2C\n    msFromTimeSpec(stats[14 + offset]\x2C stats[15 + offset])\x2C\n    msFromTimeSpec(stats[16 + offset]\x2C stats[17 + offset])\n  );\n}\n\nfunction stringToFlags(flags\x2C name = 'flags') {\n  if (typeof flags === 'number') {\n    validateInt32(flags\x2C name);\n    return flags;\n  }\n\n  if (flags == null) {\n    return O_RDONLY;\n  }\n\n  switch (flags) {\n    case 'r' : return O_RDONLY;\n    case 'rs' : // Fall through.\n    case 'sr' : return O_RDONLY | O_SYNC;\n    case 'r+' : return O_RDWR;\n    case 'rs+' : // Fall through.\n    case 'sr+' : return O_RDWR | O_SYNC;\n\n    case 'w' : return O_TRUNC | O_CREAT | O_WRONLY;\n    case 'wx' : // Fall through.\n    case 'xw' : return O_TRUNC | O_CREAT | O_WRONLY | O_EXCL;\n\n    case 'w+' : return O_TRUNC | O_CREAT | O_RDWR;\n    case 'wx+': // Fall through.\n    case 'xw+': return O_TRUNC | O_CREAT | O_RDWR | O_EXCL;\n\n    case 'a' : return O_APPEND | O_CREAT | O_WRONLY;\n    case 'ax' : // Fall through.\n    case 'xa' : return O_APPEND | O_CREAT | O_WRONLY | O_EXCL;\n    case 'as' : // Fall through.\n    case 'sa' : return O_APPEND | O_CREAT | O_WRONLY | O_SYNC;\n\n    case 'a+' : return O_APPEND | O_CREAT | O_RDWR;\n    case 'ax+': // Fall through.\n    case 'xa+': return O_APPEND | O_CREAT | O_RDWR | O_EXCL;\n    case 'as+': // Fall through.\n    case 'sa+': return O_APPEND | O_CREAT | O_RDWR | O_SYNC;\n  }\n\n  throw new ERR_INVALID_ARG_VALUE('flags'\x2C flags);\n}\n\nconst stringToSymlinkType = hideStackFrames((type) => {\n  let flags = 0;\n  if (typeof type === 'string') {\n    switch (type) {\n      case 'dir':\n        flags |= UV_FS_SYMLINK_DIR;\n        break;\n      case 'junction':\n        flags |= UV_FS_SYMLINK_JUNCTION;\n        break;\n      case 'file':\n        break;\n      default:\n        throw new ERR_FS_INVALID_SYMLINK_TYPE(type);\n    }\n  }\n  return flags;\n});\n\n// converts Date or number to a fractional UNIX timestamp\nfunction toUnixTimestamp(time\x2C name = 'time') {\n  // eslint-disable-next-line eqeqeq\n  if (typeof time === 'string' && +time == time) {\n    return +time;\n  }\n  if (NumberIsFinite(time)) {\n    if (time < 0) {\n      return DateNow() / 1000;\n    }\n    return time;\n  }\n  if (isDate(time)) {\n    // Convert to 123.456 UNIX timestamp\n    return DatePrototypeGetTime(time) / 1000;\n  }\n  throw new ERR_INVALID_ARG_TYPE(name\x2C ['Date'\x2C 'Time in seconds']\x2C time);\n}\n\nconst validateOffsetLengthRead = hideStackFrames(\n  (offset\x2C length\x2C bufferLength) => {\n    if (offset < 0) {\n      throw new ERR_OUT_OF_RANGE('offset'\x2C '>= 0'\x2C offset);\n    }\n    if (length < 0) {\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\n    }\n    if (offset + length > bufferLength) {\n      throw new ERR_OUT_OF_RANGE('length'\x2C\n                                 `<= ${bufferLength - offset}`\x2C length);\n    }\n  }\n);\n\nconst validateOffsetLengthWrite = hideStackFrames(\n  (offset\x2C length\x2C byteLength) => {\n    if (offset > byteLength) {\n      throw new ERR_OUT_OF_RANGE('offset'\x2C `<= ${byteLength}`\x2C offset);\n    }\n\n    if (length > byteLength - offset) {\n      throw new ERR_OUT_OF_RANGE('length'\x2C `<= ${byteLength - offset}`\x2C length);\n    }\n\n    if (length < 0) {\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\n    }\n\n    validateInt32(length\x2C 'length'\x2C 0);\n  }\n);\n\nconst validatePath = hideStackFrames((path\x2C propName = 'path') => {\n  if (typeof path !== 'string' && !isUint8Array(path)) {\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C ['string'\x2C 'Buffer'\x2C 'URL']\x2C path);\n  }\n\n  const err = nullCheck(path\x2C propName\x2C false);\n\n  if (err !== undefined) {\n    throw err;\n  }\n});\n\nconst getValidatedPath = hideStackFrames((fileURLOrPath\x2C propName = 'path') => {\n  const path = toPathIfFileURL(fileURLOrPath);\n  validatePath(path\x2C propName);\n  return path;\n});\n\nconst getValidatedFd = hideStackFrames((fd\x2C propName = 'fd') => {\n  if (ObjectIs(fd\x2C -0)) {\n    return 0;\n  }\n\n  validateInt32(fd\x2C propName\x2C 0);\n\n  return fd;\n});\n\nconst validateBufferArray = hideStackFrames((buffers\x2C propName = 'buffers') => {\n  if (!ArrayIsArray(buffers))\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\n\n  for (let i = 0; i < buffers.length; i++) {\n    if (!isArrayBufferView(buffers[i]))\n      throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\n  }\n\n  return buffers;\n});\n\nlet nonPortableTemplateWarn = true;\n\nfunction warnOnNonPortableTemplate(template) {\n  // Template strings passed to the mkdtemp() family of functions should not\n  // end with 'X' because they are handled inconsistently across platforms.\n  if (nonPortableTemplateWarn && StringPrototypeEndsWith(template\x2C 'X')) {\n    process.emitWarning('mkdtemp() templates ending with X are not portable. ' +\n                        'For details see: https://nodejs.org/api/fs.html');\n    nonPortableTemplateWarn = false;\n  }\n}\n\nconst defaultCpOptions = {\n  dereference: false\x2C\n  errorOnExist: false\x2C\n  filter: undefined\x2C\n  force: true\x2C\n  preserveTimestamps: false\x2C\n  recursive: false\x2C\n  verbatimSymlinks: false\x2C\n};\n\nconst defaultRmOptions = {\n  recursive: false\x2C\n  force: false\x2C\n  retryDelay: 100\x2C\n  maxRetries: 0\n};\n\nconst defaultRmdirOptions = {\n  retryDelay: 100\x2C\n  maxRetries: 0\x2C\n  recursive: false\x2C\n};\n\nconst validateCpOptions = hideStackFrames((options) => {\n  if (options === undefined)\n    return { ...defaultCpOptions };\n  validateObject(options\x2C 'options');\n  options = { ...defaultCpOptions\x2C ...options };\n  validateBoolean(options.dereference\x2C 'options.dereference');\n  validateBoolean(options.errorOnExist\x2C 'options.errorOnExist');\n  validateBoolean(options.force\x2C 'options.force');\n  validateBoolean(options.preserveTimestamps\x2C 'options.preserveTimestamps');\n  validateBoolean(options.recursive\x2C 'options.recursive');\n  validateBoolean(options.verbatimSymlinks\x2C 'options.verbatimSymlinks');\n  if (options.dereference === true && options.verbatimSymlinks === true) {\n    throw new ERR_INCOMPATIBLE_OPTION_PAIR('dereference'\x2C 'verbatimSymlinks');\n  }\n  if (options.filter !== undefined) {\n    validateFunction(options.filter\x2C 'options.filter');\n  }\n  return options;\n});\n\nconst validateRmOptions = hideStackFrames((path\x2C options\x2C expectDir\x2C cb) => {\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\n  validateBoolean(options.force\x2C 'options.force');\n\n  lazyLoadFs().stat(path\x2C (err\x2C stats) => {\n    if (err) {\n      if (options.force && err.code === 'ENOENT') {\n        return cb(null\x2C options);\n      }\n      return cb(err\x2C options);\n    }\n\n    if (expectDir && !stats.isDirectory()) {\n      return cb(false);\n    }\n\n    if (stats.isDirectory() && !options.recursive) {\n      return cb(new ERR_FS_EISDIR({\n        code: 'EISDIR'\x2C\n        message: 'is a directory'\x2C\n        path\x2C\n        syscall: 'rm'\x2C\n        errno: EISDIR\n      }));\n    }\n    return cb(null\x2C options);\n  });\n});\n\nconst validateRmOptionsSync = hideStackFrames((path\x2C options\x2C expectDir) => {\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\n  validateBoolean(options.force\x2C 'options.force');\n\n  if (!options.force || expectDir || !options.recursive) {\n    const isDirectory = lazyLoadFs()\n      .statSync(path\x2C { throwIfNoEntry: !options.force })?.isDirectory();\n\n    if (expectDir && !isDirectory) {\n      return false;\n    }\n\n    if (isDirectory && !options.recursive) {\n      throw new ERR_FS_EISDIR({\n        code: 'EISDIR'\x2C\n        message: 'is a directory'\x2C\n        path\x2C\n        syscall: 'rm'\x2C\n        errno: EISDIR\n      });\n    }\n  }\n\n  return options;\n});\n\nlet recursiveRmdirWarned = process.noDeprecation;\nfunction emitRecursiveRmdirWarning() {\n  if (!recursiveRmdirWarned) {\n    process.emitWarning(\n      'In future versions of Node.js\x2C fs.rmdir(path\x2C { recursive: true }) ' +\n      'will be removed. Use fs.rm(path\x2C { recursive: true }) instead'\x2C\n      'DeprecationWarning'\x2C\n      'DEP0147'\n    );\n    recursiveRmdirWarned = true;\n  }\n}\n\nconst validateRmdirOptions = hideStackFrames(\n  (options\x2C defaults = defaultRmdirOptions) => {\n    if (options === undefined)\n      return defaults;\n    validateObject(options\x2C 'options');\n\n    options = { ...defaults\x2C ...options };\n\n    validateBoolean(options.recursive\x2C 'options.recursive');\n    validateInt32(options.retryDelay\x2C 'options.retryDelay'\x2C 0);\n    validateUint32(options.maxRetries\x2C 'options.maxRetries');\n\n    return options;\n  });\n\nconst getValidMode = hideStackFrames((mode\x2C type) => {\n  let min = kMinimumAccessMode;\n  let max = kMaximumAccessMode;\n  let def = F_OK;\n  if (type === 'copyFile') {\n    min = kMinimumCopyMode;\n    max = kMaximumCopyMode;\n    def = mode || kDefaultCopyMode;\n  } else {\n    assert(type === 'access');\n  }\n  if (mode == null) {\n    return def;\n  }\n  if (NumberIsInteger(mode) && mode >= min && mode <= max) {\n    return mode;\n  }\n  if (typeof mode !== 'number') {\n    throw new ERR_INVALID_ARG_TYPE('mode'\x2C 'integer'\x2C mode);\n  }\n  throw new ERR_OUT_OF_RANGE(\n    'mode'\x2C `an integer >= ${min} && <= ${max}`\x2C mode);\n});\n\nconst validateStringAfterArrayBufferView = hideStackFrames((buffer\x2C name) => {\n  if (typeof buffer === 'string') {\n    return;\n  }\n\n  if (\n    typeof buffer === 'object' &&\n    buffer !== null &&\n    typeof buffer.toString === 'function' &&\n    ObjectPrototypeHasOwnProperty(buffer\x2C 'toString')\n  ) {\n    return;\n  }\n\n  throw new ERR_INVALID_ARG_TYPE(\n    name\x2C\n    ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n    buffer\n  );\n});\n\nconst validatePrimitiveStringAfterArrayBufferView = hideStackFrames((buffer\x2C name) => {\n  if (typeof buffer !== 'string') {\n    throw new ERR_INVALID_ARG_TYPE(\n      name\x2C\n      ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n      buffer\n    );\n  }\n});\n\nconst validatePosition = hideStackFrames((position\x2C name) => {\n  if (typeof position === 'number') {\n    validateInteger(position\x2C 'position');\n  } else if (typeof position === 'bigint') {\n    if (!(position >= -(2n ** 63n) && position <= 2n ** 63n - 1n)) {\n      throw new ERR_OUT_OF_RANGE('position'\x2C\n                                 `>= ${-(2n ** 63n)} && <= ${2n ** 63n - 1n}`\x2C\n                                 position);\n    }\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('position'\x2C\n                                   ['integer'\x2C 'bigint']\x2C\n                                   position);\n  }\n});\n\nmodule.exports = {\n  constants: {\n    kIoMaxLength\x2C\n    kMaxUserId\x2C\n    kReadFileBufferLength\x2C\n    kReadFileUnknownBufferLength\x2C\n    kWriteFileMaxChunkSize\x2C\n  }\x2C\n  assertEncoding\x2C\n  BigIntStats\x2C  // for testing\n  copyObject\x2C\n  Dirent\x2C\n  emitRecursiveRmdirWarning\x2C\n  getDirent\x2C\n  getDirents\x2C\n  getOptions\x2C\n  getValidatedFd\x2C\n  getValidatedPath\x2C\n  getValidMode\x2C\n  handleErrorFromBinding\x2C\n  nullCheck\x2C\n  preprocessSymlinkDestination\x2C\n  realpathCacheKey: Symbol('realpathCacheKey')\x2C\n  getStatsFromBinding\x2C\n  stringToFlags\x2C\n  stringToSymlinkType\x2C\n  Stats\x2C\n  toUnixTimestamp\x2C\n  validateBufferArray\x2C\n  validateCpOptions\x2C\n  validateOffsetLengthRead\x2C\n  validateOffsetLengthWrite\x2C\n  validatePath\x2C\n  validatePosition\x2C\n  validateRmOptions\x2C\n  validateRmOptionsSync\x2C\n  validateRmdirOptions\x2C\n  validateStringAfterArrayBufferView\x2C\n  validatePrimitiveStringAfterArrayBufferView\x2C\n  warnOnNonPortableTemplate\n};\n
code-source-info,0x1a3e29cb53f8,77,7291,7897,C9O7318C16O7336C27O7396C29O7418C30O7426C36O7465C41O7509C43O7533C47O7548C54O7583C60O7622C78O7628C83O7622C84O7715C91O7724C96O7742C99O7765C104O7742C108O7791C114O7819C119O7847C127O7819C132O7880C134O7895,,
tick,0x1a4e3ea90,50041,0,0x0,3,0x0,0x1a3e29caeb0e,0x1a3e29cae6fb,0x1a3e29cae5b5,0x1a3e29cae46f,0x1a3e29caddd8,0x1a3e29cad9a6,0x1a3e29cad551,0xc1101dae2d0
code-creation,LazyCompile,10,50083,0x1a3e29cb7408,48,assertEncoding node:internal/fs/utils:156:24,0x3b46b2034640,~
code-source-info,0x1a3e29cb7408,77,3600,3777,C0O3615C6O3632C9O3639C14O3639C21O3682C24O3709C40O3715C45O3709C47O3776,,
code-creation,LazyCompile,10,50125,0x1a3e29cb7520,20,toPathIfFileURL node:internal/url:1565:25,0x3b46b20277d8,~
script-source,74,node:internal/url,'use strict';\n\nconst {\n  Array\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeReduce\x2C\n  ArrayPrototypeSlice\x2C\n  FunctionPrototypeBind\x2C\n  Int8Array\x2C\n  Number\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetOwnPropertySymbols\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectKeys\x2C\n  ReflectApply\x2C\n  ReflectGetOwnPropertyDescriptor\x2C\n  ReflectOwnKeys\x2C\n  String\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n  Symbol\x2C\n  SymbolIterator\x2C\n  SymbolToStringTag\x2C\n  decodeURIComponent\x2C\n} = primordials;\n\nconst { inspect } = require('internal/util/inspect');\nconst {\n  encodeStr\x2C\n  hexTable\x2C\n  isHexTable\n} = require('internal/querystring');\n\nconst {\n  getConstructorOf\x2C\n  removeColors\x2C\n  toUSVString\x2C\n  kEnumerableProperty\x2C\n} = require('internal/util');\n\nconst {\n  codes: {\n    ERR_ARG_NOT_ITERABLE\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_FILE_URL_HOST\x2C\n    ERR_INVALID_FILE_URL_PATH\x2C\n    ERR_INVALID_THIS\x2C\n    ERR_INVALID_TUPLE\x2C\n    ERR_INVALID_URL\x2C\n    ERR_INVALID_URL_SCHEME\x2C\n    ERR_MISSING_ARGS\x2C\n    ERR_NO_CRYPTO\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  CHAR_AMPERSAND\x2C\n  CHAR_BACKWARD_SLASH\x2C\n  CHAR_EQUAL\x2C\n  CHAR_FORWARD_SLASH\x2C\n  CHAR_LOWERCASE_A\x2C\n  CHAR_LOWERCASE_Z\x2C\n  CHAR_PERCENT\x2C\n  CHAR_PLUS\n} = require('internal/constants');\nconst path = require('path');\n\nconst {\n  validateFunction\x2C\n  validateObject\x2C\n} = require('internal/validators');\n\nconst querystring = require('querystring');\n\nconst { platform } = process;\nconst isWindows = platform === 'win32';\n\nconst {\n  domainToASCII: _domainToASCII\x2C\n  domainToUnicode: _domainToUnicode\x2C\n  encodeAuth\x2C\n  parse\x2C\n  setURLConstructor\x2C\n  URL_FLAGS_CANNOT_BE_BASE\x2C\n  URL_FLAGS_HAS_FRAGMENT\x2C\n  URL_FLAGS_HAS_HOST\x2C\n  URL_FLAGS_HAS_PASSWORD\x2C\n  URL_FLAGS_HAS_PATH\x2C\n  URL_FLAGS_HAS_QUERY\x2C\n  URL_FLAGS_HAS_USERNAME\x2C\n  URL_FLAGS_IS_DEFAULT_SCHEME_PORT\x2C\n  URL_FLAGS_SPECIAL\x2C\n  kFragment\x2C\n  kHost\x2C\n  kHostname\x2C\n  kPathStart\x2C\n  kPort\x2C\n  kQuery\x2C\n  kSchemeStart\n} = internalBinding('url');\n\nconst {\n  storeDataObject\x2C\n  revokeDataObject\x2C\n} = internalBinding('blob');\n\nconst context = Symbol('context');\nconst cannotBeBase = Symbol('cannot-be-base');\nconst cannotHaveUsernamePasswordPort =\n    Symbol('cannot-have-username-password-port');\nconst special = Symbol('special');\nconst searchParams = Symbol('query');\nconst kFormat = Symbol('format');\n\nlet blob;\nlet cryptoRandom;\n\nfunction lazyBlob() {\n  blob ??= require('internal/blob');\n  return blob;\n}\n\nfunction lazyCryptoRandom() {\n  try {\n    cryptoRandom ??= require('internal/crypto/random');\n  } catch {\n    // If Node.js built without crypto support\x2C we'll fall\n    // through here and handle it later.\n  }\n  return cryptoRandom;\n}\n\n// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\nconst IteratorPrototype = ObjectGetPrototypeOf(\n  ObjectGetPrototypeOf([][SymbolIterator]())\n);\n\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#concept-origin-opaque\nconst kOpaqueOrigin = 'null';\n\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#ascii-serialisation-of-an-origin\nfunction serializeTupleOrigin(scheme\x2C host\x2C port) {\n  return `${scheme}//${host}${port === null ? '' : `:${port}`}`;\n}\n\n// This class provides the internal state of a URL object. An instance of this\n// class is stored in every URL object and is accessed internally by setters\n// and getters. It roughly corresponds to the concept of a URL record in the\n// URL Standard\x2C with a few differences. It is also the object transported to\n// the C++ binding.\n// Refs: https://url.spec.whatwg.org/#concept-url\nclass URLContext {\n  constructor() {\n    this.flags = 0;\n    this.scheme = ':';\n    this.username = '';\n    this.password = '';\n    this.host = null;\n    this.port = null;\n    this.path = [];\n    this.query = null;\n    this.fragment = null;\n  }\n}\n\nfunction isURLSearchParams(self) {\n  return self && self[searchParams] && !self[searchParams][searchParams];\n}\n\nclass URLSearchParams {\n  // URL Standard says the default value is ''\x2C but as undefined and '' have\n  // the same result\x2C undefined is used to prevent unnecessary parsing.\n  // Default parameter is necessary to keep URLSearchParams.length === 0 in\n  // accordance with Web IDL spec.\n  constructor(init = undefined) {\n    if (init === null || init === undefined) {\n      this[searchParams] = [];\n    } else if (typeof init === 'object' || typeof init === 'function') {\n      const method = init[SymbolIterator];\n      if (method === this[SymbolIterator]) {\n        // While the spec does not have this branch\x2C we can use it as a\n        // shortcut to avoid having to go through the costly generic iterator.\n        const childParams = init[searchParams];\n        this[searchParams] = childParams.slice();\n      } else if (method !== null && method !== undefined) {\n        if (typeof method !== 'function') {\n          throw new ERR_ARG_NOT_ITERABLE('Query pairs');\n        }\n\n        // Sequence<sequence<USVString>>\n        // Note: per spec we have to first exhaust the lists then process them\n        const pairs = [];\n        for (const pair of init) {\n          if ((typeof pair !== 'object' && typeof pair !== 'function') ||\n              pair === null ||\n              typeof pair[SymbolIterator] !== 'function') {\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\n          }\n          const convertedPair = [];\n          for (const element of pair)\n            ArrayPrototypePush(convertedPair\x2C toUSVString(element));\n          ArrayPrototypePush(pairs\x2C convertedPair);\n        }\n\n        this[searchParams] = [];\n        for (const pair of pairs) {\n          if (pair.length !== 2) {\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\n          }\n          ArrayPrototypePush(this[searchParams]\x2C pair[0]\x2C pair[1]);\n        }\n      } else {\n        // Record<USVString\x2C USVString>\n        // Need to use reflection APIs for full spec compliance.\n        const visited = {};\n        this[searchParams] = [];\n        const keys = ReflectOwnKeys(init);\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i];\n          const desc = ReflectGetOwnPropertyDescriptor(init\x2C key);\n          if (desc !== undefined && desc.enumerable) {\n            const typedKey = toUSVString(key);\n            const typedValue = toUSVString(init[key]);\n\n            // Two different key may result same after `toUSVString()`\x2C we only\n            // leave the later one. Refers to WPT.\n            if (visited[typedKey] !== undefined) {\n              this[searchParams][visited[typedKey]] = typedValue;\n            } else {\n              visited[typedKey] = ArrayPrototypePush(this[searchParams]\x2C\n                                                     typedKey\x2C\n                                                     typedValue) - 1;\n            }\n          }\n        }\n      }\n    } else {\n      // USVString\n      init = toUSVString(init);\n      if (init[0] === '?') init = init.slice(1);\n      initSearchParams(this\x2C init);\n    }\n\n    // "associated url object"\n    this[context] = null;\n  }\n\n  [inspect.custom](recurseTimes\x2C ctx) {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\n      return ctx.stylize('[Object]'\x2C 'special');\n\n    const separator = '\x2C ';\n    const innerOpts = { ...ctx };\n    if (recurseTimes !== null) {\n      innerOpts.depth = recurseTimes - 1;\n    }\n    const innerInspect = (v) => inspect(v\x2C innerOpts);\n\n    const list = this[searchParams];\n    const output = [];\n    for (let i = 0; i < list.length; i += 2)\n      ArrayPrototypePush(\n        output\x2C\n        `${innerInspect(list[i])} => ${innerInspect(list[i + 1])}`);\n\n    const length = ArrayPrototypeReduce(\n      output\x2C\n      (prev\x2C cur) => prev + removeColors(cur).length + separator.length\x2C\n      -separator.length\n    );\n    if (length > ctx.breakLength) {\n      return `${this.constructor.name} {\\n` +\n      `  ${ArrayPrototypeJoin(output\x2C '\x2C\\n  ')} }`;\n    } else if (output.length) {\n      return `${this.constructor.name} { ` +\n      `${ArrayPrototypeJoin(output\x2C separator)} }`;\n    }\n    return `${this.constructor.name} {}`;\n  }\n\n  append(name\x2C value) {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 2) {\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\n    }\n\n    name = toUSVString(name);\n    value = toUSVString(value);\n    ArrayPrototypePush(this[searchParams]\x2C name\x2C value);\n    update(this[context]\x2C this);\n  }\n\n  delete(name) {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 1) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n\n    const list = this[searchParams];\n    name = toUSVString(name);\n    for (let i = 0; i < list.length;) {\n      const cur = list[i];\n      if (cur === name) {\n        list.splice(i\x2C 2);\n      } else {\n        i += 2;\n      }\n    }\n    update(this[context]\x2C this);\n  }\n\n  get(name) {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 1) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n\n    const list = this[searchParams];\n    name = toUSVString(name);\n    for (let i = 0; i < list.length; i += 2) {\n      if (list[i] === name) {\n        return list[i + 1];\n      }\n    }\n    return null;\n  }\n\n  getAll(name) {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 1) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n\n    const list = this[searchParams];\n    const values = [];\n    name = toUSVString(name);\n    for (let i = 0; i < list.length; i += 2) {\n      if (list[i] === name) {\n        values.push(list[i + 1]);\n      }\n    }\n    return values;\n  }\n\n  has(name) {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 1) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n\n    const list = this[searchParams];\n    name = toUSVString(name);\n    for (let i = 0; i < list.length; i += 2) {\n      if (list[i] === name) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  set(name\x2C value) {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 2) {\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\n    }\n\n    const list = this[searchParams];\n    name = toUSVString(name);\n    value = toUSVString(value);\n\n    // If there are any name-value pairs whose name is `name`\x2C in `list`\x2C set\n    // the value of the first such name-value pair to `value` and remove the\n    // others.\n    let found = false;\n    for (let i = 0; i < list.length;) {\n      const cur = list[i];\n      if (cur === name) {\n        if (!found) {\n          list[i + 1] = value;\n          found = true;\n          i += 2;\n        } else {\n          list.splice(i\x2C 2);\n        }\n      } else {\n        i += 2;\n      }\n    }\n\n    // Otherwise\x2C append a new name-value pair whose name is `name` and value\n    // is `value`\x2C to `list`.\n    if (!found) {\n      ArrayPrototypePush(list\x2C name\x2C value);\n    }\n\n    update(this[context]\x2C this);\n  }\n\n  sort() {\n    const a = this[searchParams];\n    const len = a.length;\n\n    if (len <= 2) {\n      // Nothing needs to be done.\n    } else if (len < 100) {\n      // 100 is found through testing.\n      // Simple stable in-place insertion sort\n      // Derived from v8/src/js/array.js\n      for (let i = 2; i < len; i += 2) {\n        const curKey = a[i];\n        const curVal = a[i + 1];\n        let j;\n        for (j = i - 2; j >= 0; j -= 2) {\n          if (a[j] > curKey) {\n            a[j + 2] = a[j];\n            a[j + 3] = a[j + 1];\n          } else {\n            break;\n          }\n        }\n        a[j + 2] = curKey;\n        a[j + 3] = curVal;\n      }\n    } else {\n      // Bottom-up iterative stable merge sort\n      const lBuffer = new Array(len);\n      const rBuffer = new Array(len);\n      for (let step = 2; step < len; step *= 2) {\n        for (let start = 0; start < len - 2; start += 2 * step) {\n          const mid = start + step;\n          let end = mid + step;\n          end = end < len ? end : len;\n          if (mid > end)\n            continue;\n          merge(a\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer);\n        }\n      }\n    }\n\n    update(this[context]\x2C this);\n  }\n\n  // https://heycam.github.io/webidl/#es-iterators\n  // Define entries here rather than [Symbol.iterator] as the function name\n  // must be set to `entries`.\n  entries() {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    return createSearchParamsIterator(this\x2C 'key+value');\n  }\n\n  forEach(callback\x2C thisArg = undefined) {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    validateFunction(callback\x2C 'callback');\n\n    let list = this[searchParams];\n\n    let i = 0;\n    while (i < list.length) {\n      const key = list[i];\n      const value = list[i + 1];\n      callback.call(thisArg\x2C value\x2C key\x2C this);\n      // In case the URL object's `search` is updated\n      list = this[searchParams];\n      i += 2;\n    }\n  }\n\n  // https://heycam.github.io/webidl/#es-iterable\n  keys() {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    return createSearchParamsIterator(this\x2C 'key');\n  }\n\n  values() {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    return createSearchParamsIterator(this\x2C 'value');\n  }\n\n  // https://heycam.github.io/webidl/#es-stringifier\n  // https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\n  toString() {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    return serializeParams(this[searchParams]);\n  }\n}\n\nObjectDefineProperties(URLSearchParams.prototype\x2C {\n  append: kEnumerableProperty\x2C\n  delete: kEnumerableProperty\x2C\n  get: kEnumerableProperty\x2C\n  getAll: kEnumerableProperty\x2C\n  has: kEnumerableProperty\x2C\n  set: kEnumerableProperty\x2C\n  sort: kEnumerableProperty\x2C\n  entries: kEnumerableProperty\x2C\n  forEach: kEnumerableProperty\x2C\n  keys: kEnumerableProperty\x2C\n  values: kEnumerableProperty\x2C\n  toString: kEnumerableProperty\x2C\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URLSearchParams' }\x2C\n\n  // https://heycam.github.io/webidl/#es-iterable-entries\n  [SymbolIterator]: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    writable: true\x2C\n    value: URLSearchParams.prototype.entries\x2C\n  }\x2C\n});\n\nfunction onParseComplete(flags\x2C protocol\x2C username\x2C password\x2C\n                         host\x2C port\x2C path\x2C query\x2C fragment) {\n  const ctx = this[context];\n  ctx.flags = flags;\n  ctx.scheme = protocol;\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\n  ctx.port = port;\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\n  ctx.query = query;\n  ctx.fragment = fragment;\n  ctx.host = host;\n  if (!this[searchParams]) { // Invoked from URL constructor\n    this[searchParams] = new URLSearchParams();\n    this[searchParams][context] = this;\n  }\n  initSearchParams(this[searchParams]\x2C query);\n}\n\nfunction onParseError(input\x2C flags) {\n  throw new ERR_INVALID_URL(input);\n}\n\nfunction onParseProtocolComplete(flags\x2C protocol\x2C username\x2C password\x2C\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\n  const ctx = this[context];\n  if ((flags & URL_FLAGS_SPECIAL) !== 0) {\n    ctx.flags |= URL_FLAGS_SPECIAL;\n  } else {\n    ctx.flags &= ~URL_FLAGS_SPECIAL;\n  }\n  ctx.scheme = protocol;\n  ctx.port = port;\n}\n\nfunction onParseHostnameComplete(flags\x2C protocol\x2C username\x2C password\x2C\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\n  const ctx = this[context];\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\n    ctx.host = host;\n    ctx.flags |= URL_FLAGS_HAS_HOST;\n  } else {\n    ctx.host = null;\n    ctx.flags &= ~URL_FLAGS_HAS_HOST;\n  }\n}\n\nfunction onParsePortComplete(flags\x2C protocol\x2C username\x2C password\x2C\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\n  this[context].port = port;\n}\n\nfunction onParseHostComplete(flags\x2C protocol\x2C username\x2C password\x2C\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\n  ReflectApply(onParseHostnameComplete\x2C this\x2C arguments);\n  if (port !== null || ((flags & URL_FLAGS_IS_DEFAULT_SCHEME_PORT) !== 0))\n    ReflectApply(onParsePortComplete\x2C this\x2C arguments);\n}\n\nfunction onParsePathComplete(flags\x2C protocol\x2C username\x2C password\x2C\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\n  const ctx = this[context];\n  if ((flags & URL_FLAGS_HAS_PATH) !== 0) {\n    ctx.path = path;\n    ctx.flags |= URL_FLAGS_HAS_PATH;\n  } else {\n    ctx.path = [];\n    ctx.flags &= ~URL_FLAGS_HAS_PATH;\n  }\n\n  // The C++ binding may set host to empty string.\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\n    ctx.host = host;\n    ctx.flags |= URL_FLAGS_HAS_HOST;\n  }\n}\n\nfunction onParseSearchComplete(flags\x2C protocol\x2C username\x2C password\x2C\n                               host\x2C port\x2C path\x2C query\x2C fragment) {\n  this[context].query = query;\n}\n\nfunction onParseHashComplete(flags\x2C protocol\x2C username\x2C password\x2C\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\n  this[context].fragment = fragment;\n}\n\nfunction isURLThis(self) {\n  return (self !== undefined && self !== null && self[context] !== undefined);\n}\n\nclass URL {\n  constructor(input\x2C base = undefined) {\n    // toUSVString is not needed.\n    input = `${input}`;\n    let base_context;\n    if (base !== undefined) {\n      base_context = new URL(base)[context];\n    }\n    this[context] = new URLContext();\n    parse(input\x2C -1\x2C base_context\x2C undefined\x2C\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C\n          FunctionPrototypeBind(onParseError\x2C this\x2C input));\n  }\n\n  get [special]() {\n    return (this[context].flags & URL_FLAGS_SPECIAL) !== 0;\n  }\n\n  get [cannotBeBase]() {\n    return (this[context].flags & URL_FLAGS_CANNOT_BE_BASE) !== 0;\n  }\n\n  // https://url.spec.whatwg.org/#cannot-have-a-username-password-port\n  get [cannotHaveUsernamePasswordPort]() {\n    const { host\x2C scheme } = this[context];\n    return ((host == null || host === '') ||\n            this[cannotBeBase] ||\n            scheme === 'file:');\n  }\n\n  [inspect.custom](depth\x2C opts) {\n    if (this == null ||\n        ObjectGetPrototypeOf(this[context]) !== URLContext.prototype) {\n      throw new ERR_INVALID_THIS('URL');\n    }\n\n    if (typeof depth === 'number' && depth < 0)\n      return this;\n\n    const constructor = getConstructorOf(this) || URL;\n    const obj = ObjectCreate({ constructor });\n\n    obj.href = this.href;\n    obj.origin = this.origin;\n    obj.protocol = this.protocol;\n    obj.username = this.username;\n    obj.password = this.password;\n    obj.host = this.host;\n    obj.hostname = this.hostname;\n    obj.port = this.port;\n    obj.pathname = this.pathname;\n    obj.search = this.search;\n    obj.searchParams = this.searchParams;\n    obj.hash = this.hash;\n\n    if (opts.showHidden) {\n      obj.cannotBeBase = this[cannotBeBase];\n      obj.special = this[special];\n      obj[context] = this[context];\n    }\n\n    return `${constructor.name} ${inspect(obj\x2C opts)}`;\n  }\n\n  [kFormat](options) {\n    if (options)\n      validateObject(options\x2C 'options');\n\n    options = {\n      fragment: true\x2C\n      unicode: false\x2C\n      search: true\x2C\n      auth: true\x2C\n      ...options\n    };\n    const ctx = this[context];\n    // https://url.spec.whatwg.org/#url-serializing\n    let ret = ctx.scheme;\n    if (ctx.host !== null) {\n      ret += '//';\n      const has_username = ctx.username !== '';\n      const has_password = ctx.password !== '';\n      if (options.auth && (has_username || has_password)) {\n        if (has_username)\n          ret += ctx.username;\n        if (has_password)\n          ret += `:${ctx.password}`;\n        ret += '@';\n      }\n      ret += options.unicode ?\n        domainToUnicode(ctx.host) : ctx.host;\n      if (ctx.port !== null)\n        ret += `:${ctx.port}`;\n    }\n    if (this[cannotBeBase]) {\n      ret += ctx.path[0];\n    } else {\n      if (ctx.host === null && ctx.path.length > 1 && ctx.path[0] === '') {\n        ret += '/.';\n      }\n      if (ctx.path.length) {\n        ret += '/' + ArrayPrototypeJoin(ctx.path\x2C '/');\n      }\n    }\n    if (options.search && ctx.query !== null)\n      ret += `?${ctx.query}`;\n    if (options.fragment && ctx.fragment !== null)\n      ret += `#${ctx.fragment}`;\n    return ret;\n  }\n\n  // https://heycam.github.io/webidl/#es-stringifier\n  toString() {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    return this[kFormat]({});\n  }\n\n  get href() {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    return this[kFormat]({});\n  }\n\n  set href(input) {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    // toUSVString is not needed.\n    input = `${input}`;\n    parse(input\x2C -1\x2C undefined\x2C undefined\x2C\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C\n          FunctionPrototypeBind(onParseError\x2C this\x2C input));\n  }\n\n  // readonly\n  get origin() {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    // Refs: https://url.spec.whatwg.org/#concept-url-origin\n    const ctx = this[context];\n    switch (ctx.scheme) {\n      case 'blob:':\n        if (ctx.path.length > 0) {\n          try {\n            return (new URL(ctx.path[0])).origin;\n          } catch {\n            // Fall through... do nothing\n          }\n        }\n        return kOpaqueOrigin;\n      case 'ftp:':\n      case 'http:':\n      case 'https:':\n      case 'ws:':\n      case 'wss:':\n        return serializeTupleOrigin(ctx.scheme\x2C ctx.host\x2C ctx.port);\n    }\n    return kOpaqueOrigin;\n  }\n\n  get protocol() {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    return this[context].scheme;\n  }\n\n  set protocol(scheme) {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    // toUSVString is not needed.\n    scheme = `${scheme}`;\n    if (scheme.length === 0)\n      return;\n    const ctx = this[context];\n    parse(scheme\x2C kSchemeStart\x2C null\x2C ctx\x2C\n          FunctionPrototypeBind(onParseProtocolComplete\x2C this));\n  }\n\n  get username() {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    return this[context].username;\n  }\n\n  set username(username) {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    // toUSVString is not needed.\n    username = `${username}`;\n    if (this[cannotHaveUsernamePasswordPort])\n      return;\n    const ctx = this[context];\n    if (username === '') {\n      ctx.username = '';\n      ctx.flags &= ~URL_FLAGS_HAS_USERNAME;\n      return;\n    }\n    ctx.username = encodeAuth(username);\n    ctx.flags |= URL_FLAGS_HAS_USERNAME;\n  }\n\n  get password() {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    return this[context].password;\n  }\n\n  set password(password) {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    // toUSVString is not needed.\n    password = `${password}`;\n    if (this[cannotHaveUsernamePasswordPort])\n      return;\n    const ctx = this[context];\n    if (password === '') {\n      ctx.password = '';\n      ctx.flags &= ~URL_FLAGS_HAS_PASSWORD;\n      return;\n    }\n    ctx.password = encodeAuth(password);\n    ctx.flags |= URL_FLAGS_HAS_PASSWORD;\n  }\n\n  get host() {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    const ctx = this[context];\n    let ret = ctx.host || '';\n    if (ctx.port !== null)\n      ret += `:${ctx.port}`;\n    return ret;\n  }\n\n  set host(host) {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    const ctx = this[context];\n    // toUSVString is not needed.\n    host = `${host}`;\n    if (this[cannotBeBase]) {\n      // Cannot set the host if cannot-be-base is set\n      return;\n    }\n    parse(host\x2C kHost\x2C null\x2C ctx\x2C\n          FunctionPrototypeBind(onParseHostComplete\x2C this));\n  }\n\n  get hostname() {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    return this[context].host || '';\n  }\n\n  set hostname(host) {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    const ctx = this[context];\n    // toUSVString is not needed.\n    host = `${host}`;\n    if (this[cannotBeBase]) {\n      // Cannot set the host if cannot-be-base is set\n      return;\n    }\n    parse(host\x2C kHostname\x2C null\x2C ctx\x2C onParseHostnameComplete.bind(this));\n  }\n\n  get port() {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    const port = this[context].port;\n    return port === null ? '' : String(port);\n  }\n\n  set port(port) {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    // toUSVString is not needed.\n    port = `${port}`;\n    if (this[cannotHaveUsernamePasswordPort])\n      return;\n    const ctx = this[context];\n    if (port === '') {\n      ctx.port = null;\n      return;\n    }\n    parse(port\x2C kPort\x2C null\x2C ctx\x2C\n          FunctionPrototypeBind(onParsePortComplete\x2C this));\n  }\n\n  get pathname() {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    const ctx = this[context];\n    if (this[cannotBeBase])\n      return ctx.path[0];\n    if (ctx.path.length === 0)\n      return '';\n    return `/${ArrayPrototypeJoin(ctx.path\x2C '/')}`;\n  }\n\n  set pathname(path) {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    // toUSVString is not needed.\n    path = `${path}`;\n    if (this[cannotBeBase])\n      return;\n    parse(path\x2C kPathStart\x2C null\x2C this[context]\x2C\n          onParsePathComplete.bind(this));\n  }\n\n  get search() {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    const { query } = this[context];\n    if (query === null || query === '')\n      return '';\n    return `?${query}`;\n  }\n\n  set search(search) {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    const ctx = this[context];\n    search = toUSVString(search);\n    if (search === '') {\n      ctx.query = null;\n      ctx.flags &= ~URL_FLAGS_HAS_QUERY;\n    } else {\n      if (search[0] === '?') search = StringPrototypeSlice(search\x2C 1);\n      ctx.query = '';\n      ctx.flags |= URL_FLAGS_HAS_QUERY;\n      if (search) {\n        parse(search\x2C kQuery\x2C null\x2C ctx\x2C\n              FunctionPrototypeBind(onParseSearchComplete\x2C this));\n      }\n    }\n    initSearchParams(this[searchParams]\x2C search);\n  }\n\n  // readonly\n  get searchParams() {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    return this[searchParams];\n  }\n\n  get hash() {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    const { fragment } = this[context];\n    if (fragment === null || fragment === '')\n      return '';\n    return `#${fragment}`;\n  }\n\n  set hash(hash) {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    const ctx = this[context];\n    // toUSVString is not needed.\n    hash = `${hash}`;\n    if (!hash) {\n      ctx.fragment = null;\n      ctx.flags &= ~URL_FLAGS_HAS_FRAGMENT;\n      return;\n    }\n    if (hash[0] === '#') hash = StringPrototypeSlice(hash\x2C 1);\n    ctx.fragment = '';\n    ctx.flags |= URL_FLAGS_HAS_FRAGMENT;\n    parse(hash\x2C kFragment\x2C null\x2C ctx\x2C\n          FunctionPrototypeBind(onParseHashComplete\x2C this));\n  }\n\n  toJSON() {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    return this[kFormat]({});\n  }\n\n  static createObjectURL(obj) {\n    const cryptoRandom = lazyCryptoRandom();\n    if (cryptoRandom === undefined)\n      throw new ERR_NO_CRYPTO();\n\n    // Yes\x2C lazy loading is annoying but because of circular\n    // references between the url\x2C internal/blob\x2C and buffer\n    // modules\x2C lazy loading here makes sure that things work.\n    const blob = lazyBlob();\n    if (!blob.isBlob(obj))\n      throw new ERR_INVALID_ARG_TYPE('obj'\x2C 'Blob'\x2C obj);\n\n    const id = cryptoRandom.randomUUID();\n\n    storeDataObject(id\x2C obj[blob.kHandle]\x2C obj.size\x2C obj.type);\n\n    return `blob:nodedata:${id}`;\n  }\n\n  static revokeObjectURL(url) {\n    url = `${url}`;\n    try {\n      const parsed = new URL(url);\n      const split = StringPrototypeSplit(parsed.pathname\x2C ':');\n      if (split.length === 2)\n        revokeDataObject(split[1]);\n    } catch {\n      // If there's an error\x2C it's ignored.\n    }\n  }\n}\n\nObjectDefineProperties(URL.prototype\x2C {\n  [kFormat]: { __proto__: null\x2C configurable: false\x2C writable: false }\x2C\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URL' }\x2C\n  toString: kEnumerableProperty\x2C\n  href: kEnumerableProperty\x2C\n  origin: kEnumerableProperty\x2C\n  protocol: kEnumerableProperty\x2C\n  username: kEnumerableProperty\x2C\n  password: kEnumerableProperty\x2C\n  host: kEnumerableProperty\x2C\n  hostname: kEnumerableProperty\x2C\n  port: kEnumerableProperty\x2C\n  pathname: kEnumerableProperty\x2C\n  search: kEnumerableProperty\x2C\n  searchParams: kEnumerableProperty\x2C\n  hash: kEnumerableProperty\x2C\n  toJSON: kEnumerableProperty\x2C\n});\n\nfunction update(url\x2C params) {\n  if (!url)\n    return;\n\n  const ctx = url[context];\n  const serializedParams = params.toString();\n  if (serializedParams) {\n    ctx.query = serializedParams;\n    ctx.flags |= URL_FLAGS_HAS_QUERY;\n  } else {\n    ctx.query = null;\n    ctx.flags &= ~URL_FLAGS_HAS_QUERY;\n  }\n}\n\nfunction initSearchParams(url\x2C init) {\n  if (!init) {\n    url[searchParams] = [];\n    return;\n  }\n  url[searchParams] = parseParams(init);\n}\n\n// application/x-www-form-urlencoded parser\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-parser\nfunction parseParams(qs) {\n  const out = [];\n  let pairStart = 0;\n  let lastPos = 0;\n  let seenSep = false;\n  let buf = '';\n  let encoded = false;\n  let encodeCheck = 0;\n  let i;\n  for (i = 0; i < qs.length; ++i) {\n    const code = StringPrototypeCharCodeAt(qs\x2C i);\n\n    // Try matching key/value pair separator\n    if (code === CHAR_AMPERSAND) {\n      if (pairStart === i) {\n        // We saw an empty substring between pair separators\n        lastPos = pairStart = i + 1;\n        continue;\n      }\n\n      if (lastPos < i)\n        buf += qs.slice(lastPos\x2C i);\n      if (encoded)\n        buf = querystring.unescape(buf);\n      out.push(buf);\n\n      // If `buf` is the key\x2C add an empty value.\n      if (!seenSep)\n        out.push('');\n\n      seenSep = false;\n      buf = '';\n      encoded = false;\n      encodeCheck = 0;\n      lastPos = pairStart = i + 1;\n      continue;\n    }\n\n    // Try matching key/value separator (e.g. '=') if we haven't already\n    if (!seenSep && code === CHAR_EQUAL) {\n      // Key/value separator match!\n      if (lastPos < i)\n        buf += qs.slice(lastPos\x2C i);\n      if (encoded)\n        buf = querystring.unescape(buf);\n      out.push(buf);\n\n      seenSep = true;\n      buf = '';\n      encoded = false;\n      encodeCheck = 0;\n      lastPos = i + 1;\n      continue;\n    }\n\n    // Handle + and percent decoding.\n    if (code === CHAR_PLUS) {\n      if (lastPos < i)\n        buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\n      buf += ' ';\n      lastPos = i + 1;\n    } else if (!encoded) {\n      // Try to match an (valid) encoded byte (once) to minimize unnecessary\n      // calls to string decoding functions\n      if (code === CHAR_PERCENT) {\n        encodeCheck = 1;\n      } else if (encodeCheck > 0) {\n        if (isHexTable[code] === 1) {\n          if (++encodeCheck === 3) {\n            encoded = true;\n          }\n        } else {\n          encodeCheck = 0;\n        }\n      }\n    }\n  }\n\n  // Deal with any leftover key or value data\n\n  // There is a trailing &. No more processing is needed.\n  if (pairStart === i)\n    return out;\n\n  if (lastPos < i)\n    buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\n  if (encoded)\n    buf = querystring.unescape(buf);\n  ArrayPrototypePush(out\x2C buf);\n\n  // If `buf` is the key\x2C add an empty value.\n  if (!seenSep)\n    ArrayPrototypePush(out\x2C '');\n\n  return out;\n}\n\n// Adapted from querystring's implementation.\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer\nconst noEscape = new Int8Array([\n/*\n  0\x2C 1\x2C 2\x2C 3\x2C 4\x2C 5\x2C 6\x2C 7\x2C 8\x2C 9\x2C A\x2C B\x2C C\x2C D\x2C E\x2C F\n*/\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x00 - 0x0F\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x10 - 0x1F\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C 0\x2C 0\x2C 1\x2C 1\x2C 0\x2C // 0x20 - 0x2F\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x30 - 0x3F\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x40 - 0x4F\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C // 0x50 - 0x5F\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x60 - 0x6F\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C  // 0x70 - 0x7F\n]);\n\n// Special version of hexTable that uses `+` for U+0020 SPACE.\nconst paramHexTable = hexTable.slice();\nparamHexTable[0x20] = '+';\n\n// application/x-www-form-urlencoded serializer\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-serializer\nfunction serializeParams(array) {\n  const len = array.length;\n  if (len === 0)\n    return '';\n\n  const firstEncodedParam = encodeStr(array[0]\x2C noEscape\x2C paramHexTable);\n  const firstEncodedValue = encodeStr(array[1]\x2C noEscape\x2C paramHexTable);\n  let output = `${firstEncodedParam}=${firstEncodedValue}`;\n\n  for (let i = 2; i < len; i += 2) {\n    const encodedParam = encodeStr(array[i]\x2C noEscape\x2C paramHexTable);\n    const encodedValue = encodeStr(array[i + 1]\x2C noEscape\x2C paramHexTable);\n    output += `&${encodedParam}=${encodedValue}`;\n  }\n\n  return output;\n}\n\n// Mainly to mitigate func-name-matching ESLint rule\nfunction defineIDLClass(proto\x2C classStr\x2C obj) {\n  // https://heycam.github.io/webidl/#dfn-class-string\n  ObjectDefineProperty(proto\x2C SymbolToStringTag\x2C {\n    __proto__: null\x2C\n    writable: false\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: classStr\n  });\n\n  // https://heycam.github.io/webidl/#es-operations\n  for (const key of ObjectKeys(obj)) {\n    ObjectDefineProperty(proto\x2C key\x2C {\n      __proto__: null\x2C\n      writable: true\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n      value: obj[key]\n    });\n  }\n  for (const key of ObjectGetOwnPropertySymbols(obj)) {\n    ObjectDefineProperty(proto\x2C key\x2C {\n      __proto__: null\x2C\n      writable: true\x2C\n      enumerable: false\x2C\n      configurable: true\x2C\n      value: obj[key]\n    });\n  }\n}\n\n// for merge sort\nfunction merge(out\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer) {\n  const sizeLeft = mid - start;\n  const sizeRight = end - mid;\n  let l\x2C r\x2C o;\n\n  for (l = 0; l < sizeLeft; l++)\n    lBuffer[l] = out[start + l];\n  for (r = 0; r < sizeRight; r++)\n    rBuffer[r] = out[mid + r];\n\n  l = 0;\n  r = 0;\n  o = start;\n  while (l < sizeLeft && r < sizeRight) {\n    if (lBuffer[l] <= rBuffer[r]) {\n      out[o++] = lBuffer[l++];\n      out[o++] = lBuffer[l++];\n    } else {\n      out[o++] = rBuffer[r++];\n      out[o++] = rBuffer[r++];\n    }\n  }\n  while (l < sizeLeft)\n    out[o++] = lBuffer[l++];\n  while (r < sizeRight)\n    out[o++] = rBuffer[r++];\n}\n\n// https://heycam.github.io/webidl/#dfn-default-iterator-object\nfunction createSearchParamsIterator(target\x2C kind) {\n  const iterator = ObjectCreate(URLSearchParamsIteratorPrototype);\n  iterator[context] = {\n    target\x2C\n    kind\x2C\n    index: 0\n  };\n  return iterator;\n}\n\n// https://heycam.github.io/webidl/#dfn-iterator-prototype-object\nconst URLSearchParamsIteratorPrototype = ObjectCreate(IteratorPrototype);\n\ndefineIDLClass(URLSearchParamsIteratorPrototype\x2C 'URLSearchParams Iterator'\x2C {\n  next() {\n    if (!this ||\n        ObjectGetPrototypeOf(this) !== URLSearchParamsIteratorPrototype) {\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\n    }\n\n    const {\n      target\x2C\n      kind\x2C\n      index\n    } = this[context];\n    const values = target[searchParams];\n    const len = values.length;\n    if (index >= len) {\n      return {\n        value: undefined\x2C\n        done: true\n      };\n    }\n\n    const name = values[index];\n    const value = values[index + 1];\n    this[context].index = index + 2;\n\n    let result;\n    if (kind === 'key') {\n      result = name;\n    } else if (kind === 'value') {\n      result = value;\n    } else {\n      result = [name\x2C value];\n    }\n\n    return {\n      value: result\x2C\n      done: false\n    };\n  }\x2C\n  [inspect.custom](recurseTimes\x2C ctx) {\n    if (this == null || this[context] == null || this[context].target == null)\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\n\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\n      return ctx.stylize('[Object]'\x2C 'special');\n\n    const innerOpts = { ...ctx };\n    if (recurseTimes !== null) {\n      innerOpts.depth = recurseTimes - 1;\n    }\n    const {\n      target\x2C\n      kind\x2C\n      index\n    } = this[context];\n    const output = ArrayPrototypeReduce(\n      ArrayPrototypeSlice(target[searchParams]\x2C index)\x2C\n      (prev\x2C cur\x2C i) => {\n        const key = i % 2 === 0;\n        if (kind === 'key' && key) {\n          ArrayPrototypePush(prev\x2C cur);\n        } else if (kind === 'value' && !key) {\n          ArrayPrototypePush(prev\x2C cur);\n        } else if (kind === 'key+value' && !key) {\n          ArrayPrototypePush(prev\x2C [target[searchParams][index + i - 1]\x2C cur]);\n        }\n        return prev;\n      }\x2C\n      []\n    );\n    const breakLn = inspect(output\x2C innerOpts).includes('\\n');\n    const outputStrs = ArrayPrototypeMap(output\x2C (p) => inspect(p\x2C innerOpts));\n    let outputStr;\n    if (breakLn) {\n      outputStr = `\\n  ${ArrayPrototypeJoin(outputStrs\x2C '\x2C\\n  ')}`;\n    } else {\n      outputStr = ` ${ArrayPrototypeJoin(outputStrs\x2C '\x2C ')}`;\n    }\n    return `${this[SymbolToStringTag]} {${outputStr} }`;\n  }\n});\n\nfunction domainToASCII(domain) {\n  if (arguments.length < 1)\n    throw new ERR_MISSING_ARGS('domain');\n\n  // toUSVString is not needed.\n  return _domainToASCII(`${domain}`);\n}\n\nfunction domainToUnicode(domain) {\n  if (arguments.length < 1)\n    throw new ERR_MISSING_ARGS('domain');\n\n  // toUSVString is not needed.\n  return _domainToUnicode(`${domain}`);\n}\n\n// Utility function that converts a URL object into an ordinary\n// options object as expected by the http.request and https.request\n// APIs.\nfunction urlToHttpOptions(url) {\n  const options = {\n    protocol: url.protocol\x2C\n    hostname: typeof url.hostname === 'string' &&\n              StringPrototypeStartsWith(url.hostname\x2C '[') ?\n      StringPrototypeSlice(url.hostname\x2C 1\x2C -1) :\n      url.hostname\x2C\n    hash: url.hash\x2C\n    search: url.search\x2C\n    pathname: url.pathname\x2C\n    path: `${url.pathname || ''}${url.search || ''}`\x2C\n    href: url.href\n  };\n  if (url.port !== '') {\n    options.port = Number(url.port);\n  }\n  if (url.username || url.password) {\n    options.auth = `${decodeURIComponent(url.username)}:${decodeURIComponent(url.password)}`;\n  }\n  return options;\n}\n\nconst forwardSlashRegEx = /\\//g;\n\nfunction getPathFromURLWin32(url) {\n  const hostname = url.hostname;\n  let pathname = url.pathname;\n  for (let n = 0; n < pathname.length; n++) {\n    if (pathname[n] === '%') {\n      const third = pathname.codePointAt(n + 2) | 0x20;\n      if ((pathname[n + 1] === '2' && third === 102) || // 2f 2F /\n          (pathname[n + 1] === '5' && third === 99)) {  // 5c 5C \\\n        throw new ERR_INVALID_FILE_URL_PATH(\n          'must not include encoded \\\\ or / characters'\n        );\n      }\n    }\n  }\n  pathname = pathname.replace(forwardSlashRegEx\x2C '\\\\');\n  pathname = decodeURIComponent(pathname);\n  if (hostname !== '') {\n    // If hostname is set\x2C then we have a UNC path\n    // Pass the hostname through domainToUnicode just in case\n    // it is an IDN using punycode encoding. We do not need to worry\n    // about percent encoding because the URL parser will have\n    // already taken care of that for us. Note that this only\n    // causes IDNs with an appropriate `xn--` prefix to be decoded.\n    return `\\\\\\\\${domainToUnicode(hostname)}${pathname}`;\n  }\n  // Otherwise\x2C it's a local path that requires a drive letter\n  const letter = pathname.codePointAt(1) | 0x20;\n  const sep = pathname[2];\n  if (letter < CHAR_LOWERCASE_A || letter > CHAR_LOWERCASE_Z ||   // a..z A..Z\n      (sep !== ':')) {\n    throw new ERR_INVALID_FILE_URL_PATH('must be absolute');\n  }\n  return pathname.slice(1);\n}\n\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    throw new ERR_INVALID_FILE_URL_HOST(platform);\n  }\n  const pathname = url.pathname;\n  for (let n = 0; n < pathname.length; n++) {\n    if (pathname[n] === '%') {\n      const third = pathname.codePointAt(n + 2) | 0x20;\n      if (pathname[n + 1] === '2' && third === 102) {\n        throw new ERR_INVALID_FILE_URL_PATH(\n          'must not include encoded / characters'\n        );\n      }\n    }\n  }\n  return decodeURIComponent(pathname);\n}\n\nfunction fileURLToPath(path) {\n  if (typeof path === 'string')\n    path = new URL(path);\n  else if (!isURLInstance(path))\n    throw new ERR_INVALID_ARG_TYPE('path'\x2C ['string'\x2C 'URL']\x2C path);\n  if (path.protocol !== 'file:')\n    throw new ERR_INVALID_URL_SCHEME('file');\n  return isWindows ? getPathFromURLWin32(path) : getPathFromURLPosix(path);\n}\n\n// The following characters are percent-encoded when converting from file path\n// to URL:\n// - %: The percent character is the only character not encoded by the\n//        `pathname` setter.\n// - \\: Backslash is encoded on non-windows platforms since it's a valid\n//      character but the `pathname` setters replaces it by a forward slash.\n// - LF: The newline character is stripped out by the `pathname` setter.\n//       (See whatwg/url#419)\n// - CR: The carriage return character is also stripped out by the `pathname`\n//       setter.\n// - TAB: The tab character is also stripped out by the `pathname` setter.\nconst percentRegEx = /%/g;\nconst backslashRegEx = /\\\\/g;\nconst newlineRegEx = /\\n/g;\nconst carriageReturnRegEx = /\\r/g;\nconst tabRegEx = /\\t/g;\n\nfunction encodePathChars(filepath) {\n  if (StringPrototypeIncludes(filepath\x2C '%'))\n    filepath = StringPrototypeReplace(filepath\x2C percentRegEx\x2C '%25');\n  // In posix\x2C backslash is a valid character in paths:\n  if (!isWindows && StringPrototypeIncludes(filepath\x2C '\\\\'))\n    filepath = StringPrototypeReplace(filepath\x2C backslashRegEx\x2C '%5C');\n  if (StringPrototypeIncludes(filepath\x2C '\\n'))\n    filepath = StringPrototypeReplace(filepath\x2C newlineRegEx\x2C '%0A');\n  if (StringPrototypeIncludes(filepath\x2C '\\r'))\n    filepath = StringPrototypeReplace(filepath\x2C carriageReturnRegEx\x2C '%0D');\n  if (StringPrototypeIncludes(filepath\x2C '\\t'))\n    filepath = StringPrototypeReplace(filepath\x2C tabRegEx\x2C '%09');\n  return filepath;\n}\n\nfunction pathToFileURL(filepath) {\n  const outURL = new URL('file://');\n  if (isWindows && StringPrototypeStartsWith(filepath\x2C '\\\\\\\\')) {\n    // UNC path format: \\\\server\\share\\resource\n    const paths = StringPrototypeSplit(filepath\x2C '\\\\');\n    if (paths.length <= 3) {\n      throw new ERR_INVALID_ARG_VALUE(\n        'filepath'\x2C\n        filepath\x2C\n        'Missing UNC resource path'\n      );\n    }\n    const hostname = paths[2];\n    if (hostname.length === 0) {\n      throw new ERR_INVALID_ARG_VALUE(\n        'filepath'\x2C\n        filepath\x2C\n        'Empty UNC servername'\n      );\n    }\n    outURL.hostname = domainToASCII(hostname);\n    outURL.pathname = encodePathChars(\n      ArrayPrototypeJoin(ArrayPrototypeSlice(paths\x2C 3)\x2C '/'));\n  } else {\n    let resolved = path.resolve(filepath);\n    // path.resolve strips trailing slashes so we must add them back\n    const filePathLast = StringPrototypeCharCodeAt(filepath\x2C\n                                                   filepath.length - 1);\n    if ((filePathLast === CHAR_FORWARD_SLASH ||\n         (isWindows && filePathLast === CHAR_BACKWARD_SLASH)) &&\n        resolved[resolved.length - 1] !== path.sep)\n      resolved += '/';\n    outURL.pathname = encodePathChars(resolved);\n  }\n  return outURL;\n}\n\nfunction isURLInstance(fileURLOrPath) {\n  return fileURLOrPath != null && fileURLOrPath.href && fileURLOrPath.origin;\n}\n\nfunction toPathIfFileURL(fileURLOrPath) {\n  if (!isURLInstance(fileURLOrPath))\n    return fileURLOrPath;\n  return fileURLToPath(fileURLOrPath);\n}\n\nfunction constructUrl(flags\x2C protocol\x2C username\x2C password\x2C\n                      host\x2C port\x2C path\x2C query\x2C fragment) {\n  const ctx = new URLContext();\n  ctx.flags = flags;\n  ctx.scheme = protocol;\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\n  ctx.port = port;\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\n  ctx.query = query;\n  ctx.fragment = fragment;\n  ctx.host = host;\n\n  const url = ObjectCreate(URL.prototype);\n  url[context] = ctx;\n  const params = new URLSearchParams();\n  url[searchParams] = params;\n  params[context] = url;\n  initSearchParams(params\x2C query);\n  return url;\n}\nsetURLConstructor(constructUrl);\n\nmodule.exports = {\n  toUSVString\x2C\n  fileURLToPath\x2C\n  pathToFileURL\x2C\n  toPathIfFileURL\x2C\n  isURLInstance\x2C\n  URL\x2C\n  URLSearchParams\x2C\n  domainToASCII\x2C\n  domainToUnicode\x2C\n  urlToHttpOptions\x2C\n  formatSymbol: kFormat\x2C\n  searchParamsSymbol: searchParams\x2C\n  encodeStr\n};\n
code-source-info,0x1a3e29cb7520,74,43877,43998,C0O43897C3O43902C9O43936C11O43957C12O43960C15O43967C19O43996,,
code-creation,LazyCompile,10,51750,0x1a3e29cba878,17,isURLInstance node:internal/url:1561:23,0x3b46b2027788,~
code-source-info,0x1a3e29cba878,74,43754,43851,C0O43774C3O43795C6O43820C12O43842C16O43849,,
tick,0x1a4e3b454,51791,0,0x0,3,0x0,0x1a3e29caeb1a,0x1a3e29cae6fb,0x1a3e29cae5b5,0x1a3e29cae46f,0x1a3e29caddd8,0x1a3e29cad9a6,0x1a3e29cad551,0xc1101dae2d0
code-creation,LazyCompile,10,51791,0x1a3e29cba9e0,81, node:internal/fs/utils:674:38,0x3b46b2035568,~
code-source-info,0x1a3e29cba9e0,77,18323,18593,C14O18356C22O18389C25O18389C31O18415C36O18446C49O18421C54O18415C55O18511C68O18511C74O18548C76O18577C78O18577C80O18592,,
code-creation,LazyCompile,10,51791,0x1a3e29cbabf8,110, node:internal/fs/utils:361:35,0x3b46b2034c08,~
code-source-info,0x1a3e29cbabf8,77,8625,9214,C16O8689C21O8742C26O8742C31O8836C37O8859C41O8887C45O8904C51O8904C60O8955C64O8976C69O8976C76O9021C77O9028C78O9048C94O9048C100O9162C104O9184C106O9184C107O9201C109O9212,,
code-creation,LazyCompile,10,51833,0x1a3e29cbad70,16,isUint8Array node:internal/util/types:13:22,0xa0ae21c2338,~
script-source,23,node:internal/util/types,'use strict';\n\nconst {\n  ArrayBufferIsView\x2C\n  ObjectDefineProperties\x2C\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\n} = primordials;\n\nfunction isTypedArray(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) !== undefined;\n}\n\nfunction isUint8Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8Array';\n}\n\nfunction isUint8ClampedArray(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8ClampedArray';\n}\n\nfunction isUint16Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint16Array';\n}\n\nfunction isUint32Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint32Array';\n}\n\nfunction isInt8Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int8Array';\n}\n\nfunction isInt16Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int16Array';\n}\n\nfunction isInt32Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int32Array';\n}\n\nfunction isFloat32Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float32Array';\n}\n\nfunction isFloat64Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float64Array';\n}\n\nfunction isBigInt64Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigInt64Array';\n}\n\nfunction isBigUint64Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigUint64Array';\n}\n\nmodule.exports = {\n  ...internalBinding('types')\x2C\n  isArrayBufferView: ArrayBufferIsView\x2C\n  isTypedArray\x2C\n  isUint8Array\x2C\n  isUint8ClampedArray\x2C\n  isUint16Array\x2C\n  isUint32Array\x2C\n  isInt8Array\x2C\n  isInt16Array\x2C\n  isInt32Array\x2C\n  isFloat32Array\x2C\n  isFloat64Array\x2C\n  isBigInt64Array\x2C\n  isBigUint64Array\x2C\n};\n\nlet isCryptoKey;\nlet isKeyObject;\n\nObjectDefineProperties(module.exports\x2C {\n  isKeyObject: {\n    __proto__: null\x2C\n    configurable: false\x2C\n    enumerable: true\x2C\n    value(obj) {\n      if (!process.versions.openssl) {\n        return false;\n      }\n\n      if (!isKeyObject) {\n        ({ isKeyObject } = require('internal/crypto/keys'));\n      }\n\n      return isKeyObject(obj);\n    }\n  }\x2C\n  isCryptoKey: {\n    __proto__: null\x2C\n    configurable: false\x2C\n    enumerable: true\x2C\n    value(obj) {\n      if (!process.versions.openssl) {\n        return false;\n      }\n\n      if (!isCryptoKey) {\n        ({ isCryptoKey } = require('internal/crypto/keys'));\n      }\n\n      return isCryptoKey(obj);\n    }\n  }\n});\n
code-source-info,0x1a3e29cbad70,23,257,342,C0O269C5O276C12O323C15O340,,
code-creation,LazyCompile,10,51958,0x1a3e29cbb1f8,61,splitRoot node:fs:2430:33,0x3b46b2018a60,~
code-source-info,0x1a3e29cbb1f8,73,64777,64969,C0O64802C2O64813C6O64807C11O64834C16O64838C24O64876C26O64872C31O64904C44O64911C49O64943C50O64823C55O64789C58O64954C60O64965,,
code-creation,LazyCompile,10,51958,0x1a3e29cbb330,20,nextPart node:fs:2463:31,0x3b46b2018b00,~
code-source-info,0x1a3e29cbb330,73,65684,65742,C0O65697C14O65704C19O65738,,
code-creation,LazyCompile,10,52000,0x1a3e29cbb438,63,handleErrorFromBinding node:internal/fs/utils:344:32,0x3b46b2034bb8,~
code-source-info,0x1a3e29cbb438,77,7986,8484,C0O8004C6O8067C11O8067C16O8089C24O8089C29O8146C31O8146C32O8171C38O8399C43O8426C51O8399C56O8472C60O8462C62O8483,,
code-creation,LazyCompile,10,52000,0x1a3e29cbb588,34,isFileType node:fs:218:20,0x3b46b2016dc0,~
code-source-info,0x1a3e29cbb588,73,5624,5865,C0O5758C2O5763C6O5770C10O5804C15O5811C20O5827C22O5842C24O5840C30O5850C33O5863,,
code-creation,LazyCompile,10,52083,0x1a3e29cbb708,72,encodeRealpathResult node:fs:2439:30,0x3b46b2018ab0,~
code-source-info,0x1a3e29cbb708,73,65003,65261,C0O65025C4O65050C10O65070C17O65079C22O65095C24O65109C25O65129C30O65136C35O65136C41O65164C48O65173C53O65193C55O65209C56O65232C61O65249C66O65232C71O65259,,
code-creation,LazyCompile,10,52125,0x1a3e29cbb898,118,shouldUseESMLoader node:internal/modules/run_main:30:28,0x1a3e29cac3e8,~
code-source-info,0x1a3e29cbb898,454,841,1564,C0O1026C8O1026C13O1085C19O1092C24O1101C25O1113C26O1156C34O1156C39O1213C41O1245C46O1261C47O1273C48O1321C54O1337C60O1337C67O1384C68O1396C69O1399C75O1416C81O1416C88O1463C89O1476C90O1491C95O1491C100O1521C102O1539C107O1544C114O1549C117O1562,,
code-creation,LazyCompile,10,52166,0x1a3e29cbbac0,129,readPackageScope node:internal/modules/cjs/loader:331:26,0x1e372ce1aa58,~
code-source-info,0x1a3e29cbbac0,430,9256,9774,C0O9299C7O9333C10O9299C16O9345C18O9372C25O9427C28O9389C34O9437C47O9449C54O9505C61O9544C66O9548C70O9509C77O9573C78O9586C79O9605C84O9629C86O9627C90O9605C95O9639C97O9650C104O9671C110O9690C116O9707C117O9734C119O9734C124O9363C127O9759C128O9772,,
code-creation,LazyCompile,10,52208,0x1a3e29cbbdf0,202,readPackage node:internal/modules/cjs/loader:301:21,0x1e372ce1aa08,~
code-source-info,0x1a3e29cbbdf0,430,8497,9229,C0O8532C5O8537C13O8537C20O8595C25O8612C30O8612C36O8629C38O8657C40O8673C41O8692C46O8710C51O8710C57O8748C63O8761C72O8787C77O8797C79O8827C84O8844C91O8844C97O8870C98O8883C102O8918C109O8938C112O8938C122O8918C128O9045C133O9062C138O9062C144O9091C146O9107C158O9128C163O9135C167O9151C175O9180C181O9191C188O9202C192O9198C195O9161C199O9215C201O9215,,
code-creation,LazyCompile,10,52250,0x1a3e29cbc0d0,199,read node:internal/modules/package_json_reader:16:14,0x1e372ce209c0,~
code-source-info,0x1a3e29cbc0d0,431,292,954,C0O307C5O317C10O317C17O338C22O351C27O351C32O365C33O412C40O440C43O440C48O412C53O384C59O395C66O489C73O491C79O499C86O544C92O544C97O525C102O575C106O607C112O643C115O654C127O704C132O738C142O652C148O774C154O821C159O821C164O852C169O861C174O861C180O907C185O913C190O913C196O938C198O952,,
tick,0x104c31f84,52291,0,0x0,2,0x0,0x1a3e29cbb8f7,0x1a3e29cad559,0xc1101dae2d0
code-creation,LazyCompile,10,52375,0x1a3e29cbc840,61,filterOwnProperties node:internal/util:517:29,0x3d9b801bcb88,~
code-source-info,0x1a3e29cbc840,21,14431,14674,C0O14467C7O14467C12O14502C14O14514C18O14507C23O14545C25O14549C29O14558C34O14562C41O14614C43O14636C46O14628C50O14523C55O14489C58O14656C60O14672,,
code-creation,LazyCompile,10,52416,0x1a3e29cbca18,70,runMainESM node:internal/modules/run_main:51:20,0x1a3e29cac438,~
code-source-info,0x1a3e29cbca18,454,1585,1925,C0O1585C12O1620C20O1620C25O1608C30O1688C38O1688C43O1670C49O1716C54O1734C59O1734C64O1716C69O1924,,
code-creation,LazyCompile,10,52458,0x1a3e29cbcc58,216,loadESM node:internal/process/esm_loader:88:41,0x1e372ce21408,~
code-source-info,0x1a3e29cbcc58,432,2670,2983,C10O2670C21O2695C24O2701C35O2695C58O2725C60O2740C63O2731C75O2725C113O2774C120O2778C125O2825C130O2833C138O2833C143O2861C152O2868C153O2879C161O2879C166O2904C176O2905C193O2982,,
code-creation,LazyCompile,10,52458,0x1a3e29cbd280,286,initializeLoader node:internal/process/esm_loader:54:32,0x1e372ce212d8,~
code-source-info,0x1a3e29cbd280,432,1681,2628,C10O1681C18O1688C24O1712C33O1719C34O1752C40O1752C45O1733C50O1805C53O1805C58O1867C64O1874C69O1881C78O1888C79O1896C84O1913C87O1927C92O1927C99O1933C106O1917C107O1956C110O2215C115O2215C121O2363C128O2394C131O2394C136O2412C143O2423C148O2423C159O2369C172O2339C198O2547C203O2563C208O2563C221O2547C244O2602C248O2619C263O2627,,
code-creation,LazyCompile,10,52500,0x1a3e29cbd570,169,handleMainPromise node:internal/modules/run_main:62:33,0x1a3e29cac488,~
code-source-info,0x1a3e29cbd570,454,1959,2109,C10O1959C18O1973C21O1981C31O1992C34O1981C43O2024C53O2031C90O2064C93O2072C103O2084C106O2072C146O2108,,
code-creation,LazyCompile,10,52541,0x1a3e29cbd730,77, node:internal/modules/run_main:55:29,0x1a3e29cbc950,~
code-source-info,0x1a3e29cbd730,454,1742,1920,C0O1776C7O1781C15O1781C24O1810C30O1810C35O1833C44O1872C55O1896C60O1896C71O1878C76O1916,,
code-creation,LazyCompile,10,52583,0x1a3e29cbd9b0,283,pathToFileURL node:internal/url:1524:23,0x3b46b2027738,~
code-source-info,0x1a3e29cbd9b
code-creation,LazyCompile,10,52625,0x1a3e29cbdc78,136,URL node:internal/url:636:14,0x3b46b20265c0,~
code-source-info,0x1a3e29cbdc78,74,17618,18011,C13O17684C17O17712C19O17730C23O17762C30O17777C40O17791C42O17790C46O17811C50O17816C57O17831C60O17827C65O17825C69O17849C85O17901C93O17901C103O17957C117O17957C129O17849C135O18010,,
code-creation,LazyCompile,10,52666,0x1a3e29cbde50,51,URLContext node:internal/url:161:14,0x3b46b2025da0,~
code-source-info,0x1a3e29cbde50,74,3723,3935,C0O3732C1O3743C5O3752C7O3764C11O3775C13O3789C17O3799C19O3813C23O3823C24O3833C28O3845C29O3855C33O3867C35O3877C39O3887C40O3898C44O3910C45O3924C50O3934,,
code-creation,LazyCompile,10,52708,0x1a3e29cbe090,190,onParseComplete node:internal/url:544:25,0x3b46b20262a0,~
code-source-info,0x1a3e29cbe090,74,14715,15384,C0O14829C2O14834C4O14833C8O14846C10O14856C14O14867C16O14878C20O14892C22O14916C24O14914C29O14940C43O14905C47O14965C49O14989C51O14987C56O15013C70O14978C74O15038C76O15047C80O15057C82O15077C84O15075C89O15097C101O15105C103O15066C107O15118C109O15128C113O15139C115O15152C119O15166C121O15175C125O15185C127O15195C129O15194C134O15248C136O15253C141O15273C144O15269C149O15267C153O15296C155O15301C157O15300C163O15315C168O15324C172O15338C177O15360C179O15359C183O15338C189O15383,,
code-creation,LazyCompile,10,52791,0x1a3e29cbe508,934,URLSearchParams node:internal/url:183:14,0x3b46b2025e40,~
code-source-info,0x1a3e29cbe
code-creation,LazyCompile,10,52833,0x1a3e29cbeb28,35,initSearchParams node:internal/url:1082:26,0x3b46b20272d8,~
code-source-info,0x1a3e29cbeb28,74,29398,29513,C0O29414C4O29431C6O29435C11O29449C15O29459C16O29466C17O29473C19O29477C25O29493C29O29491C34O29512,,
code-creation,LazyCompile,10,52875,0x1a3e29cbecd8,199,encodePathChars node:internal/url:1509:25,0x3b46b20276e8,~
code-source-info,0x1a3e29cbecd8,74,41785,42477,C0O41800C8O41804C15O41848C22O41892C31O41859C38O41972C46O41990C52O41990C59O42035C66O42079C75O42046C82O42105C90O42109C97O42154C104O42198C113O42165C120O42222C128O42226C135O42271C142O42315C151O42282C158O42346C166O42350C173O42395C180O42439C189O42406C196O42459C198O42475,,
code-creation,LazyCompile,10,52916,0x1a3e29cbef10,99,set pathname node:internal/url:936:15,0x3b46b2026f08,~
code-source-info,0x1a3e29cbef10,74,25485,25754,C0O25498C5O25503C11O25526C23O25532C28O25526C29O25599C34O25621C38O25630C40O25629C45O25651C46O25658C47O25663C58O25675C67O25698C69O25697C78O25738C83O25738C92O25663C98O25753,,
code-creation,LazyCompile,10,52916,0x1a3e29cbf078,22,isURLThis node:internal/url:631:19,0x3b46b2026570,~
code-source-info,0x1a3e29cbf078,74,17502,17591,C0O17513C3O17526C9O17548C14O17565C16O17564C20O17574C21O17589,,
code-creation,LazyCompile,10,52958,0x1a3e29cbf180,31, node:internal/url:653:21,0x3b46b20266a8,~
code-source-info,0x1a3e29cbf180,74,18118,18193,C0O18127C4O18140C6O18139C10O18149C19O18157C21O18155C26O18183C30O18189,,
code-creation,LazyCompile,10,52958,0x1a3e29cbf2a8,108,onParsePathComplete node:internal/url:603:29,0x3b46b2026480,~
code-source-info,0x1a3e29cbf2a8,74,16674,17140,C0O16792C2O16797C4O16796C8O16809C10O16822C12O16820C17O16842C22O16855C24O16864C28O16876C35O16889C40O16886C46O16924C48O16933C52O16943C59O16957C61O16956C66O16953C70O17035C72O17048C74O17046C79O17068C84O17081C86O17090C90O17102C97O17115C102O17112C107O17139,,
code-creation,LazyCompile,10,53000,0x1a3e29cbf450,47,get href node:internal/url:753:11,0x3b46b2026838,~
code-source-info,0x1a3e29cbf450,74,20850,20955,C0O20859C5O20864C11O20887C23O20893C28O20887C29O20926C33O20938C35O20937C41O20946C46O20951,,
code-creation,LazyCompile,10,53041,0x1a3e29cbf748,393, node:internal/url:699:12,0x3b46b2026798,~
code-source-info,0x1a3e29cbf
code-creation,LazyCompile,10,53083,0x1a3e29cbfbf0,371,import node:internal/modules/esm/loader:507:15,0x1e372ce22e58,~
code-source-info,0x1a3e29cbfbf0,433,14580,15942,C10O14580C18O15208C25O15208C30O15238C32O15253C41O15267C50O15312C55O15337C64O15337C70O15373C81O15564C90O15388C98O15378C100O15378C116O15415C124O15438C138O15415C145O15480C157O15481C164O15514C175O15515C180O15408C191O15360C206O15590C217O15611C222O15607C228O15596C240O15590C266O15642C270O15657C271O15674C282O15678C283O15732C285O15737C287O15737C292O15777C301O15777C306O15803C308O15829C311O15817C315O15840C317O15870C320O15858C324O15882C326O15896C330O15747C335O15719C338O15920C348O15938,,
new,MemoryChunk,0x117768a00000,262144
code-creation,LazyCompile,10,53166,0x117768a01168,247,getModuleJob node:internal/modules/esm/loader:412:21,0x1e372ce22e08,~
code-source-info,0x117768a01168,433,11431,12352,C10O11431C18O11482C20O11591C22O11600C26O11609C33O11616C38O11780C49O11831C54O11831C59O11809C65O11938C82O11938C95O11927C118O11905C123O11913C128O12017C133O12027C138O12053C143O12027C150O12125C154O12169C159O12179C166O12205C176O12179C181O12224C185O12255C187O12266C208O12282C214O12337C224O12348,,
code-creation,LazyCompile,10,53250,0x117768a01868,560,resolve node:internal/modules/esm/loader:786:16,0x1e372ce22f98,~
code-source-info,0x117768a
code-creation,LazyCompile,10,53333,0x117768a02150,278,nextHookFactory node:internal/modules/esm/loader:115:25,0x1e372ce22bf8,~
code-source-info,0x117768a02150,433,3346,5403,C0O3346C25O3362C31O3376C59O3451C64O3438C70O3510C80O3521C84O3515C88O3475C94O3490C100O3579C107O3591C114O3626C118O3591C127O3637C136O3637C141O3631C148O3579C150O3861C155O3866C159O3861C161O3883C162O3883C164O3899C169O3908C175O3918C180O4058C191O4072C195O4081C210O4119C219O4127C227O4141C231O4096C236O4094C240O4226C244O4239C246O4417C268O5381C272O4424C277O5401,,
code-creation,LazyCompile,10,53375,0x117768a02560,399,ObjectDefineProperty.__proto__ node:internal/modules/esm/loader:149:5,0x117768a01f88,~
code-source-info,0x117768a02560,433,4450,5337,C10O4450C36O4464C60O4575C69O4603C81O4620C93O4598C97O4640C108O4656C111O4661C125O4689C144O4640C149O4758C158O4767C160O4766C164O4787C178O4795C193O4815C206O4913C212O4936C217O4945C225O4964C229O4981C233O5071C244O5084C247O5089C252O5071C257O5138C266O5155C269O5160C276O5169C282O5144C295O5138C321O5191C328O5191C333O5243C340O5253C349O5268C354O5280C362O5300C366O5316C376O5330,,
code-creation,LazyCompile,10,53416,0x117768a02840,50,validateArgs node:internal/modules/esm/loader:819:26,0x117768a014c0,~
code-source-info,0x117768a02840,433,23804,24073,C0O23859C9O23913C17O23859C22O24006C26O24015C35O24038C43O24015C49O24072,,
tick,0x1050636dc,53458,0,0x0,2,0x0,0x117768a025f0,0x117768a01959,0x117768a011ba,0x1a3e29cbfc7a,0x1a3e29cbd777,0x1a3e29cbcc97,0x105405ef4
code-creation,Function,11,53500,0x109cc9640,344,validateString node:internal/validators:159:24,0x3d9b801bfe78,^
code-source-info,0x109cc9640,22,4076,4185,,,
code-creation,Function,11,53541,0x109cc9800,512,getCLIOptionsFromBinding node:internal/options:18:34,0xd141ccc9ff8,^
code-source-info,0x109cc9800,88,497,598,,,
code-creation,Function,11,53583,0x109cc9a60,1456,compileForInternalLoader node:internal/bootstrap/loaders:316:27,0x3d9b8018ec78,^
code-source-info,0x109cc9a60,15,9997,10800,,,
code-creation,Function,11,53583,0x109cca080,656,internalBinding node:internal/bootstrap/loaders:171:45,0x3d9b8018e5a8,^
code-source-info,0x109cca080,15,5264,5502,,,
code-creation,Function,11,53583,0x109cca380,320,protoGetter node:net:836:21,0x1e372ce36348,^
code-source-info,0x109cca380,441,22014,22175,,,
code-creation,Function,11,53625,0x109cca520,312,SafeMap node:internal/per_context/primordials:366:16,0x3d9b80188e88,^
code-source-info,0x109cca520,12,10601,10618,,,
code-creation,Function,11,53625,0x109cca6c0,136,next node:internal/per_context/primordials:288:9,0x3d9b801882e0,^
code-source-info,0x109cca6c0,12,8207,8252,,,
code-creation,Function,11,53625,0x109cca7c0,232,canBeRequiredWithoutScheme node:internal/bootstrap/loaders:254:36,0x3d9b8018eac0,^
code-source-info,0x109cca7c0,15,7781,7832,,,
code-creation,Function,11,53666,0x109cca920,216, node:internal/modules/cjs/loader:192:41,0x1e372ce1b008,^
code-source-info,0x109cca920,430,5873,5899,,,
code-creation,Function,11,53666,0x109ccaa60,1520,resolve node:path:1091:10,0x25eb221f37f8,^
code-source-info,0x109ccaa60,71,33781,34691,,,
code-creation,Function,11,53708,0x109ccb0c0,64,toNamespacedPath node:path:1266:19,0x25eb221f3988,^
code-source-info,0x109ccb0c0,71,38608,38668,,,
code-creation,LazyCompile,10,53833,0x117768a02fe0,912,defaultResolve node:internal/modules/esm/resolve:984:30,0x1e372ce2c810,~
code-source-info,0x117768a02fe
code-creation,LazyCompile,10,53916,0x117768a059a0,31,shouldBeTreatedAsRelativeOrAbsolutePath node:internal/modules/esm/resolve:831:49,0x1e372ce2c630,~
code-source-info,0x117768a059a0,437,27432,27567,C0O27448C2O27462C7O27470C8O27483C9O27486C10O27499C16O27503C21O27512C22O27524C23O27527C26O27534C30O27565,,
code-creation,LazyCompile,10,53916,0x117768a05ab8,81,isRelativeSpecifier node:internal/modules/esm/resolve:821:29,0x1e372ce2c5e0,~
code-source-info,0x117768a05ab8,437,27139,27382,C0O27155C1O27168C7O27172C12O27201C19O27208C26O27226C32O27230C37O27239C38O27251C39O27256C41O27269C47O27273C52O27304C59O27311C66O27329C72O27333C77O27342C78O27354C79O27367C80O27380,,
code-creation,LazyCompile,10,53958,0x117768a05c58,44,get protocol node:internal/url:795:15,0x3b46b2026978,~
code-source-info,0x117768a05c58,74,21935,22043,C0O21944C5O21949C11O21972C23O21978C28O21972C29O22011C33O22023C35O22022C39O22032C43O22039,,
code-creation,LazyCompile,10,54000,0x117768a05e80,183,checkIfDisallowedImport node:internal/modules/esm/resolve:916:33,0x1e372ce2c720,~
code-source-info,0x117768a05e80,437,30248,31408,C0O30289C4O30343C11O30352C16O30389C23O30398C28O30425C31O30429C37O30585C41O30616C48O30625C53O30658C60O30667C65O30701C81O30707C86O30701C87O30892C92O30913C102O30920C103O30935C108O30953C113O30953C122O30998C125O31012C130O31012C137O31061C153O31067C158O31061C159O31240C175O31246C180O31240C182O31407,,
code-creation,LazyCompile,10,54000,0x117768a060e0,104,throwIfUnsupportedURLScheme node:internal/modules/esm/resolve:963:37,0x1e372ce2c7c0,~
code-source-info,0x117768a060e0,437,31646,32098,C0O31687C4O31717C11O31726C16O31752C23O31761C30O31789C32O31842C39O31851C44O31882C51O31891C56O31927C63O31976C77O32032C88O31976C96O31933C101O31927C103O32097,,
code-creation,LazyCompile,10,54041,0x117768a06258,40,wrappedCwd node:internal/bootstrap/switches/does_own_process_state:124:20,0x1e27ac64c2b0,~
script-source,130,node:internal/bootstrap/switches/does_own_process_state,'use strict';\n\nconst credentials = internalBinding('credentials');\nconst rawMethods = internalBinding('process_methods');\n\nprocess.abort = rawMethods.abort;\nprocess.umask = wrappedUmask;\nprocess.chdir = wrappedChdir;\nprocess.cwd = wrappedCwd;\n\nif (credentials.implementsPosixCredentials) {\n  const wrapped = wrapPosixCredentialSetters(credentials);\n\n  process.initgroups = wrapped.initgroups;\n  process.setgroups = wrapped.setgroups;\n  process.setegid = wrapped.setegid;\n  process.seteuid = wrapped.seteuid;\n  process.setgid = wrapped.setgid;\n  process.setuid = wrapped.setuid;\n}\n\n// ---- keep the attachment of the wrappers above so that it's easier to ----\n// ----              compare the setups side-by-side                    -----\n\nconst {\n  parseFileMode\x2C\n  validateArray\x2C\n  validateString\n} = require('internal/validators');\n\nfunction wrapPosixCredentialSetters(credentials) {\n  const {\n    codes: {\n      ERR_INVALID_ARG_TYPE\x2C\n      ERR_UNKNOWN_CREDENTIAL\n    }\n  } = require('internal/errors');\n  const {\n    validateUint32\n  } = require('internal/validators');\n\n  const {\n    initgroups: _initgroups\x2C\n    setgroups: _setgroups\x2C\n    setegid: _setegid\x2C\n    seteuid: _seteuid\x2C\n    setgid: _setgid\x2C\n    setuid: _setuid\n  } = credentials;\n\n  function initgroups(user\x2C extraGroup) {\n    validateId(user\x2C 'user');\n    validateId(extraGroup\x2C 'extraGroup');\n    // Result is 0 on success\x2C 1 if user is unknown\x2C 2 if group is unknown.\n    const result = _initgroups(user\x2C extraGroup);\n    if (result === 1) {\n      throw new ERR_UNKNOWN_CREDENTIAL('User'\x2C user);\n    } else if (result === 2) {\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C extraGroup);\n    }\n  }\n\n  function setgroups(groups) {\n    validateArray(groups\x2C 'groups');\n    for (let i = 0; i < groups.length; i++) {\n      validateId(groups[i]\x2C `groups[${i}]`);\n    }\n    // Result is 0 on success. A positive integer indicates that the\n    // corresponding group was not found.\n    const result = _setgroups(groups);\n    if (result > 0) {\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C groups[result - 1]);\n    }\n  }\n\n  function wrapIdSetter(type\x2C method) {\n    return function(id) {\n      validateId(id\x2C 'id');\n      if (typeof id === 'number') id |= 0;\n      // Result is 0 on success\x2C 1 if credential is unknown.\n      const result = method(id);\n      if (result === 1) {\n        throw new ERR_UNKNOWN_CREDENTIAL(type\x2C id);\n      }\n    };\n  }\n\n  function validateId(id\x2C name) {\n    if (typeof id === 'number') {\n      validateUint32(id\x2C name);\n    } else if (typeof id !== 'string') {\n      throw new ERR_INVALID_ARG_TYPE(name\x2C ['number'\x2C 'string']\x2C id);\n    }\n  }\n\n  return {\n    initgroups\x2C\n    setgroups\x2C\n    setegid: wrapIdSetter('Group'\x2C _setegid)\x2C\n    seteuid: wrapIdSetter('User'\x2C _seteuid)\x2C\n    setgid: wrapIdSetter('Group'\x2C _setgid)\x2C\n    setuid: wrapIdSetter('User'\x2C _setuid)\n  };\n}\n\n// Cache the working directory to prevent lots of lookups. If the working\n// directory is changed by `chdir`\x2C it'll be updated.\nlet cachedCwd = '';\n\nfunction wrappedChdir(directory) {\n  validateString(directory\x2C 'directory');\n  rawMethods.chdir(directory);\n  // Mark cache that it requires an update.\n  cachedCwd = '';\n}\n\nfunction wrappedUmask(mask) {\n  if (mask !== undefined) {\n    mask = parseFileMode(mask\x2C 'mask');\n  }\n  return rawMethods.umask(mask);\n}\n\nfunction wrappedCwd() {\n  if (cachedCwd === '')\n    cachedCwd = rawMethods.cwd();\n  return cachedCwd;\n}\n
code-source-info,0x117768a06258,130,3341,3425,C0O3348C7O3362C12O3374C17O3397C22O3397C29O3384C35O3406C39O3423,,
code-creation,LazyCompile,10,54291,0x117768a067d0,64,getConditionsSet node:internal/modules/esm/resolve:140:26,0x1e372ce2bf00,~
code-source-info,0x117768a067d0,437,4399,4726,C0O4416C6O4463C8O4459C13O4489C18O4494C24O4528C40O4534C45O4528C46O4656C53O4663C58O4687C59O4694C63O4724,,
code-creation,LazyCompile,10,54291,0x117768a06948,166,moduleResolve node:internal/modules/esm/resolve:844:23,0x1e372ce2c680,~
code-source-info,0x117768a06948,437,27782,28551,C0O27856C7O27865C12O27889C19O27898C23O28018C25O28030C28O28034C34O28092C47O28103C55O28138C60O28164C66O28168C71O28183C83O28194C94O28273C101O28284C110O28282C111O28324C115O28349C127O28360C133O28438C140O28447C145O28466C147O28482C148O28489C160O28496C165O28549,,
code-creation,LazyCompile,10,54375,0x117768a06c38,454,finalizeResolution node:internal/modules/esm/resolve:272:28,0x1e372ce2c0e0,~
code-source-info,0x117768a06c
code-creation,LazyCompile,10,54416,0x117768a07030,107,get pathname node:internal/url:925:15,0x3b46b2026e98,~
code-source-info,0x117768a07030,74,25209,25469,C0O25218C5O25223C11O25246C23O25252C28O25246C29O25297C33O25302C35O25301C39O25316C43O25325C45O25324C50O25357C56O25361C59O25365C60O25378C65O25383C71O25390C76O25403C78O25413C79O25418C86O25429C89O25452C97O25429C106O25465,,
code-creation,LazyCompile,10,54500,0x117768a072f0,106,fileURLToPath node:internal/url:1482:23,0x3b46b2027698,~
code-source-info,0x117768a072f0,74,40676,41001,C0O40687C6O40721C13O40728C22O40750C25O40755C31O40780C49O40786C54O40780C55O40856C62O40865C67O40882C77O40888C82O40882C83O40926C92O40945C101O40973C105O40999,,
code-creation,LazyCompile,10,54541,0x117768a07530,179,get origin node:internal/url:770:13,0x3b46b2026908,~
code-source-info,0x117768a07530,74,21293,21919,C0O21302C5O21307C11O21330C23O21336C28O21330C29O21442C33O21447C35O21446C39O21473C88O21519C93O21524C99O21531C107O21566C112O21586C118O21590C124O21574C130O21596C134O21603C139O21696C145O21717C146O21823C151O21855C156O21867C161O21877C166O21830C171O21883C172O21894C178O21915,,
code-creation,LazyCompile,10,54583,0x117768a077c8,136,getPathFromURLPosix node:internal/url:1464:29,0x3b46b2027648,~
code-source-info,0x117768a077c8,74,40176,40652,C0O40194C7O40203C12O40217C19O40253C24O40223C29O40217C30O40291C35O40316C37O40332C41O40321C46O40351C48O40363C54O40367C59O40407C66O40421C70O40407C75O40426C79O40440C81O40455C84O40452C90O40460C97O40477C102O40496C112O40502C117O40496C118O40341C123O40303C126O40614C131O40621C135O40650,,
code-creation,LazyCompile,10,54583,0x117768a079b0,48,get hostname node:internal/url:883:15,0x3b46b2026ce8,~
code-source-info,0x117768a079b0,74,24151,24263,C0O24160C5O24165C11O24188C23O24194C28O24188C29O24227C33O24239C35O24238C39O24248C47O24259,,
code-creation,LazyCompile,10,54625,0x117768a07c18,30,tryStatSync node:internal/modules/esm/resolve:158:3,0x1e372ce2c860,~
code-source-info,0x117768a07c18,437,4859,4925,C0O4914C5O4878C10O4869C21O4918C24O4914C29O4925,,
code-creation,LazyCompile,10,54666,0x117768a07dd0,123,statSync node:fs:1588:18,0x3b46b2017f70,~
code-source-info,0x117768a07dd0,73,40613,41017,C7O40613C16O40675C21O40682C26O40720C33O40722C40O40746C45O40754C52O40759C55O40770C60O40770C66O40831C76O40754C82O40870C88O40885C96O40898C102O40926C103O40943C104O40950C109O40950C113O40981C118O40988C122O41015,,
tick,0x1a4e3b454,54708,0,0x0,3,0x0,0x117768a07c22,0x117768a06d28,0x117768a069e8,0x117768a03236,0x117768a0267a,0x117768a01959,0x117768a011ba,0x1a3e29cbfc7a,0x1a3e29cbd777,0x1a3e29cbcc97,0x105405ef4
code-creation,LazyCompile,10,54708,0x117768a07f70,37, node:internal/fs/utils:686:42,0x3b46b20355b8,~
code-source-info,0x117768a07f70,77,18638,18773,C14O18693C19O18693C24O18727C29O18727C34O18759C36O18771,,
code-creation,LazyCompile,10,54791,0x117768a080b0,64,hasNoEntryError node:fs:1525:25,0x3b46b2017e80,~
code-source-info,0x117768a080b0,73,39050,39241,C0O39068C6O39095C11O39111C16O39095C21O39123C27O39137C36O39141C39O39154C40O39170C46O39194C51O39200C58O39205C61O39218C62O39226C63O39239,,
code-creation,LazyCompile,10,54833,0x117768a081e8,576,getStatsFromBinding node:internal/fs/utils:536:29,0x3b46b2035388,~
code-source-info,0x117768a081e
code-creation,LazyCompile,10,54875,0x117768a08618,16,isBigInt64Array node:internal/util/types:49:25,0xa0ae21c2608,~
code-source-info,0x117768a08618,23,1256,1344,C0O1268C5O1275C12O1322C15O1342,,
code-creation,LazyCompile,10,54916,0x117768a08738,19,msFromTimeSpec node:internal/fs/utils:450:24,0x3b46b20350d8,~
code-source-info,0x117768a08738,77,11068,11127,C0O11084C2O11097C4O11095C10O11116C12O11114C15O11107C18O11125,,
code-creation,LazyCompile,10,54916,0x117768a08970,116,Stats node:internal/fs/utils:501:15,0x3b46b20352a8,~
code-source-info,0x117768a08970,77,12911,13439,C0O13048C41O13048C46O13176C48O13189C52O13202C54O13215C58O13228C60O13241C64O13254C66O13271C70O13288C73O13301C77O13299C81O13324C84O13337C88O13335C92O13360C95O13373C99O13371C103O13396C106O13413C110O13411C115O13438,,
code-creation,LazyCompile,10,54958,0x117768a08b40,62,StatsBase node:internal/fs/utils:404:19,0x3b46b2034ca8,~
code-source-info,0x117768a08b40,77,9975,10264,C0O10061C2O10070C6O10079C8O10089C12O10099C14O10110C18O10121C20O10130C24O10139C26O10148C30O10157C32O10167C36O10177C38O10190C42O10203C44O10212C48O10221C50O10231C54O10241C56O10253C61O10263,,
new,MemoryChunk,0x21b1e54c0000,262144
code-creation,LazyCompile,10,55041,0x117768a08d28,33,dateFromMs node:internal/fs/utils:465:20,0x3b46b2035178,~
code-source-info,0x117768a08d28,77,11633,11725,C0O11684C7O11700C12O11710C15O11710C20O11700C27O11691C32O11723,,
code-creation,LazyCompile,10,55041,0x117768a08e38,16,StatsBase.isDirectory node:internal/fs/utils:418:43,0x3b46b2034cf8,~
code-source-info,0x117768a08e38,77,10308,10357,C0O10327C7O10346C10O10327C15O10355,,
code-creation,LazyCompile,10,55083,0x117768a08f48,54,Stats._checkModeProperty node:internal/fs/utils:523:46,0x3b46b20352f8,~
code-source-info,0x117768a08f48,77,13788,14010,C0O13803C8O13834C10O13830C17O13858C19O13854C26O13886C28O13882C33O13903C34O13916C35O13980C42O13987C44O13985C50O13995C53O14008,,
code-creation,LazyCompile,10,55083,0x117768a09078,16,StatsBase.isFile node:internal/fs/utils:422:38,0x3b46b2034d88,~
code-source-info,0x117768a09078,77,10397,10446,C0O10416C7O10435C10O10416C15O10444,,
code-creation,LazyCompile,10,55166,0x117768a09288,66,get search node:internal/url:947:13,0x3b46b2026f78,~
code-source-info,0x117768a09288,74,25768,25961,C0O25777C5O25782C11O25805C23O25811C28O25805C29O25862C33O25867C35O25866C39O25852C44O25881C48O25909C53O25923C55O25933C56O25938C61O25949C65O25957,,
code-creation,LazyCompile,10,55208,0x117768a09400,66,get hash node:internal/url:983:11,0x3b46b20270c8,~
code-source-info,0x117768a09400,74,26701,26906,C0O26710C5O26715C11O26738C23O26744C28O26738C29O26798C33O26803C35O26802C39O26785C44O26817C48O26851C53O26865C55O26875C56O26880C61O26891C65O26902,,
code-creation,LazyCompile,10,55250,0x117768a095c0,210,set search node:internal/url:956:13,0x3b46b2026fe8,~
code-source-info,0x117768a095c0,74,25975,26549,C0O25990C5O25995C11O26018C23O26024C28O26018C29O26069C33O26074C35O26073C39O26088C46O26097C52O26122C54O26133C59O26149C60O26159C64O26173C73O26187C75O26186C80O26183C86O26227C87O26237C93O26241C98O26250C108O26259C115O26298C117O26308C121O26320C130O26333C135O26330C139O26360C143O26382C154O26396C163O26429C171O26429C183O26382C188O26500C197O26522C199O26521C203O26500C209O26548,,
code-creation,LazyCompile,10,55291,0x117768a097e8,41,toUSVString node:internal/util:61:21,0x3d9b801bb6f8,~
code-source-info,0x117768a097e8,21,1393,1685,C0O1415C4O1566C11O1586C14O1566C20O1615C22O1631C24O1642C25O1645C30O1676C35O1652C40O1683,,
code-creation,LazyCompile,10,55333,0x117768a09970,173,set hash node:internal/url:992:11,0x3b46b2027130,~
code-source-info,0x117768a09970,74,26918,27418,C0O26931C5O26936C11O26959C23O26965C28O26959C29O27010C33O27015C35O27014C39O27063C44O27085C46O27104C47O27117C51O27131C60O27145C62O27144C67O27141C71O27175C72O27182C73O27193C74O27201C80O27205C85O27214C95O27221C102O27256C104O27269C108O27279C117O27292C122O27289C126O27320C137O27332C146O27364C154O27364C166O27320C172O27417,,
code-creation,LazyCompile,10,55333,0x117768a09b68,51,throwIfUnsupportedURLProtocol node:internal/modules/esm/resolve:956:39,0x1e372ce2c770,~
code-source-info,0x117768a09b68,437,31448,31608,C0O31466C7O31475C12O31494C19O31503C24O31528C31O31537C36O31556C43O31562C48O31556C50O31607,,
code-creation,LazyCompile,10,55375,0x117768a09d50,64,defaultGetFormatWithoutErrors node:internal/modules/esm/get_format:107:39,0x1e372ce31030,~
code-source-info,0x117768a09d50,439,3505,3711,C0O3539C7O3539C13O3555C20O3590C23O3615C28O3560C35O3630C36O3642C37O3645C42O3676C46O3668C58O3685C63O3709,,
code-creation,LazyCompile,10,55416,0x117768a0a2b8,47,toString node:internal/url:747:11,0x3b46b20267e8,~
code-source-info,0x117768a0a2b8,74,20733,20838,C0O20742C5O20747C11O20770C23O20776C28O20770C29O20809C33O20821C35O20820C41O20829C46O20834,,
code-creation,LazyCompile,10,55458,0x117768a0a690,280,getFileProtocolModuleFormat node:internal/modules/esm/get_format:55:37,0x1e372ce30f90,~
code-source-info,0x117768a0a690,439,1597,2902,C0O1647C5O1647C10O1681C15O1681C20O1702C22O1710C27O1727C32O1734C39O1754C50O1791C51O1814C58O1832C62O1841C64O1853C66O1867C67O1871C74O1907C79O2004C83O2022C84O2039C85O2061C88O2069C93O2073C100O2093C107O2113C112O2144C117O2144C122O2199C127O2199C132O2246C139O2267C142O2283C147O2267C156O2246C162O2315C167O2386C171O2480C182O2460C191O2556C201O2534C207O2609C216O2733C229O2751C239O2695C243O2783C259O2789C264O2783C265O2855C270O2862C279O2900,,
code-creation,LazyCompile,10,55500,0x117768a0a9f0,211,extname node:path:1385:10,0x25eb221f3a78,~
code-source-info,0x117768a0a9f0,71,41976,43659,C0O41989C8O41989C13O42038C16O42062C18O42079C21O42106C23O42252C25O42277C29O42284C33O42291C34O42291C39O42323C44O42323C50O42365C52O42378C54O42374C59O42542C63O42573C65O42587C69O42602C71O42627C73O42651C75O42659C80O42774C82O42804C84O42812C88O42831C90O42844C92O42840C97O42939C99O42952C104O42970C111O42997C113O43013C118O43030C123O43060C125O43073C130O43233C133O42299C138O42259C141O43270C143O43283C150O43305C156O43400C163O43497C170O43532C173O43524C180O43571C183O43557C188O43585C190O43595C191O43606C205O43613C210O43655,,
code-creation,LazyCompile,10,55541,0x117768a0ac28,15,getPackageType node:internal/modules/esm/resolve:705:24,0x1e372ce2c4a0,~
code-source-info,0x117768a0ac28,437,23381,23471,C0O23413C5O23413C10O23464C14O23469,,
code-creation,LazyCompile,10,55583,0x117768a0ae80,173,getPackageScopeConfig node:internal/modules/esm/package_config:105:31,0x1e372ce300e0,~
code-source-info,0x117768a0ae80,438,2494,3557,C0O2530C13O2530C19O2627C24O2641C32O2645C39O2724C41O2763C46O2780C49O2780C54O2763C60O2844C66O2860C68O2881C69O2920C72O2940C85O2957C91O3162C96O3194C100O3171C105O3212C107O2569C110O3255C115O3255C120O3310C127O3327C132O3373C137O3394C142O3436C147O3460C154O3478C159O3495C164O3495C170O3534C172O3555,,
code-creation,LazyCompile,10,55666,0x117768a0b818,365,getPackageConfig node:internal/modules/esm/package_config:40:26,0x1e372ce30090,~
code-source-info,0x117768a0b
code-creation,LazyCompile,10,55750,0x117768a0bb20,36,validateOutput node:internal/modules/esm/loader:827:28,0x117768a01510,~
code-source-info,0x117768a0bb20,433,24102,24339,C0O24141C10O24209C28O24215C33O24209C35O24338,,
code-creation,LazyCompile,10,55750,0x117768a0bc48,80,has node:internal/modules/esm/module_map:37:6,0x1e372ce25e28,~
code-source-info,0x117768a0bc48,434,1259,1413,C11O1272C18O1299C28O1299C33O1331C43O1331C48O1365C50O1378C61O1378C71O1388C78O1395C79O1409,,
code-creation,Function,11,55833,0x109ccb160,1704,onParseComplete node:internal/url:544:25,0x3b46b20262a0,^
code-source-info,0x109ccb160,74,14715,15384,,,
code-creation,Function,11,55833,0x109ccb880,376,isURLThis node:internal/url:631:19,0x3b46b2026570,^
code-source-info,0x109ccb880,74,17502,17591,,,
code-creation,Function,11,55833,0x109ccba60,1288,getPathFromURLPosix node:internal/url:1464:29,0x3b46b2027648,^
code-source-info,0x109ccba60,74,40176,40652,,,
code-creation,Function,11,55875,0x109ccbfe0,312,SafeSet node:internal/per_context/primordials:379:16,0x3d9b801890b8,^
code-source-info,0x109ccbfe0,12,10928,10945,,,
code-creation,Function,11,55875,0x109ccc180,216,nextPart node:fs:2463:31,0x3b46b2018b00,^
code-source-info,0x109ccc180,73,65684,65742,,,
code-creation,Function,11,55916,0x109ccc2c0,376,isFileType node:fs:218:20,0x3b46b2016dc0,^
code-source-info,0x109ccc2c0,73,5624,5865,,,
code-creation,Function,11,55916,0x109ccc4a0,328,getOwnPropertyValueOrDefault node:internal/validators:220:38,0xa0ae21c11d0,^
code-source-info,0x109ccc4a0,22,5703,5847,,,
code-creation,Function,11,55958,0x109ccc660,336, node:internal/url:653:21,0x3b46b20266a8,^
code-source-info,0x109ccc660,74,18118,18193,,,
code-creation,Function,11,55958,0x109ccc820,1112, node:internal/validators:239:3,0xa0ae21c1220,^
code-source-info,0x109ccc820,22,6112,6667,,,
code-creation,Function,11,56000,0x109cccce0,392,URLContext node:internal/url:161:14,0x3b46b2025da0,^
code-source-info,0x109cccce0,74,3723,3935,,,
code-creation,LazyCompile,10,56000,0x117768a0c520,78,get node:internal/modules/esm/module_map:18:6,0x1e372ce25d88,~
code-source-info,0x117768a0c520,434,587,727,C11O600C18O627C28O627C33O659C43O659C48O693C50O706C61O706C71O716C77O723,,
tick,0x1a4e3b454,56041,0,0x0,0,0x0,0x1a3e29cbe14d,0x104b24a0c,0x1a3e29cbdcf9,0x117768a01a3b,0x105405ef4
code-creation,LazyCompile,10,56041,0x117768a0c710,111,#createModuleJob node:internal/modules/esm/loader:453:19,0x1e372ce22c78,~
code-source-info,0x117768a0c710,433,13006,13858,C0O13006C17O13078C22O13544C31O13585C37O13585C42O13641C70O13641C76O13785C79O13790C84O13800C92O13826C103O13800C108O13843C110O13854,,
code-creation,LazyCompile,10,56125,0x117768a0ca30,198,ModuleJob node:internal/modules/esm/module_job:53:14,0x1e372ce26c88,~
code-source-info,0x117768a0ca30,435,1255,3031,C0O1255C27O1288C32O1288C50O1364C55O1376C59O1390C64O1412C68O1436C73O1448C77O1462C82O1478C86O1497C90O1509C94O1644C101O1665C104O1694C113O1703C122O1708C135O1665C140O1663C144O1812C149O2705C152O2719C155O2717C159O2826C169O2852C180O2871C183O2826C188O2997C192O3015C197O3030,,
code-creation,LazyCompile,10,56166,0x117768a0d488,194,moduleProvider node:internal/modules/esm/loader:454:28,0x117768a0c638,~
code-source-info,0x117768a0d488,433,13078,13518,C10O13078C18O13193C21O13204C26O13209C33O13224C39O13240C43O13204C57O13193C80O13133C85O13154C90O13175C95O13294C102O13306C107O13306C113O13331C115O13358C130O13364C135O13358C136O13436C158O13443C171O13512,,
code-creation,LazyCompile,10,56250,0x117768a0daa8,592,load node:internal/modules/esm/loader:554:13,0x1e372ce22ea8,~
code-source-info,0x117768a0daa
code-creation,LazyCompile,10,56291,0x117768a0df50,137,validateArgs node:internal/modules/esm/loader:565:26,0x117768a0d780,~
code-source-info,0x117768a0df50,433,16708,17461,C0O16753C6O16907C15O16952C31O16913C36O16907C37O17118C40O17128C45O17138C50O17138C60O17178C69O17178C78O17224C87O17272C103O17230C108O17224C109O17394C113O17403C122O17426C130O17403C136O17460,,
code-creation,LazyCompile,10,56375,0x117768a0e2d8,234,defaultLoad node:internal/modules/esm/load:72:27,0x1a3e29c91308,~
code-source-info,0x117768a0e2d8,448,2199,2706,C10O2199C18O2236C21O2251C26O2293C31O2305C36O2331C41O2357C46O2372C59O2366C87O2411C101O2411C106O2465C108O2481C115O2509C120O2534C124O2558C129O2584C132O2617C145O2611C168O2587C173O2600C178O2650C185O2663C191O2675C197O2692C211O2704,,
code-creation,LazyCompile,10,56416,0x117768a0e860,150,validateAssertions node:internal/modules/esm/assert:55:28,0x1e372ce28d10,~
code-source-info,0x117768a0e860,436,1781,2908,C12O1842C17O1842C26O1884C33O1897C37O1910C38O1940C48O2091C55O2433C66O2068C67O2080C68O2253C76O2258C83O2325C84O2337C85O2352C88O2399C93O2359C98O2405C99O2507C100O2519C101O2666C109O2671C116O2781C129O2787C134O2781C135O2856C138O2896C143O2856C149O2907,,
code-creation,LazyCompile,10,56458,0x117768a0ec10,446,getSource node:internal/modules/esm/load:32:25,0x1a3e29c912b8,~
code-source-info,0x117768a0ec10,448,1000,2061,C10O1000C18O1034C25O1034C31O1068C34O1079C36O1100C43O1109C48O1128C53O1143C65O1137C95O1186C102O1195C107O1228C114O1248C117O1273C122O1228C128O1288C130O1308C137O1314C142O1308C143O1361C150O1372C157O1392C164O1412C167O1412C174O1438C183O1401C191O1476C197O1523C204O1532C209O1559C216O1568C221O1603C226O1609C239O1603C265O1662C277O1652C303O1690C310O1744C315O1766C321O1806C335O1806C340O1871C353O1877C358O1871C359O1945C366O1955C375O1973C380O1980C385O1989C390O1989C396O2028C403O2037C409O2050C423O2059,,
code-creation,LazyCompile,10,56541,0x117768a0f008,188,readFile node:internal/fs/promises:863:24,0x1a3e29c947c8,~
code-source-info,0x117768a0f008,449,23904,24225,C10O23904C18O23924C23O23945C28O23934C35O23993C44O24009C46O24029C48O24018C53O24045C56O24052C69O24082C70O24086C73O24107C78O24086C82O24130C96O24136C109O24130C135O24163C141O24184C147O24216C152O24170C165O24223,,
code-creation,LazyCompile,10,56583,0x117768a10eb8,56,checkAborted node:internal/fs/promises:377:22,0x1a3e29c93af8,~
code-source-info,0x117768a10eb8,449,8563,8662,C0O8576C7O8586C16O8601C23O8622C35O8648C48O8607C53O8601C55O8661,,
code-creation,LazyCompile,10,56583,0x117768a11080,178,open node:internal/fs/promises:507:20,0x1a3e29c93cd8,~
code-source-info,0x117768a11080,449,12752,13058,C10O12752C18O12776C23O12783C29O12829C34O12829C39O12853C55O12860C62O12898C69O12931C72O12939C79O12954C82O12965C87O12965C95O13041C104O12939C117O12925C142O12905C155O13056,,
code-creation,LazyCompile,10,56625,0x117768a11570,515,stringToFlags node:internal/fs/utils:561:23,0x3b46b20353d8,~
code-source-info,0x117768a
code-creation,LazyCompile,10,56708,0x117768a11948,86,parseFileMode node:internal/validators:68:23,0x3d9b801bfd38,~
code-source-info,0x117768a11948,22,1609,1898,C0O1632C11O1649C17O1686C24O1710C27O1690C34O1745C41O1790C52O1751C57O1745C58O1811C66O1819C73O1852C78O1852C83O1883C85O1896,,
code-creation,LazyCompile,10,56833,0x117768a11c90,229,link node:internal/modules/esm/module_job:66:18,0x117768a0c8b0,~
code-source-info,0x117768a11c90,435,1812,2648,C4O1812C26O1832C36O1857C48O1846C73O1844C77O1878C89O1890C98O1908C100O1897C104O1878C108O2224C110O2224C112O2251C117O2256C122O2263C132O2263C138O2529C140O2565C147O2571C159O2565C184O2604C194O2611C206O2642,,
code-creation,LazyCompile,10,56875,0x117768a11f90,216,set node:internal/modules/esm/module_map:23:6,0x1e372ce25dd8,~
code-source-info,0x117768a11f90,434,733,1253,C11O746C21O778C31O778C36O810C46O810C51O844C55O863C57O852C62O873C73O928C91O934C96O928C97O995C109O1012C124O1036C126O1032C137O1076C148O995C152O1133C154O1139C165O1139C178O1151C183O1151C188O1175C190O1198C194O1209C196O1222C210O1222C215O1249,,
code-creation,LazyCompile,10,56916,0x117768a12190,89,logger node:internal/util/debuglog:95:18,0xa0ae21dd1a8,~
code-source-info,0x117768a12190,28,2869,3064,C0O2869C3O2901C24O2925C30O2942C34O2932C38O2947C39O2962C45O2979C51O2988C55O2969C60O2993C61O3009C65O3016C72O3029C77O3025C83O3016C88O3054,,
code-creation,LazyCompile,10,56958,0x117768a12300,140,debug node:internal/util/debuglog:76:15,0xa0ae21dd108,~
code-source-info,0x117768a12300,28,2357,2751,C0O2357C3O2376C6O2376C9O2484C16O2505C22O2492C30O2490C36O2524C42O2560C47O2563C50O2560C54O2588C75O2612C81O2629C85O2619C89O2634C90O2649C96O2666C102O2675C106O2656C111O2680C112O2696C116O2703C123O2716C128O2712C134O2703C139O2741,,
code-creation,LazyCompile,10,56958,0x117768a124b0,41,init node:internal/util/debuglog:72:16,0xa0ae21dd0b8,~
code-source-info,0x117768a124b0,28,2259,2342,C0O2268C10O2274C14O2272C16O2311C26O2321C33O2319C40O2341,,
code-creation,LazyCompile,10,57000,0x117768a125a8,2,testEnabled node:internal/util/debuglog:32:19,0x1e372ce0d1a8,~
code-source-info,0x117768a125a8,28,973,984,C0O979C1O984,,
code-creation,LazyCompile,10,57000,0x117768a12728,116,debuglogImpl node:internal/util/debuglog:49:22,0xa0ae21dce68,~
code-source-info,0x117768a12728,28,1451,1995,C0O1451C9O1470C18O1484C23O1511C34O1544C39O1552C43O1544C45O1563C55O1563C59O1595C71O1606C75O1611C83O1934C97O1952C99O1950C103O1970C112O1987C115O1993,,
code-creation,LazyCompile,10,57041,0x117768a128e0,10, node:internal/modules/esm/module_map:9:63,0x1e372ce25ce8,~
code-source-info,0x117768a128e0,434,263,288,C0O275C2O281C9O287,,
code-creation,LazyCompile,10,57041,0x117768a12998,2,noop node:internal/util/debuglog:47:14,0xa0ae21dce18,~
code-source-info,0x117768a12998,28,1419,1427,C1O1426,,
code-creation,LazyCompile,10,57041,0x117768a12a58,10, node:internal/modules/esm/loader:524:15,0x1a3e29cbfa40,~
code-source-info,0x117768a12a58,433,15486,15504,C0O15499C5O15499C9O15504,,
code-creation,LazyCompile,10,57125,0x117768a12e88,431,run node:internal/modules/esm/module_job:188:12,0x1e372ce26d78,~
code-source-info,0x117768a12e88,435,6806,7988,C10O6806C18O6826C23O6826C35O6815C58O6861C61O6891C66O6925C71O6932C76O6932C90O6914C128O6990C133O6995C143O7002C152O7036C158O7074C163O7036C169O7094C182O7104C186O7139C196O7171C204O7143C211O7205C224O7215C228O7301C235O7332C240O7339C248O7301C259O7370C267O7420C272O7427C277O7370C283O7432C294O7456C299O7510C304O7538C309O7545C314O7511C320O7577C327O7582C332O7608C346O7755C360O7698C366O7778C372O7857C378O7618C382O7934C384O7934C385O7953C390O7975C408O7984,,
code-creation,LazyCompile,10,57125,0x117768a131b8,24,instantiate node:internal/modules/esm/module_job:98:14,0x1e372ce26cd8,~
code-source-info,0x117768a131b8,435,3046,3180,C0O3064C6O3125C11O3125C15O3118C19O3163C23O3176,,
code-creation,LazyCompile,10,57250,0x117768a13810,929,_instantiate node:internal/modules/esm/module_job:105:21,0x1e372ce26d28,~
code-source-info,0x117768a
tick,0x104e71e08,57291,0,0x0,3,0x0,0x117768a131c3,0x117768a12e9f,0x117768a12a5d
code-creation,LazyCompile,10,57291,0x117768a13e70,146,addJobsToDependencyGraph node:internal/modules/esm/module_job:107:38,0x117768a13550,~
code-source-info,0x117768a13e70,435,3283,3533,C10O3283C18O3312C23O3328C28O3328C35O3354C44O3361C45O3376C50O3388C55O3388C60O3449C72O3433C98O3463C107O3501C110O3470C123O3527,,
code-creation,LazyCompile,10,57333,0x117768a14020,112,FileHandle node:internal/fs/promises:134:14,0x1a3e29c94818,~
code-source-info,0x117768a14020,449,3182,3348,C3O3201C11O3201C40O3214C45O3219C50O3228C54O3246C59O3251C67O3258C69O3282C77O3256C81O3296C86O3301C91O3308C95O3317C100O3322C104O3337C111O3347,,
code-creation,LazyCompile,10,57375,0x117768a14198,63,MixedEventEmitter node:internal/event_target:1059:16,0x1a3e29c9c7a0,~
code-source-info,0x117768a14198,46,27351,27481,C0O27351C8O27369C15O27376C21O27411C25O27420C29O27411C41O27433C48O27455C54O27433C62O27480,,
code-creation,LazyCompile,10,57458,0x117768a14480,595,readFileHandle node:internal/fs/promises:417:30,0x1a3e29c93b98,~
code-source-info,0x117768a
code-creation,LazyCompile,10,57500,0x117768a148c0,8,get fd node:internal/fs/promises:147:9,0x1a3e29c948d0,~
code-source-info,0x117768a148c0,449,3419,3449,C0O3428C2O3440C4O3439C7O3445,,
code-creation,LazyCompile,10,57541,0x117768a14ac8,79,handleFdClose node:internal/fs/promises:344:29,0x1a3e29c93a58,~
code-source-info,0x117768a14ac8,449,7737,8078,C0O7737C23O7768C30O7801C43O7775C56O8076,,
code-creation,LazyCompile,10,57583,0x117768a14c48,19,allocUnsafeSlow node:buffer:388:50,0xa0ae21f2d50,~
script-source,30,node:buffer,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  Array\x2C\n  ArrayFrom\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeIndexOf\x2C\n  MathFloor\x2C\n  MathMin\x2C\n  MathTrunc\x2C\n  NumberIsNaN\x2C\n  NumberMAX_SAFE_INTEGER\x2C\n  NumberMIN_SAFE_INTEGER\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeToLowerCase\x2C\n  StringPrototypeTrim\x2C\n  SymbolSpecies\x2C\n  SymbolToPrimitive\x2C\n  TypedArrayPrototypeGetByteLength\x2C\n  TypedArrayPrototypeFill\x2C\n  TypedArrayPrototypeSet\x2C\n  Uint8Array\x2C\n  Uint8ArrayPrototype\x2C\n} = primordials;\n\nconst {\n  byteLengthUtf8\x2C\n  compare: _compare\x2C\n  compareOffset\x2C\n  createFromString\x2C\n  fill: bindingFill\x2C\n  indexOfBuffer\x2C\n  indexOfNumber\x2C\n  indexOfString\x2C\n  swap16: _swap16\x2C\n  swap32: _swap32\x2C\n  swap64: _swap64\x2C\n  kMaxLength\x2C\n  kStringMaxLength\n} = internalBinding('buffer');\nconst {\n  getOwnNonIndexProperties\x2C\n  propertyFilter: {\n    ALL_PROPERTIES\x2C\n    ONLY_ENUMERABLE\n  }\x2C\n} = internalBinding('util');\nconst {\n  customInspectSymbol\x2C\n  isInsideNodeModules\x2C\n  lazyDOMException\x2C\n  normalizeEncoding\x2C\n  kIsEncodingSymbol\n} = require('internal/util');\nconst {\n  isAnyArrayBuffer\x2C\n  isArrayBufferView\x2C\n  isUint8Array\n} = require('internal/util/types');\nconst {\n  inspect: utilInspect\n} = require('internal/util/inspect');\nconst { encodings } = internalBinding('string_decoder');\n\nconst {\n  codes: {\n    ERR_BUFFER_OUT_OF_BOUNDS\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_BUFFER_SIZE\x2C\n    ERR_OUT_OF_RANGE\x2C\n    ERR_MISSING_ARGS\x2C\n    ERR_UNKNOWN_ENCODING\n  }\x2C\n  genericNodeError\x2C\n  hideStackFrames\x2C\n} = require('internal/errors');\nconst {\n  validateArray\x2C\n  validateBuffer\x2C\n  validateNumber\x2C\n  validateInteger\x2C\n  validateString\n} = require('internal/validators');\n// Provide validateInteger() but with kMaxLength as the default maximum value.\nconst validateOffset = (value\x2C name\x2C min = 0\x2C max = kMaxLength) =>\n  validateInteger(value\x2C name\x2C min\x2C max);\n\nconst {\n  FastBuffer\x2C\n  markAsUntransferable\x2C\n  addBufferPrototypeMethods\x2C\n  createUnsafeBuffer\n} = require('internal/buffer');\n\nconst {\n  Blob\x2C\n  resolveObjectURL\x2C\n} = require('internal/blob');\n\nFastBuffer.prototype.constructor = Buffer;\nBuffer.prototype = FastBuffer.prototype;\naddBufferPrototypeMethods(Buffer.prototype);\n\nconst constants = ObjectDefineProperties({}\x2C {\n  MAX_LENGTH: {\n    __proto__: null\x2C\n    value: kMaxLength\x2C\n    writable: false\x2C\n    enumerable: true\n  }\x2C\n  MAX_STRING_LENGTH: {\n    __proto__: null\x2C\n    value: kStringMaxLength\x2C\n    writable: false\x2C\n    enumerable: true\n  }\n});\n\nBuffer.poolSize = 8 * 1024;\nlet poolSize\x2C poolOffset\x2C allocPool;\n\nconst encodingsMap = ObjectCreate(null);\nfor (let i = 0; i < encodings.length; ++i)\n  encodingsMap[encodings[i]] = i;\n\nfunction createPool() {\n  poolSize = Buffer.poolSize;\n  allocPool = createUnsafeBuffer(poolSize).buffer;\n  markAsUntransferable(allocPool);\n  poolOffset = 0;\n}\ncreatePool();\n\nfunction alignPool() {\n  // Ensure aligned slices\n  if (poolOffset & 0x7) {\n    poolOffset |= 0x7;\n    poolOffset++;\n  }\n}\n\nlet bufferWarningAlreadyEmitted = false;\nlet nodeModulesCheckCounter = 0;\nconst bufferWarning = 'Buffer() is deprecated due to security and usability ' +\n                      'issues. Please use the Buffer.alloc()\x2C ' +\n                      'Buffer.allocUnsafe()\x2C or Buffer.from() methods instead.';\n\nfunction showFlaggedDeprecation() {\n  if (bufferWarningAlreadyEmitted ||\n      ++nodeModulesCheckCounter > 10000 ||\n      (!require('internal/options').getOptionValue('--pending-deprecation') &&\n       isInsideNodeModules())) {\n    // We don't emit a warning\x2C because we either:\n    // - Already did so\x2C or\n    // - Already checked too many times whether a call is coming\n    //   from node_modules and want to stop slowing down things\x2C or\n    // - We aren't running with `--pending-deprecation` enabled\x2C\n    //   and the code is inside `node_modules`.\n    return;\n  }\n\n  process.emitWarning(bufferWarning\x2C 'DeprecationWarning'\x2C 'DEP0005');\n  bufferWarningAlreadyEmitted = true;\n}\n\nfunction toInteger(n\x2C defaultVal) {\n  n = +n;\n  if (!NumberIsNaN(n) &&\n      n >= NumberMIN_SAFE_INTEGER &&\n      n <= NumberMAX_SAFE_INTEGER) {\n    return ((n % 1) === 0 ? n : MathFloor(n));\n  }\n  return defaultVal;\n}\n\nfunction _copy(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\n  if (!isUint8Array(source))\n    throw new ERR_INVALID_ARG_TYPE('source'\x2C ['Buffer'\x2C 'Uint8Array']\x2C source);\n  if (!isUint8Array(target))\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\n\n  if (targetStart === undefined) {\n    targetStart = 0;\n  } else {\n    targetStart = toInteger(targetStart\x2C 0);\n    if (targetStart < 0)\n      throw new ERR_OUT_OF_RANGE('targetStart'\x2C '>= 0'\x2C targetStart);\n  }\n\n  if (sourceStart === undefined) {\n    sourceStart = 0;\n  } else {\n    sourceStart = toInteger(sourceStart\x2C 0);\n    if (sourceStart < 0)\n      throw new ERR_OUT_OF_RANGE('sourceStart'\x2C '>= 0'\x2C sourceStart);\n  }\n\n  if (sourceEnd === undefined) {\n    sourceEnd = source.length;\n  } else {\n    sourceEnd = toInteger(sourceEnd\x2C 0);\n    if (sourceEnd < 0)\n      throw new ERR_OUT_OF_RANGE('sourceEnd'\x2C '>= 0'\x2C sourceEnd);\n  }\n\n  if (targetStart >= target.length || sourceStart >= sourceEnd)\n    return 0;\n\n  if (sourceStart > source.length) {\n    throw new ERR_OUT_OF_RANGE('sourceStart'\x2C\n                               `<= ${source.length}`\x2C\n                               sourceStart);\n  }\n\n  return _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\n}\n\nfunction _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\n  if (sourceEnd - sourceStart > target.length - targetStart)\n    sourceEnd = sourceStart + target.length - targetStart;\n\n  let nb = sourceEnd - sourceStart;\n  const sourceLen = source.length - sourceStart;\n  if (nb > sourceLen)\n    nb = sourceLen;\n\n  if (sourceStart !== 0 || sourceEnd < source.length)\n    source = new Uint8Array(source.buffer\x2C source.byteOffset + sourceStart\x2C nb);\n\n  TypedArrayPrototypeSet(target\x2C source\x2C targetStart);\n\n  return nb;\n}\n\n/**\n * The Buffer() constructor is deprecated in documentation and should not be\n * used moving forward. Rather\x2C developers should use one of the three new\n * factory APIs: Buffer.from()\x2C Buffer.allocUnsafe() or Buffer.alloc() based on\n * their specific needs. There is no runtime deprecation because of the extent\n * to which the Buffer constructor is used in the ecosystem currently -- a\n * runtime deprecation would introduce too much breakage at this time. It's not\n * likely that the Buffer constructors would ever actually be removed.\n * Deprecation Code: DEP0005\n */\nfunction Buffer(arg\x2C encodingOrOffset\x2C length) {\n  showFlaggedDeprecation();\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new ERR_INVALID_ARG_TYPE('string'\x2C 'string'\x2C arg);\n    }\n    return Buffer.alloc(arg);\n  }\n  return Buffer.from(arg\x2C encodingOrOffset\x2C length);\n}\n\nObjectDefineProperty(Buffer\x2C SymbolSpecies\x2C {\n  __proto__: null\x2C\n  enumerable: false\x2C\n  configurable: true\x2C\n  get() { return FastBuffer; }\n});\n\n/**\n * Functionally equivalent to Buffer(arg\x2C encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[\x2C encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[\x2C byteOffset[\x2C length]])\n */\nBuffer.from = function from(value\x2C encodingOrOffset\x2C length) {\n  if (typeof value === 'string')\n    return fromString(value\x2C encodingOrOffset);\n\n  if (typeof value === 'object' && value !== null) {\n    if (isAnyArrayBuffer(value))\n      return fromArrayBuffer(value\x2C encodingOrOffset\x2C length);\n\n    const valueOf = value.valueOf && value.valueOf();\n    if (valueOf != null &&\n        valueOf !== value &&\n        (typeof valueOf === 'string' || typeof valueOf === 'object')) {\n      return from(valueOf\x2C encodingOrOffset\x2C length);\n    }\n\n    const b = fromObject(value);\n    if (b)\n      return b;\n\n    if (typeof value[SymbolToPrimitive] === 'function') {\n      const primitive = value[SymbolToPrimitive]('string');\n      if (typeof primitive === 'string') {\n        return fromString(primitive\x2C encodingOrOffset);\n      }\n    }\n  }\n\n  throw new ERR_INVALID_ARG_TYPE(\n    'first argument'\x2C\n    ['string'\x2C 'Buffer'\x2C 'ArrayBuffer'\x2C 'Array'\x2C 'Array-like Object']\x2C\n    value\n  );\n};\n\n// Identical to the built-in %TypedArray%.of()\x2C but avoids using the deprecated\n// Buffer() constructor. Must use arrow function syntax to avoid automatically\n// adding a `prototype` property and making the function a constructor.\n//\n// Refs: https://tc39.github.io/ecma262/#sec-%typedarray%.of\n// Refs: https://esdiscuss.org/topic/isconstructor#content-11\nconst of = (...items) => {\n  const newObj = createUnsafeBuffer(items.length);\n  for (let k = 0; k < items.length; k++)\n    newObj[k] = items[k];\n  return newObj;\n};\nBuffer.of = of;\n\nObjectSetPrototypeOf(Buffer\x2C Uint8Array);\n\n// The 'assertSize' method will remove itself from the callstack when an error\n// occurs. This is done simply to keep the internal details of the\n// implementation from bleeding out to users.\nconst assertSize = hideStackFrames((size) => {\n  validateNumber(size\x2C 'size');\n  if (!(size >= 0 && size <= kMaxLength)) {\n    throw new ERR_INVALID_ARG_VALUE.RangeError('size'\x2C size);\n  }\n});\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[\x2C fill[\x2C encoding]])\n */\nBuffer.alloc = function alloc(size\x2C fill\x2C encoding) {\n  assertSize(size);\n  if (fill !== undefined && fill !== 0 && size > 0) {\n    const buf = createUnsafeBuffer(size);\n    return _fill(buf\x2C fill\x2C 0\x2C buf.length\x2C encoding);\n  }\n  return new FastBuffer(size);\n};\n\n/**\n * Equivalent to Buffer(num)\x2C by default creates a non-zero-filled Buffer\n * instance. If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\n */\nBuffer.allocUnsafe = function allocUnsafe(size) {\n  assertSize(size);\n  return allocate(size);\n};\n\n/**\n * Equivalent to SlowBuffer(num)\x2C by default creates a non-zero-filled\n * Buffer instance that is not allocated off the pre-initialized pool.\n * If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\n */\nBuffer.allocUnsafeSlow = function allocUnsafeSlow(size) {\n  assertSize(size);\n  return createUnsafeBuffer(size);\n};\n\n// If --zero-fill-buffers command line argument is set\x2C a zero-filled\n// buffer is returned.\nfunction SlowBuffer(length) {\n  assertSize(length);\n  return createUnsafeBuffer(length);\n}\n\nObjectSetPrototypeOf(SlowBuffer.prototype\x2C Uint8ArrayPrototype);\nObjectSetPrototypeOf(SlowBuffer\x2C Uint8Array);\n\nfunction allocate(size) {\n  if (size <= 0) {\n    return new FastBuffer();\n  }\n  if (size < (Buffer.poolSize >>> 1)) {\n    if (size > (poolSize - poolOffset))\n      createPool();\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C size);\n    poolOffset += size;\n    alignPool();\n    return b;\n  }\n  return createUnsafeBuffer(size);\n}\n\nfunction fromStringFast(string\x2C ops) {\n  const length = ops.byteLength(string);\n\n  if (length >= (Buffer.poolSize >>> 1))\n    return createFromString(string\x2C ops.encodingVal);\n\n  if (length > (poolSize - poolOffset))\n    createPool();\n  let b = new FastBuffer(allocPool\x2C poolOffset\x2C length);\n  const actual = ops.write(b\x2C string\x2C 0\x2C length);\n  if (actual !== length) {\n    // byteLength() may overestimate. That's a rare case\x2C though.\n    b = new FastBuffer(allocPool\x2C poolOffset\x2C actual);\n  }\n  poolOffset += actual;\n  alignPool();\n  return b;\n}\n\nfunction fromString(string\x2C encoding) {\n  let ops;\n  if (typeof encoding !== 'string' || encoding.length === 0) {\n    if (string.length === 0)\n      return new FastBuffer();\n    ops = encodingOps.utf8;\n    encoding = undefined;\n  } else {\n    ops = getEncodingOps(encoding);\n    if (ops === undefined)\n      throw new ERR_UNKNOWN_ENCODING(encoding);\n    if (string.length === 0)\n      return new FastBuffer();\n  }\n  return fromStringFast(string\x2C ops);\n}\n\nfunction fromArrayBuffer(obj\x2C byteOffset\x2C length) {\n  // Convert byteOffset to integer\n  if (byteOffset === undefined) {\n    byteOffset = 0;\n  } else {\n    byteOffset = +byteOffset;\n    if (NumberIsNaN(byteOffset))\n      byteOffset = 0;\n  }\n\n  const maxLength = obj.byteLength - byteOffset;\n\n  if (maxLength < 0)\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\n\n  if (length === undefined) {\n    length = maxLength;\n  } else {\n    // Convert length to non-negative integer.\n    length = +length;\n    if (length > 0) {\n      if (length > maxLength)\n        throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\n    } else {\n      length = 0;\n    }\n  }\n\n  return new FastBuffer(obj\x2C byteOffset\x2C length);\n}\n\nfunction fromArrayLike(obj) {\n  if (obj.length <= 0)\n    return new FastBuffer();\n  if (obj.length < (Buffer.poolSize >>> 1)) {\n    if (obj.length > (poolSize - poolOffset))\n      createPool();\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C obj.length);\n    TypedArrayPrototypeSet(b\x2C obj\x2C 0);\n    poolOffset += obj.length;\n    alignPool();\n    return b;\n  }\n  return new FastBuffer(obj);\n}\n\nfunction fromObject(obj) {\n  if (obj.length !== undefined || isAnyArrayBuffer(obj.buffer)) {\n    if (typeof obj.length !== 'number') {\n      return new FastBuffer();\n    }\n    return fromArrayLike(obj);\n  }\n\n  if (obj.type === 'Buffer' && ArrayIsArray(obj.data)) {\n    return fromArrayLike(obj.data);\n  }\n}\n\n// Static methods\n\nBuffer.isBuffer = function isBuffer(b) {\n  return b instanceof Buffer;\n};\n\nBuffer.compare = function compare(buf1\x2C buf2) {\n  if (!isUint8Array(buf1)) {\n    throw new ERR_INVALID_ARG_TYPE('buf1'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf1);\n  }\n\n  if (!isUint8Array(buf2)) {\n    throw new ERR_INVALID_ARG_TYPE('buf2'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf2);\n  }\n\n  if (buf1 === buf2) {\n    return 0;\n  }\n\n  return _compare(buf1\x2C buf2);\n};\n\nBuffer.isEncoding = function isEncoding(encoding) {\n  return typeof encoding === 'string' && encoding.length !== 0 &&\n         normalizeEncoding(encoding) !== undefined;\n};\nBuffer[kIsEncodingSymbol] = Buffer.isEncoding;\n\nBuffer.concat = function concat(list\x2C length) {\n  validateArray(list\x2C 'list');\n\n  if (list.length === 0)\n    return new FastBuffer();\n\n  if (length === undefined) {\n    length = 0;\n    for (let i = 0; i < list.length; i++) {\n      if (list[i].length) {\n        length += list[i].length;\n      }\n    }\n  } else {\n    validateOffset(length\x2C 'length');\n  }\n\n  const buffer = Buffer.allocUnsafe(length);\n  let pos = 0;\n  for (let i = 0; i < list.length; i++) {\n    const buf = list[i];\n    if (!isUint8Array(buf)) {\n      // TODO(BridgeAR): This should not be of type ERR_INVALID_ARG_TYPE.\n      // Instead\x2C find the proper error code for this.\n      throw new ERR_INVALID_ARG_TYPE(\n        `list[${i}]`\x2C ['Buffer'\x2C 'Uint8Array']\x2C list[i]);\n    }\n    pos += _copyActual(buf\x2C buffer\x2C pos\x2C 0\x2C buf.length);\n  }\n\n  // Note: `length` is always equal to `buffer.length` at this point\n  if (pos < length) {\n    // Zero-fill the remaining bytes if the specified `length` was more than\n    // the actual total length\x2C i.e. if we have some remaining allocated bytes\n    // there were not initialized.\n    TypedArrayPrototypeFill(buffer\x2C 0\x2C pos\x2C length);\n  }\n\n  return buffer;\n};\n\nfunction base64ByteLength(str\x2C bytes) {\n  // Handle padding\n  if (StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\n    bytes--;\n  if (bytes > 1 && StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\n    bytes--;\n\n  // Base64 ratio: 3/4\n  return (bytes * 3) >>> 2;\n}\n\nconst encodingOps = {\n  utf8: {\n    encoding: 'utf8'\x2C\n    encodingVal: encodingsMap.utf8\x2C\n    byteLength: byteLengthUtf8\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.utf8Write(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.utf8Slice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf8\x2C dir)\n  }\x2C\n  ucs2: {\n    encoding: 'ucs2'\x2C\n    encodingVal: encodingsMap.utf16le\x2C\n    byteLength: (string) => string.length * 2\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\n  }\x2C\n  utf16le: {\n    encoding: 'utf16le'\x2C\n    encodingVal: encodingsMap.utf16le\x2C\n    byteLength: (string) => string.length * 2\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\n  }\x2C\n  latin1: {\n    encoding: 'latin1'\x2C\n    encodingVal: encodingsMap.latin1\x2C\n    byteLength: (string) => string.length\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.latin1Write(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.latin1Slice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.latin1\x2C dir)\n  }\x2C\n  ascii: {\n    encoding: 'ascii'\x2C\n    encodingVal: encodingsMap.ascii\x2C\n    byteLength: (string) => string.length\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.asciiWrite(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.asciiSlice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfBuffer(buf\x2C\n                    fromStringFast(val\x2C encodingOps.ascii)\x2C\n                    byteOffset\x2C\n                    encodingsMap.ascii\x2C\n                    dir)\n  }\x2C\n  base64: {\n    encoding: 'base64'\x2C\n    encodingVal: encodingsMap.base64\x2C\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.base64Write(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.base64Slice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfBuffer(buf\x2C\n                    fromStringFast(val\x2C encodingOps.base64)\x2C\n                    byteOffset\x2C\n                    encodingsMap.base64\x2C\n                    dir)\n  }\x2C\n  base64url: {\n    encoding: 'base64url'\x2C\n    encodingVal: encodingsMap.base64url\x2C\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\n    write: (buf\x2C string\x2C offset\x2C len) =>\n      buf.base64urlWrite(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.base64urlSlice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfBuffer(buf\x2C\n                    fromStringFast(val\x2C encodingOps.base64url)\x2C\n                    byteOffset\x2C\n                    encodingsMap.base64url\x2C\n                    dir)\n  }\x2C\n  hex: {\n    encoding: 'hex'\x2C\n    encodingVal: encodingsMap.hex\x2C\n    byteLength: (string) => string.length >>> 1\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.hexWrite(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.hexSlice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfBuffer(buf\x2C\n                    fromStringFast(val\x2C encodingOps.hex)\x2C\n                    byteOffset\x2C\n                    encodingsMap.hex\x2C\n                    dir)\n  }\n};\nfunction getEncodingOps(encoding) {\n  encoding += '';\n  switch (encoding.length) {\n    case 4:\n      if (encoding === 'utf8') return encodingOps.utf8;\n      if (encoding === 'ucs2') return encodingOps.ucs2;\n      encoding = StringPrototypeToLowerCase(encoding);\n      if (encoding === 'utf8') return encodingOps.utf8;\n      if (encoding === 'ucs2') return encodingOps.ucs2;\n      break;\n    case 5:\n      if (encoding === 'utf-8') return encodingOps.utf8;\n      if (encoding === 'ascii') return encodingOps.ascii;\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\n      encoding = StringPrototypeToLowerCase(encoding);\n      if (encoding === 'utf-8') return encodingOps.utf8;\n      if (encoding === 'ascii') return encodingOps.ascii;\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\n      break;\n    case 7:\n      if (encoding === 'utf16le' ||\n          StringPrototypeToLowerCase(encoding) === 'utf16le')\n        return encodingOps.utf16le;\n      break;\n    case 8:\n      if (encoding === 'utf-16le' ||\n          StringPrototypeToLowerCase(encoding) === 'utf-16le')\n        return encodingOps.utf16le;\n      break;\n    case 6:\n      if (encoding === 'latin1' || encoding === 'binary')\n        return encodingOps.latin1;\n      if (encoding === 'base64') return encodingOps.base64;\n      encoding = StringPrototypeToLowerCase(encoding);\n      if (encoding === 'latin1' || encoding === 'binary')\n        return encodingOps.latin1;\n      if (encoding === 'base64') return encodingOps.base64;\n      break;\n    case 3:\n      if (encoding === 'hex' || StringPrototypeToLowerCase(encoding) === 'hex')\n        return encodingOps.hex;\n      break;\n    case 9:\n      if (encoding === 'base64url' ||\n          StringPrototypeToLowerCase(encoding) === 'base64url')\n        return encodingOps.base64url;\n      break;\n  }\n}\n\nfunction byteLength(string\x2C encoding) {\n  if (typeof string !== 'string') {\n    if (isArrayBufferView(string) || isAnyArrayBuffer(string)) {\n      return string.byteLength;\n    }\n\n    throw new ERR_INVALID_ARG_TYPE(\n      'string'\x2C ['string'\x2C 'Buffer'\x2C 'ArrayBuffer']\x2C string\n    );\n  }\n\n  const len = string.length;\n  if (len === 0)\n    return 0;\n\n  if (encoding) {\n    const ops = getEncodingOps(encoding);\n    if (ops) {\n      return ops.byteLength(string);\n    }\n  }\n  return byteLengthUtf8(string);\n}\n\nBuffer.byteLength = byteLength;\n\n// For backwards compatibility.\nObjectDefineProperty(Buffer.prototype\x2C 'parent'\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  get() {\n    if (!(this instanceof Buffer))\n      return undefined;\n    return this.buffer;\n  }\n});\nObjectDefineProperty(Buffer.prototype\x2C 'offset'\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  get() {\n    if (!(this instanceof Buffer))\n      return undefined;\n    return this.byteOffset;\n  }\n});\n\nBuffer.prototype.copy =\n  function copy(target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\n    return _copy(this\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\n  };\n\n// No need to verify that "buf.length <= MAX_UINT32" since it's a read-only\n// property of a typed array.\n// This behaves neither like String nor Uint8Array in that we set start/end\n// to their upper/lower bounds if the value passed is out of range.\nBuffer.prototype.toString = function toString(encoding\x2C start\x2C end) {\n  if (arguments.length === 0) {\n    return this.utf8Slice(0\x2C this.length);\n  }\n\n  const len = this.length;\n\n  if (start <= 0)\n    start = 0;\n  else if (start >= len)\n    return '';\n  else\n    start |= 0;\n\n  if (end === undefined || end > len)\n    end = len;\n  else\n    end |= 0;\n\n  if (end <= start)\n    return '';\n\n  if (encoding === undefined)\n    return this.utf8Slice(start\x2C end);\n\n  const ops = getEncodingOps(encoding);\n  if (ops === undefined)\n    throw new ERR_UNKNOWN_ENCODING(encoding);\n\n  return ops.slice(this\x2C start\x2C end);\n};\n\nBuffer.prototype.equals = function equals(otherBuffer) {\n  if (!isUint8Array(otherBuffer)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'otherBuffer'\x2C ['Buffer'\x2C 'Uint8Array']\x2C otherBuffer);\n  }\n\n  if (this === otherBuffer)\n    return true;\n\n  if (this.byteLength !== otherBuffer.byteLength)\n    return false;\n\n  return this.byteLength === 0 || _compare(this\x2C otherBuffer) === 0;\n};\n\nlet INSPECT_MAX_BYTES = 50;\n// Override how buffers are presented by util.inspect().\nBuffer.prototype[customInspectSymbol] = function inspect(recurseTimes\x2C ctx) {\n  const max = INSPECT_MAX_BYTES;\n  const actualMax = MathMin(max\x2C this.length);\n  const remaining = this.length - max;\n  let str = StringPrototypeTrim(RegExpPrototypeSymbolReplace(\n    /(.{2})/g\x2C this.hexSlice(0\x2C actualMax)\x2C '$1 '));\n  if (remaining > 0)\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\n  // Inspect special properties as well\x2C if possible.\n  if (ctx) {\n    let extras = false;\n    const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\n    const obj = ObjectCreate(null);\n    ArrayPrototypeForEach(getOwnNonIndexProperties(this\x2C filter)\x2C\n                          (key) => {\n                            extras = true;\n                            obj[key] = this[key];\n                          });\n    if (extras) {\n      if (this.length !== 0)\n        str += '\x2C ';\n      // '[Object: null prototype] {'.length === 26\n      // This is guarded with a test.\n      str += StringPrototypeSlice(utilInspect(obj\x2C {\n        ...ctx\x2C\n        breakLength: Infinity\x2C\n        compact: true\n      })\x2C 27\x2C -2);\n    }\n  }\n  return `<${this.constructor.name} ${str}>`;\n};\nBuffer.prototype.inspect = Buffer.prototype[customInspectSymbol];\n\nBuffer.prototype.compare = function compare(target\x2C\n                                            targetStart\x2C\n                                            targetEnd\x2C\n                                            sourceStart\x2C\n                                            sourceEnd) {\n  if (!isUint8Array(target)) {\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\n  }\n  if (arguments.length === 1)\n    return _compare(this\x2C target);\n\n  if (targetStart === undefined)\n    targetStart = 0;\n  else\n    validateOffset(targetStart\x2C 'targetStart');\n\n  if (targetEnd === undefined)\n    targetEnd = target.length;\n  else\n    validateOffset(targetEnd\x2C 'targetEnd'\x2C 0\x2C target.length);\n\n  if (sourceStart === undefined)\n    sourceStart = 0;\n  else\n    validateOffset(sourceStart\x2C 'sourceStart');\n\n  if (sourceEnd === undefined)\n    sourceEnd = this.length;\n  else\n    validateOffset(sourceEnd\x2C 'sourceEnd'\x2C 0\x2C this.length);\n\n  if (sourceStart >= sourceEnd)\n    return (targetStart >= targetEnd ? 0 : -1);\n  if (targetStart >= targetEnd)\n    return 1;\n\n  return compareOffset(this\x2C target\x2C targetStart\x2C sourceStart\x2C targetEnd\x2C\n                       sourceEnd);\n};\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`\x2C\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string\x2C Buffer\x2C or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding\x2C relevant if val is a string\n// - dir - true for indexOf\x2C false for lastIndexOf\nfunction bidirectionalIndexOf(buffer\x2C val\x2C byteOffset\x2C encoding\x2C dir) {\n  validateBuffer(buffer);\n\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = undefined;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n  // Coerce to Number. Values like null and [] become 0.\n  byteOffset = +byteOffset;\n  // If the offset is undefined\x2C "foo"\x2C {}\x2C coerces to NaN\x2C search whole buffer.\n  if (NumberIsNaN(byteOffset)) {\n    byteOffset = dir ? 0 : (buffer.length || buffer.byteLength);\n  }\n  dir = !!dir;  // Cast to bool.\n\n  if (typeof val === 'number')\n    return indexOfNumber(buffer\x2C val >>> 0\x2C byteOffset\x2C dir);\n\n  let ops;\n  if (encoding === undefined)\n    ops = encodingOps.utf8;\n  else\n    ops = getEncodingOps(encoding);\n\n  if (typeof val === 'string') {\n    if (ops === undefined)\n      throw new ERR_UNKNOWN_ENCODING(encoding);\n    return ops.indexOf(buffer\x2C val\x2C byteOffset\x2C dir);\n  }\n\n  if (isUint8Array(val)) {\n    const encodingVal =\n      (ops === undefined ? encodingsMap.utf8 : ops.encodingVal);\n    return indexOfBuffer(buffer\x2C val\x2C byteOffset\x2C encodingVal\x2C dir);\n  }\n\n  throw new ERR_INVALID_ARG_TYPE(\n    'value'\x2C ['number'\x2C 'string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C val\n  );\n}\n\nBuffer.prototype.indexOf = function indexOf(val\x2C byteOffset\x2C encoding) {\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C true);\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf(val\x2C byteOffset\x2C encoding) {\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C false);\n};\n\nBuffer.prototype.includes = function includes(val\x2C byteOffset\x2C encoding) {\n  return this.indexOf(val\x2C byteOffset\x2C encoding) !== -1;\n};\n\n// Usage:\n//    buffer.fill(number[\x2C offset[\x2C end]])\n//    buffer.fill(buffer[\x2C offset[\x2C end]])\n//    buffer.fill(string[\x2C offset[\x2C end]][\x2C encoding])\nBuffer.prototype.fill = function fill(value\x2C offset\x2C end\x2C encoding) {\n  return _fill(this\x2C value\x2C offset\x2C end\x2C encoding);\n};\n\nfunction _fill(buf\x2C value\x2C offset\x2C end\x2C encoding) {\n  if (typeof value === 'string') {\n    if (offset === undefined || typeof offset === 'string') {\n      encoding = offset;\n      offset = 0;\n      end = buf.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = buf.length;\n    }\n\n    const normalizedEncoding = normalizeEncoding(encoding);\n    if (normalizedEncoding === undefined) {\n      validateString(encoding\x2C 'encoding');\n      throw new ERR_UNKNOWN_ENCODING(encoding);\n    }\n\n    if (value.length === 0) {\n      // If value === '' default to zero.\n      value = 0;\n    } else if (value.length === 1) {\n      // Fast path: If `value` fits into a single byte\x2C use that numeric value.\n      if (normalizedEncoding === 'utf8') {\n        const code = StringPrototypeCharCodeAt(value\x2C 0);\n        if (code < 128) {\n          value = code;\n        }\n      } else if (normalizedEncoding === 'latin1') {\n        value = StringPrototypeCharCodeAt(value\x2C 0);\n      }\n    }\n  } else {\n    encoding = undefined;\n  }\n\n  if (offset === undefined) {\n    offset = 0;\n    end = buf.length;\n  } else {\n    validateOffset(offset\x2C 'offset');\n    // Invalid ranges are not set to a default\x2C so can range check early.\n    if (end === undefined) {\n      end = buf.length;\n    } else {\n      validateOffset(end\x2C 'end'\x2C 0\x2C buf.length);\n    }\n    if (offset >= end)\n      return buf;\n  }\n\n\n  if (typeof value === 'number') {\n    // OOB check\n    const byteLen = TypedArrayPrototypeGetByteLength(buf);\n    const fillLength = end - offset;\n    if (offset > end || fillLength + offset > byteLen)\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\n\n    TypedArrayPrototypeFill(buf\x2C value\x2C offset\x2C end);\n  } else {\n    const res = bindingFill(buf\x2C value\x2C offset\x2C end\x2C encoding);\n    if (res < 0) {\n      if (res === -1)\n        throw new ERR_INVALID_ARG_VALUE('value'\x2C value);\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\n    }\n  }\n\n  return buf;\n}\n\nBuffer.prototype.write = function write(string\x2C offset\x2C length\x2C encoding) {\n  // Buffer#write(string);\n  if (offset === undefined) {\n    return this.utf8Write(string\x2C 0\x2C this.length);\n  }\n  // Buffer#write(string\x2C encoding)\n  if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0;\n\n  // Buffer#write(string\x2C offset[\x2C length][\x2C encoding])\n  } else {\n    validateOffset(offset\x2C 'offset'\x2C 0\x2C this.length);\n\n    const remaining = this.length - offset;\n\n    if (length === undefined) {\n      length = remaining;\n    } else if (typeof length === 'string') {\n      encoding = length;\n      length = remaining;\n    } else {\n      validateOffset(length\x2C 'length'\x2C 0\x2C this.length);\n      if (length > remaining)\n        length = remaining;\n    }\n  }\n\n  if (!encoding)\n    return this.utf8Write(string\x2C offset\x2C length);\n\n  const ops = getEncodingOps(encoding);\n  if (ops === undefined)\n    throw new ERR_UNKNOWN_ENCODING(encoding);\n  return ops.write(this\x2C string\x2C offset\x2C length);\n};\n\nBuffer.prototype.toJSON = function toJSON() {\n  if (this.length > 0) {\n    const data = new Array(this.length);\n    for (let i = 0; i < this.length; ++i)\n      data[i] = this[i];\n    return { type: 'Buffer'\x2C data };\n  }\n  return { type: 'Buffer'\x2C data: [] };\n};\n\nfunction adjustOffset(offset\x2C length) {\n  // Use Math.trunc() to convert offset to an integer value that can be larger\n  // than an Int32. Hence\x2C don't use offset | 0 or similar techniques.\n  offset = MathTrunc(offset);\n  if (offset === 0) {\n    return 0;\n  }\n  if (offset < 0) {\n    offset += length;\n    return offset > 0 ? offset : 0;\n  }\n  if (offset < length) {\n    return offset;\n  }\n  return NumberIsNaN(offset) ? 0 : length;\n}\n\nBuffer.prototype.subarray = function subarray(start\x2C end) {\n  const srcLength = this.length;\n  start = adjustOffset(start\x2C srcLength);\n  end = end !== undefined ? adjustOffset(end\x2C srcLength) : srcLength;\n  const newLength = end > start ? end - start : 0;\n  return new FastBuffer(this.buffer\x2C this.byteOffset + start\x2C newLength);\n};\n\nBuffer.prototype.slice = function slice(start\x2C end) {\n  return this.subarray(start\x2C end);\n};\n\nfunction swap(b\x2C n\x2C m) {\n  const i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16() {\n  // For Buffer.length < 128\x2C it's generally faster to\n  // do the swap in javascript. For larger buffers\x2C\n  // dropping down to the native code is faster.\n  const len = this.length;\n  if (len % 2 !== 0)\n    throw new ERR_INVALID_BUFFER_SIZE('16-bits');\n  if (len < 128) {\n    for (let i = 0; i < len; i += 2)\n      swap(this\x2C i\x2C i + 1);\n    return this;\n  }\n  return _swap16(this);\n};\n\nBuffer.prototype.swap32 = function swap32() {\n  // For Buffer.length < 192\x2C it's generally faster to\n  // do the swap in javascript. For larger buffers\x2C\n  // dropping down to the native code is faster.\n  const len = this.length;\n  if (len % 4 !== 0)\n    throw new ERR_INVALID_BUFFER_SIZE('32-bits');\n  if (len < 192) {\n    for (let i = 0; i < len; i += 4) {\n      swap(this\x2C i\x2C i + 3);\n      swap(this\x2C i + 1\x2C i + 2);\n    }\n    return this;\n  }\n  return _swap32(this);\n};\n\nBuffer.prototype.swap64 = function swap64() {\n  // For Buffer.length < 192\x2C it's generally faster to\n  // do the swap in javascript. For larger buffers\x2C\n  // dropping down to the native code is faster.\n  const len = this.length;\n  if (len % 8 !== 0)\n    throw new ERR_INVALID_BUFFER_SIZE('64-bits');\n  if (len < 192) {\n    for (let i = 0; i < len; i += 8) {\n      swap(this\x2C i\x2C i + 7);\n      swap(this\x2C i + 1\x2C i + 6);\n      swap(this\x2C i + 2\x2C i + 5);\n      swap(this\x2C i + 3\x2C i + 4);\n    }\n    return this;\n  }\n  return _swap64(this);\n};\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\n\nlet transcode;\nif (internalBinding('config').hasIntl) {\n  const {\n    icuErrName\x2C\n    transcode: _transcode\n  } = internalBinding('icu');\n\n  // Transcodes the Buffer from one encoding to another\x2C returning a new\n  // Buffer instance.\n  transcode = function transcode(source\x2C fromEncoding\x2C toEncoding) {\n    if (!isUint8Array(source)) {\n      throw new ERR_INVALID_ARG_TYPE('source'\x2C\n                                     ['Buffer'\x2C 'Uint8Array']\x2C source);\n    }\n    if (source.length === 0) return Buffer.alloc(0);\n\n    fromEncoding = normalizeEncoding(fromEncoding) || fromEncoding;\n    toEncoding = normalizeEncoding(toEncoding) || toEncoding;\n    const result = _transcode(source\x2C fromEncoding\x2C toEncoding);\n    if (typeof result !== 'number')\n      return result;\n\n    const code = icuErrName(result);\n    const err = genericNodeError(\n      `Unable to transcode Buffer [${code}]`\x2C\n      { code: code\x2C errno: result }\n    );\n    throw err;\n  };\n}\n\nfunction btoa(input) {\n  // The implementation here has not been performance optimized in any way and\n  // should not be.\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\n  if (arguments.length === 0) {\n    throw new ERR_MISSING_ARGS('input');\n  }\n  input = `${input}`;\n  for (let n = 0; n < input.length; n++) {\n    if (input[n].charCodeAt(0) > 0xff)\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\n  }\n  const buf = Buffer.from(input\x2C 'latin1');\n  return buf.toString('base64');\n}\n\n// Refs: https://infra.spec.whatwg.org/#forgiving-base64-decode\nconst kForgivingBase64AllowedChars = [\n  // ASCII whitespace\n  // Refs: https://infra.spec.whatwg.org/#ascii-whitespace\n  0x09\x2C 0x0A\x2C 0x0C\x2C 0x0D\x2C 0x20\x2C\n\n  // Uppercase letters\n  ...ArrayFrom({ length: 26 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('A') + i)\x2C\n\n  // Lowercase letters\n  ...ArrayFrom({ length: 26 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('a') + i)\x2C\n\n  // Decimal digits\n  ...ArrayFrom({ length: 10 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('0') + i)\x2C\n\n  0x2B\x2C // +\n  0x2F\x2C // /\n  0x3D\x2C // =\n];\n\nfunction atob(input) {\n  // The implementation here has not been performance optimized in any way and\n  // should not be.\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\n  if (arguments.length === 0) {\n    throw new ERR_MISSING_ARGS('input');\n  }\n\n  input = `${input}`;\n  let nonAsciiWhitespaceCharCount = 0;\n\n  for (let n = 0; n < input.length; n++) {\n    const index = ArrayPrototypeIndexOf(\n      kForgivingBase64AllowedChars\x2C\n      StringPrototypeCharCodeAt(input\x2C n));\n\n    if (index > 4) {\n      // The first 5 elements of `kForgivingBase64AllowedChars` are\n      // ASCII whitespace char codes.\n      nonAsciiWhitespaceCharCount++;\n    } else if (index === -1) {\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\n    }\n  }\n\n  // See #3 - https://infra.spec.whatwg.org/#forgiving-base64\n  if (nonAsciiWhitespaceCharCount % 4 === 1) {\n    throw lazyDOMException(\n      'The string to be decoded is not correctly encoded.'\x2C\n      'InvalidCharacterError');\n  }\n\n  return Buffer.from(input\x2C 'base64').toString('latin1');\n}\n\nmodule.exports = {\n  Blob\x2C\n  resolveObjectURL\x2C\n  Buffer\x2C\n  SlowBuffer\x2C\n  transcode\x2C\n  // Legacy\n  kMaxLength\x2C\n  kStringMaxLength\x2C\n  btoa\x2C\n  atob\x2C\n};\n\nObjectDefineProperties(module.exports\x2C {\n  constants: {\n    __proto__: null\x2C\n    configurable: false\x2C\n    enumerable: true\x2C\n    value: constants\n  }\x2C\n  INSPECT_MAX_BYTES: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() { return INSPECT_MAX_BYTES; }\x2C\n    set(val) { INSPECT_MAX_BYTES = val; }\n  }\n});\n
code-source-info,0x117768a14c48,30,11330,11395,C0O11341C5O11341C9O11361C14O11368C18O11393,,
code-creation,LazyCompile,10,59041,0x117768a176c0,54, node:buffer:354:36,0xa0ae21f2c60,~
code-source-info,0x117768a176c0,30,10308,10463,C0O10322C8O10322C13O10354C14O10365C21O10381C23O10378C28O10400C33O10432C46O10406C51O10400C53O10462,,
tick,0x1a4db2bb8,59041,0,0x0,3,0x0,0x117768a14551,0x105405ef4
code-creation,LazyCompile,10,59083,0x117768a17848,177,validateNumber node:internal/validators:174:24,0x3d9b801bffb0,~
code-source-info,0x117768a17848,22,4409,4854,C19O4449C25O4484C41O4490C46O4484C47O4542C54O4568C66O4600C83O4649C86O4649C92O4676C110O4745C136O4777C151O4821C169O4682C174O4676C176O4853,,
code-creation,LazyCompile,10,59125,0x117768a17a68,36, node:internal/fs/promises:347:5,0x117768a14998,~
code-source-info,0x117768a17a68,449,7820,7879,C0O7820C9O7832C21O7853C30O7832C35O7879,,
code-creation,LazyCompile,10,59166,0x117768a17d60,248,close node:internal/fs/promises:207:11,0x1a3e29c96b80,~
code-source-info,0x117768a17d60,449,4545,5335,C0O4557C7O4566C9O4565C15O4571C20O4587C27O4594C30O4611C31O4623C38O4632C40O4631C45O4656C52O4668C54O4667C57O4683C58O4695C65O4700C73O4706C77O4714C84O4723C86O4722C91O4730C96O4745C103O4750C108O4755C112O4767C119O4772C126O4789C136O4831C138O4830C142O4840C147O4840C157O4789C162O4787C168O4928C175O4933C182O4950C189O4991C199O4987C210O4950C215O4948C219O5280C222O5285C230O5285C235O5304C242O5316C244O5315C247O5331,,
code-creation,LazyCompile,10,59208,0x117768a18148,33,primordials.SafePromisePrototypeFinally node:internal/per_context/primordials:421:43,0x3d9b801894a0,~
code-source-info,0x117768a18148,12,12305,12578,C0O12305C13O12438C27O12438C32O12578,,
code-creation,LazyCompile,10,59208,0x117768a182e0,46, node:internal/per_context/primordials:424:15,0x117768a18098,~
code-source-info,0x117768a182e0,12,12450,12574,C0O12564C14O12464C20O12538C28O12545C34O12563C39O12564C45O12574,,
code-creation,LazyCompile,10,59250,0x117768a18420,27,SafePromise node:internal/per_context/primordials:408:16,0x3d9b80189450,~
code-source-info,0x117768a18420,12,11771,11802,C3O11784C7O11790C11O11784C26O11801,,
code-creation,LazyCompile,10,59250,0x117768a18518,22, node:internal/per_context/primordials:425:21,0x117768a18228,~
code-source-info,0x117768a18518,12,12480,12529,C0O12490C16O12490C21O12529,,
code-creation,LazyCompile,10,59291,0x117768a18608,17, node:internal/fs/promises:221:9,0x117768a17b48,~
code-source-info,0x117768a18608,449,4857,4899,C0O4865C7O4870C11O4885C16O4898,,
code-creation,LazyCompile,10,59291,0x117768a186e0,3, node:internal/fs/promises:347:51,0x117768a179b8,~
code-source-info,0x117768a186e0,449,7866,7878,C0O7872C2O7878,,
code-creation,LazyCompile,10,59333,0x117768a187a8,36,validateOutput node:internal/modules/esm/loader:591:28,0x117768a0d7d0,~
code-source-info,0x117768a187a8,433,17490,17727,C0O17529C10O17597C28O17603C33O17597C35O17726,,
code-creation,LazyCompile,10,59375,0x117768a18b08,196,moduleStrategy node:internal/modules/esm/translators:114:56,0x1a3e29c9fa50,~
code-source-info,0x117768a18b08,451,3148,3567,C0O3148C27O3174C40O3174C45O3218C50O3227C56O3248C66O3248C71O3284C83O3320C88O3284C92O3345C113O3345C119O3393C126O3404C131O3416C136O3420C141O3456C153O3518C157O3416C163O3551C173O3565,,
code-creation,LazyCompile,10,59416,0x117768a19888,83,assertBufferSource node:internal/modules/esm/translators:78:28,0x1a3e29c9f820,~
code-source-info,0x117768a19888,451,2137,2530,C0O2171C10O2222C11O2229C12O2284C15O2284C19O2244C24O2263C29O2303C35O2330C41O2360C42O2367C43O2374C50O2426C77O2380C82O2374,,
code-creation,LazyCompile,10,59416,0x117768a199e0,31,lazyTypes node:internal/modules/esm/translators:22:19,0x1a3e29c9f780,~
code-source-info,0x117768a199e0,451,396,490,C0O403C6O424C10O438C11O441C17O457C24O455C30O488,,
code-creation,LazyCompile,10,59458,0x117768a19af8,72,stringify node:internal/modules/esm/translators:94:19,0x1a3e29c9f870,~
code-source-info,0x117768a19af8,451,2550,2750,C0O2561C6O2591C8O2603C9O2606C20O2606C25O2660C33O2693C36O2689C45O2709C50O2668C56O2720C61O2735C66O2735C71O2748,,
code-creation,LazyCompile,10,59500,0x117768a19ce8,211,TextDecoder node:internal/encoding:383:16,0x111f698c95e0,~
script-source,33,node:internal/encoding,'use strict';\n\n// An implementation of the WHATWG Encoding Standard\n// https://encoding.spec.whatwg.org\n\nconst {\n  ObjectCreate\x2C\n  ObjectDefineProperties\x2C\n  ObjectGetOwnPropertyDescriptors\x2C\n  ObjectSetPrototypeOf\x2C\n  ObjectValues\x2C\n  SafeMap\x2C\n  StringPrototypeSlice\x2C\n  Symbol\x2C\n  SymbolToStringTag\x2C\n  Uint32Array\x2C\n  Uint8Array\x2C\n} = primordials;\n\nconst {\n  ERR_ENCODING_INVALID_ENCODED_DATA\x2C\n  ERR_ENCODING_NOT_SUPPORTED\x2C\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_INVALID_THIS\x2C\n  ERR_NO_ICU\n} = require('internal/errors').codes;\nconst kHandle = Symbol('handle');\nconst kFlags = Symbol('flags');\nconst kEncoding = Symbol('encoding');\nconst kDecoder = Symbol('decoder');\nconst kEncoder = Symbol('encoder');\n\nconst {\n  getConstructorOf\x2C\n  customInspectSymbol: inspect\x2C\n  kEmptyObject\x2C\n  kEnumerableProperty\x2C\n} = require('internal/util');\n\nconst {\n  isAnyArrayBuffer\x2C\n  isArrayBufferView\x2C\n  isUint8Array\n} = require('internal/util/types');\n\nconst {\n  validateString\x2C\n  validateObject\x2C\n} = require('internal/validators');\n\nconst {\n  encodeInto\x2C\n  encodeUtf8String\n} = internalBinding('buffer');\n\nlet Buffer;\nfunction lazyBuffer() {\n  if (Buffer === undefined)\n    Buffer = require('buffer').Buffer;\n  return Buffer;\n}\n\nfunction validateEncoder(obj) {\n  if (obj == null || obj[kEncoder] !== true)\n    throw new ERR_INVALID_THIS('TextEncoder');\n}\n\nfunction validateDecoder(obj) {\n  if (obj == null || obj[kDecoder] !== true)\n    throw new ERR_INVALID_THIS('TextDecoder');\n}\n\nconst CONVERTER_FLAGS_FLUSH = 0x1;\nconst CONVERTER_FLAGS_FATAL = 0x2;\nconst CONVERTER_FLAGS_IGNORE_BOM = 0x4;\n\nconst empty = new Uint8Array(0);\n\nconst encodings = new SafeMap([\n  ['unicode-1-1-utf-8'\x2C 'utf-8']\x2C\n  ['utf8'\x2C 'utf-8']\x2C\n  ['utf-8'\x2C 'utf-8']\x2C\n  ['866'\x2C 'ibm866']\x2C\n  ['cp866'\x2C 'ibm866']\x2C\n  ['csibm866'\x2C 'ibm866']\x2C\n  ['ibm866'\x2C 'ibm866']\x2C\n  ['csisolatin2'\x2C 'iso-8859-2']\x2C\n  ['iso-8859-2'\x2C 'iso-8859-2']\x2C\n  ['iso-ir-101'\x2C 'iso-8859-2']\x2C\n  ['iso8859-2'\x2C 'iso-8859-2']\x2C\n  ['iso88592'\x2C 'iso-8859-2']\x2C\n  ['iso_8859-2'\x2C 'iso-8859-2']\x2C\n  ['iso_8859-2:1987'\x2C 'iso-8859-2']\x2C\n  ['l2'\x2C 'iso-8859-2']\x2C\n  ['latin2'\x2C 'iso-8859-2']\x2C\n  ['csisolatin3'\x2C 'iso-8859-3']\x2C\n  ['iso-8859-3'\x2C 'iso-8859-3']\x2C\n  ['iso-ir-109'\x2C 'iso-8859-3']\x2C\n  ['iso8859-3'\x2C 'iso-8859-3']\x2C\n  ['iso88593'\x2C 'iso-8859-3']\x2C\n  ['iso_8859-3'\x2C 'iso-8859-3']\x2C\n  ['iso_8859-3:1988'\x2C 'iso-8859-3']\x2C\n  ['l3'\x2C 'iso-8859-3']\x2C\n  ['latin3'\x2C 'iso-8859-3']\x2C\n  ['csisolatin4'\x2C 'iso-8859-4']\x2C\n  ['iso-8859-4'\x2C 'iso-8859-4']\x2C\n  ['iso-ir-110'\x2C 'iso-8859-4']\x2C\n  ['iso8859-4'\x2C 'iso-8859-4']\x2C\n  ['iso88594'\x2C 'iso-8859-4']\x2C\n  ['iso_8859-4'\x2C 'iso-8859-4']\x2C\n  ['iso_8859-4:1988'\x2C 'iso-8859-4']\x2C\n  ['l4'\x2C 'iso-8859-4']\x2C\n  ['latin4'\x2C 'iso-8859-4']\x2C\n  ['csisolatincyrillic'\x2C 'iso-8859-5']\x2C\n  ['cyrillic'\x2C 'iso-8859-5']\x2C\n  ['iso-8859-5'\x2C 'iso-8859-5']\x2C\n  ['iso-ir-144'\x2C 'iso-8859-5']\x2C\n  ['iso8859-5'\x2C 'iso-8859-5']\x2C\n  ['iso88595'\x2C 'iso-8859-5']\x2C\n  ['iso_8859-5'\x2C 'iso-8859-5']\x2C\n  ['iso_8859-5:1988'\x2C 'iso-8859-5']\x2C\n  ['arabic'\x2C 'iso-8859-6']\x2C\n  ['asmo-708'\x2C 'iso-8859-6']\x2C\n  ['csiso88596e'\x2C 'iso-8859-6']\x2C\n  ['csiso88596i'\x2C 'iso-8859-6']\x2C\n  ['csisolatinarabic'\x2C 'iso-8859-6']\x2C\n  ['ecma-114'\x2C 'iso-8859-6']\x2C\n  ['iso-8859-6'\x2C 'iso-8859-6']\x2C\n  ['iso-8859-6-e'\x2C 'iso-8859-6']\x2C\n  ['iso-8859-6-i'\x2C 'iso-8859-6']\x2C\n  ['iso-ir-127'\x2C 'iso-8859-6']\x2C\n  ['iso8859-6'\x2C 'iso-8859-6']\x2C\n  ['iso88596'\x2C 'iso-8859-6']\x2C\n  ['iso_8859-6'\x2C 'iso-8859-6']\x2C\n  ['iso_8859-6:1987'\x2C 'iso-8859-6']\x2C\n  ['csisolatingreek'\x2C 'iso-8859-7']\x2C\n  ['ecma-118'\x2C 'iso-8859-7']\x2C\n  ['elot_928'\x2C 'iso-8859-7']\x2C\n  ['greek'\x2C 'iso-8859-7']\x2C\n  ['greek8'\x2C 'iso-8859-7']\x2C\n  ['iso-8859-7'\x2C 'iso-8859-7']\x2C\n  ['iso-ir-126'\x2C 'iso-8859-7']\x2C\n  ['iso8859-7'\x2C 'iso-8859-7']\x2C\n  ['iso88597'\x2C 'iso-8859-7']\x2C\n  ['iso_8859-7'\x2C 'iso-8859-7']\x2C\n  ['iso_8859-7:1987'\x2C 'iso-8859-7']\x2C\n  ['sun_eu_greek'\x2C 'iso-8859-7']\x2C\n  ['csiso88598e'\x2C 'iso-8859-8']\x2C\n  ['csisolatinhebrew'\x2C 'iso-8859-8']\x2C\n  ['hebrew'\x2C 'iso-8859-8']\x2C\n  ['iso-8859-8'\x2C 'iso-8859-8']\x2C\n  ['iso-8859-8-e'\x2C 'iso-8859-8']\x2C\n  ['iso-ir-138'\x2C 'iso-8859-8']\x2C\n  ['iso8859-8'\x2C 'iso-8859-8']\x2C\n  ['iso88598'\x2C 'iso-8859-8']\x2C\n  ['iso_8859-8'\x2C 'iso-8859-8']\x2C\n  ['iso_8859-8:1988'\x2C 'iso-8859-8']\x2C\n  ['visual'\x2C 'iso-8859-8']\x2C\n  ['csiso88598i'\x2C 'iso-8859-8-i']\x2C\n  ['iso-8859-8-i'\x2C 'iso-8859-8-i']\x2C\n  ['logical'\x2C 'iso-8859-8-i']\x2C\n  ['csisolatin6'\x2C 'iso-8859-10']\x2C\n  ['iso-8859-10'\x2C 'iso-8859-10']\x2C\n  ['iso-ir-157'\x2C 'iso-8859-10']\x2C\n  ['iso8859-10'\x2C 'iso-8859-10']\x2C\n  ['iso885910'\x2C 'iso-8859-10']\x2C\n  ['l6'\x2C 'iso-8859-10']\x2C\n  ['latin6'\x2C 'iso-8859-10']\x2C\n  ['iso-8859-13'\x2C 'iso-8859-13']\x2C\n  ['iso8859-13'\x2C 'iso-8859-13']\x2C\n  ['iso885913'\x2C 'iso-8859-13']\x2C\n  ['iso-8859-14'\x2C 'iso-8859-14']\x2C\n  ['iso8859-14'\x2C 'iso-8859-14']\x2C\n  ['iso885914'\x2C 'iso-8859-14']\x2C\n  ['csisolatin9'\x2C 'iso-8859-15']\x2C\n  ['iso-8859-15'\x2C 'iso-8859-15']\x2C\n  ['iso8859-15'\x2C 'iso-8859-15']\x2C\n  ['iso885915'\x2C 'iso-8859-15']\x2C\n  ['iso_8859-15'\x2C 'iso-8859-15']\x2C\n  ['l9'\x2C 'iso-8859-15']\x2C\n  ['cskoi8r'\x2C 'koi8-r']\x2C\n  ['koi'\x2C 'koi8-r']\x2C\n  ['koi8'\x2C 'koi8-r']\x2C\n  ['koi8-r'\x2C 'koi8-r']\x2C\n  ['koi8_r'\x2C 'koi8-r']\x2C\n  ['koi8-ru'\x2C 'koi8-u']\x2C\n  ['koi8-u'\x2C 'koi8-u']\x2C\n  ['csmacintosh'\x2C 'macintosh']\x2C\n  ['mac'\x2C 'macintosh']\x2C\n  ['macintosh'\x2C 'macintosh']\x2C\n  ['x-mac-roman'\x2C 'macintosh']\x2C\n  ['dos-874'\x2C 'windows-874']\x2C\n  ['iso-8859-11'\x2C 'windows-874']\x2C\n  ['iso8859-11'\x2C 'windows-874']\x2C\n  ['iso885911'\x2C 'windows-874']\x2C\n  ['tis-620'\x2C 'windows-874']\x2C\n  ['windows-874'\x2C 'windows-874']\x2C\n  ['cp1250'\x2C 'windows-1250']\x2C\n  ['windows-1250'\x2C 'windows-1250']\x2C\n  ['x-cp1250'\x2C 'windows-1250']\x2C\n  ['cp1251'\x2C 'windows-1251']\x2C\n  ['windows-1251'\x2C 'windows-1251']\x2C\n  ['x-cp1251'\x2C 'windows-1251']\x2C\n  ['ansi_x3.4-1968'\x2C 'windows-1252']\x2C\n  ['ascii'\x2C 'windows-1252']\x2C\n  ['cp1252'\x2C 'windows-1252']\x2C\n  ['cp819'\x2C 'windows-1252']\x2C\n  ['csisolatin1'\x2C 'windows-1252']\x2C\n  ['ibm819'\x2C 'windows-1252']\x2C\n  ['iso-8859-1'\x2C 'windows-1252']\x2C\n  ['iso-ir-100'\x2C 'windows-1252']\x2C\n  ['iso8859-1'\x2C 'windows-1252']\x2C\n  ['iso88591'\x2C 'windows-1252']\x2C\n  ['iso_8859-1'\x2C 'windows-1252']\x2C\n  ['iso_8859-1:1987'\x2C 'windows-1252']\x2C\n  ['l1'\x2C 'windows-1252']\x2C\n  ['latin1'\x2C 'windows-1252']\x2C\n  ['us-ascii'\x2C 'windows-1252']\x2C\n  ['windows-1252'\x2C 'windows-1252']\x2C\n  ['x-cp1252'\x2C 'windows-1252']\x2C\n  ['cp1253'\x2C 'windows-1253']\x2C\n  ['windows-1253'\x2C 'windows-1253']\x2C\n  ['x-cp1253'\x2C 'windows-1253']\x2C\n  ['cp1254'\x2C 'windows-1254']\x2C\n  ['csisolatin5'\x2C 'windows-1254']\x2C\n  ['iso-8859-9'\x2C 'windows-1254']\x2C\n  ['iso-ir-148'\x2C 'windows-1254']\x2C\n  ['iso8859-9'\x2C 'windows-1254']\x2C\n  ['iso88599'\x2C 'windows-1254']\x2C\n  ['iso_8859-9'\x2C 'windows-1254']\x2C\n  ['iso_8859-9:1989'\x2C 'windows-1254']\x2C\n  ['l5'\x2C 'windows-1254']\x2C\n  ['latin5'\x2C 'windows-1254']\x2C\n  ['windows-1254'\x2C 'windows-1254']\x2C\n  ['x-cp1254'\x2C 'windows-1254']\x2C\n  ['cp1255'\x2C 'windows-1255']\x2C\n  ['windows-1255'\x2C 'windows-1255']\x2C\n  ['x-cp1255'\x2C 'windows-1255']\x2C\n  ['cp1256'\x2C 'windows-1256']\x2C\n  ['windows-1256'\x2C 'windows-1256']\x2C\n  ['x-cp1256'\x2C 'windows-1256']\x2C\n  ['cp1257'\x2C 'windows-1257']\x2C\n  ['windows-1257'\x2C 'windows-1257']\x2C\n  ['x-cp1257'\x2C 'windows-1257']\x2C\n  ['cp1258'\x2C 'windows-1258']\x2C\n  ['windows-1258'\x2C 'windows-1258']\x2C\n  ['x-cp1258'\x2C 'windows-1258']\x2C\n  ['x-mac-cyrillic'\x2C 'x-mac-cyrillic']\x2C\n  ['x-mac-ukrainian'\x2C 'x-mac-cyrillic']\x2C\n  ['chinese'\x2C 'gbk']\x2C\n  ['csgb2312'\x2C 'gbk']\x2C\n  ['csiso58gb231280'\x2C 'gbk']\x2C\n  ['gb2312'\x2C 'gbk']\x2C\n  ['gb_2312'\x2C 'gbk']\x2C\n  ['gb_2312-80'\x2C 'gbk']\x2C\n  ['gbk'\x2C 'gbk']\x2C\n  ['iso-ir-58'\x2C 'gbk']\x2C\n  ['x-gbk'\x2C 'gbk']\x2C\n  ['gb18030'\x2C 'gb18030']\x2C\n  ['big5'\x2C 'big5']\x2C\n  ['big5-hkscs'\x2C 'big5']\x2C\n  ['cn-big5'\x2C 'big5']\x2C\n  ['csbig5'\x2C 'big5']\x2C\n  ['x-x-big5'\x2C 'big5']\x2C\n  ['cseucpkdfmtjapanese'\x2C 'euc-jp']\x2C\n  ['euc-jp'\x2C 'euc-jp']\x2C\n  ['x-euc-jp'\x2C 'euc-jp']\x2C\n  ['csiso2022jp'\x2C 'iso-2022-jp']\x2C\n  ['iso-2022-jp'\x2C 'iso-2022-jp']\x2C\n  ['csshiftjis'\x2C 'shift_jis']\x2C\n  ['ms932'\x2C 'shift_jis']\x2C\n  ['ms_kanji'\x2C 'shift_jis']\x2C\n  ['shift-jis'\x2C 'shift_jis']\x2C\n  ['shift_jis'\x2C 'shift_jis']\x2C\n  ['sjis'\x2C 'shift_jis']\x2C\n  ['windows-31j'\x2C 'shift_jis']\x2C\n  ['x-sjis'\x2C 'shift_jis']\x2C\n  ['cseuckr'\x2C 'euc-kr']\x2C\n  ['csksc56011987'\x2C 'euc-kr']\x2C\n  ['euc-kr'\x2C 'euc-kr']\x2C\n  ['iso-ir-149'\x2C 'euc-kr']\x2C\n  ['korean'\x2C 'euc-kr']\x2C\n  ['ks_c_5601-1987'\x2C 'euc-kr']\x2C\n  ['ks_c_5601-1989'\x2C 'euc-kr']\x2C\n  ['ksc5601'\x2C 'euc-kr']\x2C\n  ['ksc_5601'\x2C 'euc-kr']\x2C\n  ['windows-949'\x2C 'euc-kr']\x2C\n  ['utf-16be'\x2C 'utf-16be']\x2C\n  ['utf-16le'\x2C 'utf-16le']\x2C\n  ['utf-16'\x2C 'utf-16le']\x2C\n]);\n\n// Unfortunately\x2C String.prototype.trim also removes non-ascii whitespace\x2C\n// so we have to do this manually\nfunction trimAsciiWhitespace(label) {\n  let s = 0;\n  let e = label.length;\n  while (s < e && (\n    label[s] === '\\u0009' ||\n    label[s] === '\\u000a' ||\n    label[s] === '\\u000c' ||\n    label[s] === '\\u000d' ||\n    label[s] === '\\u0020')) {\n    s++;\n  }\n  while (e > s && (\n    label[e - 1] === '\\u0009' ||\n    label[e - 1] === '\\u000a' ||\n    label[e - 1] === '\\u000c' ||\n    label[e - 1] === '\\u000d' ||\n    label[e - 1] === '\\u0020')) {\n    e--;\n  }\n  return StringPrototypeSlice(label\x2C s\x2C e);\n}\n\nfunction getEncodingFromLabel(label) {\n  const enc = encodings.get(label);\n  if (enc !== undefined) return enc;\n  return encodings.get(trimAsciiWhitespace(label.toLowerCase()));\n}\n\nconst encodeIntoResults = new Uint32Array(2);\n\nclass TextEncoder {\n  constructor() {\n    this[kEncoder] = true;\n  }\n\n  get encoding() {\n    validateEncoder(this);\n    return 'utf-8';\n  }\n\n  encode(input = '') {\n    validateEncoder(this);\n    return encodeUtf8String(`${input}`);\n  }\n\n  encodeInto(src\x2C dest) {\n    validateEncoder(this);\n    validateString(src\x2C 'src');\n    if (!dest || !isUint8Array(dest))\n      throw new ERR_INVALID_ARG_TYPE('dest'\x2C 'Uint8Array'\x2C dest);\n    encodeInto(src\x2C dest\x2C encodeIntoResults);\n    return { read: encodeIntoResults[0]\x2C written: encodeIntoResults[1] };\n  }\n\n  [inspect](depth\x2C opts) {\n    validateEncoder(this);\n    if (typeof depth === 'number' && depth < 0)\n      return this;\n    const ctor = getConstructorOf(this);\n    const obj = ObjectCreate({\n      constructor: ctor === null ? TextEncoder : ctor\n    });\n    obj.encoding = this.encoding;\n    // Lazy to avoid circular dependency\n    return require('internal/util/inspect').inspect(obj\x2C opts);\n  }\n}\n\nObjectDefineProperties(\n  TextEncoder.prototype\x2C {\n    'encode': kEnumerableProperty\x2C\n    'encodeInto': kEnumerableProperty\x2C\n    'encoding': kEnumerableProperty\x2C\n    [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'TextEncoder' }\x2C\n  });\n\nconst TextDecoder =\n  internalBinding('config').hasIntl ?\n    makeTextDecoderICU() :\n    makeTextDecoderJS();\n\nfunction makeTextDecoderICU() {\n  const {\n    decode: _decode\x2C\n    getConverter\x2C\n  } = internalBinding('icu');\n\n  class TextDecoder {\n    constructor(encoding = 'utf-8'\x2C options = kEmptyObject) {\n      encoding = `${encoding}`;\n      validateObject(options\x2C 'options'\x2C {\n        nullable: true\x2C\n        allowArray: true\x2C\n        allowFunction: true\x2C\n      });\n\n      const enc = getEncodingFromLabel(encoding);\n      if (enc === undefined)\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\n\n      let flags = 0;\n      if (options !== null) {\n        flags |= options.fatal ? CONVERTER_FLAGS_FATAL : 0;\n        flags |= options.ignoreBOM ? CONVERTER_FLAGS_IGNORE_BOM : 0;\n      }\n\n      const handle = getConverter(enc\x2C flags);\n      if (handle === undefined)\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\n\n      this[kDecoder] = true;\n      this[kHandle] = handle;\n      this[kFlags] = flags;\n      this[kEncoding] = enc;\n    }\n\n\n    decode(input = empty\x2C options = kEmptyObject) {\n      validateDecoder(this);\n      if (isAnyArrayBuffer(input)) {\n        input = lazyBuffer().from(input);\n      } else if (!isArrayBufferView(input)) {\n        throw new ERR_INVALID_ARG_TYPE('input'\x2C\n                                       ['ArrayBuffer'\x2C 'ArrayBufferView']\x2C\n                                       input);\n      }\n      validateObject(options\x2C 'options'\x2C {\n        nullable: true\x2C\n        allowArray: true\x2C\n        allowFunction: true\x2C\n      });\n\n      let flags = 0;\n      if (options !== null)\n        flags |= options.stream ? 0 : CONVERTER_FLAGS_FLUSH;\n\n      const ret = _decode(this[kHandle]\x2C input\x2C flags);\n      if (typeof ret === 'number') {\n        throw new ERR_ENCODING_INVALID_ENCODED_DATA(this.encoding\x2C ret);\n      }\n      return ret.toString('ucs2');\n    }\n  }\n\n  return TextDecoder;\n}\n\nfunction makeTextDecoderJS() {\n  let StringDecoder;\n  function lazyStringDecoder() {\n    if (StringDecoder === undefined)\n      ({ StringDecoder } = require('string_decoder'));\n    return StringDecoder;\n  }\n\n  const kBOMSeen = Symbol('BOM seen');\n\n  function hasConverter(encoding) {\n    return encoding === 'utf-8' || encoding === 'utf-16le';\n  }\n\n  class TextDecoder {\n    constructor(encoding = 'utf-8'\x2C options = kEmptyObject) {\n      encoding = `${encoding}`;\n      validateObject(options\x2C 'options'\x2C {\n        nullable: true\x2C\n        allowArray: true\x2C\n        allowFunction: true\x2C\n      });\n\n      const enc = getEncodingFromLabel(encoding);\n      if (enc === undefined || !hasConverter(enc))\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\n\n      let flags = 0;\n      if (options !== null) {\n        if (options.fatal) {\n          throw new ERR_NO_ICU('"fatal" option');\n        }\n        flags |= options.ignoreBOM ? CONVERTER_FLAGS_IGNORE_BOM : 0;\n      }\n\n      this[kDecoder] = true;\n      // StringDecoder will normalize WHATWG encoding to Node.js encoding.\n      this[kHandle] = new (lazyStringDecoder())(enc);\n      this[kFlags] = flags;\n      this[kEncoding] = enc;\n      this[kBOMSeen] = false;\n    }\n\n    decode(input = empty\x2C options = kEmptyObject) {\n      validateDecoder(this);\n      if (isAnyArrayBuffer(input)) {\n        input = lazyBuffer().from(input);\n      } else if (isArrayBufferView(input)) {\n        input = lazyBuffer().from(input.buffer\x2C input.byteOffset\x2C\n                                  input.byteLength);\n      } else {\n        throw new ERR_INVALID_ARG_TYPE('input'\x2C\n                                       ['ArrayBuffer'\x2C 'ArrayBufferView']\x2C\n                                       input);\n      }\n      validateObject(options\x2C 'options'\x2C {\n        nullable: true\x2C\n        allowArray: true\x2C\n        allowFunction: true\x2C\n      });\n\n      if (this[kFlags] & CONVERTER_FLAGS_FLUSH) {\n        this[kBOMSeen] = false;\n      }\n\n      if (options !== null && options.stream) {\n        this[kFlags] &= ~CONVERTER_FLAGS_FLUSH;\n      } else {\n        this[kFlags] |= CONVERTER_FLAGS_FLUSH;\n      }\n\n      let result = this[kFlags] & CONVERTER_FLAGS_FLUSH ?\n        this[kHandle].end(input) :\n        this[kHandle].write(input);\n\n      if (result.length > 0 &&\n          !this[kBOMSeen] &&\n          !(this[kFlags] & CONVERTER_FLAGS_IGNORE_BOM)) {\n        // If the very first result in the stream is a BOM\x2C and we are not\n        // explicitly told to ignore it\x2C then we discard it.\n        if (result[0] === '\\ufeff') {\n          result = StringPrototypeSlice(result\x2C 1);\n        }\n        this[kBOMSeen] = true;\n      }\n\n      return result;\n    }\n  }\n\n  return TextDecoder;\n}\n\n// Mix in some shared properties.\nconst sharedProperties = ObjectGetOwnPropertyDescriptors({\n  get encoding() {\n    validateDecoder(this);\n    return this[kEncoding];\n  }\x2C\n\n  get fatal() {\n    validateDecoder(this);\n    return (this[kFlags] & CONVERTER_FLAGS_FATAL) === CONVERTER_FLAGS_FATAL;\n  }\x2C\n\n  get ignoreBOM() {\n    validateDecoder(this);\n    return (this[kFlags] & CONVERTER_FLAGS_IGNORE_BOM) ===\n              CONVERTER_FLAGS_IGNORE_BOM;\n  }\x2C\n\n  [inspect](depth\x2C opts) {\n    validateDecoder(this);\n    if (typeof depth === 'number' && depth < 0)\n      return this;\n    const constructor = getConstructorOf(this) || TextDecoder;\n    const obj = ObjectCreate({ constructor });\n    obj.encoding = this.encoding;\n    obj.fatal = this.fatal;\n    obj.ignoreBOM = this.ignoreBOM;\n    if (opts.showHidden) {\n      obj[kFlags] = this[kFlags];\n      obj[kHandle] = this[kHandle];\n    }\n    // Lazy to avoid circular dependency\n    const { inspect } = require('internal/util/inspect');\n    return `${constructor.name} ${inspect(obj)}`;\n  }\n});\nconst propertiesValues = ObjectValues(sharedProperties);\nfor (let i = 0; i < propertiesValues.length; i++) {\n  // We want to use null-prototype objects to not rely on globally mutable\n  // %Object.prototype%.\n  ObjectSetPrototypeOf(propertiesValues[i]\x2C null);\n}\nsharedProperties[inspect].enumerable = false;\n\nObjectDefineProperties(TextDecoder.prototype\x2C {\n  decode: kEnumerableProperty\x2C\n  ...sharedProperties\x2C\n  [SymbolToStringTag]: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    value: 'TextDecoder'\n  }\n});\n\nmodule.exports = {\n  getEncodingFromLabel\x2C\n  TextDecoder\x2C\n  TextEncoder\n};\n
code-source-info,0x117768a19ce8,33,10393,11187,C19O10424C26O10446C30O10478C40O10493C48O10478C53O10623C58O10623C63O10661C65O10692C74O10698C79O10692C80O10759C82O10768C86O10817C99O10825C108O10877C121O10889C130O10951C135O10951C141O10983C143O11017C152O11023C157O11017C158O11072C162O11077C166O11087C170O11101C174O11106C179O11115C183O11131C187O11136C192O11144C196O11159C200O11164C205O11175C210O11186,,
code-creation,LazyCompile,10,60166,0x117768a1b1b8,55,getEncodingFromLabel node:internal/encoding:317:30,0x111f698c92c8,~
code-source-info,0x117768a1b1b8,33,8725,8875,C0O8749C5O8759C10O8759C16O8773C18O8796C20O8807C21O8810C26O8827C34O8857C39O8857C44O8831C49O8827C54O8873,,
tick,0x1a4e7291c,60208,0,0x0,3,0x0,0x117768a19b1c,0x117768a18b3a,0x117768a0d526,0x105405ef4
code-creation,LazyCompile,10,60208,0x117768a1b4c8,232,decode node:internal/encoding:412:11,0x111f698c96a0,~
code-source-info,0x117768a1b4c8,33,11200,12032,C8O11209C23O11226C30O11248C35O11248C39O11277C46O11281C52O11316C57O11324C61O11336C66O11337C74O11363C81O11368C87O11404C107O11410C112O11404C113O11580C123O11595C131O11580C136O11725C138O11734C142O11781C158O11794C164O11836C173O11849C175O11848C185O11836C191O11880C195O11919C202O11968C212O11925C217O11919C218O12009C226O12009C231O12026,,
code-creation,LazyCompile,10,60250,0x117768a1b6f0,37,validateDecoder node:internal/encoding:68:25,0x111f698c9228,~
code-source-info,0x117768a1b6f0,33,1349,1450,C0O1359C7O1382C9O1381C14O1392C19O1406C29O1412C34O1406C36O1449,,
code-creation,LazyCompile,10,60291,0x117768a1b878,162,toString node:buffer:789:46,0xa0ae21f4d40,~
code-source-info,0x117768a1b878,30,23289,23851,C0O23289C2O23330C8O23337C13O23362C20O23380C25O23362C31O23388C32O23413C37O23424C38O23434C43O23444C48O23462C50O23472C55O23484C57O23494C58O23506C65O23521C71O23550C76O23561C83O23583C90O23596C92O23604C97O23618C99O23628C100O23632C104O23676C109O23676C115O23698C116O23714C119O23714C124O23742C126O23769C133O23775C138O23769C139O23825C156O23825C161O23849,,
code-creation,LazyCompile,10,60333,0x117768a1bb40,499,getEncodingOps node:buffer:684:24,0xa0ae21f4bb0,~
code-source-info,0x117768a1bb
code-creation,LazyCompile,10,60375,0x117768a1bf28,12,slice node:buffer:608:12,0xa0ae21f38f8,~
code-source-info,0x117768a1bf28,30,17110,17156,C0O17135C5O17135C11O17156,,
code-creation,LazyCompile,10,60458,0x117768a1c220,353,maybeCacheSourceMap node:internal/source_map/source_map_cache:97:29,0x1e372ce12938,~
code-source-info,0x117768a1c
code-creation,LazyCompile,10,60500,0x117768a1cf10,31,getSourceMapsEnabled node:internal/source_map/source_map_cache:51:30,0x1e372ce12848,~
code-source-info,0x117768a1cf10,427,1839,1984,C0O1846C6O1889C11O1910C17O1910C22O1889C26O1957C30O1982,,
code-creation,LazyCompile,10,60500,0x117768a1d088,100,setSourceMapsEnabled node:internal/source_map/source_map_cache:58:30,0x1e372ce12898,~
code-source-info,0x117768a1d088,427,2015,2630,C0O2025C8O2025C13O2130C19O2130C24O2069C29O2095C34O2159C38O2188C42O2243C48O2243C53O2217C58O2299C64O2357C70O2516C76O2516C81O2489C86O2548C90O2604C92O2622C99O2629,,
code-creation,LazyCompile,10,60541,0x117768a1d200,30,validateBoolean node:internal/validators:215:25,0xa0ae21c1180,~
code-source-info,0x117768a1d200,22,5553,5664,C0O5571C6O5607C22O5613C27O5607C29O5663,,
code-creation,LazyCompile,10,60541,0x117768a1d2f8,10, node:internal/modules/esm/translators:42:63,0x1a3e29c9fa00,~
code-source-info,0x117768a1d2f8,451,1018,1043,C0O1030C2O1036C9O1042,,
code-creation,Script,10,60625,0x117768a1dd60,783, file:///Users/sayers/Projects/protobuf-es/packages/protobuf-performance/prof.js:1:1,0x117768a1d6f8,~
script-source,455,file:///Users/sayers/Projects/protobuf-es/packages/protobuf-performance/prof.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n"use strict";\n\nimport * as fs from "fs";\nimport * as path from "path";\nimport * as child_process from "child_process";\n\nimport { Test as ProtobufES_Test } from "./gen/protobuf-es/data/bench_pb.js";\nimport { jsonData } from "./data/bench.js";\n\n// A profiling stub to measure encoding / decoding performance using benchmark data.\n\nvar commands = ["encode"\x2C "decode"\x2C "fromjson"];\nif (commands.indexOf(process.argv[2]) < 0) {\n  // 0: node\x2C 1: prof.js\n  process.stderr.write(\n    "usage: " +\n      path.basename(process.argv[1]) +\n      " <" +\n      commands.join("|") +\n      "> [iterations=10000000]\\n"\n  );\n  // return;\n}\n\n// Spin up a node process with profiling enabled and process the generated log\nif (process.execArgv.indexOf("--prof") < 0) {\n  process.stdout.write("cleaning up old logs ...\\n");\n  var logRe = /^isolate-[0-9A-F]+-v8\\.log$/;\n  fs.readdirSync(process.cwd()).forEach(function readdirSync_it(file) {\n    if (logRe.test(file)) fs.unlink(file);\n  });\n  process.stdout.write("generating profile (may take a while) ...\\n");\n  child_process.execSync(\n    "node --prof --trace-deopt " +\n      process.execArgv.join(" ") +\n      " " +\n      process.argv.slice(1).join(" ")\x2C\n    {\n      cwd: process.cwd()\x2C\n      stdio: "inherit"\x2C\n    }\n  );\n  process.stdout.write("processing profile ...\\n");\n  fs.readdirSync(process.cwd()).forEach(function readdirSync_it(file) {\n    if (logRe.test(file)) {\n      child_process.execSync("node --prof-process " + file\x2C {\n        cwd: process.cwd()\x2C\n        stdio: "inherit"\x2C\n      });\n      // fs.unlink(file);\n    }\n  });\n  process.stdout.write("done.\\n");\n  // return;\n}\n\nconst count = 100;\n\nif (process.argv.length > 3 && /^\\d+$/.test(process.argv[3]))\n  count = parseInt(process.argv[3]\x2C 10);\nprocess.stdout.write(" x " + count + "\\n");\n\nswitch (process.argv[2]) {\n  case "encode":\n    for (var i = 0; i < count; ++i) {\n      ProtobufES_Test.fromJson(jsonData).toBinary();\n    }\n    break;\n  case "decode":\n    var buf = Test.encode(data).finish();\n    for (var j = 0; j < count; ++j) Test.decode(buf);\n    break;\n}\n
code-source-info,0x117768a1dd
code-creation,LazyCompile,10,60833,0x117768a1e730,140, node:internal/modules/esm/module_job:75:41,0x117768a11b80,~
code-source-info,0x117768a1e730,435,2268,2519,C10O2268C18O2330C23O2335C28O2342C37O2366C46O2342C52O2392C61O2411C64O2392C69O2460C79O2460C105O2497C117O2511,,
code-creation,LazyCompile,10,60875,0x117768a1e8b0,13,onParseError node:internal/url:563:22,0x3b46b20262f0,~
code-source-info,0x117768a1e8b0,74,15407,15461,C0O15426C7O15432C12O15426,,
code-creation,LazyCompile,10,60958,0x117768a1eb70,187,NodeError node:internal/errors:361:28,0x3d9b801a4290,~
script-source,17,node:internal/errors,/* eslint node-core/documented-errors: "error" */\n/* eslint node-core/alphabetize-errors: "error" */\n/* eslint node-core/prefer-util-format-errors: "error" */\n\n'use strict';\n\n// The whole point behind this internal module is to allow Node.js to no\n// longer be forced to treat every error message change as a semver-major\n// change. The NodeError classes here all expose a `code` property whose\n// value statically and permanently identifies the error. While the error\n// message may change\x2C the code should not.\n\nconst {\n  AggregateError\x2C\n  ArrayFrom\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePop\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSplice\x2C\n  ArrayPrototypeUnshift\x2C\n  Error\x2C\n  ErrorCaptureStackTrace\x2C\n  ErrorPrototypeToString\x2C\n  JSONStringify\x2C\n  MapPrototypeGet\x2C\n  MathAbs\x2C\n  MathMax\x2C\n  Number\x2C\n  NumberIsInteger\x2C\n  ObjectAssign\x2C\n  ObjectDefineProperty\x2C\n  ObjectDefineProperties\x2C\n  ObjectIsExtensible\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  RangeError\x2C\n  ReflectApply\x2C\n  RegExpPrototypeExec\x2C\n  SafeArrayIterator\x2C\n  SafeMap\x2C\n  SafeWeakMap\x2C\n  String\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n  StringPrototypeToLowerCase\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n  SyntaxError\x2C\n  TypeError\x2C\n  URIError\x2C\n} = primordials;\n\nconst kIsNodeError = Symbol('kIsNodeError');\n\nconst isWindows = process.platform === 'win32';\n\nconst messages = new SafeMap();\nconst codes = {};\n\nconst classRegExp = /^([A-Z][a-z0-9]*)+$/;\n// Sorted by a rough estimate on most frequently used entries.\nconst kTypes = [\n  'string'\x2C\n  'function'\x2C\n  'number'\x2C\n  'object'\x2C\n  // Accept 'Function' and 'Object' as alternative to the lower cased version.\n  'Function'\x2C\n  'Object'\x2C\n  'boolean'\x2C\n  'bigint'\x2C\n  'symbol'\x2C\n];\n\nconst MainContextError = Error;\nconst overrideStackTrace = new SafeWeakMap();\nconst kNoOverride = Symbol('kNoOverride');\nlet userStackTraceLimit;\nconst nodeInternalPrefix = '__node_internal_';\nconst prepareStackTrace = (globalThis\x2C error\x2C trace) => {\n  // API for node internals to override error stack formatting\n  // without interfering with userland code.\n  if (overrideStackTrace.has(error)) {\n    const f = overrideStackTrace.get(error);\n    overrideStackTrace.delete(error);\n    return f(error\x2C trace);\n  }\n\n  const firstFrame = trace[0]?.getFunctionName();\n  if (firstFrame && StringPrototypeStartsWith(firstFrame\x2C nodeInternalPrefix)) {\n    for (let l = trace.length - 1; l >= 0; l--) {\n      const fn = trace[l]?.getFunctionName();\n      if (fn && StringPrototypeStartsWith(fn\x2C nodeInternalPrefix)) {\n        ArrayPrototypeSplice(trace\x2C 0\x2C l + 1);\n        break;\n      }\n    }\n    // `userStackTraceLimit` is the user value for `Error.stackTraceLimit`\x2C\n    // it is updated at every new exception in `captureLargerStackTrace`.\n    if (trace.length > userStackTraceLimit)\n      ArrayPrototypeSplice(trace\x2C userStackTraceLimit);\n  }\n\n  const globalOverride =\n    maybeOverridePrepareStackTrace(globalThis\x2C error\x2C trace);\n  if (globalOverride !== kNoOverride) return globalOverride;\n\n  // Normal error formatting:\n  //\n  // Error: Message\n  //     at function (file)\n  //     at file\n  let errorString;\n  if (kIsNodeError in error) {\n    errorString = `${error.name} [${error.code}]: ${error.message}`;\n  } else {\n    errorString = ErrorPrototypeToString(error);\n  }\n  if (trace.length === 0) {\n    return errorString;\n  }\n  return `${errorString}\\n    at ${ArrayPrototypeJoin(trace\x2C '\\n    at ')}`;\n};\n\nconst maybeOverridePrepareStackTrace = (globalThis\x2C error\x2C trace) => {\n  // Polyfill of V8's Error.prepareStackTrace API.\n  // https://crbug.com/v8/7848\n  // `globalThis` is the global that contains the constructor which\n  // created `error`.\n  if (typeof globalThis.Error?.prepareStackTrace === 'function') {\n    return globalThis.Error.prepareStackTrace(error\x2C trace);\n  }\n  // We still have legacy usage that depends on the main context's `Error`\n  // being used\x2C even when the error is from a different context.\n  // TODO(devsnek): evaluate if this can be eventually deprecated/removed.\n  if (typeof MainContextError.prepareStackTrace === 'function') {\n    return MainContextError.prepareStackTrace(error\x2C trace);\n  }\n\n  return kNoOverride;\n};\n\nconst aggregateTwoErrors = hideStackFrames((innerError\x2C outerError) => {\n  if (innerError && outerError && innerError !== outerError) {\n    if (ArrayIsArray(outerError.errors)) {\n      // If `outerError` is already an `AggregateError`.\n      ArrayPrototypePush(outerError.errors\x2C innerError);\n      return outerError;\n    }\n    // eslint-disable-next-line no-restricted-syntax\n    const err = new AggregateError(new SafeArrayIterator([\n      outerError\x2C\n      innerError\x2C\n    ])\x2C outerError.message);\n    err.code = outerError.code;\n    return err;\n  }\n  return innerError || outerError;\n});\n\n// Lazily loaded\nlet util;\nlet assert;\n\nlet internalUtil = null;\nfunction lazyInternalUtil() {\n  internalUtil ??= require('internal/util');\n  return internalUtil;\n}\n\nlet internalUtilInspect = null;\nfunction lazyInternalUtilInspect() {\n  internalUtilInspect ??= require('internal/util/inspect');\n  return internalUtilInspect;\n}\n\nlet buffer;\nfunction lazyBuffer() {\n  buffer ??= require('buffer').Buffer;\n  return buffer;\n}\n\nfunction isErrorStackTraceLimitWritable() {\n  // Do no touch Error.stackTraceLimit as V8 would attempt to install\n  // it again during deserialization.\n  if (require('v8').startupSnapshot.isBuildingSnapshot()) {\n    return false;\n  }\n\n  const desc = ObjectGetOwnPropertyDescriptor(Error\x2C 'stackTraceLimit');\n  if (desc === undefined) {\n    return ObjectIsExtensible(Error);\n  }\n\n  return ObjectPrototypeHasOwnProperty(desc\x2C 'writable') ?\n    desc.writable :\n    desc.set !== undefined;\n}\n\nfunction inspectWithNoCustomRetry(obj\x2C options) {\n  const utilInspect = lazyInternalUtilInspect();\n\n  try {\n    return utilInspect.inspect(obj\x2C options);\n  } catch {\n    return utilInspect.inspect(obj\x2C { ...options\x2C customInspect: false });\n  }\n}\n\n// A specialized Error that includes an additional info property with\n// additional information about the error condition.\n// It has the properties present in a UVException but with a custom error\n// message followed by the uv error code and uv error message.\n// It also has its own error code with the original uv error context put into\n// `err.info`.\n// The context passed into this error must have .code\x2C .syscall and .message\x2C\n// and may have .path and .dest.\nclass SystemError extends Error {\n  constructor(key\x2C context) {\n    const limit = Error.stackTraceLimit;\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\n    super();\n    // Reset the limit and setting the name property.\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = limit;\n    const prefix = getMessage(key\x2C []\x2C this);\n    let message = `${prefix}: ${context.syscall} returned ` +\n                  `${context.code} (${context.message})`;\n\n    if (context.path !== undefined)\n      message += ` ${context.path}`;\n    if (context.dest !== undefined)\n      message += ` => ${context.dest}`;\n\n    captureLargerStackTrace(this);\n\n    this.code = key;\n\n    ObjectDefineProperties(this\x2C {\n      [kIsNodeError]: {\n        __proto__: null\x2C\n        value: true\x2C\n        enumerable: false\x2C\n        writable: false\x2C\n        configurable: true\x2C\n      }\x2C\n      name: {\n        __proto__: null\x2C\n        value: 'SystemError'\x2C\n        enumerable: false\x2C\n        writable: true\x2C\n        configurable: true\x2C\n      }\x2C\n      message: {\n        __proto__: null\x2C\n        value: message\x2C\n        enumerable: false\x2C\n        writable: true\x2C\n        configurable: true\x2C\n      }\x2C\n      info: {\n        __proto__: null\x2C\n        value: context\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n        writable: false\x2C\n      }\x2C\n      errno: {\n        __proto__: null\x2C\n        get() {\n          return context.errno;\n        }\x2C\n        set: (value) => {\n          context.errno = value;\n        }\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n      }\x2C\n      syscall: {\n        __proto__: null\x2C\n        get() {\n          return context.syscall;\n        }\x2C\n        set: (value) => {\n          context.syscall = value;\n        }\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n      }\x2C\n    });\n\n    if (context.path !== undefined) {\n      // TODO(BridgeAR): Investigate why and when the `.toString()` was\n      // introduced. The `path` and `dest` properties in the context seem to\n      // always be of type string. We should probably just remove the\n      // `.toString()` and `Buffer.from()` operations and set the value on the\n      // context as the user did.\n      ObjectDefineProperty(this\x2C 'path'\x2C {\n        __proto__: null\x2C\n        get() {\n          return context.path != null ?\n            context.path.toString() : context.path;\n        }\x2C\n        set: (value) => {\n          context.path = value ?\n            lazyBuffer().from(value.toString()) : undefined;\n        }\x2C\n        enumerable: true\x2C\n        configurable: true\n      });\n    }\n\n    if (context.dest !== undefined) {\n      ObjectDefineProperty(this\x2C 'dest'\x2C {\n        __proto__: null\x2C\n        get() {\n          return context.dest != null ?\n            context.dest.toString() : context.dest;\n        }\x2C\n        set: (value) => {\n          context.dest = value ?\n            lazyBuffer().from(value.toString()) : undefined;\n        }\x2C\n        enumerable: true\x2C\n        configurable: true\n      });\n    }\n  }\n\n  toString() {\n    return `${this.name} [${this.code}]: ${this.message}`;\n  }\n\n  [SymbolFor('nodejs.util.inspect.custom')](recurseTimes\x2C ctx) {\n    return lazyInternalUtilInspect().inspect(this\x2C {\n      ...ctx\x2C\n      getters: true\x2C\n      customInspect: false\n    });\n  }\n}\n\nfunction makeSystemErrorWithCode(key) {\n  return class NodeError extends SystemError {\n    constructor(ctx) {\n      super(key\x2C ctx);\n    }\n  };\n}\n\nfunction makeNodeErrorWithCode(Base\x2C key) {\n  return function NodeError(...args) {\n    const limit = Error.stackTraceLimit;\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\n    const error = new Base();\n    // Reset the limit and setting the name property.\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = limit;\n    const message = getMessage(key\x2C args\x2C error);\n    ObjectDefineProperties(error\x2C {\n      [kIsNodeError]: {\n        __proto__: null\x2C\n        value: true\x2C\n        enumerable: false\x2C\n        writable: false\x2C\n        configurable: true\x2C\n      }\x2C\n      message: {\n        __proto__: null\x2C\n        value: message\x2C\n        enumerable: false\x2C\n        writable: true\x2C\n        configurable: true\x2C\n      }\x2C\n      toString: {\n        __proto__: null\x2C\n        value() {\n          return `${this.name} [${key}]: ${this.message}`;\n        }\x2C\n        enumerable: false\x2C\n        writable: true\x2C\n        configurable: true\x2C\n      }\x2C\n    });\n    captureLargerStackTrace(error);\n    error.code = key;\n    return error;\n  };\n}\n\n/**\n * This function removes unnecessary frames from Node.js core errors.\n * @template {(...args: unknown[]) => unknown} T\n * @param {T} fn\n * @returns {T}\n */\nfunction hideStackFrames(fn) {\n  // We rename the functions that will be hidden to cut off the stacktrace\n  // at the outermost one\n  const hidden = nodeInternalPrefix + fn.name;\n  ObjectDefineProperty(fn\x2C 'name'\x2C { __proto__: null\x2C value: hidden });\n  return fn;\n}\n\n// Utility function for registering the error codes. Only used here. Exported\n// *only* to allow for testing.\nfunction E(sym\x2C val\x2C def\x2C ...otherClasses) {\n  // Special case for SystemError that formats the error message differently\n  // The SystemErrors only have SystemError as their base classes.\n  messages.set(sym\x2C val);\n  if (def === SystemError) {\n    def = makeSystemErrorWithCode(sym);\n  } else {\n    def = makeNodeErrorWithCode(def\x2C sym);\n  }\n\n  if (otherClasses.length !== 0) {\n    otherClasses.forEach((clazz) => {\n      def[clazz.name] = makeNodeErrorWithCode(clazz\x2C sym);\n    });\n  }\n  codes[sym] = def;\n}\n\nfunction getMessage(key\x2C args\x2C self) {\n  const msg = messages.get(key);\n\n  assert ??= require('internal/assert');\n\n  if (typeof msg === 'function') {\n    assert(\n      msg.length <= args.length\x2C // Default options do not count.\n      `Code: ${key}; The provided arguments length (${args.length}) does not ` +\n        `match the required ones (${msg.length}).`\n    );\n    return ReflectApply(msg\x2C self\x2C args);\n  }\n\n  const regex = /%[dfijoOs]/g;\n  let expectedLength = 0;\n  while (RegExpPrototypeExec(regex\x2C msg) !== null) expectedLength++;\n  assert(\n    expectedLength === args.length\x2C\n    `Code: ${key}; The provided arguments length (${args.length}) does not ` +\n      `match the required ones (${expectedLength}).`\n  );\n  if (args.length === 0)\n    return msg;\n\n  ArrayPrototypeUnshift(args\x2C msg);\n  return ReflectApply(lazyInternalUtilInspect().format\x2C null\x2C args);\n}\n\nlet uvBinding;\n\nfunction lazyUv() {\n  uvBinding ??= internalBinding('uv');\n  return uvBinding;\n}\n\nconst uvUnmappedError = ['UNKNOWN'\x2C 'unknown error'];\n\nfunction uvErrmapGet(name) {\n  uvBinding = lazyUv();\n  uvBinding.errmap ??= uvBinding.getErrorMap();\n  return MapPrototypeGet(uvBinding.errmap\x2C name);\n}\n\nconst captureLargerStackTrace = hideStackFrames(\n  function captureLargerStackTrace(err) {\n    const stackTraceLimitIsWritable = isErrorStackTraceLimitWritable();\n    if (stackTraceLimitIsWritable) {\n      userStackTraceLimit = Error.stackTraceLimit;\n      Error.stackTraceLimit = Infinity;\n    }\n    ErrorCaptureStackTrace(err);\n    // Reset the limit\n    if (stackTraceLimitIsWritable) Error.stackTraceLimit = userStackTraceLimit;\n\n    return err;\n  });\n\n/**\n * This creates an error compatible with errors produced in the C++\n * function UVException using a context object with data assembled in C++.\n * The goal is to migrate them to ERR_* errors later when compatibility is\n * not a concern.\n *\n * @param {object} ctx\n * @returns {Error}\n */\nconst uvException = hideStackFrames(function uvException(ctx) {\n  const { 0: code\x2C 1: uvmsg } = uvErrmapGet(ctx.errno) || uvUnmappedError;\n  let message = `${code}: ${ctx.message || uvmsg}\x2C ${ctx.syscall}`;\n\n  let path;\n  let dest;\n  if (ctx.path) {\n    path = ctx.path.toString();\n    message += ` '${path}'`;\n  }\n  if (ctx.dest) {\n    dest = ctx.dest.toString();\n    message += ` -> '${dest}'`;\n  }\n\n  // Reducing the limit improves the performance significantly. We do not lose\n  // the stack frames due to the `captureStackTrace()` function that is called\n  // later.\n  const tmpLimit = Error.stackTraceLimit;\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\n  // Pass the message to the constructor instead of setting it on the object\n  // to make sure it is the same as the one created in C++\n  // eslint-disable-next-line no-restricted-syntax\n  const err = new Error(message);\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\n\n  for (const prop of ObjectKeys(ctx)) {\n    if (prop === 'message' || prop === 'path' || prop === 'dest') {\n      continue;\n    }\n    err[prop] = ctx[prop];\n  }\n\n  err.code = code;\n  if (path) {\n    err.path = path;\n  }\n  if (dest) {\n    err.dest = dest;\n  }\n\n  return captureLargerStackTrace(err);\n});\n\n/**\n * This creates an error compatible with errors produced in the C++\n * This function should replace the deprecated\n * `exceptionWithHostPort()` function.\n *\n * @param {number} err - A libuv error number\n * @param {string} syscall\n * @param {string} address\n * @param {number} [port]\n * @returns {Error}\n */\nconst uvExceptionWithHostPort = hideStackFrames(\n  function uvExceptionWithHostPort(err\x2C syscall\x2C address\x2C port) {\n    const { 0: code\x2C 1: uvmsg } = uvErrmapGet(err) || uvUnmappedError;\n    const message = `${syscall} ${code}: ${uvmsg}`;\n    let details = '';\n\n    if (port && port > 0) {\n      details = ` ${address}:${port}`;\n    } else if (address) {\n      details = ` ${address}`;\n    }\n\n    // Reducing the limit improves the performance significantly. We do not\n    // lose the stack frames due to the `captureStackTrace()` function that\n    // is called later.\n    const tmpLimit = Error.stackTraceLimit;\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\n    // eslint-disable-next-line no-restricted-syntax\n    const ex = new Error(`${message}${details}`);\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\n    ex.code = code;\n    ex.errno = err;\n    ex.syscall = syscall;\n    ex.address = address;\n    if (port) {\n      ex.port = port;\n    }\n\n    return captureLargerStackTrace(ex);\n  });\n\n/**\n * This used to be util._errnoException().\n *\n * @param {number} err - A libuv error number\n * @param {string} syscall\n * @param {string} [original]\n * @returns {Error}\n */\nconst errnoException = hideStackFrames(\n  function errnoException(err\x2C syscall\x2C original) {\n    // TODO(joyeecheung): We have to use the type-checked\n    // getSystemErrorName(err) to guard against invalid arguments from users.\n    // This can be replaced with [ code ] = errmap.get(err) when this method\n    // is no longer exposed to user land.\n    util ??= require('util');\n    const code = util.getSystemErrorName(err);\n    const message = original ?\n      `${syscall} ${code} ${original}` : `${syscall} ${code}`;\n\n    const tmpLimit = Error.stackTraceLimit;\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\n    // eslint-disable-next-line no-restricted-syntax\n    const ex = new Error(message);\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\n    ex.errno = err;\n    ex.code = code;\n    ex.syscall = syscall;\n\n    return captureLargerStackTrace(ex);\n  });\n\n/**\n * Deprecated\x2C new function is `uvExceptionWithHostPort()`\n * New function added the error description directly\n * from C++. this method for backwards compatibility\n * @param {number} err - A libuv error number\n * @param {string} syscall\n * @param {string} address\n * @param {number} [port]\n * @param {string} [additional]\n * @returns {Error}\n */\nconst exceptionWithHostPort = hideStackFrames(\n  function exceptionWithHostPort(err\x2C syscall\x2C address\x2C port\x2C additional) {\n    // TODO(joyeecheung): We have to use the type-checked\n    // getSystemErrorName(err) to guard against invalid arguments from users.\n    // This can be replaced with [ code ] = errmap.get(err) when this method\n    // is no longer exposed to user land.\n    util ??= require('util');\n    const code = util.getSystemErrorName(err);\n    let details = '';\n    if (port && port > 0) {\n      details = ` ${address}:${port}`;\n    } else if (address) {\n      details = ` ${address}`;\n    }\n    if (additional) {\n      details += ` - Local (${additional})`;\n    }\n\n    // Reducing the limit improves the performance significantly. We do not\n    // lose the stack frames due to the `captureStackTrace()` function that\n    // is called later.\n    const tmpLimit = Error.stackTraceLimit;\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\n    // eslint-disable-next-line no-restricted-syntax\n    const ex = new Error(`${syscall} ${code}${details}`);\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\n    ex.errno = err;\n    ex.code = code;\n    ex.syscall = syscall;\n    ex.address = address;\n    if (port) {\n      ex.port = port;\n    }\n\n    return captureLargerStackTrace(ex);\n  });\n\n/**\n * @param {number|string} code - A libuv error number or a c-ares error code\n * @param {string} syscall\n * @param {string} [hostname]\n * @returns {Error}\n */\nconst dnsException = hideStackFrames(function(code\x2C syscall\x2C hostname) {\n  let errno;\n  // If `code` is of type number\x2C it is a libuv error number\x2C else it is a\n  // c-ares error code.\n  // TODO(joyeecheung): translate c-ares error codes into numeric ones and\n  // make them available in a property that's not error.errno (since they\n  // can be in conflict with libuv error codes). Also make sure\n  // util.getSystemErrorName() can understand them when an being informed that\n  // the number is a c-ares error code.\n  if (typeof code === 'number') {\n    errno = code;\n    // ENOTFOUND is not a proper POSIX error\x2C but this error has been in place\n    // long enough that it's not practical to remove it.\n    if (code === lazyUv().UV_EAI_NODATA || code === lazyUv().UV_EAI_NONAME) {\n      code = 'ENOTFOUND'; // Fabricated error name.\n    } else {\n      code = lazyInternalUtil().getSystemErrorName(code);\n    }\n  }\n  const message = `${syscall} ${code}${hostname ? ` ${hostname}` : ''}`;\n  // Reducing the limit improves the performance significantly. We do not lose\n  // the stack frames due to the `captureStackTrace()` function that is called\n  // later.\n  const tmpLimit = Error.stackTraceLimit;\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\n  // eslint-disable-next-line no-restricted-syntax\n  const ex = new Error(message);\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\n  ex.errno = errno;\n  ex.code = code;\n  ex.syscall = syscall;\n  if (hostname) {\n    ex.hostname = hostname;\n  }\n\n  return captureLargerStackTrace(ex);\n});\n\nfunction connResetException(msg) {\n  // eslint-disable-next-line no-restricted-syntax\n  const ex = new Error(msg);\n  ex.code = 'ECONNRESET';\n  return ex;\n}\n\nlet maxStack_ErrorName;\nlet maxStack_ErrorMessage;\n/**\n * Returns true if `err.name` and `err.message` are equal to engine-specific\n * values indicating max call stack size has been exceeded.\n * "Maximum call stack size exceeded" in V8.\n *\n * @param {Error} err\n * @returns {boolean}\n */\nfunction isStackOverflowError(err) {\n  if (maxStack_ErrorMessage === undefined) {\n    try {\n      function overflowStack() { overflowStack(); }\n      overflowStack();\n    } catch (err) {\n      maxStack_ErrorMessage = err.message;\n      maxStack_ErrorName = err.name;\n    }\n  }\n\n  return err && err.name === maxStack_ErrorName &&\n         err.message === maxStack_ErrorMessage;\n}\n\n// Only use this for integers! Decimal numbers do not work with this function.\nfunction addNumericalSeparator(val) {\n  let res = '';\n  let i = val.length;\n  const start = val[0] === '-' ? 1 : 0;\n  for (; i >= start + 4; i -= 3) {\n    res = `_${StringPrototypeSlice(val\x2C i - 3\x2C i)}${res}`;\n  }\n  return `${StringPrototypeSlice(val\x2C 0\x2C i)}${res}`;\n}\n\n// Used to enhance the stack that will be picked up by the inspector\nconst kEnhanceStackBeforeInspector = Symbol('kEnhanceStackBeforeInspector');\n\n// These are supposed to be called only on fatal exceptions before\n// the process exits.\nconst fatalExceptionStackEnhancers = {\n  beforeInspector(error) {\n    if (typeof error[kEnhanceStackBeforeInspector] !== 'function') {\n      return error.stack;\n    }\n\n    try {\n      // Set the error.stack here so it gets picked up by the\n      // inspector.\n      error.stack = error[kEnhanceStackBeforeInspector]();\n    } catch {\n      // We are just enhancing the error. If it fails\x2C ignore it.\n    }\n    return error.stack;\n  }\x2C\n  afterInspector(error) {\n    const originalStack = error.stack;\n    let useColors = true;\n    // Some consoles do not convert ANSI escape sequences to colors\x2C\n    // rather display them directly to the stdout. On those consoles\x2C\n    // libuv emulates colors by intercepting stdout stream and calling\n    // corresponding Windows API functions for setting console colors.\n    // However\x2C fatal error are handled differently and we cannot easily\n    // highlight them. On Windows\x2C detecting whether a console supports\n    // ANSI escape sequences is not reliable.\n    if (process.platform === 'win32') {\n      const info = internalBinding('os').getOSInformation();\n      const ver = ArrayPrototypeMap(StringPrototypeSplit(info[2]\x2C '.')\x2C\n                                    Number);\n      if (ver[0] !== 10 || ver[2] < 14393) {\n        useColors = false;\n      }\n    }\n    const {\n      inspect\x2C\n      inspectDefaultOptions: {\n        colors: defaultColors\n      }\n    } = lazyInternalUtilInspect();\n    const colors = useColors &&\n                   ((internalBinding('util').guessHandleType(2) === 'TTY' &&\n                   require('internal/tty').hasColors()) ||\n                   defaultColors);\n    try {\n      return inspect(error\x2C {\n        colors\x2C\n        customInspect: false\x2C\n        depth: MathMax(inspect.defaultOptions.depth\x2C 5)\n      });\n    } catch {\n      return originalStack;\n    }\n  }\n};\n\n// Ensures the printed error line is from user code.\nlet _kArrowMessagePrivateSymbol\x2C _setHiddenValue;\nfunction setArrowMessage(err\x2C arrowMessage) {\n  if (!_kArrowMessagePrivateSymbol) {\n    ({\n      arrow_message_private_symbol: _kArrowMessagePrivateSymbol\x2C\n      setHiddenValue: _setHiddenValue\x2C\n    } = internalBinding('util'));\n  }\n  _setHiddenValue(err\x2C _kArrowMessagePrivateSymbol\x2C arrowMessage);\n}\n\n// Hide stack lines before the first user code line.\nfunction hideInternalStackFrames(error) {\n  overrideStackTrace.set(error\x2C (error\x2C stackFrames) => {\n    let frames = stackFrames;\n    if (typeof stackFrames === 'object') {\n      frames = ArrayPrototypeFilter(\n        stackFrames\x2C\n        (frm) => !StringPrototypeStartsWith(frm.getFileName() || ''\x2C\n                                            'node:internal')\n      );\n    }\n    ArrayPrototypeUnshift(frames\x2C error);\n    return ArrayPrototypeJoin(frames\x2C '\\n    at ');\n  });\n}\n\n// Node uses an AbortError that isn't exactly the same as the DOMException\n// to make usage of the error in userland and readable-stream easier.\n// It is a regular error with `.code` and `.name`.\nclass AbortError extends Error {\n  constructor(message = 'The operation was aborted'\x2C options = undefined) {\n    if (options !== undefined && typeof options !== 'object') {\n      throw new codes.ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\n    }\n    super(message\x2C options);\n    this.code = 'ABORT_ERR';\n    this.name = 'AbortError';\n  }\n}\n\n/**\n * This creates a generic Node.js error.\n *\n * @param {string} message The error message.\n * @param {object} errorProperties Object with additional properties to be added to the error.\n * @returns {Error}\n */\nconst genericNodeError = hideStackFrames(function genericNodeError(message\x2C errorProperties) {\n  // eslint-disable-next-line no-restricted-syntax\n  const err = new Error(message);\n  ObjectAssign(err\x2C errorProperties);\n  return err;\n});\n\n/**\n * Determine the specific type of a value for type-mismatch errors.\n * @param {*} value\n * @returns {string}\n */\nfunction determineSpecificType(value) {\n  if (value == null) {\n    return '' + value;\n  }\n  if (typeof value === 'function' && value.name) {\n    return `function ${value.name}`;\n  }\n  if (typeof value === 'object') {\n    if (value.constructor?.name) {\n      return `an instance of ${value.constructor.name}`;\n    }\n    return `${lazyInternalUtilInspect().inspect(value\x2C { depth: -1 })}`;\n  }\n  let inspected = lazyInternalUtilInspect()\n    .inspect(value\x2C { colors: false });\n  if (inspected.length > 28) { inspected = `${StringPrototypeSlice(inspected\x2C 0\x2C 25)}...`; }\n\n  return `type ${typeof value} (${inspected})`;\n}\n\nmodule.exports = {\n  AbortError\x2C\n  aggregateTwoErrors\x2C\n  captureLargerStackTrace\x2C\n  codes\x2C\n  connResetException\x2C\n  dnsException\x2C\n  // This is exported only to facilitate testing.\n  determineSpecificType\x2C\n  E\x2C\n  errnoException\x2C\n  exceptionWithHostPort\x2C\n  fatalExceptionStackEnhancers\x2C\n  genericNodeError\x2C\n  getMessage\x2C\n  hideInternalStackFrames\x2C\n  hideStackFrames\x2C\n  inspectWithNoCustomRetry\x2C\n  isErrorStackTraceLimitWritable\x2C\n  isStackOverflowError\x2C\n  kEnhanceStackBeforeInspector\x2C\n  kIsNodeError\x2C\n  kNoOverride\x2C\n  maybeOverridePrepareStackTrace\x2C\n  overrideStackTrace\x2C\n  prepareStackTrace\x2C\n  setArrowMessage\x2C\n  SystemError\x2C\n  uvErrmapGet\x2C\n  uvException\x2C\n  uvExceptionWithHostPort\x2C\n};\n\n// To declare an error message\x2C use the E(sym\x2C val\x2C def) function above. The sym\n// must be an upper case string. The val can be either a function or a string.\n// The def must be an error class.\n// The return value of the function must be a string.\n// Examples:\n// E('EXAMPLE_KEY1'\x2C 'This is the error value'\x2C Error);\n// E('EXAMPLE_KEY2'\x2C (a\x2C b) => return `${a} ${b}`\x2C RangeError);\n//\n// Once an error code has been assigned\x2C the code itself MUST NOT change and\n// any given error code must never be reused to identify a different error.\n//\n// Any error code added here should also be added to the documentation\n//\n// Note: Please try to keep these in alphabetical order\n//\n// Note: Node.js specific errors must begin with the prefix ERR_\n\nE('ERR_AMBIGUOUS_ARGUMENT'\x2C 'The "%s" argument is ambiguous. %s'\x2C TypeError);\nE('ERR_ARG_NOT_ITERABLE'\x2C '%s must be iterable'\x2C TypeError);\nE('ERR_ASSERTION'\x2C '%s'\x2C Error);\nE('ERR_ASSERT_SNAPSHOT_NOT_SUPPORTED'\x2C\n  'Snapshot is not supported in this context '\x2C TypeError);\nE('ERR_ASYNC_CALLBACK'\x2C '%s must be a function'\x2C TypeError);\nE('ERR_ASYNC_TYPE'\x2C 'Invalid name for async "type": %s'\x2C TypeError);\nE('ERR_BROTLI_INVALID_PARAM'\x2C '%s is not a valid Brotli parameter'\x2C RangeError);\nE('ERR_BUFFER_OUT_OF_BOUNDS'\x2C\n  // Using a default argument here is important so the argument is not counted\n  // towards `Function#length`.\n  (name = undefined) => {\n    if (name) {\n      return `"${name}" is outside of buffer bounds`;\n    }\n    return 'Attempt to access memory outside buffer bounds';\n  }\x2C RangeError);\nE('ERR_BUFFER_TOO_LARGE'\x2C\n  'Cannot create a Buffer larger than %s bytes'\x2C\n  RangeError);\nE('ERR_CANNOT_WATCH_SIGINT'\x2C 'Cannot watch for SIGINT signals'\x2C Error);\nE('ERR_CHILD_CLOSED_BEFORE_REPLY'\x2C\n  'Child closed before reply received'\x2C Error);\nE('ERR_CHILD_PROCESS_IPC_REQUIRED'\x2C\n  "Forked processes must have an IPC channel\x2C missing value 'ipc' in %s"\x2C\n  Error);\nE('ERR_CHILD_PROCESS_STDIO_MAXBUFFER'\x2C '%s maxBuffer length exceeded'\x2C\n  RangeError);\nE('ERR_CONSOLE_WRITABLE_STREAM'\x2C\n  'Console expects a writable stream instance for %s'\x2C TypeError);\nE('ERR_CONTEXT_NOT_INITIALIZED'\x2C 'context used is not initialized'\x2C Error);\nE('ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED'\x2C\n  'Custom engines not supported by this OpenSSL'\x2C Error);\nE('ERR_CRYPTO_ECDH_INVALID_FORMAT'\x2C 'Invalid ECDH format: %s'\x2C TypeError);\nE('ERR_CRYPTO_ECDH_INVALID_PUBLIC_KEY'\x2C\n  'Public key is not valid for specified curve'\x2C Error);\nE('ERR_CRYPTO_ENGINE_UNKNOWN'\x2C 'Engine "%s" was not found'\x2C Error);\nE('ERR_CRYPTO_FIPS_FORCED'\x2C\n  'Cannot set FIPS mode\x2C it was forced with --force-fips at startup.'\x2C Error);\nE('ERR_CRYPTO_FIPS_UNAVAILABLE'\x2C 'Cannot set FIPS mode in a non-FIPS build.'\x2C\n  Error);\nE('ERR_CRYPTO_HASH_FINALIZED'\x2C 'Digest already called'\x2C Error);\nE('ERR_CRYPTO_HASH_UPDATE_FAILED'\x2C 'Hash update failed'\x2C Error);\nE('ERR_CRYPTO_INCOMPATIBLE_KEY'\x2C 'Incompatible %s: %s'\x2C Error);\nE('ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS'\x2C 'The selected key encoding %s %s.'\x2C\n  Error);\nE('ERR_CRYPTO_INVALID_DIGEST'\x2C 'Invalid digest: %s'\x2C TypeError);\nE('ERR_CRYPTO_INVALID_JWK'\x2C 'Invalid JWK data'\x2C TypeError);\nE('ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE'\x2C\n  'Invalid key object type %s\x2C expected %s.'\x2C TypeError);\nE('ERR_CRYPTO_INVALID_STATE'\x2C 'Invalid state for operation %s'\x2C Error);\nE('ERR_CRYPTO_PBKDF2_ERROR'\x2C 'PBKDF2 error'\x2C Error);\nE('ERR_CRYPTO_SCRYPT_INVALID_PARAMETER'\x2C 'Invalid scrypt parameter'\x2C Error);\nE('ERR_CRYPTO_SCRYPT_NOT_SUPPORTED'\x2C 'Scrypt algorithm not supported'\x2C Error);\n// Switch to TypeError. The current implementation does not seem right.\nE('ERR_CRYPTO_SIGN_KEY_REQUIRED'\x2C 'No key provided to sign'\x2C Error);\nE('ERR_DEBUGGER_ERROR'\x2C '%s'\x2C Error);\nE('ERR_DEBUGGER_STARTUP_ERROR'\x2C '%s'\x2C Error);\nE('ERR_DIR_CLOSED'\x2C 'Directory handle was closed'\x2C Error);\nE('ERR_DIR_CONCURRENT_OPERATION'\x2C\n  'Cannot do synchronous work on directory handle with concurrent ' +\n  'asynchronous operations'\x2C Error);\nE('ERR_DNS_SET_SERVERS_FAILED'\x2C 'c-ares failed to set servers: "%s" [%s]'\x2C\n  Error);\nE('ERR_DOMAIN_CALLBACK_NOT_AVAILABLE'\x2C\n  'A callback was registered through ' +\n     'process.setUncaughtExceptionCaptureCallback()\x2C which is mutually ' +\n     'exclusive with using the `domain` module'\x2C\n  Error);\nE('ERR_DOMAIN_CANNOT_SET_UNCAUGHT_EXCEPTION_CAPTURE'\x2C\n  'The `domain` module is in use\x2C which is mutually exclusive with calling ' +\n     'process.setUncaughtExceptionCaptureCallback()'\x2C\n  Error);\nE('ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION'\x2C\n  'Deserialize main function is already configured.'\x2C Error);\nE('ERR_ENCODING_INVALID_ENCODED_DATA'\x2C function(encoding\x2C ret) {\n  this.errno = ret;\n  return `The encoded data was not valid for encoding ${encoding}`;\n}\x2C TypeError);\nE('ERR_ENCODING_NOT_SUPPORTED'\x2C 'The "%s" encoding is not supported'\x2C\n  RangeError);\nE('ERR_EVAL_ESM_CANNOT_PRINT'\x2C '--print cannot be used with ESM input'\x2C Error);\nE('ERR_EVENT_RECURSION'\x2C 'The event "%s" is already being dispatched'\x2C Error);\nE('ERR_FALSY_VALUE_REJECTION'\x2C function(reason) {\n  this.reason = reason;\n  return 'Promise was rejected with falsy value';\n}\x2C Error);\nE('ERR_FEATURE_UNAVAILABLE_ON_PLATFORM'\x2C\n  'The feature %s is unavailable on the current platform' +\n  '\x2C which is being used to run Node.js'\x2C\n  TypeError);\nE('ERR_FS_CP_DIR_TO_NON_DIR'\x2C\n  'Cannot overwrite directory with non-directory'\x2C SystemError);\nE('ERR_FS_CP_EEXIST'\x2C 'Target already exists'\x2C SystemError);\nE('ERR_FS_CP_EINVAL'\x2C 'Invalid src or dest'\x2C SystemError);\nE('ERR_FS_CP_FIFO_PIPE'\x2C 'Cannot copy a FIFO pipe'\x2C SystemError);\nE('ERR_FS_CP_NON_DIR_TO_DIR'\x2C\n  'Cannot overwrite non-directory with directory'\x2C SystemError);\nE('ERR_FS_CP_SOCKET'\x2C 'Cannot copy a socket file'\x2C SystemError);\nE('ERR_FS_CP_SYMLINK_TO_SUBDIRECTORY'\x2C\n  'Cannot overwrite symlink in subdirectory of self'\x2C SystemError);\nE('ERR_FS_CP_UNKNOWN'\x2C 'Cannot copy an unknown file type'\x2C SystemError);\nE('ERR_FS_EISDIR'\x2C 'Path is a directory'\x2C SystemError);\nE('ERR_FS_FILE_TOO_LARGE'\x2C 'File size (%s) is greater than 2 GiB'\x2C RangeError);\nE('ERR_FS_INVALID_SYMLINK_TYPE'\x2C\n  'Symlink type must be one of "dir"\x2C "file"\x2C or "junction". Received "%s"'\x2C\n  Error); // Switch to TypeError. The current implementation does not seem right\nE('ERR_HTTP2_ALTSVC_INVALID_ORIGIN'\x2C\n  'HTTP/2 ALTSVC frames require a valid origin'\x2C TypeError);\nE('ERR_HTTP2_ALTSVC_LENGTH'\x2C\n  'HTTP/2 ALTSVC frames are limited to 16382 bytes'\x2C TypeError);\nE('ERR_HTTP2_CONNECT_AUTHORITY'\x2C\n  ':authority header is required for CONNECT requests'\x2C Error);\nE('ERR_HTTP2_CONNECT_PATH'\x2C\n  'The :path header is forbidden for CONNECT requests'\x2C Error);\nE('ERR_HTTP2_CONNECT_SCHEME'\x2C\n  'The :scheme header is forbidden for CONNECT requests'\x2C Error);\nE('ERR_HTTP2_GOAWAY_SESSION'\x2C\n  'New streams cannot be created after receiving a GOAWAY'\x2C Error);\nE('ERR_HTTP2_HEADERS_AFTER_RESPOND'\x2C\n  'Cannot specify additional headers after response initiated'\x2C Error);\nE('ERR_HTTP2_HEADERS_SENT'\x2C 'Response has already been initiated.'\x2C Error);\nE('ERR_HTTP2_HEADER_SINGLE_VALUE'\x2C\n  'Header field "%s" must only have a single value'\x2C TypeError);\nE('ERR_HTTP2_INFO_STATUS_NOT_ALLOWED'\x2C\n  'Informational status codes cannot be used'\x2C RangeError);\nE('ERR_HTTP2_INVALID_CONNECTION_HEADERS'\x2C\n  'HTTP/1 Connection specific headers are forbidden: "%s"'\x2C TypeError);\nE('ERR_HTTP2_INVALID_HEADER_VALUE'\x2C\n  'Invalid value "%s" for header "%s"'\x2C TypeError);\nE('ERR_HTTP2_INVALID_INFO_STATUS'\x2C\n  'Invalid informational status code: %s'\x2C RangeError);\nE('ERR_HTTP2_INVALID_ORIGIN'\x2C\n  'HTTP/2 ORIGIN frames require a valid origin'\x2C TypeError);\nE('ERR_HTTP2_INVALID_PACKED_SETTINGS_LENGTH'\x2C\n  'Packed settings length must be a multiple of six'\x2C RangeError);\nE('ERR_HTTP2_INVALID_PSEUDOHEADER'\x2C\n  '"%s" is an invalid pseudoheader or is used incorrectly'\x2C TypeError);\nE('ERR_HTTP2_INVALID_SESSION'\x2C 'The session has been destroyed'\x2C Error);\nE('ERR_HTTP2_INVALID_SETTING_VALUE'\x2C\n  // Using default arguments here is important so the arguments are not counted\n  // towards `Function#length`.\n  function(name\x2C actual\x2C min = undefined\x2C max = undefined) {\n    this.actual = actual;\n    if (min !== undefined) {\n      this.min = min;\n      this.max = max;\n    }\n    return `Invalid value for setting "${name}": ${actual}`;\n  }\x2C TypeError\x2C RangeError);\nE('ERR_HTTP2_INVALID_STREAM'\x2C 'The stream has been destroyed'\x2C Error);\nE('ERR_HTTP2_MAX_PENDING_SETTINGS_ACK'\x2C\n  'Maximum number of pending settings acknowledgements'\x2C Error);\nE('ERR_HTTP2_NESTED_PUSH'\x2C\n  'A push stream cannot initiate another push stream.'\x2C Error);\nE('ERR_HTTP2_NO_MEM'\x2C 'Out of memory'\x2C Error);\nE('ERR_HTTP2_NO_SOCKET_MANIPULATION'\x2C\n  'HTTP/2 sockets should not be directly manipulated (e.g. read and written)'\x2C\n  Error);\nE('ERR_HTTP2_ORIGIN_LENGTH'\x2C\n  'HTTP/2 ORIGIN frames are limited to 16382 bytes'\x2C TypeError);\nE('ERR_HTTP2_OUT_OF_STREAMS'\x2C\n  'No stream ID is available because maximum stream ID has been reached'\x2C\n  Error);\nE('ERR_HTTP2_PAYLOAD_FORBIDDEN'\x2C\n  'Responses with %s status must not have a payload'\x2C Error);\nE('ERR_HTTP2_PING_CANCEL'\x2C 'HTTP2 ping cancelled'\x2C Error);\nE('ERR_HTTP2_PING_LENGTH'\x2C 'HTTP2 ping payload must be 8 bytes'\x2C RangeError);\nE('ERR_HTTP2_PSEUDOHEADER_NOT_ALLOWED'\x2C\n  'Cannot set HTTP/2 pseudo-headers'\x2C TypeError);\nE('ERR_HTTP2_PUSH_DISABLED'\x2C 'HTTP/2 client has disabled push streams'\x2C Error);\nE('ERR_HTTP2_SEND_FILE'\x2C 'Directories cannot be sent'\x2C Error);\nE('ERR_HTTP2_SEND_FILE_NOSEEK'\x2C\n  'Offset or length can only be specified for regular files'\x2C Error);\nE('ERR_HTTP2_SESSION_ERROR'\x2C 'Session closed with error code %s'\x2C Error);\nE('ERR_HTTP2_SETTINGS_CANCEL'\x2C 'HTTP2 session settings canceled'\x2C Error);\nE('ERR_HTTP2_SOCKET_BOUND'\x2C\n  'The socket is already bound to an Http2Session'\x2C Error);\nE('ERR_HTTP2_SOCKET_UNBOUND'\x2C\n  'The socket has been disconnected from the Http2Session'\x2C Error);\nE('ERR_HTTP2_STATUS_101'\x2C\n  'HTTP status code 101 (Switching Protocols) is forbidden in HTTP/2'\x2C Error);\nE('ERR_HTTP2_STATUS_INVALID'\x2C 'Invalid status code: %s'\x2C RangeError);\nE('ERR_HTTP2_STREAM_CANCEL'\x2C function(error) {\n  let msg = 'The pending stream has been canceled';\n  if (error) {\n    this.cause = error;\n    if (typeof error.message === 'string')\n      msg += ` (caused by: ${error.message})`;\n  }\n  return msg;\n}\x2C Error);\nE('ERR_HTTP2_STREAM_ERROR'\x2C 'Stream closed with error code %s'\x2C Error);\nE('ERR_HTTP2_STREAM_SELF_DEPENDENCY'\x2C\n  'A stream cannot depend on itself'\x2C Error);\nE('ERR_HTTP2_TOO_MANY_INVALID_FRAMES'\x2C 'Too many invalid HTTP/2 frames'\x2C Error);\nE('ERR_HTTP2_TRAILERS_ALREADY_SENT'\x2C\n  'Trailing headers have already been sent'\x2C Error);\nE('ERR_HTTP2_TRAILERS_NOT_READY'\x2C\n  'Trailing headers cannot be sent until after the wantTrailers event is ' +\n  'emitted'\x2C Error);\nE('ERR_HTTP2_UNSUPPORTED_PROTOCOL'\x2C 'protocol "%s" is unsupported.'\x2C Error);\nE('ERR_HTTP_HEADERS_SENT'\x2C\n  'Cannot %s headers after they are sent to the client'\x2C Error);\nE('ERR_HTTP_INVALID_HEADER_VALUE'\x2C\n  'Invalid value "%s" for header "%s"'\x2C TypeError);\nE('ERR_HTTP_INVALID_STATUS_CODE'\x2C 'Invalid status code: %s'\x2C RangeError);\nE('ERR_HTTP_REQUEST_TIMEOUT'\x2C 'Request timeout'\x2C Error);\nE('ERR_HTTP_SOCKET_ENCODING'\x2C\n  'Changing the socket encoding is not allowed per RFC7230 Section 3.'\x2C Error);\nE('ERR_HTTP_TRAILER_INVALID'\x2C\n  'Trailers are invalid with this transfer encoding'\x2C Error);\nE('ERR_ILLEGAL_CONSTRUCTOR'\x2C 'Illegal constructor'\x2C TypeError);\nE('ERR_IMPORT_ASSERTION_TYPE_FAILED'\x2C\n  'Module "%s" is not of type "%s"'\x2C TypeError);\nE('ERR_IMPORT_ASSERTION_TYPE_MISSING'\x2C\n  'Module "%s" needs an import assertion of type "%s"'\x2C TypeError);\nE('ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED'\x2C\n  'Import assertion type "%s" is unsupported'\x2C TypeError);\nE('ERR_INCOMPATIBLE_OPTION_PAIR'\x2C\n  'Option "%s" cannot be used in combination with option "%s"'\x2C TypeError);\nE('ERR_INPUT_TYPE_NOT_ALLOWED'\x2C '--input-type can only be used with string ' +\n  'input via --eval\x2C --print\x2C or STDIN'\x2C Error);\nE('ERR_INSPECTOR_ALREADY_ACTIVATED'\x2C\n  'Inspector is already activated. Close it with inspector.close() ' +\n  'before activating it again.'\x2C\n  Error);\nE('ERR_INSPECTOR_ALREADY_CONNECTED'\x2C '%s is already connected'\x2C Error);\nE('ERR_INSPECTOR_CLOSED'\x2C 'Session was closed'\x2C Error);\nE('ERR_INSPECTOR_COMMAND'\x2C 'Inspector error %d: %s'\x2C Error);\nE('ERR_INSPECTOR_NOT_ACTIVE'\x2C 'Inspector is not active'\x2C Error);\nE('ERR_INSPECTOR_NOT_AVAILABLE'\x2C 'Inspector is not available'\x2C Error);\nE('ERR_INSPECTOR_NOT_CONNECTED'\x2C 'Session is not connected'\x2C Error);\nE('ERR_INSPECTOR_NOT_WORKER'\x2C 'Current thread is not a worker'\x2C Error);\nE('ERR_INTERNAL_ASSERTION'\x2C (message) => {\n  const suffix = 'This is caused by either a bug in Node.js ' +\n    'or incorrect usage of Node.js internals.\\n' +\n    'Please open an issue with this stack trace at ' +\n    'https://github.com/nodejs/node/issues\\n';\n  return message === undefined ? suffix : `${message}\\n${suffix}`;\n}\x2C Error);\nE('ERR_INVALID_ADDRESS_FAMILY'\x2C function(addressType\x2C host\x2C port) {\n  this.host = host;\n  this.port = port;\n  return `Invalid address family: ${addressType} ${host}:${port}`;\n}\x2C RangeError);\nE('ERR_INVALID_ARG_TYPE'\x2C\n  (name\x2C expected\x2C actual) => {\n    assert(typeof name === 'string'\x2C "'name' must be a string");\n    if (!ArrayIsArray(expected)) {\n      expected = [expected];\n    }\n\n    let msg = 'The ';\n    if (StringPrototypeEndsWith(name\x2C ' argument')) {\n      // For cases like 'first argument'\n      msg += `${name} `;\n    } else {\n      const type = StringPrototypeIncludes(name\x2C '.') ? 'property' : 'argument';\n      msg += `"${name}" ${type} `;\n    }\n    msg += 'must be ';\n\n    const types = [];\n    const instances = [];\n    const other = [];\n\n    for (const value of expected) {\n      assert(typeof value === 'string'\x2C\n             'All expected entries have to be of type string');\n      if (ArrayPrototypeIncludes(kTypes\x2C value)) {\n        ArrayPrototypePush(types\x2C StringPrototypeToLowerCase(value));\n      } else if (RegExpPrototypeExec(classRegExp\x2C value) !== null) {\n        ArrayPrototypePush(instances\x2C value);\n      } else {\n        assert(value !== 'object'\x2C\n               'The value "object" should be written as "Object"');\n        ArrayPrototypePush(other\x2C value);\n      }\n    }\n\n    // Special handle `object` in case other instances are allowed to outline\n    // the differences between each other.\n    if (instances.length > 0) {\n      const pos = ArrayPrototypeIndexOf(types\x2C 'object');\n      if (pos !== -1) {\n        ArrayPrototypeSplice(types\x2C pos\x2C 1);\n        ArrayPrototypePush(instances\x2C 'Object');\n      }\n    }\n\n    if (types.length > 0) {\n      if (types.length > 2) {\n        const last = ArrayPrototypePop(types);\n        msg += `one of type ${ArrayPrototypeJoin(types\x2C '\x2C ')}\x2C or ${last}`;\n      } else if (types.length === 2) {\n        msg += `one of type ${types[0]} or ${types[1]}`;\n      } else {\n        msg += `of type ${types[0]}`;\n      }\n      if (instances.length > 0 || other.length > 0)\n        msg += ' or ';\n    }\n\n    if (instances.length > 0) {\n      if (instances.length > 2) {\n        const last = ArrayPrototypePop(instances);\n        msg +=\n          `an instance of ${ArrayPrototypeJoin(instances\x2C '\x2C ')}\x2C or ${last}`;\n      } else {\n        msg += `an instance of ${instances[0]}`;\n        if (instances.length === 2) {\n          msg += ` or ${instances[1]}`;\n        }\n      }\n      if (other.length > 0)\n        msg += ' or ';\n    }\n\n    if (other.length > 0) {\n      if (other.length > 2) {\n        const last = ArrayPrototypePop(other);\n        msg += `one of ${ArrayPrototypeJoin(other\x2C '\x2C ')}\x2C or ${last}`;\n      } else if (other.length === 2) {\n        msg += `one of ${other[0]} or ${other[1]}`;\n      } else {\n        if (StringPrototypeToLowerCase(other[0]) !== other[0])\n          msg += 'an ';\n        msg += `${other[0]}`;\n      }\n    }\n\n    msg += `. Received ${determineSpecificType(actual)}`;\n\n    return msg;\n  }\x2C TypeError);\nE('ERR_INVALID_ARG_VALUE'\x2C (name\x2C value\x2C reason = 'is invalid') => {\n  let inspected = lazyInternalUtilInspect().inspect(value);\n  if (inspected.length > 128) {\n    inspected = `${StringPrototypeSlice(inspected\x2C 0\x2C 128)}...`;\n  }\n  const type = StringPrototypeIncludes(name\x2C '.') ? 'property' : 'argument';\n  return `The ${type} '${name}' ${reason}. Received ${inspected}`;\n}\x2C TypeError\x2C RangeError);\nE('ERR_INVALID_ASYNC_ID'\x2C 'Invalid %s value: %s'\x2C RangeError);\nE('ERR_INVALID_BUFFER_SIZE'\x2C\n  'Buffer size must be a multiple of %s'\x2C RangeError);\nE('ERR_INVALID_CHAR'\x2C\n  // Using a default argument here is important so the argument is not counted\n  // towards `Function#length`.\n  (name\x2C field = undefined) => {\n    let msg = `Invalid character in ${name}`;\n    if (field !== undefined) {\n      msg += ` ["${field}"]`;\n    }\n    return msg;\n  }\x2C TypeError);\nE('ERR_INVALID_CURSOR_POS'\x2C\n  'Cannot set cursor row without setting its column'\x2C TypeError);\nE('ERR_INVALID_FD'\x2C\n  '"fd" must be a positive integer: %s'\x2C RangeError);\nE('ERR_INVALID_FD_TYPE'\x2C 'Unsupported fd type: %s'\x2C TypeError);\nE('ERR_INVALID_FILE_URL_HOST'\x2C\n  'File URL host must be "localhost" or empty on %s'\x2C TypeError);\nE('ERR_INVALID_FILE_URL_PATH'\x2C 'File URL path %s'\x2C TypeError);\nE('ERR_INVALID_HANDLE_TYPE'\x2C 'This handle type cannot be sent'\x2C TypeError);\nE('ERR_INVALID_HTTP_TOKEN'\x2C '%s must be a valid HTTP token ["%s"]'\x2C TypeError);\nE('ERR_INVALID_IP_ADDRESS'\x2C 'Invalid IP address: %s'\x2C TypeError);\nE('ERR_INVALID_MODULE_SPECIFIER'\x2C (request\x2C reason\x2C base = undefined) => {\n  return `Invalid module "${request}" ${reason}${base ?\n    ` imported from ${base}` : ''}`;\n}\x2C TypeError);\nE('ERR_INVALID_PACKAGE_CONFIG'\x2C (path\x2C base\x2C message) => {\n  return `Invalid package config ${path}${base ? ` while importing ${base}` :\n    ''}${message ? `. ${message}` : ''}`;\n}\x2C Error);\nE('ERR_INVALID_PACKAGE_TARGET'\x2C\n  (pkgPath\x2C key\x2C target\x2C isImport = false\x2C base = undefined) => {\n    const relError = typeof target === 'string' && !isImport &&\n      target.length && !StringPrototypeStartsWith(target\x2C './');\n    if (key === '.') {\n      assert(isImport === false);\n      return `Invalid "exports" main target ${JSONStringify(target)} defined ` +\n        `in the package config ${pkgPath}package.json${base ?\n          ` imported from ${base}` : ''}${relError ?\n          '; targets must start with "./"' : ''}`;\n    }\n    return `Invalid "${isImport ? 'imports' : 'exports'}" target ${\n      JSONStringify(target)} defined for '${key}' in the package config ${\n      pkgPath}package.json${base ? ` imported from ${base}` : ''}${relError ?\n      '; targets must start with "./"' : ''}`;\n  }\x2C Error);\nE('ERR_INVALID_PROTOCOL'\x2C\n  'Protocol "%s" not supported. Expected "%s"'\x2C\n  TypeError);\nE('ERR_INVALID_REPL_EVAL_CONFIG'\x2C\n  'Cannot specify both "breakEvalOnSigint" and "eval" for REPL'\x2C TypeError);\nE('ERR_INVALID_REPL_INPUT'\x2C '%s'\x2C TypeError);\nE('ERR_INVALID_RETURN_PROPERTY'\x2C (input\x2C name\x2C prop\x2C value) => {\n  return `Expected a valid ${input} to be returned for the "${prop}" from the` +\n         ` "${name}" function but got ${value}.`;\n}\x2C TypeError);\nE('ERR_INVALID_RETURN_PROPERTY_VALUE'\x2C (input\x2C name\x2C prop\x2C value) => {\n  let type;\n  if (value?.constructor?.name) {\n    type = `instance of ${value.constructor.name}`;\n  } else {\n    type = `type ${typeof value}`;\n  }\n  return `Expected ${input} to be returned for the "${prop}" from the` +\n         ` "${name}" function but got ${type}.`;\n}\x2C TypeError);\nE('ERR_INVALID_RETURN_VALUE'\x2C (input\x2C name\x2C value) => {\n  const type = determineSpecificType(value);\n\n  return `Expected ${input} to be returned from the "${name}"` +\n         ` function but got ${type}.`;\n}\x2C TypeError\x2C RangeError);\nE('ERR_INVALID_STATE'\x2C 'Invalid state: %s'\x2C Error\x2C TypeError\x2C RangeError);\nE('ERR_INVALID_SYNC_FORK_INPUT'\x2C\n  'Asynchronous forks do not support ' +\n    'Buffer\x2C TypedArray\x2C DataView or string input: %s'\x2C\n  TypeError);\nE('ERR_INVALID_THIS'\x2C 'Value of "this" must be of type %s'\x2C TypeError);\nE('ERR_INVALID_TUPLE'\x2C '%s must be an iterable %s tuple'\x2C TypeError);\nE('ERR_INVALID_URI'\x2C 'URI malformed'\x2C URIError);\nE('ERR_INVALID_URL'\x2C function(input) {\n  this.input = input;\n  // Don't include URL in message.\n  // (See https://github.com/nodejs/node/pull/38614)\n  return 'Invalid URL';\n}\x2C TypeError);\nE('ERR_INVALID_URL_SCHEME'\x2C\n  (expected) => {\n    if (typeof expected === 'string')\n      expected = [expected];\n    assert(expected.length <= 2);\n    const res = expected.length === 2 ?\n      `one of scheme ${expected[0]} or ${expected[1]}` :\n      `of scheme ${expected[0]}`;\n    return `The URL must be ${res}`;\n  }\x2C TypeError);\nE('ERR_IPC_CHANNEL_CLOSED'\x2C 'Channel closed'\x2C Error);\nE('ERR_IPC_DISCONNECTED'\x2C 'IPC channel is already disconnected'\x2C Error);\nE('ERR_IPC_ONE_PIPE'\x2C 'Child process can have only one IPC pipe'\x2C Error);\nE('ERR_IPC_SYNC_FORK'\x2C 'IPC cannot be used with synchronous forks'\x2C Error);\nE(\n  'ERR_LOADER_CHAIN_INCOMPLETE'\x2C\n  '"%s" did not call the next hook in its chain and did not' +\n  ' explicitly signal a short circuit. If this is intentional\x2C include' +\n  ' `shortCircuit: true` in the hook\\'s return.'\x2C\n  Error\n);\nE('ERR_MANIFEST_ASSERT_INTEGRITY'\x2C\n  (moduleURL\x2C realIntegrities) => {\n    let msg = `The content of "${\n      moduleURL\n    }" does not match the expected integrity.`;\n    if (realIntegrities.size) {\n      const sri = ArrayPrototypeJoin(\n        ArrayFrom(realIntegrities.entries()\x2C\n                  ({ 0: alg\x2C 1: dgs }) => `${alg}-${dgs}`)\x2C\n        ' '\n      );\n      msg += ` Integrities found are: ${sri}`;\n    } else {\n      msg += ' The resource was not found in the policy.';\n    }\n    return msg;\n  }\x2C Error);\nE('ERR_MANIFEST_DEPENDENCY_MISSING'\x2C\n  'Manifest resource %s does not list %s as a dependency specifier for ' +\n  'conditions: %s'\x2C\n  Error);\nE('ERR_MANIFEST_INTEGRITY_MISMATCH'\x2C\n  'Manifest resource %s has multiple entries but integrity lists do not match'\x2C\n  SyntaxError);\nE('ERR_MANIFEST_INVALID_RESOURCE_FIELD'\x2C\n  'Manifest resource %s has invalid property value for %s'\x2C\n  TypeError);\nE('ERR_MANIFEST_INVALID_SPECIFIER'\x2C\n  'Manifest resource %s has invalid dependency mapping %s'\x2C\n  TypeError);\nE('ERR_MANIFEST_TDZ'\x2C 'Manifest initialization has not yet run'\x2C Error);\nE('ERR_MANIFEST_UNKNOWN_ONERROR'\x2C\n  'Manifest specified unknown error behavior "%s".'\x2C\n  SyntaxError);\nE('ERR_METHOD_NOT_IMPLEMENTED'\x2C 'The %s method is not implemented'\x2C Error);\nE('ERR_MISSING_ARGS'\x2C\n  (...args) => {\n    assert(args.length > 0\x2C 'At least one arg needs to be specified');\n    let msg = 'The ';\n    const len = args.length;\n    const wrap = (a) => `"${a}"`;\n    args = ArrayPrototypeMap(\n      args\x2C\n      (a) => (ArrayIsArray(a) ?\n        ArrayPrototypeJoin(ArrayPrototypeMap(a\x2C wrap)\x2C ' or ') :\n        wrap(a))\n    );\n    switch (len) {\n      case 1:\n        msg += `${args[0]} argument`;\n        break;\n      case 2:\n        msg += `${args[0]} and ${args[1]} arguments`;\n        break;\n      default:\n        msg += ArrayPrototypeJoin(ArrayPrototypeSlice(args\x2C 0\x2C len - 1)\x2C '\x2C ');\n        msg += `\x2C and ${args[len - 1]} arguments`;\n        break;\n    }\n    return `${msg} must be specified`;\n  }\x2C TypeError);\nE('ERR_MISSING_OPTION'\x2C '%s is required'\x2C TypeError);\nE('ERR_MODULE_NOT_FOUND'\x2C (path\x2C base\x2C type = 'package') => {\n  return `Cannot find ${type} '${path}' imported from ${base}`;\n}\x2C Error);\nE('ERR_MULTIPLE_CALLBACK'\x2C 'Callback called multiple times'\x2C Error);\nE('ERR_NAPI_CONS_FUNCTION'\x2C 'Constructor must be a function'\x2C TypeError);\nE('ERR_NAPI_INVALID_DATAVIEW_ARGS'\x2C\n  'byte_offset + byte_length should be less than or equal to the size in ' +\n    'bytes of the array passed in'\x2C\n  RangeError);\nE('ERR_NAPI_INVALID_TYPEDARRAY_ALIGNMENT'\x2C\n  'start offset of %s should be a multiple of %s'\x2C RangeError);\nE('ERR_NAPI_INVALID_TYPEDARRAY_LENGTH'\x2C\n  'Invalid typed array length'\x2C RangeError);\nE('ERR_NETWORK_IMPORT_BAD_RESPONSE'\x2C\n  "import '%s' received a bad response: %s"\x2C Error);\nE('ERR_NETWORK_IMPORT_DISALLOWED'\x2C\n  "import of '%s' by %s is not supported: %s"\x2C Error);\nE('ERR_NOT_BUILDING_SNAPSHOT'\x2C\n  'Operation cannot be invoked when not building startup snapshot'\x2C Error);\nE('ERR_NO_CRYPTO'\x2C\n  'Node.js is not compiled with OpenSSL crypto support'\x2C Error);\nE('ERR_NO_ICU'\x2C\n  '%s is not supported on Node.js compiled without ICU'\x2C TypeError);\nE('ERR_OPERATION_FAILED'\x2C 'Operation failed: %s'\x2C Error\x2C TypeError);\nE('ERR_OUT_OF_RANGE'\x2C\n  (str\x2C range\x2C input\x2C replaceDefaultBoolean = false) => {\n    assert(range\x2C 'Missing "range" argument');\n    let msg = replaceDefaultBoolean ? str :\n      `The value of "${str}" is out of range.`;\n    let received;\n    if (NumberIsInteger(input) && MathAbs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input));\n    } else if (typeof input === 'bigint') {\n      received = String(input);\n      if (input > 2n ** 32n || input < -(2n ** 32n)) {\n        received = addNumericalSeparator(received);\n      }\n      received += 'n';\n    } else {\n      received = lazyInternalUtilInspect().inspect(input);\n    }\n    msg += ` It must be ${range}. Received ${received}`;\n    return msg;\n  }\x2C RangeError);\nE('ERR_PACKAGE_IMPORT_NOT_DEFINED'\x2C (specifier\x2C packagePath\x2C base) => {\n  return `Package import specifier "${specifier}" is not defined${packagePath ?\n    ` in package ${packagePath}package.json` : ''} imported from ${base}`;\n}\x2C TypeError);\nE('ERR_PACKAGE_PATH_NOT_EXPORTED'\x2C (pkgPath\x2C subpath\x2C base = undefined) => {\n  if (subpath === '.')\n    return `No "exports" main defined in ${pkgPath}package.json${base ?\n      ` imported from ${base}` : ''}`;\n  return `Package subpath '${subpath}' is not defined by "exports" in ${\n    pkgPath}package.json${base ? ` imported from ${base}` : ''}`;\n}\x2C Error);\nE('ERR_PARSE_ARGS_INVALID_OPTION_VALUE'\x2C '%s'\x2C TypeError);\nE('ERR_PARSE_ARGS_UNEXPECTED_POSITIONAL'\x2C "Unexpected argument '%s'. This " +\n  'command does not take positional arguments'\x2C TypeError);\nE('ERR_PARSE_ARGS_UNKNOWN_OPTION'\x2C (option\x2C allowPositionals) => {\n  const suggestDashDash = allowPositionals ? '. To specify a positional ' +\n    "argument starting with a '-'\x2C place it at the end of the command after " +\n    `'--'\x2C as in '-- ${JSONStringify(option)}` : '';\n  return `Unknown option '${option}'${suggestDashDash}`;\n}\x2C TypeError);\nE('ERR_PERFORMANCE_INVALID_TIMESTAMP'\x2C\n  '%d is not a valid timestamp'\x2C TypeError);\nE('ERR_PERFORMANCE_MEASURE_INVALID_OPTIONS'\x2C '%s'\x2C TypeError);\nE('ERR_REQUIRE_ESM'\x2C\n  function(filename\x2C hasEsmSyntax\x2C parentPath = null\x2C packageJsonPath = null) {\n    hideInternalStackFrames(this);\n    let msg = `require() of ES Module ${filename}${parentPath ? ` from ${\n      parentPath}` : ''} not supported.`;\n    if (!packageJsonPath) {\n      if (StringPrototypeEndsWith(filename\x2C '.mjs'))\n        msg += `\\nInstead change the require of ${filename} to a dynamic ` +\n            'import() which is available in all CommonJS modules.';\n      return msg;\n    }\n    const path = require('path');\n    const basename = parentPath && path.basename(filename) ===\n      path.basename(parentPath) ? filename : path.basename(filename);\n    if (hasEsmSyntax) {\n      msg += `\\nInstead change the require of ${basename} in ${parentPath} to` +\n        ' a dynamic import() which is available in all CommonJS modules.';\n      return msg;\n    }\n    msg += `\\n${basename} is treated as an ES module file as it is a .js ` +\n      'file whose nearest parent package.json contains "type": "module" ' +\n      'which declares all .js files in that package scope as ES modules.' +\n      `\\nInstead rename ${basename} to end in .cjs\x2C change the requiring ` +\n      'code to use dynamic import() which is available in all CommonJS ' +\n      'modules\x2C or change "type": "module" to "type": "commonjs" in ' +\n      `${packageJsonPath} to treat all .js files as CommonJS (using .mjs for ` +\n      'all ES modules instead).\\n';\n    return msg;\n  }\x2C Error);\nE('ERR_SCRIPT_EXECUTION_INTERRUPTED'\x2C\n  'Script execution was interrupted by `SIGINT`'\x2C Error);\nE('ERR_SERVER_ALREADY_LISTEN'\x2C\n  'Listen method has been called more than once without closing.'\x2C Error);\nE('ERR_SERVER_NOT_RUNNING'\x2C 'Server is not running.'\x2C Error);\nE('ERR_SOCKET_ALREADY_BOUND'\x2C 'Socket is already bound'\x2C Error);\nE('ERR_SOCKET_BAD_BUFFER_SIZE'\x2C\n  'Buffer size must be a positive integer'\x2C TypeError);\nE('ERR_SOCKET_BAD_PORT'\x2C (name\x2C port\x2C allowZero = true) => {\n  assert(typeof allowZero === 'boolean'\x2C\n         "The 'allowZero' argument must be of type boolean.");\n  const operator = allowZero ? '>=' : '>';\n  return `${name} should be ${operator} 0 and < 65536. Received ${port}.`;\n}\x2C RangeError);\nE('ERR_SOCKET_BAD_TYPE'\x2C\n  'Bad socket type specified. Valid types are: udp4\x2C udp6'\x2C TypeError);\nE('ERR_SOCKET_BUFFER_SIZE'\x2C\n  'Could not get or set buffer size'\x2C\n  SystemError);\nE('ERR_SOCKET_CLOSED'\x2C 'Socket is closed'\x2C Error);\nE('ERR_SOCKET_DGRAM_IS_CONNECTED'\x2C 'Already connected'\x2C Error);\nE('ERR_SOCKET_DGRAM_NOT_CONNECTED'\x2C 'Not connected'\x2C Error);\nE('ERR_SOCKET_DGRAM_NOT_RUNNING'\x2C 'Not running'\x2C Error);\nE('ERR_SRI_PARSE'\x2C\n  'Subresource Integrity string %j had an unexpected %j at position %d'\x2C\n  SyntaxError);\nE('ERR_STREAM_ALREADY_FINISHED'\x2C\n  'Cannot call %s after a stream was finished'\x2C\n  Error);\nE('ERR_STREAM_CANNOT_PIPE'\x2C 'Cannot pipe\x2C not readable'\x2C Error);\nE('ERR_STREAM_DESTROYED'\x2C 'Cannot call %s after a stream was destroyed'\x2C Error);\nE('ERR_STREAM_NULL_VALUES'\x2C 'May not write null values to stream'\x2C TypeError);\nE('ERR_STREAM_PREMATURE_CLOSE'\x2C 'Premature close'\x2C Error);\nE('ERR_STREAM_PUSH_AFTER_EOF'\x2C 'stream.push() after EOF'\x2C Error);\nE('ERR_STREAM_UNSHIFT_AFTER_END_EVENT'\x2C\n  'stream.unshift() after end event'\x2C Error);\nE('ERR_STREAM_WRAP'\x2C 'Stream has StringDecoder set or is in objectMode'\x2C Error);\nE('ERR_STREAM_WRITE_AFTER_END'\x2C 'write after end'\x2C Error);\nE('ERR_SYNTHETIC'\x2C 'JavaScript Callstack'\x2C Error);\nE('ERR_SYSTEM_ERROR'\x2C 'A system error occurred'\x2C SystemError);\nE('ERR_TEST_FAILURE'\x2C function(error\x2C failureType) {\n  hideInternalStackFrames(this);\n  assert(typeof failureType === 'string'\x2C\n         "The 'failureType' argument must be of type string.");\n\n  let msg = error?.message ?? error;\n\n  if (typeof msg !== 'string') {\n    msg = inspectWithNoCustomRetry(msg);\n  }\n\n  this.failureType = failureType;\n  this.cause = error;\n  return msg;\n}\x2C Error);\nE('ERR_TLS_CERT_ALTNAME_FORMAT'\x2C 'Invalid subject alternative name string'\x2C\n  SyntaxError);\nE('ERR_TLS_CERT_ALTNAME_INVALID'\x2C function(reason\x2C host\x2C cert) {\n  this.reason = reason;\n  this.host = host;\n  this.cert = cert;\n  return `Hostname/IP does not match certificate's altnames: ${reason}`;\n}\x2C Error);\nE('ERR_TLS_DH_PARAM_SIZE'\x2C 'DH parameter size %s is less than 2048'\x2C Error);\nE('ERR_TLS_HANDSHAKE_TIMEOUT'\x2C 'TLS handshake timeout'\x2C Error);\nE('ERR_TLS_INVALID_CONTEXT'\x2C '%s must be a SecureContext'\x2C TypeError);\nE('ERR_TLS_INVALID_PROTOCOL_VERSION'\x2C\n  '%j is not a valid %s TLS protocol version'\x2C TypeError);\nE('ERR_TLS_INVALID_STATE'\x2C 'TLS socket connection must be securely established'\x2C\n  Error);\nE('ERR_TLS_PROTOCOL_VERSION_CONFLICT'\x2C\n  'TLS protocol version %j conflicts with secureProtocol %j'\x2C TypeError);\nE('ERR_TLS_RENEGOTIATION_DISABLED'\x2C\n  'TLS session renegotiation disabled for this socket'\x2C Error);\n\n// This should probably be a `TypeError`.\nE('ERR_TLS_REQUIRED_SERVER_NAME'\x2C\n  '"servername" is required parameter for Server.addContext'\x2C Error);\nE('ERR_TLS_SESSION_ATTACK'\x2C 'TLS session renegotiation attack detected'\x2C Error);\nE('ERR_TLS_SNI_FROM_SERVER'\x2C\n  'Cannot issue SNI from a TLS server-side socket'\x2C Error);\nE('ERR_TRACE_EVENTS_CATEGORY_REQUIRED'\x2C\n  'At least one category is required'\x2C TypeError);\nE('ERR_TRACE_EVENTS_UNAVAILABLE'\x2C 'Trace events are unavailable'\x2C Error);\n\n// This should probably be a `RangeError`.\nE('ERR_TTY_INIT_FAILED'\x2C 'TTY initialization failed'\x2C SystemError);\nE('ERR_UNAVAILABLE_DURING_EXIT'\x2C 'Cannot call function in process exit ' +\n  'handler'\x2C Error);\nE('ERR_UNCAUGHT_EXCEPTION_CAPTURE_ALREADY_SET'\x2C\n  '`process.setupUncaughtExceptionCapture()` was called while a capture ' +\n    'callback was already active'\x2C\n  Error);\nE('ERR_UNESCAPED_CHARACTERS'\x2C '%s contains unescaped characters'\x2C TypeError);\nE('ERR_UNHANDLED_ERROR'\x2C\n  // Using a default argument here is important so the argument is not counted\n  // towards `Function#length`.\n  (err = undefined) => {\n    const msg = 'Unhandled error.';\n    if (err === undefined) return msg;\n    return `${msg} (${err})`;\n  }\x2C Error);\nE('ERR_UNKNOWN_BUILTIN_MODULE'\x2C 'No such built-in module: %s'\x2C Error);\nE('ERR_UNKNOWN_CREDENTIAL'\x2C '%s identifier does not exist: %s'\x2C Error);\nE('ERR_UNKNOWN_ENCODING'\x2C 'Unknown encoding: %s'\x2C TypeError);\nE('ERR_UNKNOWN_FILE_EXTENSION'\x2C (ext\x2C path\x2C suggestion) => {\n  let msg = `Unknown file extension "${ext}" for ${path}`;\n  if (suggestion) {\n    msg += `. ${suggestion}`;\n  }\n  return msg;\n}\x2C TypeError);\nE('ERR_UNKNOWN_MODULE_FORMAT'\x2C 'Unknown module format: %s for URL %s'\x2C\n  RangeError);\nE('ERR_UNKNOWN_SIGNAL'\x2C 'Unknown signal: %s'\x2C TypeError);\nE('ERR_UNSUPPORTED_DIR_IMPORT'\x2C "Directory import '%s' is not supported " +\n'resolving ES modules imported from %s'\x2C Error);\nE('ERR_UNSUPPORTED_ESM_URL_SCHEME'\x2C (url\x2C supported) => {\n  let msg = `Only URLs with a scheme in: ${ArrayPrototypeJoin(supported\x2C '\x2C ')} are supported by the default ESM loader`;\n  if (isWindows && url.protocol.length === 2) {\n    msg +=\n      '. On Windows\x2C absolute paths must be valid file:// URLs';\n  }\n  msg += `. Received protocol '${url.protocol}'`;\n  return msg;\n}\x2C Error);\nE('ERR_USE_AFTER_CLOSE'\x2C '%s was closed'\x2C Error);\n\n// This should probably be a `TypeError`.\nE('ERR_VALID_PERFORMANCE_ENTRY_TYPE'\x2C\n  'At least one valid performance entry type is required'\x2C Error);\nE('ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING'\x2C\n  'A dynamic import callback was not specified.'\x2C TypeError);\nE('ERR_VM_MODULE_ALREADY_LINKED'\x2C 'Module has already been linked'\x2C Error);\nE('ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA'\x2C\n  'Cached data cannot be created for a module which has been evaluated'\x2C Error);\nE('ERR_VM_MODULE_DIFFERENT_CONTEXT'\x2C\n  'Linked modules must use the same context'\x2C Error);\nE('ERR_VM_MODULE_LINK_FAILURE'\x2C function(message\x2C cause) {\n  this.cause = cause;\n  return message;\n}\x2C Error);\nE('ERR_VM_MODULE_NOT_MODULE'\x2C\n  'Provided module is not an instance of Module'\x2C Error);\nE('ERR_VM_MODULE_STATUS'\x2C 'Module status %s'\x2C Error);\nE('ERR_WASI_ALREADY_STARTED'\x2C 'WASI instance has already started'\x2C Error);\nE('ERR_WEBASSEMBLY_RESPONSE'\x2C 'WebAssembly response %s'\x2C TypeError);\nE('ERR_WORKER_INIT_FAILED'\x2C 'Worker initialization failure: %s'\x2C Error);\nE('ERR_WORKER_INVALID_EXEC_ARGV'\x2C (errors\x2C msg = 'invalid execArgv flags') =>\n  `Initiated Worker with ${msg}: ${ArrayPrototypeJoin(errors\x2C '\x2C ')}`\x2C\n  Error);\nE('ERR_WORKER_NOT_RUNNING'\x2C 'Worker instance not running'\x2C Error);\nE('ERR_WORKER_OUT_OF_MEMORY'\x2C\n  'Worker terminated due to reaching memory limit: %s'\x2C Error);\nE('ERR_WORKER_PATH'\x2C (filename) =>\n  'The worker script or module filename must be an absolute path or a ' +\n  'relative path starting with \\'./\\' or \\'../\\'.' +\n  (StringPrototypeStartsWith(filename\x2C 'file://') ?\n    ' Wrap file:// URLs with `new URL`.' : ''\n  ) +\n  (StringPrototypeStartsWith(filename\x2C 'data:text/javascript') ?\n    ' Wrap data: URLs with `new URL`.' : ''\n  ) +\n  ` Received "${filename}"`\x2C\n  TypeError);\nE('ERR_WORKER_UNSERIALIZABLE_ERROR'\x2C\n  'Serializing an uncaught exception failed'\x2C Error);\nE('ERR_WORKER_UNSUPPORTED_OPERATION'\x2C\n  '%s is not supported in workers'\x2C TypeError);\nE('ERR_ZLIB_INITIALIZATION_FAILED'\x2C 'Initialization failed'\x2C Error);\n
code-source-info,0x117768a1eb70,17,10116,11100,C0O10116C3O10146C10O10152C15O10173C20O10177C25O10211C33O10233C37O10256C40O10256C46O10326C51O10330C56O10364C65O10386C69O10415C83O10415C89O10449C96O10472C105O10488C109O10503C121O10655C128O10697C142O10810C147O10845C162O10449C167O11025C174O11025C178O11061C180O11072C184O11083C186O11096,,
tick,0x1a4e72f20,63291,0,0x0,3,0x0,0x117768a1e8b7,0x104b24a0c,0x1a3e29cbdcf9,0x117768a0311f,0x117768a0267a,0x117768a01959,0x117768a011ba,0x117768a1e75e,0x104a6cb38,0x117768a11d14,0x105405ef4
tick,0x1a4d3d608,63291,0,0x0,3,0x0,0x117768a1e8b7,0x104b24a0c,0x1a3e29cbdcf9,0x117768a0311f,0x117768a0267a,0x117768a01959,0x117768a011ba,0x117768a1e75e,0x104a6cb38,0x117768a11d14,0x105405ef4
code-creation,LazyCompile,10,63291,0x117768a223c0,93,isErrorStackTraceLimitWritable node:internal/errors:193:40,0x3d9b801a3cc8,~
code-source-info,0x117768a223c0,17,5450,5898,C0O5565C6O5569C11O5582C16O5598C21O5599C27O5627C28O5640C29O5661C36O5692C42O5661C48O5721C50O5751C57O5777C60O5758C64O5784C65O5792C73O5799C80O5858C86O5878C91O5882C92O5896,,
code-creation,LazyCompile,10,63375,0x117768a226a8,291,getMessage node:internal/errors:433:20,0x3d9b801a4838,~
code-source-info,0x117768a226a8,17,12171,13023,C0O12205C5O12214C10O12214C16O12227C30O12238C37O12234C43O12269C49O12306C54O12324C59O12339C63O12331C72O12395C83O12439C101O12501C115O12459C119O12306C124O12523C138O12530C143O12560C144O12582C149O12620C151O12664C156O12632C163O12674C168O12625C171O12694C176O12730C180O12721C189O12751C200O12795C220O12851C230O12815C234O12694C239O12886C245O12893C250O12904C252O12915C253O12919C258O12919C263O12955C271O12975C275O13000C285O12962C290O13021,,
code-creation,LazyCompile,10,63375,0x117768a22950,9, node:internal/errors:1369:30,0x3d9b801a5350,~
code-source-info,0x117768a22950,17,47806,47951,C0O47818C2O47829C6O47928C8O47949,,
code-creation,LazyCompile,10,63416,0x117768a22a98,68,captureLargerStackTrace node:internal/errors:478:35,0x3d9b801a4928,~
code-source-info,0x117768a22a98,17,13415,13785,C0O13461C3O13461C7O13499C9O13538C14O13566C21O13558C27O13589C32O13613C35O13611C39O13633C44O13633C48O13689C52O13720C59O13744C61O13742C65O13770C67O13781,,
code-creation,LazyCompile,10,63541,0x117768a22da8,444,packageResolve node:internal/modules/esm/resolve:754:24,0x1e372ce2c540,~
code-source-info,0x117768a22da
code-creation,LazyCompile,10,63541,0x117768a23138,28,canBeRequiredByUsers node:internal/bootstrap/loaders:247:30,0x3d9b8018ea70,~
code-source-info,0x117768a23138,15,7507,7604,C0O7530C5O7544C10O7548C15O7548C21O7561C23O7579C27O7600,,
code-creation,LazyCompile,10,63583,0x117768a23238,3,node: node:internal/modules/esm/get_format:33:10,0x1e372ce310d0,~
code-source-info,0x117768a23238,439,1131,1155,C0O1136C2O1153,,
tick,0x1a4d3a53c,63625,0,0x0,3,0x0,0x117768a22db2,0x117768a069c7,0x117768a03236,0x117768a0267a,0x117768a01959,0x117768a011ba,0x117768a1e75e,0x104a6cb38,0x117768a11d14,0x105405ef4
code-creation,Function,11,63750,0x109cccee0,2904, node:internal/url:699:12,0x3b46b2026798,^
code-source-info,0x109cccee0,74,19418,20668,,,
code-creation,Function,11,63750,0x109ccdaa0,1136,URL node:internal/url:636:14,0x3b46b20265c0,^
code-source-info,0x109ccdaa0,74,17618,18011,,,
code-creation,Function,11,63791,0x109ccdf80,248,isURLInstance node:internal/url:1561:23,0x3b46b2027788,^
code-source-info,0x109ccdf80,74,43754,43851,,,
code-creation,Function,11,63791,0x109cce0e0,448,get protocol node:internal/url:795:15,0x3b46b2026978,^
code-source-info,0x109cce0e0,74,21935,22043,,,
code-creation,Function,11,63791,0x109cce300,392,initSearchParams node:internal/url:1082:26,0x3b46b20272d8,^
code-source-info,0x109cce300,74,29398,29513,,,
code-creation,Function,11,63791,0x109cce500,200,isBuildingSnapshot node:internal/v8/startup_snapshot:17:28,0x25eb221f6560,^
code-source-info,0x109cce500,82,376,510,,,
code-creation,Function,11,63833,0x109cce640,1000,isErrorStackTraceLimitWritable node:internal/errors:193:40,0x3d9b801a3cc8,^
code-source-info,0x109cce640,17,5450,5898,,,
code-creation,RegExp,3,63875,0x109cceaa0,1216,%2F|%5C
code-creation,RegExp,3,64000,0x109ccefc0,824,(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])
code-creation,Function,11,64250,0x109ccf360,8312,realpathSync node:fs:2474:22,0x3b46b2018b50,^
code-source-info,0x109ccf360,73,65937,69828,,,
code-creation,Function,11,64250,0x109cd1440,296,shouldBeTreatedAsRelativeOrAbsolutePath node:internal/modules/esm/resolve:831:49,0x1e372ce2c630,^
code-source-info,0x109cd1440,437,27432,27567,,,
code-creation,Function,11,64291,0x109cd15e0,464,get href node:internal/url:753:11,0x3b46b2026838,^
code-source-info,0x109cd15e0,74,20850,20955,,,
code-creation,Function,11,64291,0x109cd1820,976,get pathname node:internal/url:925:15,0x3b46b2026e98,^
code-source-info,0x109cd1820,74,25209,25469,,,
code-creation,Function,11,64291,0x109cd1c60,264,msFromTimeSpec node:internal/fs/utils:450:24,0x3b46b20350d8,^
code-source-info,0x109cd1c60,77,11068,11127,,,
code-creation,Function,11,64333,0x109cd1de0,392,dateFromMs node:internal/fs/utils:465:20,0x3b46b2035178,^
code-source-info,0x109cd1de0,77,11633,11725,,,
code-creation,Function,11,64333,0x109cd1fe0,200,isUint8Array node:internal/util/types:13:22,0xa0ae21c2338,^
code-source-info,0x109cd1fe0,23,257,342,,,
code-creation,LazyCompile,10,64416,0x117768a24760,33,primordials.SafePromiseAll node:internal/per_context/primordials:449:30,0x3d9b80189580,~
code-source-info,0x117768a24760,12,13176,13403,C0O13176C13O13302C27O13302C32O13403,,
code-creation,LazyCompile,10,64416,0x117768a248a8,49, node:internal/per_context/primordials:452:15,0x117768a246b0,~
code-source-info,0x117768a248a8,12,13314,13399,C0O13389C7O13340C16O13344C25O13344C31O13340C37O13388C42O13389C48O13399,,
code-creation,LazyCompile,10,64458,0x117768a24a38,45,arrayToSafePromiseIterable node:internal/per_context/primordials:435:36,0x3d9b80189530,~
code-source-info,0x117768a24a38,12,12771,13006,C0O12771C9O12794C14O12810C23O12833C26O12858C31O12833C39O12794C44O13006,,
code-creation,LazyCompile,10,64500,0x117768a24bf8,33, node:internal/per_context/primordials:439:7,0x117768a24980,~
code-source-info,0x117768a24bf8,12,12874,12996,C0O12874C13O12898C27O12898C32O12996,,
code-creation,LazyCompile,10,64500,0x117768a24d28,47, node:internal/per_context/primordials:440:25,0x117768a24b48,~
code-source-info,0x117768a24d28,12,12914,12995,C0O12924C29O12971C41O12924C46O12995,,
code-creation,Function,11,64583,0x109cd2120,3368,ObjectDefineProperty.__proto__ node:internal/modules/esm/loader:149:5,0x117768a01f88,^
code-source-info,0x109cd2120,433,4450,5337,,,
code-creation,Function,11,64625,0x109cd2ec0,464,toString node:internal/url:747:11,0x3b46b20267e8,^
code-source-info,0x109cd2ec0,74,20733,20838,,,
code-creation,Function,11,64625,0x109cd3100,1824,extname node:path:1385:10,0x25eb221f3a78,^
code-source-info,0x109cd3100,71,41976,43659,,,
code-creation,Function,11,64666,0x109cd3880,496,get hostname node:internal/url:883:15,0x3b46b2026ce8,^
code-source-info,0x109cd3880,74,24151,24263,,,
code-creation,Function,11,64666,0x109cd3ae0,312,SafePromise node:internal/per_context/primordials:408:16,0x3d9b80189450,^
code-source-info,0x109cd3ae0,12,11771,11802,,,
code-creation,Function,11,64666,0x109cd3c80,720,has node:internal/modules/esm/module_map:37:6,0x1e372ce25e28,^
code-source-info,0x109cd3c80,434,1259,1413,,,
code-creation,LazyCompile,10,64791,0x117768a25530,149,builtinStrategy node:internal/modules/esm/translators:254:58,0x1a3e29c9fb18,~
code-source-info,0x117768a25530,451,7551,7904,C6O7551C14O7561C24O7596C29O7561C33O7643C41O7643C47O7690C52O7690C58O7720C66O7725C75O7769C77O7783C84O7789C89O7783C90O7832C100O7863C105O7832C109O7887C114O7887C126O7902,,
code-creation,LazyCompile,10,64833,0x117768a25728,62,loadBuiltinModule node:internal/modules/cjs/helpers:45:27,0x1e372ce157f8,~
code-source-info,0x117768a25728,429,1206,1489,C0O1242C5O1256C10O1260C15O1260C21O1277C26O1284C35O1314C43O1314C48O1442C53O1442C57O1472C59O1483C61O1488,,
code-creation,LazyCompile,10,64833,0x117768a25ff0,10, node:internal/modules/cjs/helpers:30:66,0x1e372ce15a18,~
code-source-info,0x117768a25ff0,429,864,889,C0O876C2O882C9O888,,
tick,0x1a4e3ea90,64833,0,0x0,3,0x0,0x117768a25564,0x117768a0d526,0x105405ef4
code-creation,LazyCompile,10,64875,0x117768a26198,129,compileForPublicLoader node:internal/bootstrap/loaders:263:25,0x3d9b8018eb60,~
code-source-info,0x117768a26198,15,8012,8684,C0O8031C6O8175C16O8218C33O8181C38O8175C39O8255C44O8255C48O8297C54O8486C61O8517C69O8486C75O8541C80O8559C90O8575C93O8591C98O8575C102O8557C106O8616C111O8616C115O8641C120O8641C124O8672C128O8680,,
code-creation,LazyCompile,10,64916,0x117768a26420,151,getESMFacade node:internal/bootstrap/loaders:281:15,0x3d9b8018ebb0,~
code-source-info,0x117768a26420,15,8700,9329,C0O8700C8O8718C14O8738C18O8745C19O8773C29O8773C34O8758C39O8821C42O8834C51O8865C53O8865C55O8895C62O8920C67O8895C72O8937C82O8937C87O8985C89O9037C102O8999C107O8997C111O9243C116O9250C121O9250C125O9274C130O9281C140O9281C146O9318C150O9325,,
code-creation,LazyCompile,10,64958,0x117768a26cd8,40, node:internal/bootstrap/loaders:290:15,0x117768a26318,~
code-source-info,0x117768a26cd8,15,9064,9169,C0O9077C5O9090C10O9090C14O9118C24O9139C27O9152C32O9118C39O9168,,
code-creation,LazyCompile,10,65000,0x117768a26e28,89,syncExports node:internal/bootstrap/loaders:304:14,0x3d9b8018ec28,~
code-source-info,0x117768a26e28,15,9636,9969,C0O9664C5O9689C11O9718C13O9731C17O9723C22O9773C24O9778C28O9791C30O9806C35O9821C37O9844C42O9851C51O9903C54O9915C59O9941C67O9903C73O9851C79O9740C84O9705C88O9968,,
code-creation,LazyCompile,10,65000,0x117768a26f98,35,getOwn node:internal/bootstrap/loaders:187:16,0x3d9b8018e768,~
code-source-info,0x117768a26f98,15,5643,5797,C0O5679C5O5686C14O5740C26O5740C34O5795,,
code-creation,LazyCompile,10,65041,0x117768a27228,11,get ReadStream node:fs:3050:17,0x3b46b2019018,~
code-source-info,0x117768a27228,73,80850,80904,C0O80859C3O80859C6O80882C10O80900,,
code-creation,LazyCompile,10,65083,0x117768a27358,71,lazyLoadStreams node:fs:2907:25,0x3b46b2018f28,~
code-source-info,0x117768a27358,73,78454,78621,C0O78461C6O78484C12O78515C17O78487C30O78499C43O78552C50O78567C56O78585C63O78601C70O78620,,
code-creation,Eval,10,65250,0x117768a27ba8,5, node:internal/fs/streams:1:1,0x117768a27810,~
script-source,456,node:internal/fs/streams,'use strict';\n\nconst {\n  Array\x2C\n  FunctionPrototypeBind\x2C\n  MathMin\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  PromisePrototypeThen\x2C\n  ReflectApply\x2C\n  Symbol\x2C\n} = primordials;\n\nconst {\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_OUT_OF_RANGE\x2C\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\n} = require('internal/errors').codes;\nconst {\n  deprecate\x2C\n  kEmptyObject\x2C\n} = require('internal/util');\nconst {\n  validateFunction\x2C\n  validateInteger\x2C\n} = require('internal/validators');\nconst { errorOrDestroy } = require('internal/streams/destroy');\nconst fs = require('fs');\nconst { kRef\x2C kUnref\x2C FileHandle } = require('internal/fs/promises');\nconst { Buffer } = require('buffer');\nconst {\n  copyObject\x2C\n  getOptions\x2C\n  getValidatedFd\x2C\n  validatePath\x2C\n} = require('internal/fs/utils');\nconst { Readable\x2C Writable\x2C finished } = require('stream');\nconst { toPathIfFileURL } = require('internal/url');\nconst kIoDone = Symbol('kIoDone');\nconst kIsPerformingIO = Symbol('kIsPerformingIO');\n\nconst kFs = Symbol('kFs');\nconst kHandle = Symbol('kHandle');\n\nfunction _construct(callback) {\n  const stream = this;\n  if (typeof stream.fd === 'number') {\n    callback();\n    return;\n  }\n\n  if (stream.open !== openWriteFs && stream.open !== openReadFs) {\n    // Backwards compat for monkey patching open().\n    const orgEmit = stream.emit;\n    stream.emit = function(...args) {\n      if (args[0] === 'open') {\n        this.emit = orgEmit;\n        callback();\n        ReflectApply(orgEmit\x2C this\x2C args);\n      } else if (args[0] === 'error') {\n        this.emit = orgEmit;\n        callback(args[1]);\n      } else {\n        ReflectApply(orgEmit\x2C this\x2C args);\n      }\n    };\n    stream.open();\n  } else {\n    stream[kFs].open(stream.path\x2C stream.flags\x2C stream.mode\x2C (er\x2C fd) => {\n      if (er) {\n        callback(er);\n      } else {\n        stream.fd = fd;\n        callback();\n        stream.emit('open'\x2C stream.fd);\n        stream.emit('ready');\n      }\n    });\n  }\n}\n\n// This generates an fs operations structure for a FileHandle\nconst FileHandleOperations = (handle) => {\n  return {\n    open: (path\x2C flags\x2C mode\x2C cb) => {\n      throw new ERR_METHOD_NOT_IMPLEMENTED('open()');\n    }\x2C\n    close: (fd\x2C cb) => {\n      handle[kUnref]();\n      PromisePrototypeThen(handle.close()\x2C\n                           () => cb()\x2C cb);\n    }\x2C\n    read: (fd\x2C buf\x2C offset\x2C length\x2C pos\x2C cb) => {\n      PromisePrototypeThen(handle.read(buf\x2C offset\x2C length\x2C pos)\x2C\n                           (r) => cb(null\x2C r.bytesRead\x2C r.buffer)\x2C\n                           (err) => cb(err\x2C 0\x2C buf));\n    }\x2C\n    write: (fd\x2C buf\x2C offset\x2C length\x2C pos\x2C cb) => {\n      PromisePrototypeThen(handle.write(buf\x2C offset\x2C length\x2C pos)\x2C\n                           (r) => cb(null\x2C r.bytesWritten\x2C r.buffer)\x2C\n                           (err) => cb(err\x2C 0\x2C buf));\n    }\x2C\n    writev: (fd\x2C buffers\x2C pos\x2C cb) => {\n      PromisePrototypeThen(handle.writev(buffers\x2C pos)\x2C\n                           (r) => cb(null\x2C r.bytesWritten\x2C r.buffers)\x2C\n                           (err) => cb(err\x2C 0\x2C buffers));\n    }\n  };\n};\n\nfunction close(stream\x2C err\x2C cb) {\n  if (!stream.fd) {\n    cb(err);\n  } else {\n    stream[kFs].close(stream.fd\x2C (er) => {\n      cb(er || err);\n    });\n    stream.fd = null;\n  }\n}\n\nfunction importFd(stream\x2C options) {\n  if (typeof options.fd === 'number') {\n    // When fd is a raw descriptor\x2C we must keep our fingers crossed\n    // that the descriptor won't get closed\x2C or worse\x2C replaced with\n    // another one\n    // https://github.com/nodejs/node/issues/35862\n    stream[kFs] = options.fs || fs;\n    return options.fd;\n  } else if (typeof options.fd === 'object' &&\n             options.fd instanceof FileHandle) {\n    // When fd is a FileHandle we can listen for 'close' events\n    if (options.fs) {\n      // FileHandle is not supported with custom fs operations\n      throw new ERR_METHOD_NOT_IMPLEMENTED('FileHandle with fs');\n    }\n    stream[kHandle] = options.fd;\n    stream[kFs] = FileHandleOperations(stream[kHandle]);\n    stream[kHandle][kRef]();\n    options.fd.on('close'\x2C FunctionPrototypeBind(stream.close\x2C stream));\n    return options.fd.fd;\n  }\n\n  throw ERR_INVALID_ARG_TYPE('options.fd'\x2C\n                             ['number'\x2C 'FileHandle']\x2C options.fd);\n}\n\nfunction ReadStream(path\x2C options) {\n  if (!(this instanceof ReadStream))\n    return new ReadStream(path\x2C options);\n\n  // A little bit bigger buffer and water marks by default\n  options = copyObject(getOptions(options\x2C kEmptyObject));\n  if (options.highWaterMark === undefined)\n    options.highWaterMark = 64 * 1024;\n\n  if (options.autoDestroy === undefined) {\n    options.autoDestroy = false;\n  }\n\n  if (options.fd == null) {\n    this.fd = null;\n    this[kFs] = options.fs || fs;\n    validateFunction(this[kFs].open\x2C 'options.fs.open');\n\n    // Path will be ignored when fd is specified\x2C so it can be falsy\n    this.path = toPathIfFileURL(path);\n    this.flags = options.flags === undefined ? 'r' : options.flags;\n    this.mode = options.mode === undefined ? 0o666 : options.mode;\n\n    validatePath(this.path);\n  } else {\n    this.fd = getValidatedFd(importFd(this\x2C options));\n  }\n\n  options.autoDestroy = options.autoClose === undefined ?\n    true : options.autoClose;\n\n  validateFunction(this[kFs].read\x2C 'options.fs.read');\n\n  if (options.autoDestroy) {\n    validateFunction(this[kFs].close\x2C 'options.fs.close');\n  }\n\n  this.start = options.start;\n  this.end = options.end;\n  this.pos = undefined;\n  this.bytesRead = 0;\n  this[kIsPerformingIO] = false;\n\n  if (this.start !== undefined) {\n    validateInteger(this.start\x2C 'start'\x2C 0);\n\n    this.pos = this.start;\n  }\n\n\n  if (this.end === undefined) {\n    this.end = Infinity;\n  } else if (this.end !== Infinity) {\n    validateInteger(this.end\x2C 'end'\x2C 0);\n\n    if (this.start !== undefined && this.start > this.end) {\n      throw new ERR_OUT_OF_RANGE(\n        'start'\x2C\n        `<= "end" (here: ${this.end})`\x2C\n        this.start\n      );\n    }\n  }\n\n  ReflectApply(Readable\x2C this\x2C [options]);\n}\nObjectSetPrototypeOf(ReadStream.prototype\x2C Readable.prototype);\nObjectSetPrototypeOf(ReadStream\x2C Readable);\n\nObjectDefineProperty(ReadStream.prototype\x2C 'autoClose'\x2C {\n  __proto__: null\x2C\n  get() {\n    return this._readableState.autoDestroy;\n  }\x2C\n  set(val) {\n    this._readableState.autoDestroy = val;\n  }\n});\n\nconst openReadFs = deprecate(function() {\n  // Noop.\n}\x2C 'ReadStream.prototype.open() is deprecated'\x2C 'DEP0135');\nReadStream.prototype.open = openReadFs;\n\nReadStream.prototype._construct = _construct;\n\nReadStream.prototype._read = function(n) {\n  n = this.pos !== undefined ?\n    MathMin(this.end - this.pos + 1\x2C n) :\n    MathMin(this.end - this.bytesRead + 1\x2C n);\n\n  if (n <= 0) {\n    this.push(null);\n    return;\n  }\n\n  const buf = Buffer.allocUnsafeSlow(n);\n\n  this[kIsPerformingIO] = true;\n  this[kFs]\n    .read(this.fd\x2C buf\x2C 0\x2C n\x2C this.pos\x2C (er\x2C bytesRead\x2C buf) => {\n      this[kIsPerformingIO] = false;\n\n      // Tell ._destroy() that it's safe to close the fd now.\n      if (this.destroyed) {\n        this.emit(kIoDone\x2C er);\n        return;\n      }\n\n      if (er) {\n        errorOrDestroy(this\x2C er);\n      } else if (bytesRead > 0) {\n        if (this.pos !== undefined) {\n          this.pos += bytesRead;\n        }\n\n        this.bytesRead += bytesRead;\n\n        if (bytesRead !== buf.length) {\n          // Slow path. Shrink to fit.\n          // Copy instead of slice so that we don't retain\n          // large backing buffer for small reads.\n          const dst = Buffer.allocUnsafeSlow(bytesRead);\n          buf.copy(dst\x2C 0\x2C 0\x2C bytesRead);\n          buf = dst;\n        }\n\n        this.push(buf);\n      } else {\n        this.push(null);\n      }\n    });\n};\n\nReadStream.prototype._destroy = function(err\x2C cb) {\n  // Usually for async IO it is safe to close a file descriptor\n  // even when there are pending operations. However\x2C due to platform\n  // differences file IO is implemented using synchronous operations\n  // running in a thread pool. Therefore\x2C file descriptors are not safe\n  // to close while used in a pending read or write operation. Wait for\n  // any pending IO (kIsPerformingIO) to complete (kIoDone).\n  if (this[kIsPerformingIO]) {\n    this.once(kIoDone\x2C (er) => close(this\x2C err || er\x2C cb));\n  } else {\n    close(this\x2C err\x2C cb);\n  }\n};\n\nReadStream.prototype.close = function(cb) {\n  if (typeof cb === 'function') finished(this\x2C cb);\n  this.destroy();\n};\n\nObjectDefineProperty(ReadStream.prototype\x2C 'pending'\x2C {\n  __proto__: null\x2C\n  get() { return this.fd === null; }\x2C\n  configurable: true\n});\n\nfunction WriteStream(path\x2C options) {\n  if (!(this instanceof WriteStream))\n    return new WriteStream(path\x2C options);\n\n  options = copyObject(getOptions(options\x2C kEmptyObject));\n\n  // Only buffers are supported.\n  options.decodeStrings = true;\n\n  if (options.fd == null) {\n    this.fd = null;\n    this[kFs] = options.fs || fs;\n    validateFunction(this[kFs].open\x2C 'options.fs.open');\n\n    // Path will be ignored when fd is specified\x2C so it can be falsy\n    this.path = toPathIfFileURL(path);\n    this.flags = options.flags === undefined ? 'w' : options.flags;\n    this.mode = options.mode === undefined ? 0o666 : options.mode;\n\n    validatePath(this.path);\n  } else {\n    this.fd = getValidatedFd(importFd(this\x2C options));\n  }\n\n  options.autoDestroy = options.autoClose === undefined ?\n    true : options.autoClose;\n\n  if (!this[kFs].write && !this[kFs].writev) {\n    throw new ERR_INVALID_ARG_TYPE('options.fs.write'\x2C 'function'\x2C\n                                   this[kFs].write);\n  }\n\n  if (this[kFs].write) {\n    validateFunction(this[kFs].write\x2C 'options.fs.write');\n  }\n\n  if (this[kFs].writev) {\n    validateFunction(this[kFs].writev\x2C 'options.fs.writev');\n  }\n\n  if (options.autoDestroy) {\n    validateFunction(this[kFs].close\x2C 'options.fs.close');\n  }\n\n  // It's enough to override either\x2C in which case only one will be used.\n  if (!this[kFs].write) {\n    this._write = null;\n  }\n  if (!this[kFs].writev) {\n    this._writev = null;\n  }\n\n  this.start = options.start;\n  this.pos = undefined;\n  this.bytesWritten = 0;\n  this[kIsPerformingIO] = false;\n\n  if (this.start !== undefined) {\n    validateInteger(this.start\x2C 'start'\x2C 0);\n\n    this.pos = this.start;\n  }\n\n  ReflectApply(Writable\x2C this\x2C [options]);\n\n  if (options.encoding)\n    this.setDefaultEncoding(options.encoding);\n}\nObjectSetPrototypeOf(WriteStream.prototype\x2C Writable.prototype);\nObjectSetPrototypeOf(WriteStream\x2C Writable);\n\nObjectDefineProperty(WriteStream.prototype\x2C 'autoClose'\x2C {\n  __proto__: null\x2C\n  get() {\n    return this._writableState.autoDestroy;\n  }\x2C\n  set(val) {\n    this._writableState.autoDestroy = val;\n  }\n});\n\nconst openWriteFs = deprecate(function() {\n  // Noop.\n}\x2C 'WriteStream.prototype.open() is deprecated'\x2C 'DEP0135');\nWriteStream.prototype.open = openWriteFs;\n\nWriteStream.prototype._construct = _construct;\n\nWriteStream.prototype._write = function(data\x2C encoding\x2C cb) {\n  this[kIsPerformingIO] = true;\n  this[kFs].write(this.fd\x2C data\x2C 0\x2C data.length\x2C this.pos\x2C (er\x2C bytes) => {\n    this[kIsPerformingIO] = false;\n    if (this.destroyed) {\n      // Tell ._destroy() that it's safe to close the fd now.\n      cb(er);\n      return this.emit(kIoDone\x2C er);\n    }\n\n    if (er) {\n      return cb(er);\n    }\n\n    this.bytesWritten += bytes;\n    cb();\n  });\n\n  if (this.pos !== undefined)\n    this.pos += data.length;\n};\n\nWriteStream.prototype._writev = function(data\x2C cb) {\n  const len = data.length;\n  const chunks = new Array(len);\n  let size = 0;\n\n  for (let i = 0; i < len; i++) {\n    const chunk = data[i].chunk;\n\n    chunks[i] = chunk;\n    size += chunk.length;\n  }\n\n  this[kIsPerformingIO] = true;\n  this[kFs].writev(this.fd\x2C chunks\x2C this.pos\x2C (er\x2C bytes) => {\n    this[kIsPerformingIO] = false;\n    if (this.destroyed) {\n      // Tell ._destroy() that it's safe to close the fd now.\n      cb(er);\n      return this.emit(kIoDone\x2C er);\n    }\n\n    if (er) {\n      return cb(er);\n    }\n\n    this.bytesWritten += bytes;\n    cb();\n  });\n\n  if (this.pos !== undefined)\n    this.pos += size;\n};\n\nWriteStream.prototype._destroy = function(err\x2C cb) {\n  // Usually for async IO it is safe to close a file descriptor\n  // even when there are pending operations. However\x2C due to platform\n  // differences file IO is implemented using synchronous operations\n  // running in a thread pool. Therefore\x2C file descriptors are not safe\n  // to close while used in a pending read or write operation. Wait for\n  // any pending IO (kIsPerformingIO) to complete (kIoDone).\n  if (this[kIsPerformingIO]) {\n    this.once(kIoDone\x2C (er) => close(this\x2C err || er\x2C cb));\n  } else {\n    close(this\x2C err\x2C cb);\n  }\n};\n\nWriteStream.prototype.close = function(cb) {\n  if (cb) {\n    if (this.closed) {\n      process.nextTick(cb);\n      return;\n    }\n    this.on('close'\x2C cb);\n  }\n\n  // If we are not autoClosing\x2C we should call\n  // destroy on 'finish'.\n  if (!this.autoClose) {\n    this.on('finish'\x2C this.destroy);\n  }\n\n  // We use end() instead of destroy() because of\n  // https://github.com/nodejs/node/issues/2006\n  this.end();\n};\n\n// There is no shutdown() for files.\nWriteStream.prototype.destroySoon = WriteStream.prototype.end;\n\nObjectDefineProperty(WriteStream.prototype\x2C 'pending'\x2C {\n  __proto__: null\x2C\n  get() { return this.fd === null; }\x2C\n  configurable: true\n});\n\nmodule.exports = {\n  ReadStream\x2C\n  WriteStream\n};\n
code-source-info,0x117768a27ba8,456,0,13258,C0O0C4O13258,,
code-creation,Function,10,65750,0x117768a28858,875, node:internal/fs/streams:1:1,0x117768a27b20,~
code-source-info,0x117768a
code-creation,LazyCompile,10,65875,0x117768a2a3c8,11,get WriteStream node:fs:3059:18,0x3b46b20190f8,~
code-source-info,0x117768a2a3c8,73,80976,81031,C0O80985C3O80985C6O81008C10O81027,,
code-creation,LazyCompile,10,65875,0x117768a2a4d8,11,get FileReadStream node:fs:3070:21,0x3b46b20191d8,~
code-source-info,0x117768a2a4d8,73,81241,81299,C0O81250C3O81250C6O81273C10O81295,,
code-creation,LazyCompile,10,65916,0x117768a2a5e8,11,get FileWriteStream node:fs:3079:22,0x3b46b20192c8,~
code-source-info,0x117768a2a5e8,73,81383,81442,C0O81392C3O81392C6O81415C10O81438,,
code-creation,LazyCompile,10,65916,0x117768a2a6e0,37,get node:fs:3107:8,0x3b46b20193b8,~
code-source-info,0x117768a2a6e0,73,82048,82141,C0O82059C14O82072C19O82103C26O82068C32O82119C36O82135,,
tick,0x104c1f408,66083,1,0x104a8d6ec,2,0x0,0x109cc9ca0,0x117768a261c4,0x117768a2575d,0x117768a25564,0x117768a0d526,0x105405ef4
code-creation,Eval,10,66250,0x117768a2b600,5, node:child_process:1:1,0x117768a2b0b8,~
script-source,457,node:child_process,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeLastIndexOf\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSort\x2C\n  ArrayPrototypeSplice\x2C\n  ArrayPrototypeUnshift\x2C\n  ArrayPrototypePushApply\x2C\n  NumberIsInteger\x2C\n  ObjectAssign\x2C\n  ObjectDefineProperty\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  RegExpPrototypeExec\x2C\n  SafeSet\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeToUpperCase\x2C\n} = primordials;\n\nconst {\n  convertToValidSignal\x2C\n  createDeferredPromise\x2C\n  getSystemErrorName\x2C\n  kEmptyObject\x2C\n  promisify\x2C\n} = require('internal/util');\nconst { isArrayBufferView } = require('internal/util/types');\nlet debug = require('internal/util/debuglog').debuglog(\n  'child_process'\x2C\n  (fn) => {\n    debug = fn;\n  }\n);\nconst { Buffer } = require('buffer');\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\n\nconst {\n  AbortError\x2C\n  codes: errorCodes\x2C\n  genericNodeError\x2C\n} = require('internal/errors');\nconst {\n  ERR_INVALID_ARG_VALUE\x2C\n  ERR_CHILD_PROCESS_IPC_REQUIRED\x2C\n  ERR_CHILD_PROCESS_STDIO_MAXBUFFER\x2C\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_OUT_OF_RANGE\x2C\n} = errorCodes;\nconst { clearTimeout\x2C setTimeout } = require('timers');\nconst { getValidatedPath } = require('internal/fs/utils');\nconst {\n  isInt32\x2C\n  validateAbortSignal\x2C\n  validateArray\x2C\n  validateBoolean\x2C\n  validateFunction\x2C\n  validateObject\x2C\n  validateString\x2C\n} = require('internal/validators');\nconst child_process = require('internal/child_process');\nconst {\n  getValidStdio\x2C\n  setupChannel\x2C\n  ChildProcess\x2C\n  stdioStringToArray\n} = child_process;\n\nconst MAX_BUFFER = 1024 * 1024;\n\nconst isZOS = process.platform === 'os390';\n\n/**\n * Spawns a new Node.js process + fork.\n * @param {string|URL} modulePath\n * @param {string[]} [args]\n * @param {{\n *   cwd?: string;\n *   detached?: boolean;\n *   env?: Record<string\x2C string>;\n *   execPath?: string;\n *   execArgv?: string[];\n *   gid?: number;\n *   serialization?: string;\n *   signal?: AbortSignal;\n *   killSignal?: string | number;\n *   silent?: boolean;\n *   stdio?: Array | string;\n *   uid?: number;\n *   windowsVerbatimArguments?: boolean;\n *   timeout?: number;\n *   }} [options]\n * @returns {ChildProcess}\n */\nfunction fork(modulePath\x2C args = []\x2C options) {\n  modulePath = getValidatedPath(modulePath\x2C 'modulePath');\n\n  // Get options and args arguments.\n  let execArgv;\n\n  if (args == null) {\n    args = [];\n  } else if (typeof args === 'object' && !ArrayIsArray(args)) {\n    options = args;\n    args = [];\n  } else {\n    validateArray(args\x2C 'args');\n  }\n\n  if (options != null) {\n    validateObject(options\x2C 'options');\n  }\n  options = { ...options\x2C shell: false };\n  options.execPath = options.execPath || process.execPath;\n\n  // Prepare arguments for fork:\n  execArgv = options.execArgv || process.execArgv;\n\n  if (execArgv === process.execArgv && process._eval != null) {\n    const index = ArrayPrototypeLastIndexOf(execArgv\x2C process._eval);\n    if (index > 0) {\n      // Remove the -e switch to avoid fork bombing ourselves.\n      execArgv = ArrayPrototypeSlice(execArgv);\n      ArrayPrototypeSplice(execArgv\x2C index - 1\x2C 2);\n    }\n  }\n\n  args = [...execArgv\x2C modulePath\x2C ...args];\n\n  if (typeof options.stdio === 'string') {\n    options.stdio = stdioStringToArray(options.stdio\x2C 'ipc');\n  } else if (!ArrayIsArray(options.stdio)) {\n    // Use a separate fd=3 for the IPC channel. Inherit stdin\x2C stdout\x2C\n    // and stderr from the parent if silent isn't set.\n    options.stdio = stdioStringToArray(\n      options.silent ? 'pipe' : 'inherit'\x2C\n      'ipc');\n  } else if (!ArrayPrototypeIncludes(options.stdio\x2C 'ipc')) {\n    throw new ERR_CHILD_PROCESS_IPC_REQUIRED('options.stdio');\n  }\n\n  return spawn(options.execPath\x2C args\x2C options);\n}\n\nfunction _forkChild(fd\x2C serializationMode) {\n  // set process.send()\n  const p = new Pipe(PipeConstants.IPC);\n  p.open(fd);\n  p.unref();\n  const control = setupChannel(process\x2C p\x2C serializationMode);\n  process.on('newListener'\x2C function onNewListener(name) {\n    if (name === 'message' || name === 'disconnect') control.refCounted();\n  });\n  process.on('removeListener'\x2C function onRemoveListener(name) {\n    if (name === 'message' || name === 'disconnect') control.unrefCounted();\n  });\n}\n\nfunction normalizeExecArgs(command\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n\n  // Make a shallow copy so we don't clobber the user's options object.\n  options = { ...options };\n  options.shell = typeof options.shell === 'string' ? options.shell : true;\n\n  return {\n    file: command\x2C\n    options: options\x2C\n    callback: callback\n  };\n}\n\n/**\n * Spawns a shell executing the given command.\n * @param {string} command\n * @param {{\n *   cmd?: string;\n *   env?: Record<string\x2C string>;\n *   encoding?: string;\n *   shell?: string;\n *   signal?: AbortSignal;\n *   timeout?: number;\n *   maxBuffer?: number;\n *   killSignal?: string | number;\n *   uid?: number;\n *   gid?: number;\n *   windowsHide?: boolean;\n *   }} [options]\n * @param {(\n *   error?: Error\x2C\n *   stdout?: string | Buffer\x2C\n *   stderr?: string | Buffer\n *   ) => any} [callback]\n * @returns {ChildProcess}\n */\nfunction exec(command\x2C options\x2C callback) {\n  const opts = normalizeExecArgs(command\x2C options\x2C callback);\n  return module.exports.execFile(opts.file\x2C\n                                 opts.options\x2C\n                                 opts.callback);\n}\n\nconst customPromiseExecFunction = (orig) => {\n  return (...args) => {\n    const { promise\x2C resolve\x2C reject } = createDeferredPromise();\n\n    promise.child = orig(...args\x2C (err\x2C stdout\x2C stderr) => {\n      if (err !== null) {\n        err.stdout = stdout;\n        err.stderr = stderr;\n        reject(err);\n      } else {\n        resolve({ stdout\x2C stderr });\n      }\n    });\n\n    return promise;\n  };\n};\n\nObjectDefineProperty(exec\x2C promisify.custom\x2C {\n  __proto__: null\x2C\n  enumerable: false\x2C\n  value: customPromiseExecFunction(exec)\n});\n\nfunction normalizeExecFileArgs(file\x2C args\x2C options\x2C callback) {\n  if (ArrayIsArray(args)) {\n    args = ArrayPrototypeSlice(args);\n  } else if (args != null && typeof args === 'object') {\n    callback = options;\n    options = args;\n    args = null;\n  } else if (typeof args === 'function') {\n    callback = args;\n    options = null;\n    args = null;\n  }\n\n  if (args == null) {\n    args = [];\n  }\n\n  if (typeof options === 'function') {\n    callback = options;\n  } else if (options != null) {\n    validateObject(options\x2C 'options');\n  }\n\n  if (options == null) {\n    options = kEmptyObject;\n  }\n\n  if (callback != null) {\n    validateFunction(callback\x2C 'callback');\n  }\n\n  // Validate argv0\x2C if present.\n  if (options.argv0 != null) {\n    validateString(options.argv0\x2C 'options.argv0');\n  }\n\n  return { file\x2C args\x2C options\x2C callback };\n}\n\n/**\n * Spawns the specified file as a shell.\n * @param {string} file\n * @param {string[]} [args]\n * @param {{\n *   cwd?: string;\n *   env?: Record<string\x2C string>;\n *   encoding?: string;\n *   timeout?: number;\n *   maxBuffer?: number;\n *   killSignal?: string | number;\n *   uid?: number;\n *   gid?: number;\n *   windowsHide?: boolean;\n *   windowsVerbatimArguments?: boolean;\n *   shell?: boolean | string;\n *   signal?: AbortSignal;\n *   }} [options]\n * @param {(\n *   error?: Error\x2C\n *   stdout?: string | Buffer\x2C\n *   stderr?: string | Buffer\n *   ) => any} [callback]\n * @returns {ChildProcess}\n */\nfunction execFile(file\x2C args\x2C options\x2C callback) {\n  ({ file\x2C args\x2C options\x2C callback } = normalizeExecFileArgs(file\x2C args\x2C options\x2C callback));\n\n  options = {\n    encoding: 'utf8'\x2C\n    timeout: 0\x2C\n    maxBuffer: MAX_BUFFER\x2C\n    killSignal: 'SIGTERM'\x2C\n    cwd: null\x2C\n    env: null\x2C\n    shell: false\x2C\n    ...options\n  };\n\n  // Validate the timeout\x2C if present.\n  validateTimeout(options.timeout);\n\n  // Validate maxBuffer\x2C if present.\n  validateMaxBuffer(options.maxBuffer);\n\n  options.killSignal = sanitizeKillSignal(options.killSignal);\n\n  const child = spawn(file\x2C args\x2C {\n    cwd: options.cwd\x2C\n    env: options.env\x2C\n    gid: options.gid\x2C\n    shell: options.shell\x2C\n    signal: options.signal\x2C\n    uid: options.uid\x2C\n    windowsHide: !!options.windowsHide\x2C\n    windowsVerbatimArguments: !!options.windowsVerbatimArguments\n  });\n\n  let encoding;\n  const _stdout = [];\n  const _stderr = [];\n  if (options.encoding !== 'buffer' && Buffer.isEncoding(options.encoding)) {\n    encoding = options.encoding;\n  } else {\n    encoding = null;\n  }\n  let stdoutLen = 0;\n  let stderrLen = 0;\n  let killed = false;\n  let exited = false;\n  let timeoutId;\n\n  let ex = null;\n\n  let cmd = file;\n\n  function exithandler(code\x2C signal) {\n    if (exited) return;\n    exited = true;\n\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n      timeoutId = null;\n    }\n\n    if (!callback) return;\n\n    // merge chunks\n    let stdout;\n    let stderr;\n    if (encoding ||\n      (\n        child.stdout &&\n        child.stdout.readableEncoding\n      )) {\n      stdout = ArrayPrototypeJoin(_stdout\x2C '');\n    } else {\n      stdout = Buffer.concat(_stdout);\n    }\n    if (encoding ||\n      (\n        child.stderr &&\n        child.stderr.readableEncoding\n      )) {\n      stderr = ArrayPrototypeJoin(_stderr\x2C '');\n    } else {\n      stderr = Buffer.concat(_stderr);\n    }\n\n    if (!ex && code === 0 && signal === null) {\n      callback(null\x2C stdout\x2C stderr);\n      return;\n    }\n\n    if (args?.length)\n      cmd += ` ${ArrayPrototypeJoin(args\x2C ' ')}`;\n\n    if (!ex) {\n      ex = genericNodeError(`Command failed: ${cmd}\\n${stderr}`\x2C {\n        code: code < 0 ? getSystemErrorName(code) : code\x2C\n        killed: child.killed || killed\x2C\n        signal: signal\n      });\n    }\n\n    ex.cmd = cmd;\n    callback(ex\x2C stdout\x2C stderr);\n  }\n\n  function errorhandler(e) {\n    ex = e;\n\n    if (child.stdout)\n      child.stdout.destroy();\n\n    if (child.stderr)\n      child.stderr.destroy();\n\n    exithandler();\n  }\n\n  function kill() {\n    if (child.stdout)\n      child.stdout.destroy();\n\n    if (child.stderr)\n      child.stderr.destroy();\n\n    killed = true;\n    try {\n      child.kill(options.killSignal);\n    } catch (e) {\n      ex = e;\n      exithandler();\n    }\n  }\n\n  if (options.timeout > 0) {\n    timeoutId = setTimeout(function delayedKill() {\n      kill();\n      timeoutId = null;\n    }\x2C options.timeout);\n  }\n\n  if (child.stdout) {\n    if (encoding)\n      child.stdout.setEncoding(encoding);\n\n    child.stdout.on('data'\x2C function onChildStdout(chunk) {\n      // Do not need to count the length\n      if (options.maxBuffer === Infinity) {\n        ArrayPrototypePush(_stdout\x2C chunk);\n        return;\n      }\n      const encoding = child.stdout.readableEncoding;\n      const length = encoding ?\n        Buffer.byteLength(chunk\x2C encoding) :\n        chunk.length;\n      const slice = encoding ? StringPrototypeSlice :\n        (buf\x2C ...args) => buf.slice(...args);\n      stdoutLen += length;\n\n      if (stdoutLen > options.maxBuffer) {\n        const truncatedLen = options.maxBuffer - (stdoutLen - length);\n        ArrayPrototypePush(_stdout\x2C slice(chunk\x2C 0\x2C truncatedLen));\n\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stdout');\n        kill();\n      } else {\n        ArrayPrototypePush(_stdout\x2C chunk);\n      }\n    });\n  }\n\n  if (child.stderr) {\n    if (encoding)\n      child.stderr.setEncoding(encoding);\n\n    child.stderr.on('data'\x2C function onChildStderr(chunk) {\n      // Do not need to count the length\n      if (options.maxBuffer === Infinity) {\n        ArrayPrototypePush(_stderr\x2C chunk);\n        return;\n      }\n      const encoding = child.stderr.readableEncoding;\n      const length = encoding ?\n        Buffer.byteLength(chunk\x2C encoding) :\n        chunk.length;\n      stderrLen += length;\n\n      if (stderrLen > options.maxBuffer) {\n        const truncatedLen = options.maxBuffer - (stderrLen - length);\n        ArrayPrototypePush(_stderr\x2C\n                           chunk.slice(0\x2C truncatedLen));\n\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stderr');\n        kill();\n      } else {\n        ArrayPrototypePush(_stderr\x2C chunk);\n      }\n    });\n  }\n\n  child.addListener('close'\x2C exithandler);\n  child.addListener('error'\x2C errorhandler);\n\n  return child;\n}\n\nObjectDefineProperty(execFile\x2C promisify.custom\x2C {\n  __proto__: null\x2C\n  enumerable: false\x2C\n  value: customPromiseExecFunction(execFile)\n});\n\nfunction copyProcessEnvToEnv(env\x2C name\x2C optionEnv) {\n  if (process.env[name] &&\n      (!optionEnv ||\n       !ObjectPrototypeHasOwnProperty(optionEnv\x2C name))) {\n    env[name] = process.env[name];\n  }\n}\n\nfunction normalizeSpawnArguments(file\x2C args\x2C options) {\n  validateString(file\x2C 'file');\n\n  if (file.length === 0)\n    throw new ERR_INVALID_ARG_VALUE('file'\x2C file\x2C 'cannot be empty');\n\n  if (ArrayIsArray(args)) {\n    args = ArrayPrototypeSlice(args);\n  } else if (args == null) {\n    args = [];\n  } else if (typeof args !== 'object') {\n    throw new ERR_INVALID_ARG_TYPE('args'\x2C 'object'\x2C args);\n  } else {\n    options = args;\n    args = [];\n  }\n\n  if (options === undefined)\n    options = kEmptyObject;\n  else\n    validateObject(options\x2C 'options');\n\n  let cwd = options.cwd;\n\n  // Validate the cwd\x2C if present.\n  if (cwd != null) {\n    cwd = getValidatedPath(cwd\x2C 'options.cwd');\n  }\n\n  // Validate detached\x2C if present.\n  if (options.detached != null) {\n    validateBoolean(options.detached\x2C 'options.detached');\n  }\n\n  // Validate the uid\x2C if present.\n  if (options.uid != null && !isInt32(options.uid)) {\n    throw new ERR_INVALID_ARG_TYPE('options.uid'\x2C 'int32'\x2C options.uid);\n  }\n\n  // Validate the gid\x2C if present.\n  if (options.gid != null && !isInt32(options.gid)) {\n    throw new ERR_INVALID_ARG_TYPE('options.gid'\x2C 'int32'\x2C options.gid);\n  }\n\n  // Validate the shell\x2C if present.\n  if (options.shell != null &&\n      typeof options.shell !== 'boolean' &&\n      typeof options.shell !== 'string') {\n    throw new ERR_INVALID_ARG_TYPE('options.shell'\x2C\n                                   ['boolean'\x2C 'string']\x2C options.shell);\n  }\n\n  // Validate argv0\x2C if present.\n  if (options.argv0 != null) {\n    validateString(options.argv0\x2C 'options.argv0');\n  }\n\n  // Validate windowsHide\x2C if present.\n  if (options.windowsHide != null) {\n    validateBoolean(options.windowsHide\x2C 'options.windowsHide');\n  }\n\n  // Validate windowsVerbatimArguments\x2C if present.\n  let { windowsVerbatimArguments } = options;\n  if (windowsVerbatimArguments != null) {\n    validateBoolean(windowsVerbatimArguments\x2C\n                    'options.windowsVerbatimArguments');\n  }\n\n  if (options.shell) {\n    const command = ArrayPrototypeJoin([file\x2C ...args]\x2C ' ');\n    // Set the shell\x2C switches\x2C and commands.\n    if (process.platform === 'win32') {\n      if (typeof options.shell === 'string')\n        file = options.shell;\n      else\n        file = process.env.comspec || 'cmd.exe';\n      // '/d /s /c' is used only for cmd.exe.\n      if (RegExpPrototypeExec(/^(?:.*\\\\)?cmd(?:\\.exe)?$/i\x2C file) !== null) {\n        args = ['/d'\x2C '/s'\x2C '/c'\x2C `"${command}"`];\n        windowsVerbatimArguments = true;\n      } else {\n        args = ['-c'\x2C command];\n      }\n    } else {\n      if (typeof options.shell === 'string')\n        file = options.shell;\n      else if (process.platform === 'android')\n        file = '/system/bin/sh';\n      else\n        file = '/bin/sh';\n      args = ['-c'\x2C command];\n    }\n  }\n\n  if (typeof options.argv0 === 'string') {\n    ArrayPrototypeUnshift(args\x2C options.argv0);\n  } else {\n    ArrayPrototypeUnshift(args\x2C file);\n  }\n\n  const env = options.env || process.env;\n  const envPairs = [];\n\n  // process.env.NODE_V8_COVERAGE always propagates\x2C making it possible to\n  // collect coverage for programs that spawn with white-listed environment.\n  copyProcessEnvToEnv(env\x2C 'NODE_V8_COVERAGE'\x2C options.env);\n\n  if (isZOS) {\n    // The following environment variables must always propagate if set.\n    copyProcessEnvToEnv(env\x2C '_BPXK_AUTOCVT'\x2C options.env);\n    copyProcessEnvToEnv(env\x2C '_CEE_RUNOPTS'\x2C options.env);\n    copyProcessEnvToEnv(env\x2C '_TAG_REDIR_ERR'\x2C options.env);\n    copyProcessEnvToEnv(env\x2C '_TAG_REDIR_IN'\x2C options.env);\n    copyProcessEnvToEnv(env\x2C '_TAG_REDIR_OUT'\x2C options.env);\n    copyProcessEnvToEnv(env\x2C 'STEPLIB'\x2C options.env);\n    copyProcessEnvToEnv(env\x2C 'LIBPATH'\x2C options.env);\n    copyProcessEnvToEnv(env\x2C '_EDC_SIG_DFLT'\x2C options.env);\n    copyProcessEnvToEnv(env\x2C '_EDC_SUSV3'\x2C options.env);\n  }\n\n  let envKeys = [];\n  // Prototype values are intentionally included.\n  for (const key in env) {\n    ArrayPrototypePush(envKeys\x2C key);\n  }\n\n  if (process.platform === 'win32') {\n    // On Windows env keys are case insensitive. Filter out duplicates\x2C\n    // keeping only the first one (in lexicographic order)\n    const sawKey = new SafeSet();\n    envKeys = ArrayPrototypeFilter(\n      ArrayPrototypeSort(envKeys)\x2C\n      (key) => {\n        const uppercaseKey = StringPrototypeToUpperCase(key);\n        if (sawKey.has(uppercaseKey)) {\n          return false;\n        }\n        sawKey.add(uppercaseKey);\n        return true;\n      }\n    );\n  }\n\n  for (const key of envKeys) {\n    const value = env[key];\n    if (value !== undefined) {\n      ArrayPrototypePush(envPairs\x2C `${key}=${value}`);\n    }\n  }\n\n  return {\n    // Make a shallow copy so we don't clobber the user's options object.\n    ...options\x2C\n    args\x2C\n    cwd\x2C\n    detached: !!options.detached\x2C\n    envPairs\x2C\n    file\x2C\n    windowsHide: !!options.windowsHide\x2C\n    windowsVerbatimArguments: !!windowsVerbatimArguments\x2C\n  };\n}\n\nfunction abortChildProcess(child\x2C killSignal) {\n  if (!child)\n    return;\n  try {\n    if (child.kill(killSignal)) {\n      child.emit('error'\x2C new AbortError());\n    }\n  } catch (err) {\n    child.emit('error'\x2C err);\n  }\n}\n\n/**\n * Spawns a new process using the given `file`.\n * @param {string} file\n * @param {string[]} [args]\n * @param {{\n *   cwd?: string;\n *   env?: Record<string\x2C string>;\n *   argv0?: string;\n *   stdio?: Array | string;\n *   detached?: boolean;\n *   uid?: number;\n *   gid?: number;\n *   serialization?: string;\n *   shell?: boolean | string;\n *   windowsVerbatimArguments?: boolean;\n *   windowsHide?: boolean;\n *   signal?: AbortSignal;\n *   timeout?: number;\n *   killSignal?: string | number;\n *   }} [options]\n * @returns {ChildProcess}\n */\nfunction spawn(file\x2C args\x2C options) {\n  options = normalizeSpawnArguments(file\x2C args\x2C options);\n  validateTimeout(options.timeout);\n  validateAbortSignal(options.signal\x2C 'options.signal');\n  const killSignal = sanitizeKillSignal(options.killSignal);\n  const child = new ChildProcess();\n\n  debug('spawn'\x2C options);\n  child.spawn(options);\n\n  if (options.timeout > 0) {\n    let timeoutId = setTimeout(() => {\n      if (timeoutId) {\n        try {\n          child.kill(killSignal);\n        } catch (err) {\n          child.emit('error'\x2C err);\n        }\n        timeoutId = null;\n      }\n    }\x2C options.timeout);\n\n    child.once('exit'\x2C () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n        timeoutId = null;\n      }\n    });\n  }\n\n  if (options.signal) {\n    const signal = options.signal;\n    if (signal.aborted) {\n      process.nextTick(onAbortListener);\n    } else {\n      signal.addEventListener('abort'\x2C onAbortListener\x2C { once: true });\n      child.once('exit'\x2C\n                 () => signal.removeEventListener('abort'\x2C onAbortListener));\n    }\n\n    function onAbortListener() {\n      abortChildProcess(child\x2C killSignal);\n    }\n  }\n\n  return child;\n}\n\n/**\n * Spawns a new process synchronously using the given `file`.\n * @param {string} file\n * @param {string[]} [args]\n * @param {{\n *   cwd?: string;\n *   input?: string | Buffer | TypedArray | DataView;\n *   argv0?: string;\n *   stdio?: string | Array;\n *   env?: Record<string\x2C string>;\n *   uid?: number;\n *   gid?: number;\n *   timeout?: number;\n *   killSignal?: string | number;\n *   maxBuffer?: number;\n *   encoding?: string;\n *   shell?: boolean | string;\n *   windowsVerbatimArguments?: boolean;\n *   windowsHide?: boolean;\n *   }} [options]\n * @returns {{\n *   pid: number;\n *   output: Array;\n *   stdout: Buffer | string;\n *   stderr: Buffer | string;\n *   status: number | null;\n *   signal: string | null;\n *   error: Error;\n *   }}\n */\nfunction spawnSync(file\x2C args\x2C options) {\n  options = {\n    maxBuffer: MAX_BUFFER\x2C\n    ...normalizeSpawnArguments(file\x2C args\x2C options)\n  };\n\n  debug('spawnSync'\x2C options);\n\n  // Validate the timeout\x2C if present.\n  validateTimeout(options.timeout);\n\n  // Validate maxBuffer\x2C if present.\n  validateMaxBuffer(options.maxBuffer);\n\n  // Validate and translate the kill signal\x2C if present.\n  options.killSignal = sanitizeKillSignal(options.killSignal);\n\n  options.stdio = getValidStdio(options.stdio || 'pipe'\x2C true).stdio;\n\n  if (options.input) {\n    const stdin = options.stdio[0] = { ...options.stdio[0] };\n    stdin.input = options.input;\n  }\n\n  // We may want to pass data in on any given fd\x2C ensure it is a valid buffer\n  for (let i = 0; i < options.stdio.length; i++) {\n    const input = options.stdio[i] && options.stdio[i].input;\n    if (input != null) {\n      const pipe = options.stdio[i] = { ...options.stdio[i] };\n      if (isArrayBufferView(input)) {\n        pipe.input = input;\n      } else if (typeof input === 'string') {\n        pipe.input = Buffer.from(input\x2C options.encoding);\n      } else {\n        throw new ERR_INVALID_ARG_TYPE(`options.stdio[${i}]`\x2C\n                                       ['Buffer'\x2C\n                                        'TypedArray'\x2C\n                                        'DataView'\x2C\n                                        'string']\x2C\n                                       input);\n      }\n    }\n  }\n\n  return child_process.spawnSync(options);\n}\n\n\nfunction checkExecSyncError(ret\x2C args\x2C cmd) {\n  let err;\n  if (ret.error) {\n    err = ret.error;\n    ObjectAssign(err\x2C ret);\n  } else if (ret.status !== 0) {\n    let msg = 'Command failed: ';\n    msg += cmd || ArrayPrototypeJoin(args\x2C ' ');\n    if (ret.stderr && ret.stderr.length > 0)\n      msg += `\\n${ret.stderr.toString()}`;\n    err = genericNodeError(msg\x2C ret);\n  }\n  return err;\n}\n\n/**\n * Spawns a file as a shell synchronously.\n * @param {string} file\n * @param {string[]} [args]\n * @param {{\n *   cwd?: string;\n *   input?: string | Buffer | TypedArray | DataView;\n *   stdio?: string | Array;\n *   env?: Record<string\x2C string>;\n *   uid?: number;\n *   gid?: number;\n *   timeout?: number;\n *   killSignal?: string | number;\n *   maxBuffer?: number;\n *   encoding?: string;\n *   windowsHide?: boolean;\n *   shell?: boolean | string;\n *   }} [options]\n * @returns {Buffer | string}\n */\nfunction execFileSync(file\x2C args\x2C options) {\n  ({ file\x2C args\x2C options } = normalizeExecFileArgs(file\x2C args\x2C options));\n\n  const inheritStderr = !options.stdio;\n  const ret = spawnSync(file\x2C args\x2C options);\n\n  if (inheritStderr && ret.stderr)\n    process.stderr.write(ret.stderr);\n\n  const errArgs = [options.argv0 || file];\n  ArrayPrototypePushApply(errArgs\x2C args);\n  const err = checkExecSyncError(ret\x2C errArgs);\n\n  if (err)\n    throw err;\n\n  return ret.stdout;\n}\n\n/**\n * Spawns a shell executing the given `command` synchronously.\n * @param {string} command\n * @param {{\n *   cwd?: string;\n *   input?: string | Buffer | TypedArray | DataView;\n *   stdio?: string | Array;\n *   env?: Record<string\x2C string>;\n *   shell?: string;\n *   uid?: number;\n *   gid?: number;\n *   timeout?: number;\n *   killSignal?: string | number;\n *   maxBuffer?: number;\n *   encoding?: string;\n *   windowsHide?: boolean;\n *   }} [options]\n * @returns {Buffer | string}\n */\nfunction execSync(command\x2C options) {\n  const opts = normalizeExecArgs(command\x2C options\x2C null);\n  const inheritStderr = !opts.options.stdio;\n\n  const ret = spawnSync(opts.file\x2C opts.options);\n\n  if (inheritStderr && ret.stderr)\n    process.stderr.write(ret.stderr);\n\n  const err = checkExecSyncError(ret\x2C opts.args\x2C command);\n\n  if (err)\n    throw err;\n\n  return ret.stdout;\n}\n\n\nfunction validateTimeout(timeout) {\n  if (timeout != null && !(NumberIsInteger(timeout) && timeout >= 0)) {\n    throw new ERR_OUT_OF_RANGE('timeout'\x2C 'an unsigned integer'\x2C timeout);\n  }\n}\n\n\nfunction validateMaxBuffer(maxBuffer) {\n  if (maxBuffer != null && !(typeof maxBuffer === 'number' && maxBuffer >= 0)) {\n    throw new ERR_OUT_OF_RANGE('options.maxBuffer'\x2C\n                               'a positive number'\x2C\n                               maxBuffer);\n  }\n}\n\n\nfunction sanitizeKillSignal(killSignal) {\n  if (typeof killSignal === 'string' || typeof killSignal === 'number') {\n    return convertToValidSignal(killSignal);\n  } else if (killSignal != null) {\n    throw new ERR_INVALID_ARG_TYPE('options.killSignal'\x2C\n                                   ['string'\x2C 'number']\x2C\n                                   killSignal);\n  }\n}\n\nmodule.exports = {\n  _forkChild\x2C\n  ChildProcess\x2C\n  exec\x2C\n  execFile\x2C\n  execFileSync\x2C\n  execSync\x2C\n  fork\x2C\n  spawn\x2C\n  spawnSync\n};\n
code-source-info,0x117768a2b600,457,0,25910,C0O0C4O25910,,
code-creation,Function,10,67208,0x117768a2c140,814, node:child_process:1:1,0x117768a2b578,~
code-source-info,0x117768a2c
tick,0x105089964,67333,1,0x104a8d6ec,2,0x0,0x109cc9ca0,0x109cc956c,0x117768a2c3b7,0x109cc9d6c,0x117768a261c4,0x117768a2575d,0x117768a25564,0x117768a0d526,0x105405ef4
code-creation,Eval,10,67625,0x117768a2fe98,5, node:internal/child_process:1:1,0x117768a2f1e0,~
script-source,458,node:internal/child_process,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeReduce\x2C\n  ArrayPrototypeSlice\x2C\n  FunctionPrototype\x2C\n  FunctionPrototypeCall\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  StringPrototypeSlice\x2C\n  Symbol\x2C\n  Uint8Array\x2C\n} = primordials;\n\nconst {\n  errnoException\x2C\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_HANDLE_TYPE\x2C\n    ERR_INVALID_SYNC_FORK_INPUT\x2C\n    ERR_IPC_CHANNEL_CLOSED\x2C\n    ERR_IPC_DISCONNECTED\x2C\n    ERR_IPC_ONE_PIPE\x2C\n    ERR_IPC_SYNC_FORK\x2C\n    ERR_MISSING_ARGS\n  }\n} = require('internal/errors');\nconst {\n  validateArray\x2C\n  validateObject\x2C\n  validateOneOf\x2C\n  validateString\x2C\n} = require('internal/validators');\nconst EventEmitter = require('events');\nconst net = require('net');\nconst dgram = require('dgram');\nconst inspect = require('internal/util/inspect').inspect;\nconst assert = require('internal/assert');\n\nconst { Process } = internalBinding('process_wrap');\nconst {\n  WriteWrap\x2C\n  kReadBytesOrError\x2C\n  kArrayBufferOffset\x2C\n  kLastWriteWasAsync\x2C\n  streamBaseState\n} = internalBinding('stream_wrap');\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\nconst { TCP } = internalBinding('tcp_wrap');\nconst { TTY } = internalBinding('tty_wrap');\nconst { UDP } = internalBinding('udp_wrap');\nconst SocketList = require('internal/socket_list');\nconst { owner_symbol } = require('internal/async_hooks').symbols;\nconst { convertToValidSignal\x2C deprecate } = require('internal/util');\nconst { isArrayBufferView } = require('internal/util/types');\nconst spawn_sync = internalBinding('spawn_sync');\nconst { kStateSymbol } = require('internal/dgram');\n\nconst {\n  UV_EACCES\x2C\n  UV_EAGAIN\x2C\n  UV_EINVAL\x2C\n  UV_EMFILE\x2C\n  UV_ENFILE\x2C\n  UV_ENOENT\x2C\n  UV_ENOSYS\x2C\n  UV_ESRCH\n} = internalBinding('uv');\n\nconst { SocketListSend\x2C SocketListReceive } = SocketList;\n\n// Lazy loaded for startup performance and to allow monkey patching of\n// internalBinding('http_parser').HTTPParser.\nlet freeParser;\nlet HTTPParser;\n\nconst MAX_HANDLE_RETRANSMISSIONS = 3;\nconst kChannelHandle = Symbol('kChannelHandle');\nconst kIsUsedAsStdio = Symbol('kIsUsedAsStdio');\nconst kPendingMessages = Symbol('kPendingMessages');\n\n// This object contain function to convert TCP objects to native handle objects\n// and back again.\nconst handleConversion = {\n  'net.Native': {\n    simultaneousAccepts: true\x2C\n\n    send(message\x2C handle\x2C options) {\n      return handle;\n    }\x2C\n\n    got(message\x2C handle\x2C emit) {\n      emit(handle);\n    }\n  }\x2C\n\n  'net.Server': {\n    simultaneousAccepts: true\x2C\n\n    send(message\x2C server\x2C options) {\n      return server._handle;\n    }\x2C\n\n    got(message\x2C handle\x2C emit) {\n      const server = new net.Server();\n      server.listen(handle\x2C () => {\n        emit(server);\n      });\n    }\n  }\x2C\n\n  'net.Socket': {\n    send(message\x2C socket\x2C options) {\n      if (!socket._handle)\n        return;\n\n      // If the socket was created by net.Server\n      if (socket.server) {\n        // The worker should keep track of the socket\n        message.key = socket.server._connectionKey;\n\n        const firstTime = !this[kChannelHandle].sockets.send[message.key];\n        const socketList = getSocketList('send'\x2C this\x2C message.key);\n\n        // The server should no longer expose a .connection property\n        // and when asked to close it should query the socket status from\n        // the workers\n        if (firstTime) socket.server._setupWorker(socketList);\n\n        // Act like socket is detached\n        if (!options.keepOpen)\n          socket.server._connections--;\n      }\n\n      const handle = socket._handle;\n\n      // Remove handle from socket object\x2C it will be closed when the socket\n      // will be sent\n      if (!options.keepOpen) {\n        handle.onread = nop;\n        socket._handle = null;\n        socket.setTimeout(0);\n\n        if (freeParser === undefined)\n          freeParser = require('_http_common').freeParser;\n        if (HTTPParser === undefined)\n          HTTPParser = require('_http_common').HTTPParser;\n\n        // In case of an HTTP connection socket\x2C release the associated\n        // resources\n        if (socket.parser && socket.parser instanceof HTTPParser) {\n          freeParser(socket.parser\x2C null\x2C socket);\n          if (socket._httpMessage)\n            socket._httpMessage.detachSocket(socket);\n        }\n      }\n\n      return handle;\n    }\x2C\n\n    postSend(message\x2C handle\x2C options\x2C callback\x2C target) {\n      // Store the handle after successfully sending it\x2C so it can be closed\n      // when the NODE_HANDLE_ACK is received. If the handle could not be sent\x2C\n      // just close it.\n      if (handle && !options.keepOpen) {\n        if (target) {\n          // There can only be one _pendingMessage as passing handles are\n          // processed one at a time: handles are stored in _handleQueue while\n          // waiting for the NODE_HANDLE_ACK of the current passing handle.\n          assert(!target._pendingMessage);\n          target._pendingMessage =\n              { callback\x2C message\x2C handle\x2C options\x2C retransmissions: 0 };\n        } else {\n          handle.close();\n        }\n      }\n    }\x2C\n\n    got(message\x2C handle\x2C emit) {\n      const socket = new net.Socket({\n        handle: handle\x2C\n        readable: true\x2C\n        writable: true\n      });\n\n      // If the socket was created by net.Server we will track the socket\n      if (message.key) {\n\n        // Add socket to connections list\n        const socketList = getSocketList('got'\x2C this\x2C message.key);\n        socketList.add({\n          socket: socket\n        });\n      }\n\n      emit(socket);\n    }\n  }\x2C\n\n  'dgram.Native': {\n    simultaneousAccepts: false\x2C\n\n    send(message\x2C handle\x2C options) {\n      return handle;\n    }\x2C\n\n    got(message\x2C handle\x2C emit) {\n      emit(handle);\n    }\n  }\x2C\n\n  'dgram.Socket': {\n    simultaneousAccepts: false\x2C\n\n    send(message\x2C socket\x2C options) {\n      message.dgramType = socket.type;\n\n      return socket[kStateSymbol].handle;\n    }\x2C\n\n    got(message\x2C handle\x2C emit) {\n      const socket = new dgram.Socket(message.dgramType);\n\n      socket.bind(handle\x2C () => {\n        emit(socket);\n      });\n    }\n  }\n};\n\nfunction stdioStringToArray(stdio\x2C channel) {\n  const options = [];\n\n  switch (stdio) {\n    case 'ignore':\n    case 'overlapped':\n    case 'pipe': ArrayPrototypePush(options\x2C stdio\x2C stdio\x2C stdio); break;\n    case 'inherit': ArrayPrototypePush(options\x2C 0\x2C 1\x2C 2); break;\n    default:\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\n  }\n\n  if (channel) ArrayPrototypePush(options\x2C channel);\n\n  return options;\n}\n\nfunction ChildProcess() {\n  FunctionPrototypeCall(EventEmitter\x2C this);\n\n  this._closesNeeded = 1;\n  this._closesGot = 0;\n  this.connected = false;\n\n  this.signalCode = null;\n  this.exitCode = null;\n  this.killed = false;\n  this.spawnfile = null;\n\n  this._handle = new Process();\n  this._handle[owner_symbol] = this;\n\n  this._handle.onexit = (exitCode\x2C signalCode) => {\n    if (signalCode) {\n      this.signalCode = signalCode;\n    } else {\n      this.exitCode = exitCode;\n    }\n\n    if (this.stdin) {\n      this.stdin.destroy();\n    }\n\n    this._handle.close();\n    this._handle = null;\n\n    if (exitCode < 0) {\n      const syscall = this.spawnfile ? 'spawn ' + this.spawnfile : 'spawn';\n      const err = errnoException(exitCode\x2C syscall);\n\n      if (this.spawnfile)\n        err.path = this.spawnfile;\n\n      err.spawnargs = ArrayPrototypeSlice(this.spawnargs\x2C 1);\n      this.emit('error'\x2C err);\n    } else {\n      this.emit('exit'\x2C this.exitCode\x2C this.signalCode);\n    }\n\n    // If any of the stdio streams have not been touched\x2C\n    // then pull all the data through so that it can get the\n    // eof and emit a 'close' event.\n    // Do it on nextTick so that the user has one last chance\n    // to consume the output\x2C if for example they only want to\n    // start reading the data once the process exits.\n    process.nextTick(flushStdio\x2C this);\n\n    maybeClose(this);\n  };\n}\nObjectSetPrototypeOf(ChildProcess.prototype\x2C EventEmitter.prototype);\nObjectSetPrototypeOf(ChildProcess\x2C EventEmitter);\n\n\nfunction flushStdio(subprocess) {\n  const stdio = subprocess.stdio;\n\n  if (stdio == null) return;\n\n  for (let i = 0; i < stdio.length; i++) {\n    const stream = stdio[i];\n    // TODO(addaleax): This doesn't necessarily account for all the ways in\n    // which data can be read from a stream\x2C e.g. being consumed on the\n    // native layer directly as a StreamBase.\n    if (!stream || !stream.readable || stream[kIsUsedAsStdio]) {\n      continue;\n    }\n    stream.resume();\n  }\n}\n\n\nfunction createSocket(pipe\x2C readable) {\n  return net.Socket({ handle: pipe\x2C readable });\n}\n\n\nfunction getHandleWrapType(stream) {\n  if (stream instanceof Pipe) return 'pipe';\n  if (stream instanceof TTY) return 'tty';\n  if (stream instanceof TCP) return 'tcp';\n  if (stream instanceof UDP) return 'udp';\n\n  return false;\n}\n\nfunction closePendingHandle(target) {\n  target._pendingMessage.handle.close();\n  target._pendingMessage = null;\n}\n\n\nChildProcess.prototype.spawn = function(options) {\n  let i = 0;\n\n  validateObject(options\x2C 'options');\n\n  // If no `stdio` option was given - use default\n  let stdio = options.stdio || 'pipe';\n\n  stdio = getValidStdio(stdio\x2C false);\n\n  const ipc = stdio.ipc;\n  const ipcFd = stdio.ipcFd;\n  stdio = options.stdio = stdio.stdio;\n\n\n  validateOneOf(options.serialization\x2C 'options.serialization'\x2C\n                [undefined\x2C 'json'\x2C 'advanced']);\n  const serialization = options.serialization || 'json';\n\n  if (ipc !== undefined) {\n    // Let child process know about opened IPC channel\n    if (options.envPairs === undefined)\n      options.envPairs = [];\n    else\n      validateArray(options.envPairs\x2C 'options.envPairs');\n\n    ArrayPrototypePush(options.envPairs\x2C `NODE_CHANNEL_FD=${ipcFd}`);\n    ArrayPrototypePush(options.envPairs\x2C\n                       `NODE_CHANNEL_SERIALIZATION_MODE=${serialization}`);\n  }\n\n  validateString(options.file\x2C 'options.file');\n  this.spawnfile = options.file;\n\n  if (options.args === undefined) {\n    this.spawnargs = [];\n  } else {\n    validateArray(options.args\x2C 'options.args');\n    this.spawnargs = options.args;\n  }\n\n  const err = this._handle.spawn(options);\n\n  // Run-time errors should emit an error\x2C not throw an exception.\n  if (err === UV_EACCES ||\n      err === UV_EAGAIN ||\n      err === UV_EMFILE ||\n      err === UV_ENFILE ||\n      err === UV_ENOENT) {\n    process.nextTick(onErrorNT\x2C this\x2C err);\n\n    // There is no point in continuing when we've hit EMFILE or ENFILE\n    // because we won't be able to set up the stdio file descriptors.\n    if (err === UV_EMFILE || err === UV_ENFILE)\n      return err;\n  } else if (err) {\n    // Close all opened fds on error\n    for (i = 0; i < stdio.length; i++) {\n      const stream = stdio[i];\n      if (stream.type === 'pipe') {\n        stream.handle.close();\n      }\n    }\n\n    this._handle.close();\n    this._handle = null;\n    throw errnoException(err\x2C 'spawn');\n  } else {\n    process.nextTick(onSpawnNT\x2C this);\n  }\n\n  this.pid = this._handle.pid;\n\n  for (i = 0; i < stdio.length; i++) {\n    const stream = stdio[i];\n    if (stream.type === 'ignore') continue;\n\n    if (stream.ipc) {\n      this._closesNeeded++;\n      continue;\n    }\n\n    // The stream is already cloned and piped\x2C thus stop its readable side\x2C\n    // otherwise we might attempt to read from the stream when at the same time\n    // the child process does.\n    if (stream.type === 'wrap') {\n      stream.handle.reading = false;\n      stream.handle.readStop();\n      stream._stdio.pause();\n      stream._stdio.readableFlowing = false;\n      stream._stdio._readableState.reading = false;\n      stream._stdio[kIsUsedAsStdio] = true;\n      continue;\n    }\n\n    if (stream.handle) {\n      stream.socket = createSocket(this.pid !== 0 ?\n        stream.handle : null\x2C i > 0);\n\n      if (i > 0 && this.pid !== 0) {\n        this._closesNeeded++;\n        stream.socket.on('close'\x2C () => {\n          maybeClose(this);\n        });\n      }\n    }\n  }\n\n  this.stdin = stdio.length >= 1 && stdio[0].socket !== undefined ?\n    stdio[0].socket : null;\n  this.stdout = stdio.length >= 2 && stdio[1].socket !== undefined ?\n    stdio[1].socket : null;\n  this.stderr = stdio.length >= 3 && stdio[2].socket !== undefined ?\n    stdio[2].socket : null;\n\n  this.stdio = [];\n\n  for (i = 0; i < stdio.length; i++)\n    ArrayPrototypePush(this.stdio\x2C\n                       stdio[i].socket === undefined ? null : stdio[i].socket);\n\n  // Add .send() method and start listening for IPC data\n  if (ipc !== undefined) setupChannel(this\x2C ipc\x2C serialization);\n\n  return err;\n};\n\n\nfunction onErrorNT(self\x2C err) {\n  self._handle.onexit(err);\n}\n\n\nfunction onSpawnNT(self) {\n  self.emit('spawn');\n}\n\n\nChildProcess.prototype.kill = function(sig) {\n\n  const signal = sig === 0 ? sig :\n    convertToValidSignal(sig === undefined ? 'SIGTERM' : sig);\n\n  if (this._handle) {\n    const err = this._handle.kill(signal);\n    if (err === 0) {\n      /* Success. */\n      this.killed = true;\n      return true;\n    }\n    if (err === UV_ESRCH) {\n      /* Already dead. */\n    } else if (err === UV_EINVAL || err === UV_ENOSYS) {\n      /* The underlying platform doesn't support this signal. */\n      throw errnoException(err\x2C 'kill');\n    } else {\n      /* Other error\x2C almost certainly EPERM. */\n      this.emit('error'\x2C errnoException(err\x2C 'kill'));\n    }\n  }\n\n  /* Kill didn't succeed. */\n  return false;\n};\n\n\nChildProcess.prototype.ref = function() {\n  if (this._handle) this._handle.ref();\n};\n\n\nChildProcess.prototype.unref = function() {\n  if (this._handle) this._handle.unref();\n};\n\nclass Control extends EventEmitter {\n  #channel = null;\n  #refs = 0;\n  #refExplicitlySet = false;\n\n  constructor(channel) {\n    super();\n    this.#channel = channel;\n    this[kPendingMessages] = [];\n  }\n\n  // The methods keeping track of the counter are being used to track the\n  // listener count on the child process object as well as when writes are\n  // in progress. Once the user has explicitly requested a certain state\x2C these\n  // methods become no-ops in order to not interfere with the user's intentions.\n  refCounted() {\n    if (++this.#refs === 1 && !this.#refExplicitlySet) {\n      this.#channel.ref();\n    }\n  }\n\n  unrefCounted() {\n    if (--this.#refs === 0 && !this.#refExplicitlySet) {\n      this.#channel.unref();\n      this.emit('unref');\n    }\n  }\n\n  ref() {\n    this.#refExplicitlySet = true;\n    this.#channel.ref();\n  }\n\n  unref() {\n    this.#refExplicitlySet = true;\n    this.#channel.unref();\n  }\n\n  get fd() {\n    return this.#channel ? this.#channel.fd : undefined;\n  }\n}\n\nconst channelDeprecationMsg = '_channel is deprecated. ' +\n                              'Use ChildProcess.channel instead.';\n\nlet serialization;\nfunction setupChannel(target\x2C channel\x2C serializationMode) {\n  const control = new Control(channel);\n  target.channel = control;\n  target[kChannelHandle] = channel;\n\n  ObjectDefineProperty(target\x2C '_channel'\x2C {\n    __proto__: null\x2C\n    get: deprecate(() => {\n      return target.channel;\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\n    set: deprecate((val) => {\n      target.channel = val;\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\n    configurable: true\x2C\n    enumerable: false\n  });\n\n  target._handleQueue = null;\n  target._pendingMessage = null;\n\n  if (serialization === undefined)\n    serialization = require('internal/child_process/serialization');\n  const {\n    initMessageChannel\x2C\n    parseChannelMessages\x2C\n    writeChannelMessage\n  } = serialization[serializationMode];\n\n  let pendingHandle = null;\n  initMessageChannel(channel);\n  channel.pendingHandle = null;\n  channel.onread = function(arrayBuffer) {\n    const recvHandle = channel.pendingHandle;\n    channel.pendingHandle = null;\n    if (arrayBuffer) {\n      const nread = streamBaseState[kReadBytesOrError];\n      const offset = streamBaseState[kArrayBufferOffset];\n      const pool = new Uint8Array(arrayBuffer\x2C offset\x2C nread);\n      if (recvHandle)\n        pendingHandle = recvHandle;\n\n      for (const message of parseChannelMessages(channel\x2C pool)) {\n        // There will be at most one NODE_HANDLE message in every chunk we\n        // read because SCM_RIGHTS messages don't get coalesced. Make sure\n        // that we deliver the handle with the right message however.\n        if (isInternal(message)) {\n          if (message.cmd === 'NODE_HANDLE') {\n            handleMessage(message\x2C pendingHandle\x2C true);\n            pendingHandle = null;\n          } else {\n            handleMessage(message\x2C undefined\x2C true);\n          }\n        } else {\n          handleMessage(message\x2C undefined\x2C false);\n        }\n      }\n    } else {\n      this.buffering = false;\n      target.disconnect();\n      channel.onread = nop;\n      channel.close();\n      target.channel = null;\n      maybeClose(target);\n    }\n  };\n\n  // Object where socket lists will live\n  channel.sockets = { got: {}\x2C send: {} };\n\n  // Handlers will go through this\n  target.on('internalMessage'\x2C function(message\x2C handle) {\n    // Once acknowledged - continue sending handles.\n    if (message.cmd === 'NODE_HANDLE_ACK' ||\n        message.cmd === 'NODE_HANDLE_NACK') {\n\n      if (target._pendingMessage) {\n        if (message.cmd === 'NODE_HANDLE_ACK') {\n          closePendingHandle(target);\n        } else if (target._pendingMessage.retransmissions++ ===\n                   MAX_HANDLE_RETRANSMISSIONS) {\n          closePendingHandle(target);\n          process.emitWarning('Handle did not reach the receiving process ' +\n                              'correctly'\x2C 'SentHandleNotReceivedWarning');\n        }\n      }\n\n      assert(ArrayIsArray(target._handleQueue));\n      const queue = target._handleQueue;\n      target._handleQueue = null;\n\n      if (target._pendingMessage) {\n        target._send(target._pendingMessage.message\x2C\n                     target._pendingMessage.handle\x2C\n                     target._pendingMessage.options\x2C\n                     target._pendingMessage.callback);\n      }\n\n      for (let i = 0; i < queue.length; i++) {\n        const args = queue[i];\n        target._send(args.message\x2C args.handle\x2C args.options\x2C args.callback);\n      }\n\n      // Process a pending disconnect (if any).\n      if (!target.connected && target.channel && !target._handleQueue)\n        target._disconnect();\n\n      return;\n    }\n\n    if (message.cmd !== 'NODE_HANDLE') return;\n\n    // It is possible that the handle is not received because of some error on\n    // ancillary data reception such as MSG_CTRUNC. In this case\x2C report the\n    // sender about it by sending a NODE_HANDLE_NACK message.\n    if (!handle)\n      return target._send({ cmd: 'NODE_HANDLE_NACK' }\x2C null\x2C true);\n\n    // Acknowledge handle receival. Don't emit error events (for example if\n    // the other side has disconnected) because this call to send() is not\n    // initiated by the user and it shouldn't be fatal to be unable to ACK\n    // a message.\n    target._send({ cmd: 'NODE_HANDLE_ACK' }\x2C null\x2C true);\n\n    const obj = handleConversion[message.type];\n\n    // Update simultaneous accepts on Windows\n    if (process.platform === 'win32') {\n      handle.setSimultaneousAccepts(false);\n    }\n\n    // Convert handle object\n    obj.got.call(this\x2C message\x2C handle\x2C (handle) => {\n      handleMessage(message.msg\x2C handle\x2C isInternal(message.msg));\n    });\n  });\n\n  target.on('newListener'\x2C function() {\n\n    process.nextTick(() => {\n      if (!target.channel || !target.listenerCount('message'))\n        return;\n\n      const messages = target.channel[kPendingMessages];\n      const { length } = messages;\n      if (!length) return;\n\n      for (let i = 0; i < length; i++) {\n        ReflectApply(target.emit\x2C target\x2C messages[i]);\n      }\n\n      target.channel[kPendingMessages] = [];\n    });\n  });\n\n  target.send = function(message\x2C handle\x2C options\x2C callback) {\n    if (typeof handle === 'function') {\n      callback = handle;\n      handle = undefined;\n      options = undefined;\n    } else if (typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    } else if (options !== undefined) {\n      validateObject(options\x2C 'options');\n    }\n\n    options = { swallowErrors: false\x2C ...options };\n\n    if (this.connected) {\n      return this._send(message\x2C handle\x2C options\x2C callback);\n    }\n    const ex = new ERR_IPC_CHANNEL_CLOSED();\n    if (typeof callback === 'function') {\n      process.nextTick(callback\x2C ex);\n    } else {\n      process.nextTick(() => this.emit('error'\x2C ex));\n    }\n    return false;\n  };\n\n  target._send = function(message\x2C handle\x2C options\x2C callback) {\n    assert(this.connected || this.channel);\n\n    if (message === undefined)\n      throw new ERR_MISSING_ARGS('message');\n\n    // Non-serializable messages should not reach the remote\n    // end point; as any failure in the stringification there\n    // will result in error message that is weakly consumable.\n    // So perform a final check on message prior to sending.\n    if (typeof message !== 'string' &&\n        typeof message !== 'object' &&\n        typeof message !== 'number' &&\n        typeof message !== 'boolean') {\n      throw new ERR_INVALID_ARG_TYPE(\n        'message'\x2C ['string'\x2C 'object'\x2C 'number'\x2C 'boolean']\x2C message);\n    }\n\n    // Support legacy function signature\n    if (typeof options === 'boolean') {\n      options = { swallowErrors: options };\n    }\n\n    let obj;\n\n    // Package messages with a handle object\n    if (handle) {\n      // This message will be handled by an internalMessage event handler\n      message = {\n        cmd: 'NODE_HANDLE'\x2C\n        type: null\x2C\n        msg: message\n      };\n\n      if (handle instanceof net.Socket) {\n        message.type = 'net.Socket';\n      } else if (handle instanceof net.Server) {\n        message.type = 'net.Server';\n      } else if (handle instanceof TCP || handle instanceof Pipe) {\n        message.type = 'net.Native';\n      } else if (handle instanceof dgram.Socket) {\n        message.type = 'dgram.Socket';\n      } else if (handle instanceof UDP) {\n        message.type = 'dgram.Native';\n      } else {\n        throw new ERR_INVALID_HANDLE_TYPE();\n      }\n\n      // Queue-up message and handle if we haven't received ACK yet.\n      if (this._handleQueue) {\n        ArrayPrototypePush(this._handleQueue\x2C {\n          callback: callback\x2C\n          handle: handle\x2C\n          options: options\x2C\n          message: message.msg\x2C\n        });\n        return this._handleQueue.length === 1;\n      }\n\n      obj = handleConversion[message.type];\n\n      // convert TCP object to native handle object\n      handle = ReflectApply(handleConversion[message.type].send\x2C\n                            target\x2C [message\x2C handle\x2C options]);\n\n      // If handle was sent twice\x2C or it is impossible to get native handle\n      // out of it - just send a text without the handle.\n      if (!handle)\n        message = message.msg;\n\n      // Update simultaneous accepts on Windows\n      if (obj.simultaneousAccepts && process.platform === 'win32') {\n        handle.setSimultaneousAccepts(true);\n      }\n    } else if (this._handleQueue &&\n               !(message && (message.cmd === 'NODE_HANDLE_ACK' ||\n                             message.cmd === 'NODE_HANDLE_NACK'))) {\n      // Queue request anyway to avoid out-of-order messages.\n      ArrayPrototypePush(this._handleQueue\x2C {\n        callback: callback\x2C\n        handle: null\x2C\n        options: options\x2C\n        message: message\x2C\n      });\n      return this._handleQueue.length === 1;\n    }\n\n    const req = new WriteWrap();\n\n    const err = writeChannelMessage(channel\x2C req\x2C message\x2C handle);\n    const wasAsyncWrite = streamBaseState[kLastWriteWasAsync];\n\n    if (err === 0) {\n      if (handle) {\n        if (!this._handleQueue)\n          this._handleQueue = [];\n        if (obj && obj.postSend)\n          obj.postSend(message\x2C handle\x2C options\x2C callback\x2C target);\n      }\n\n      if (wasAsyncWrite) {\n        req.oncomplete = () => {\n          control.unrefCounted();\n          if (typeof callback === 'function')\n            callback(null);\n        };\n        control.refCounted();\n      } else if (typeof callback === 'function') {\n        process.nextTick(callback\x2C null);\n      }\n    } else {\n      // Cleanup handle on error\n      if (obj && obj.postSend)\n        obj.postSend(message\x2C handle\x2C options\x2C callback);\n\n      if (!options.swallowErrors) {\n        const ex = errnoException(err\x2C 'write');\n        if (typeof callback === 'function') {\n          process.nextTick(callback\x2C ex);\n        } else {\n          process.nextTick(() => this.emit('error'\x2C ex));\n        }\n      }\n    }\n\n    /* If the primary is > 2 read() calls behind\x2C please stop sending. */\n    return channel.writeQueueSize < (65536 * 2);\n  };\n\n  // Connected will be set to false immediately when a disconnect() is\n  // requested\x2C even though the channel might still be alive internally to\n  // process queued messages. The three states are distinguished as follows:\n  // - disconnect() never requested: channel is not null and connected\n  //   is true\n  // - disconnect() requested\x2C messages in the queue: channel is not null\n  //   and connected is false\n  // - disconnect() requested\x2C channel actually disconnected: channel is\n  //   null and connected is false\n  target.connected = true;\n\n  target.disconnect = function() {\n    if (!this.connected) {\n      this.emit('error'\x2C new ERR_IPC_DISCONNECTED());\n      return;\n    }\n\n    // Do not allow any new messages to be written.\n    this.connected = false;\n\n    // If there are no queued messages\x2C disconnect immediately. Otherwise\x2C\n    // postpone the disconnect so that it happens internally after the\n    // queue is flushed.\n    if (!this._handleQueue)\n      this._disconnect();\n  };\n\n  target._disconnect = function() {\n    assert(this.channel);\n\n    // This marks the fact that the channel is actually disconnected.\n    this.channel = null;\n    this[kChannelHandle] = null;\n\n    if (this._pendingMessage)\n      closePendingHandle(this);\n\n    let fired = false;\n    function finish() {\n      if (fired) return;\n      fired = true;\n\n      channel.close();\n      target.emit('disconnect');\n    }\n\n    // If a message is being read\x2C then wait for it to complete.\n    if (channel.buffering) {\n      this.once('message'\x2C finish);\n      this.once('internalMessage'\x2C finish);\n\n      return;\n    }\n\n    process.nextTick(finish);\n  };\n\n  function emit(event\x2C message\x2C handle) {\n    if ('internalMessage' === event || target.listenerCount('message')) {\n      target.emit(event\x2C message\x2C handle);\n      return;\n    }\n\n    ArrayPrototypePush(\n      target.channel[kPendingMessages]\x2C\n      [event\x2C message\x2C handle]\n    );\n  }\n\n  function handleMessage(message\x2C handle\x2C internal) {\n    if (!target.channel)\n      return;\n\n    const eventName = (internal ? 'internalMessage' : 'message');\n\n    process.nextTick(emit\x2C eventName\x2C message\x2C handle);\n  }\n\n  channel.readStart();\n  return control;\n}\n\nconst INTERNAL_PREFIX = 'NODE_';\nfunction isInternal(message) {\n  return (message !== null &&\n          typeof message === 'object' &&\n          typeof message.cmd === 'string' &&\n          message.cmd.length > INTERNAL_PREFIX.length &&\n          StringPrototypeSlice(message.cmd\x2C 0\x2C INTERNAL_PREFIX.length) ===\n            INTERNAL_PREFIX);\n}\n\nconst nop = FunctionPrototype;\n\nfunction getValidStdio(stdio\x2C sync) {\n  let ipc;\n  let ipcFd;\n\n  // Replace shortcut with an array\n  if (typeof stdio === 'string') {\n    stdio = stdioStringToArray(stdio);\n  } else if (!ArrayIsArray(stdio)) {\n    throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\n  }\n\n  // At least 3 stdio will be created\n  // Don't concat() a new Array() because it would be sparse\x2C and\n  // stdio.reduce() would skip the sparse elements of stdio.\n  // See https://stackoverflow.com/a/5501711/3561\n  while (stdio.length < 3) ArrayPrototypePush(stdio\x2C undefined);\n\n  // Translate stdio into C++-readable form\n  // (i.e. PipeWraps or fds)\n  stdio = ArrayPrototypeReduce(stdio\x2C (acc\x2C stdio\x2C i) => {\n    function cleanup() {\n      for (let i = 0; i < acc.length; i++) {\n        if ((acc[i].type === 'pipe' || acc[i].type === 'ipc') && acc[i].handle)\n          acc[i].handle.close();\n      }\n    }\n\n    // Defaults\n    if (stdio == null) {\n      stdio = i < 3 ? 'pipe' : 'ignore';\n    }\n\n    if (stdio === 'ignore') {\n      ArrayPrototypePush(acc\x2C { type: 'ignore' });\n    } else if (stdio === 'pipe' || stdio === 'overlapped' ||\n               (typeof stdio === 'number' && stdio < 0)) {\n      const a = {\n        type: stdio === 'overlapped' ? 'overlapped' : 'pipe'\x2C\n        readable: i === 0\x2C\n        writable: i !== 0\n      };\n\n      if (!sync)\n        a.handle = new Pipe(PipeConstants.SOCKET);\n\n      ArrayPrototypePush(acc\x2C a);\n    } else if (stdio === 'ipc') {\n      if (sync || ipc !== undefined) {\n        // Cleanup previously created pipes\n        cleanup();\n        if (!sync)\n          throw new ERR_IPC_ONE_PIPE();\n        else\n          throw new ERR_IPC_SYNC_FORK();\n      }\n\n      ipc = new Pipe(PipeConstants.IPC);\n      ipcFd = i;\n\n      ArrayPrototypePush(acc\x2C {\n        type: 'pipe'\x2C\n        handle: ipc\x2C\n        ipc: true\n      });\n    } else if (stdio === 'inherit') {\n      ArrayPrototypePush(acc\x2C {\n        type: 'inherit'\x2C\n        fd: i\n      });\n    } else if (typeof stdio === 'number' || typeof stdio.fd === 'number') {\n      ArrayPrototypePush(acc\x2C {\n        type: 'fd'\x2C\n        fd: typeof stdio === 'number' ? stdio : stdio.fd\n      });\n    } else if (getHandleWrapType(stdio) || getHandleWrapType(stdio.handle) ||\n               getHandleWrapType(stdio._handle)) {\n      const handle = getHandleWrapType(stdio) ?\n        stdio :\n        getHandleWrapType(stdio.handle) ? stdio.handle : stdio._handle;\n\n      ArrayPrototypePush(acc\x2C {\n        type: 'wrap'\x2C\n        wrapType: getHandleWrapType(handle)\x2C\n        handle: handle\x2C\n        _stdio: stdio\n      });\n    } else if (isArrayBufferView(stdio) || typeof stdio === 'string') {\n      if (!sync) {\n        cleanup();\n        throw new ERR_INVALID_SYNC_FORK_INPUT(inspect(stdio));\n      }\n    } else {\n      // Cleanup\n      cleanup();\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\n    }\n\n    return acc;\n  }\x2C []);\n\n  return { stdio\x2C ipc\x2C ipcFd };\n}\n\n\nfunction getSocketList(type\x2C worker\x2C key) {\n  const sockets = worker[kChannelHandle].sockets[type];\n  let socketList = sockets[key];\n  if (!socketList) {\n    const Construct = type === 'send' ? SocketListSend : SocketListReceive;\n    socketList = sockets[key] = new Construct(worker\x2C key);\n  }\n  return socketList;\n}\n\n\nfunction maybeClose(subprocess) {\n  subprocess._closesGot++;\n\n  if (subprocess._closesGot === subprocess._closesNeeded) {\n    subprocess.emit('close'\x2C subprocess.exitCode\x2C subprocess.signalCode);\n  }\n}\n\nfunction spawnSync(options) {\n  const result = spawn_sync.spawn(options);\n\n  if (result.output && options.encoding && options.encoding !== 'buffer') {\n    for (let i = 0; i < result.output.length; i++) {\n      if (!result.output[i])\n        continue;\n      result.output[i] = result.output[i].toString(options.encoding);\n    }\n  }\n\n  result.stdout = result.output && result.output[1];\n  result.stderr = result.output && result.output[2];\n\n  if (result.error) {\n    result.error = errnoException(result.error\x2C 'spawnSync ' + options.file);\n    result.error.path = options.file;\n    result.error.spawnargs = ArrayPrototypeSlice(options.args\x2C 1);\n  }\n\n  return result;\n}\n\nmodule.exports = {\n  ChildProcess\x2C\n  kChannelHandle\x2C\n  setupChannel\x2C\n  getValidStdio\x2C\n  stdioStringToArray\x2C\n  spawnSync\n};\n
code-source-info,0x117768a2fe98,458,0,31427,C0O0C4O31427,,
code-creation,Function,10,68791,0x117768a314b8,1265, node:internal/child_process:1:1,0x117768a2fe10,~
code-source-info,0x117768a314b8,458,0,31427,C0O0C296O25C302O41C308O63C314O87C320O110C325O131C331O156C337O180C342O204C348O220C354O244C359O254C365O564C371O564C376O294C387O325C393O351C399O378C405O407C411O440C417O468C423O494C429O516C435O539C441O674C447O674C452O602C458O619C464O637C470O654C476O727C482O727C486O727C488O758C494O758C498O758C500O788C506O788C510O788C512O822C518O822C523O854C527O822C529O879C535O879C539O879C541O928C544O928C549O916C555O1069C558O1069C563O971C569O984C575O1005C581O1027C587O1049C593O1144C596O1144C601O1109C607O1126C613O1190C616O1190C621O1182C627O1235C630O1235C635O1227C641O1280C644O1280C649O1272C655O1328C661O1328C666O1386C672O1386C677O1417C682O1369C688O1471C694O1471C699O1435C705O1457C711O1527C717O1527C722O1505C728O1578C731O1578C735O1578C737O1634C743O1634C748O1617C754O1776C757O1776C762O1672C768O1685C774O1698C780O1711C786O1724C792O1737C798O1750C804O1763C810O1808C816O1824C822O1980C823O1980C825O1996C826O1996C828O2044C830O2044C832O2070C835O2070C839O2070C841O2119C844O2119C848O2119C850O2170C853O2170C857O2170C859O2323C864O2341C869O2379C877O2445C891O2522C896O2560C904O2634C918O2798C923O2804C931O4365C939O5118C953O5598C958O5637C966O5703C980O5782C985O5821C993O5948C1009O2323C1011O7946C1019O7970C1024O7912C1029O7982C1032O7982C1037O8968C1046O8984C1050O12687C1059O12702C1063O13386C1072O13400C1076O13473C1085O13489C1137O13572C1193O13550C1195O14579C1200O14606C1203O14579C1205O14680C1206O14680C1208O26837C1210O26837C1212O27170C1214O27170C1216O31304C1223O31325C1229O31341C1235O31359C1241O31375C1247O31392C1253O31414C1259O31319C1264O31426,,
code-creation,Function,10,68833,0x117768a31c38,26,<instance_members_initializer> node:internal/child_process:522:1,0x117768a30b78,~
code-source-info,0x117768a31c38,458,13550,14547,C3O13600C11O13616C19O13641C25O14547,,
tick,0x1a4e3ea90,68875,1,0x104a8d6ec,3,0x0,0x109cc9ca0,0x109cc956c,0x117768a2c3b7,0x109cc9d6c,0x117768a261c4,0x117768a2575d,0x117768a25564,0x117768a0d526,0x105405ef4
code-creation,Eval,10,69208,0x117768a358b8,5, node:dgram:1:1,0x117768a35330,~
script-source,459,node:dgram,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  Array\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypePush\x2C\n  FunctionPrototypeBind\x2C\n  FunctionPrototypeCall\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n} = primordials;\n\nconst errors = require('internal/errors');\nconst {\n  kStateSymbol\x2C\n  _createSocketHandle\x2C\n  newHandle\x2C\n} = require('internal/dgram');\nconst { guessHandleType } = internalBinding('util');\nconst {\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_MISSING_ARGS\x2C\n  ERR_SOCKET_ALREADY_BOUND\x2C\n  ERR_SOCKET_BAD_BUFFER_SIZE\x2C\n  ERR_SOCKET_BUFFER_SIZE\x2C\n  ERR_SOCKET_DGRAM_IS_CONNECTED\x2C\n  ERR_SOCKET_DGRAM_NOT_CONNECTED\x2C\n  ERR_SOCKET_DGRAM_NOT_RUNNING\x2C\n  ERR_INVALID_FD_TYPE\n} = errors.codes;\nconst {\n  isInt32\x2C\n  validateAbortSignal\x2C\n  validateString\x2C\n  validateNumber\x2C\n  validatePort\x2C\n} = require('internal/validators');\nconst { Buffer } = require('buffer');\nconst { deprecate } = require('internal/util');\nconst { isArrayBufferView } = require('internal/util/types');\nconst EventEmitter = require('events');\nconst {\n  defaultTriggerAsyncIdScope\x2C\n  symbols: { async_id_symbol\x2C owner_symbol }\n} = require('internal/async_hooks');\nconst { UV_UDP_REUSEADDR } = internalBinding('constants').os;\n\nconst {\n  constants: { UV_UDP_IPV6ONLY }\x2C\n  UDP\x2C\n  SendWrap\n} = internalBinding('udp_wrap');\n\nconst dc = require('diagnostics_channel');\nconst udpSocketChannel = dc.channel('udp.socket');\n\nconst BIND_STATE_UNBOUND = 0;\nconst BIND_STATE_BINDING = 1;\nconst BIND_STATE_BOUND = 2;\n\nconst CONNECT_STATE_DISCONNECTED = 0;\nconst CONNECT_STATE_CONNECTING = 1;\nconst CONNECT_STATE_CONNECTED = 2;\n\nconst RECV_BUFFER = true;\nconst SEND_BUFFER = false;\n\n// Lazily loaded\nlet _cluster = null;\nfunction lazyLoadCluster() {\n  if (!_cluster) _cluster = require('cluster');\n  return _cluster;\n}\n\nconst errnoException = errors.errnoException;\nconst exceptionWithHostPort = errors.exceptionWithHostPort;\n\n\nfunction Socket(type\x2C listener) {\n  FunctionPrototypeCall(EventEmitter\x2C this);\n  let lookup;\n  let recvBufferSize;\n  let sendBufferSize;\n\n  let options;\n  if (type !== null && typeof type === 'object') {\n    options = type;\n    type = options.type;\n    lookup = options.lookup;\n    recvBufferSize = options.recvBufferSize;\n    sendBufferSize = options.sendBufferSize;\n  }\n\n  const handle = newHandle(type\x2C lookup);\n  handle[owner_symbol] = this;\n\n  this[async_id_symbol] = handle.getAsyncId();\n  this.type = type;\n\n  if (typeof listener === 'function')\n    this.on('message'\x2C listener);\n\n  this[kStateSymbol] = {\n    handle\x2C\n    receiving: false\x2C\n    bindState: BIND_STATE_UNBOUND\x2C\n    connectState: CONNECT_STATE_DISCONNECTED\x2C\n    queue: undefined\x2C\n    reuseAddr: options && options.reuseAddr\x2C // Use UV_UDP_REUSEADDR if true.\n    ipv6Only: options && options.ipv6Only\x2C\n    recvBufferSize\x2C\n    sendBufferSize\n  };\n\n  if (options?.signal !== undefined) {\n    const { signal } = options;\n    validateAbortSignal(signal\x2C 'options.signal');\n    const onAborted = () => {\n      this.close();\n    };\n    if (signal.aborted) {\n      onAborted();\n    } else {\n      signal.addEventListener('abort'\x2C onAborted);\n      this.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\n    }\n  }\n  if (udpSocketChannel.hasSubscribers) {\n    udpSocketChannel.publish({\n      socket: this\x2C\n    });\n  }\n}\nObjectSetPrototypeOf(Socket.prototype\x2C EventEmitter.prototype);\nObjectSetPrototypeOf(Socket\x2C EventEmitter);\n\n\nfunction createSocket(type\x2C listener) {\n  return new Socket(type\x2C listener);\n}\n\n\nfunction startListening(socket) {\n  const state = socket[kStateSymbol];\n\n  state.handle.onmessage = onMessage;\n  state.handle.onerror = onError;\n  state.handle.recvStart();\n  state.receiving = true;\n  state.bindState = BIND_STATE_BOUND;\n\n  if (state.recvBufferSize)\n    bufferSize(socket\x2C state.recvBufferSize\x2C RECV_BUFFER);\n\n  if (state.sendBufferSize)\n    bufferSize(socket\x2C state.sendBufferSize\x2C SEND_BUFFER);\n\n  socket.emit('listening');\n}\n\nfunction replaceHandle(self\x2C newHandle) {\n  const state = self[kStateSymbol];\n  const oldHandle = state.handle;\n\n  // Set up the handle that we got from primary.\n  newHandle.lookup = oldHandle.lookup;\n  newHandle.bind = oldHandle.bind;\n  newHandle.send = oldHandle.send;\n  newHandle[owner_symbol] = self;\n\n  // Replace the existing handle by the handle we got from primary.\n  oldHandle.close();\n  state.handle = newHandle;\n}\n\nfunction bufferSize(self\x2C size\x2C buffer) {\n  if (size >>> 0 !== size)\n    throw new ERR_SOCKET_BAD_BUFFER_SIZE();\n\n  const ctx = {};\n  const ret = self[kStateSymbol].handle.bufferSize(size\x2C buffer\x2C ctx);\n  if (ret === undefined) {\n    throw new ERR_SOCKET_BUFFER_SIZE(ctx);\n  }\n  return ret;\n}\n\n// Query primary process to get the server handle and utilize it.\nfunction bindServerHandle(self\x2C options\x2C errCb) {\n  const cluster = lazyLoadCluster();\n\n  const state = self[kStateSymbol];\n  cluster._getServer(self\x2C options\x2C (err\x2C handle) => {\n    if (err) {\n      errCb(err);\n      return;\n    }\n\n    if (!state.handle) {\n      // Handle has been closed in the mean time.\n      return handle.close();\n    }\n\n    replaceHandle(self\x2C handle);\n    startListening(self);\n  });\n}\n\nSocket.prototype.bind = function(port_\x2C address_ /* \x2C callback */) {\n  let port = port_;\n\n  healthCheck(this);\n  const state = this[kStateSymbol];\n\n  if (state.bindState !== BIND_STATE_UNBOUND)\n    throw new ERR_SOCKET_ALREADY_BOUND();\n\n  state.bindState = BIND_STATE_BINDING;\n\n  const cb = arguments.length && arguments[arguments.length - 1];\n  if (typeof cb === 'function') {\n    function removeListeners() {\n      this.removeListener('error'\x2C removeListeners);\n      this.removeListener('listening'\x2C onListening);\n    }\n\n    function onListening() {\n      FunctionPrototypeCall(removeListeners\x2C this);\n      FunctionPrototypeCall(cb\x2C this);\n    }\n\n    this.on('error'\x2C removeListeners);\n    this.on('listening'\x2C onListening);\n  }\n\n  if (port !== null &&\n      typeof port === 'object' &&\n      typeof port.recvStart === 'function') {\n    replaceHandle(this\x2C port);\n    startListening(this);\n    return this;\n  }\n\n  // Open an existing fd instead of creating a new one.\n  if (port !== null && typeof port === 'object' &&\n      isInt32(port.fd) && port.fd > 0) {\n    const fd = port.fd;\n    const exclusive = !!port.exclusive;\n    const state = this[kStateSymbol];\n\n    const cluster = lazyLoadCluster();\n\n    if (cluster.isWorker && !exclusive) {\n      bindServerHandle(this\x2C {\n        address: null\x2C\n        port: null\x2C\n        addressType: this.type\x2C\n        fd\x2C\n        flags: null\n      }\x2C (err) => {\n        // Callback to handle error.\n        const ex = errnoException(err\x2C 'open');\n        state.bindState = BIND_STATE_UNBOUND;\n        this.emit('error'\x2C ex);\n      });\n      return this;\n    }\n\n    const type = guessHandleType(fd);\n    if (type !== 'UDP')\n      throw new ERR_INVALID_FD_TYPE(type);\n    const err = state.handle.open(fd);\n\n    if (err)\n      throw errnoException(err\x2C 'open');\n\n    startListening(this);\n    return this;\n  }\n\n  let address;\n  let exclusive;\n\n  if (port !== null && typeof port === 'object') {\n    address = port.address || '';\n    exclusive = !!port.exclusive;\n    port = port.port;\n  } else {\n    address = typeof address_ === 'function' ? '' : address_;\n    exclusive = false;\n  }\n\n  // Defaulting address for bind to all interfaces\n  if (!address) {\n    if (this.type === 'udp4')\n      address = '0.0.0.0';\n    else\n      address = '::';\n  }\n\n  // Resolve address first\n  state.handle.lookup(address\x2C (err\x2C ip) => {\n    if (err) {\n      state.bindState = BIND_STATE_UNBOUND;\n      this.emit('error'\x2C err);\n      return;\n    }\n\n    const cluster = lazyLoadCluster();\n\n    let flags = 0;\n    if (state.reuseAddr)\n      flags |= UV_UDP_REUSEADDR;\n    if (state.ipv6Only)\n      flags |= UV_UDP_IPV6ONLY;\n\n    if (cluster.isWorker && !exclusive) {\n      bindServerHandle(this\x2C {\n        address: ip\x2C\n        port: port\x2C\n        addressType: this.type\x2C\n        fd: -1\x2C\n        flags: flags\n      }\x2C (err) => {\n        // Callback to handle error.\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\n        state.bindState = BIND_STATE_UNBOUND;\n        this.emit('error'\x2C ex);\n      });\n    } else {\n      if (!state.handle)\n        return; // Handle has been closed in the mean time\n\n      const err = state.handle.bind(ip\x2C port || 0\x2C flags);\n      if (err) {\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\n        state.bindState = BIND_STATE_UNBOUND;\n        this.emit('error'\x2C ex);\n        // Todo: close?\n        return;\n      }\n\n      startListening(this);\n    }\n  });\n\n  return this;\n};\n\nSocket.prototype.connect = function(port\x2C address\x2C callback) {\n  port = validatePort(port\x2C 'Port'\x2C false);\n  if (typeof address === 'function') {\n    callback = address;\n    address = '';\n  } else if (address === undefined) {\n    address = '';\n  }\n\n  validateString(address\x2C 'address');\n\n  const state = this[kStateSymbol];\n\n  if (state.connectState !== CONNECT_STATE_DISCONNECTED)\n    throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\n\n  state.connectState = CONNECT_STATE_CONNECTING;\n  if (state.bindState === BIND_STATE_UNBOUND)\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\n\n  if (state.bindState !== BIND_STATE_BOUND) {\n    enqueue(this\x2C FunctionPrototypeBind(_connect\x2C this\x2C\n                                        port\x2C address\x2C callback));\n    return;\n  }\n\n  ReflectApply(_connect\x2C this\x2C [port\x2C address\x2C callback]);\n};\n\n\nfunction _connect(port\x2C address\x2C callback) {\n  const state = this[kStateSymbol];\n  if (callback)\n    this.once('connect'\x2C callback);\n\n  const afterDns = (ex\x2C ip) => {\n    defaultTriggerAsyncIdScope(\n      this[async_id_symbol]\x2C\n      doConnect\x2C\n      ex\x2C this\x2C ip\x2C address\x2C port\x2C callback\n    );\n  };\n\n  state.handle.lookup(address\x2C afterDns);\n}\n\n\nfunction doConnect(ex\x2C self\x2C ip\x2C address\x2C port\x2C callback) {\n  const state = self[kStateSymbol];\n  if (!state.handle)\n    return;\n\n  if (!ex) {\n    const err = state.handle.connect(ip\x2C port);\n    if (err) {\n      ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port);\n    }\n  }\n\n  if (ex) {\n    state.connectState = CONNECT_STATE_DISCONNECTED;\n    return process.nextTick(() => {\n      if (callback) {\n        self.removeListener('connect'\x2C callback);\n        callback(ex);\n      } else {\n        self.emit('error'\x2C ex);\n      }\n    });\n  }\n\n  state.connectState = CONNECT_STATE_CONNECTED;\n  process.nextTick(() => self.emit('connect'));\n}\n\n\nSocket.prototype.disconnect = function() {\n  const state = this[kStateSymbol];\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\n\n  const err = state.handle.disconnect();\n  if (err)\n    throw errnoException(err\x2C 'connect');\n  else\n    state.connectState = CONNECT_STATE_DISCONNECTED;\n};\n\n\n// Thin wrapper around `send`\x2C here for compatibility with dgram_legacy.js\nSocket.prototype.sendto = function(buffer\x2C\n                                   offset\x2C\n                                   length\x2C\n                                   port\x2C\n                                   address\x2C\n                                   callback) {\n  validateNumber(offset\x2C 'offset');\n  validateNumber(length\x2C 'length');\n  validateNumber(port\x2C 'port');\n  validateString(address\x2C 'address');\n\n  this.send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback);\n};\n\n\nfunction sliceBuffer(buffer\x2C offset\x2C length) {\n  if (typeof buffer === 'string') {\n    buffer = Buffer.from(buffer);\n  } else if (!isArrayBufferView(buffer)) {\n    throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\n                                   ['Buffer'\x2C\n                                    'TypedArray'\x2C\n                                    'DataView'\x2C\n                                    'string']\x2C\n                                   buffer);\n  }\n\n  offset = offset >>> 0;\n  length = length >>> 0;\n  if (offset > buffer.byteLength) {\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\n  }\n\n  if (offset + length > buffer.byteLength) {\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\n  }\n\n  return Buffer.from(buffer.buffer\x2C buffer.byteOffset + offset\x2C length);\n}\n\n\nfunction fixBufferList(list) {\n  const newlist = new Array(list.length);\n\n  for (let i = 0\x2C l = list.length; i < l; i++) {\n    const buf = list[i];\n    if (typeof buf === 'string')\n      newlist[i] = Buffer.from(buf);\n    else if (!isArrayBufferView(buf))\n      return null;\n    else\n      newlist[i] = Buffer.from(buf.buffer\x2C buf.byteOffset\x2C buf.byteLength);\n  }\n\n  return newlist;\n}\n\n\nfunction enqueue(self\x2C toEnqueue) {\n  const state = self[kStateSymbol];\n\n  // If the send queue hasn't been initialized yet\x2C do it\x2C and install an\n  // event handler that flushes the send queue after binding is done.\n  if (state.queue === undefined) {\n    state.queue = [];\n    self.once(EventEmitter.errorMonitor\x2C onListenError);\n    self.once('listening'\x2C onListenSuccess);\n  }\n  ArrayPrototypePush(state.queue\x2C toEnqueue);\n}\n\n\nfunction onListenSuccess() {\n  this.removeListener(EventEmitter.errorMonitor\x2C onListenError);\n  FunctionPrototypeCall(clearQueue\x2C this);\n}\n\n\nfunction onListenError(err) {\n  this.removeListener('listening'\x2C onListenSuccess);\n  this[kStateSymbol].queue = undefined;\n}\n\n\nfunction clearQueue() {\n  const state = this[kStateSymbol];\n  const queue = state.queue;\n  state.queue = undefined;\n\n  // Flush the send queue.\n  for (const queueEntry of queue)\n    queueEntry();\n}\n\n// valid combinations\n// For connectionless sockets\n// send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback)\n// send(buffer\x2C offset\x2C length\x2C port\x2C address)\n// send(buffer\x2C offset\x2C length\x2C port\x2C callback)\n// send(buffer\x2C offset\x2C length\x2C port)\n// send(bufferOrList\x2C port\x2C address\x2C callback)\n// send(bufferOrList\x2C port\x2C address)\n// send(bufferOrList\x2C port\x2C callback)\n// send(bufferOrList\x2C port)\n// For connected sockets\n// send(buffer\x2C offset\x2C length\x2C callback)\n// send(buffer\x2C offset\x2C length)\n// send(bufferOrList\x2C callback)\n// send(bufferOrList)\nSocket.prototype.send = function(buffer\x2C\n                                 offset\x2C\n                                 length\x2C\n                                 port\x2C\n                                 address\x2C\n                                 callback) {\n\n  let list;\n  const state = this[kStateSymbol];\n  const connected = state.connectState === CONNECT_STATE_CONNECTED;\n  if (!connected) {\n    if (address || (port && typeof port !== 'function')) {\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\n    } else {\n      callback = port;\n      port = offset;\n      address = length;\n    }\n  } else {\n    if (typeof length === 'number') {\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\n      if (typeof port === 'function') {\n        callback = port;\n        port = null;\n      }\n    } else {\n      callback = offset;\n    }\n\n    if (port || address)\n      throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\n  }\n\n  if (!ArrayIsArray(buffer)) {\n    if (typeof buffer === 'string') {\n      list = [ Buffer.from(buffer) ];\n    } else if (!isArrayBufferView(buffer)) {\n      throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\n                                     ['Buffer'\x2C\n                                      'TypedArray'\x2C\n                                      'DataView'\x2C\n                                      'string']\x2C\n                                     buffer);\n    } else {\n      list = [ buffer ];\n    }\n  } else if (!(list = fixBufferList(buffer))) {\n    throw new ERR_INVALID_ARG_TYPE('buffer list arguments'\x2C\n                                   ['Buffer'\x2C\n                                    'TypedArray'\x2C\n                                    'DataView'\x2C\n                                    'string']\x2C\n                                   buffer);\n  }\n\n  if (!connected)\n    port = validatePort(port\x2C 'Port'\x2C false);\n\n  // Normalize callback so it's either a function or undefined but not anything\n  // else.\n  if (typeof callback !== 'function')\n    callback = undefined;\n\n  if (typeof address === 'function') {\n    callback = address;\n    address = undefined;\n  } else if (address != null) {\n    validateString(address\x2C 'address');\n  }\n\n  healthCheck(this);\n\n  if (state.bindState === BIND_STATE_UNBOUND)\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\n\n  if (list.length === 0)\n    ArrayPrototypePush(list\x2C Buffer.alloc(0));\n\n  // If the socket hasn't been bound yet\x2C push the outbound packet onto the\n  // send queue and send after binding is complete.\n  if (state.bindState !== BIND_STATE_BOUND) {\n    enqueue(this\x2C FunctionPrototypeBind(this.send\x2C this\x2C\n                                        list\x2C port\x2C address\x2C callback));\n    return;\n  }\n\n  const afterDns = (ex\x2C ip) => {\n    defaultTriggerAsyncIdScope(\n      this[async_id_symbol]\x2C\n      doSend\x2C\n      ex\x2C this\x2C ip\x2C list\x2C address\x2C port\x2C callback\n    );\n  };\n\n  if (!connected) {\n    state.handle.lookup(address\x2C afterDns);\n  } else {\n    afterDns(null\x2C null);\n  }\n};\n\nfunction doSend(ex\x2C self\x2C ip\x2C list\x2C address\x2C port\x2C callback) {\n  const state = self[kStateSymbol];\n\n  if (ex) {\n    if (typeof callback === 'function') {\n      process.nextTick(callback\x2C ex);\n      return;\n    }\n\n    process.nextTick(() => self.emit('error'\x2C ex));\n    return;\n  } else if (!state.handle) {\n    return;\n  }\n\n  const req = new SendWrap();\n  req.list = list;  // Keep reference alive.\n  req.address = address;\n  req.port = port;\n  if (callback) {\n    req.callback = callback;\n    req.oncomplete = afterSend;\n  }\n\n  let err;\n  if (port)\n    err = state.handle.send(req\x2C list\x2C list.length\x2C port\x2C ip\x2C !!callback);\n  else\n    err = state.handle.send(req\x2C list\x2C list.length\x2C !!callback);\n\n  if (err >= 1) {\n    // Synchronous finish. The return code is msg_length + 1 so that we can\n    // distinguish between synchronous success and asynchronous success.\n    if (callback)\n      process.nextTick(callback\x2C null\x2C err - 1);\n    return;\n  }\n\n  if (err && callback) {\n    // Don't emit as error\x2C dgram_legacy.js compatibility\n    const ex = exceptionWithHostPort(err\x2C 'send'\x2C address\x2C port);\n    process.nextTick(callback\x2C ex);\n  }\n}\n\nfunction afterSend(err\x2C sent) {\n  if (err) {\n    err = exceptionWithHostPort(err\x2C 'send'\x2C this.address\x2C this.port);\n  } else {\n    err = null;\n  }\n\n  this.callback(err\x2C sent);\n}\n\nSocket.prototype.close = function(callback) {\n  const state = this[kStateSymbol];\n  const queue = state.queue;\n\n  if (typeof callback === 'function')\n    this.on('close'\x2C callback);\n\n  if (queue !== undefined) {\n    ArrayPrototypePush(queue\x2C FunctionPrototypeBind(this.close\x2C this));\n    return this;\n  }\n\n  healthCheck(this);\n  stopReceiving(this);\n  state.handle.close();\n  state.handle = null;\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\n                             process.nextTick\x2C\n                             socketCloseNT\x2C\n                             this);\n\n  return this;\n};\n\n\nfunction socketCloseNT(self) {\n  self.emit('close');\n}\n\n\nSocket.prototype.address = function() {\n  healthCheck(this);\n\n  const out = {};\n  const err = this[kStateSymbol].handle.getsockname(out);\n  if (err) {\n    throw errnoException(err\x2C 'getsockname');\n  }\n\n  return out;\n};\n\nSocket.prototype.remoteAddress = function() {\n  healthCheck(this);\n\n  const state = this[kStateSymbol];\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\n\n  const out = {};\n  const err = state.handle.getpeername(out);\n  if (err)\n    throw errnoException(err\x2C 'getpeername');\n\n  return out;\n};\n\n\nSocket.prototype.setBroadcast = function(arg) {\n  const err = this[kStateSymbol].handle.setBroadcast(arg ? 1 : 0);\n  if (err) {\n    throw errnoException(err\x2C 'setBroadcast');\n  }\n};\n\n\nSocket.prototype.setTTL = function(ttl) {\n  validateNumber(ttl\x2C 'ttl');\n\n  const err = this[kStateSymbol].handle.setTTL(ttl);\n  if (err) {\n    throw errnoException(err\x2C 'setTTL');\n  }\n\n  return ttl;\n};\n\n\nSocket.prototype.setMulticastTTL = function(ttl) {\n  validateNumber(ttl\x2C 'ttl');\n\n  const err = this[kStateSymbol].handle.setMulticastTTL(ttl);\n  if (err) {\n    throw errnoException(err\x2C 'setMulticastTTL');\n  }\n\n  return ttl;\n};\n\n\nSocket.prototype.setMulticastLoopback = function(arg) {\n  const err = this[kStateSymbol].handle.setMulticastLoopback(arg ? 1 : 0);\n  if (err) {\n    throw errnoException(err\x2C 'setMulticastLoopback');\n  }\n\n  return arg; // 0.4 compatibility\n};\n\n\nSocket.prototype.setMulticastInterface = function(interfaceAddress) {\n  healthCheck(this);\n  validateString(interfaceAddress\x2C 'interfaceAddress');\n\n  const err = this[kStateSymbol].handle.setMulticastInterface(interfaceAddress);\n  if (err) {\n    throw errnoException(err\x2C 'setMulticastInterface');\n  }\n};\n\nSocket.prototype.addMembership = function(multicastAddress\x2C\n                                          interfaceAddress) {\n  healthCheck(this);\n\n  if (!multicastAddress) {\n    throw new ERR_MISSING_ARGS('multicastAddress');\n  }\n\n  const { handle } = this[kStateSymbol];\n  const err = handle.addMembership(multicastAddress\x2C interfaceAddress);\n  if (err) {\n    throw errnoException(err\x2C 'addMembership');\n  }\n};\n\n\nSocket.prototype.dropMembership = function(multicastAddress\x2C\n                                           interfaceAddress) {\n  healthCheck(this);\n\n  if (!multicastAddress) {\n    throw new ERR_MISSING_ARGS('multicastAddress');\n  }\n\n  const { handle } = this[kStateSymbol];\n  const err = handle.dropMembership(multicastAddress\x2C interfaceAddress);\n  if (err) {\n    throw errnoException(err\x2C 'dropMembership');\n  }\n};\n\nSocket.prototype.addSourceSpecificMembership = function(sourceAddress\x2C\n                                                        groupAddress\x2C\n                                                        interfaceAddress) {\n  healthCheck(this);\n\n  validateString(sourceAddress\x2C 'sourceAddress');\n  validateString(groupAddress\x2C 'groupAddress');\n\n  const err =\n    this[kStateSymbol].handle.addSourceSpecificMembership(sourceAddress\x2C\n                                                          groupAddress\x2C\n                                                          interfaceAddress);\n  if (err) {\n    throw errnoException(err\x2C 'addSourceSpecificMembership');\n  }\n};\n\n\nSocket.prototype.dropSourceSpecificMembership = function(sourceAddress\x2C\n                                                         groupAddress\x2C\n                                                         interfaceAddress) {\n  healthCheck(this);\n\n  validateString(sourceAddress\x2C 'sourceAddress');\n  validateString(groupAddress\x2C 'groupAddress');\n\n  const err =\n    this[kStateSymbol].handle.dropSourceSpecificMembership(sourceAddress\x2C\n                                                           groupAddress\x2C\n                                                           interfaceAddress);\n  if (err) {\n    throw errnoException(err\x2C 'dropSourceSpecificMembership');\n  }\n};\n\n\nfunction healthCheck(socket) {\n  if (!socket[kStateSymbol].handle) {\n    // Error message from dgram_legacy.js.\n    throw new ERR_SOCKET_DGRAM_NOT_RUNNING();\n  }\n}\n\n\nfunction stopReceiving(socket) {\n  const state = socket[kStateSymbol];\n\n  if (!state.receiving)\n    return;\n\n  state.handle.recvStop();\n  state.receiving = false;\n}\n\n\nfunction onMessage(nread\x2C handle\x2C buf\x2C rinfo) {\n  const self = handle[owner_symbol];\n  if (nread < 0) {\n    return self.emit('error'\x2C errnoException(nread\x2C 'recvmsg'));\n  }\n  rinfo.size = buf.length; // compatibility\n  self.emit('message'\x2C buf\x2C rinfo);\n}\n\n\nfunction onError(nread\x2C handle\x2C error) {\n  const self = handle[owner_symbol];\n  return self.emit('error'\x2C error);\n}\n\n\nSocket.prototype.ref = function() {\n  const handle = this[kStateSymbol].handle;\n\n  if (handle)\n    handle.ref();\n\n  return this;\n};\n\n\nSocket.prototype.unref = function() {\n  const handle = this[kStateSymbol].handle;\n\n  if (handle)\n    handle.unref();\n\n  return this;\n};\n\n\nSocket.prototype.setRecvBufferSize = function(size) {\n  bufferSize(this\x2C size\x2C RECV_BUFFER);\n};\n\n\nSocket.prototype.setSendBufferSize = function(size) {\n  bufferSize(this\x2C size\x2C SEND_BUFFER);\n};\n\n\nSocket.prototype.getRecvBufferSize = function() {\n  return bufferSize(this\x2C 0\x2C RECV_BUFFER);\n};\n\n\nSocket.prototype.getSendBufferSize = function() {\n  return bufferSize(this\x2C 0\x2C SEND_BUFFER);\n};\n\nSocket.prototype.getSendQueueSize = function() {\n  return this[kStateSymbol].handle.getSendQueueSize();\n};\n\nSocket.prototype.getSendQueueCount = function() {\n  return this[kStateSymbol].handle.getSendQueueCount();\n};\n\n// Deprecated private APIs.\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\n  __proto__: null\x2C\n  get: deprecate(function() {\n    return this[kStateSymbol].handle;\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x2C\n  set: deprecate(function(val) {\n    this[kStateSymbol].handle = val;\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C '_receiving'\x2C {\n  __proto__: null\x2C\n  get: deprecate(function() {\n    return this[kStateSymbol].receiving;\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x2C\n  set: deprecate(function(val) {\n    this[kStateSymbol].receiving = val;\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C '_bindState'\x2C {\n  __proto__: null\x2C\n  get: deprecate(function() {\n    return this[kStateSymbol].bindState;\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x2C\n  set: deprecate(function(val) {\n    this[kStateSymbol].bindState = val;\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C '_queue'\x2C {\n  __proto__: null\x2C\n  get: deprecate(function() {\n    return this[kStateSymbol].queue;\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x2C\n  set: deprecate(function(val) {\n    this[kStateSymbol].queue = val;\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C '_reuseAddr'\x2C {\n  __proto__: null\x2C\n  get: deprecate(function() {\n    return this[kStateSymbol].reuseAddr;\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x2C\n  set: deprecate(function(val) {\n    this[kStateSymbol].reuseAddr = val;\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\n});\n\n\nSocket.prototype._healthCheck = deprecate(function() {\n  healthCheck(this);\n}\x2C 'Socket.prototype._healthCheck() is deprecated'\x2C 'DEP0112');\n\n\nSocket.prototype._stopReceiving = deprecate(function() {\n  stopReceiving(this);\n}\x2C 'Socket.prototype._stopReceiving() is deprecated'\x2C 'DEP0112');\n\n\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\nObjectDefineProperty(UDP.prototype\x2C 'owner'\x2C {\n  __proto__: null\x2C\n  get() { return this[owner_symbol]; }\x2C\n  set(v) { return this[owner_symbol] = v; }\n});\n\n\nmodule.exports = {\n  _createSocketHandle: deprecate(\n    _createSocketHandle\x2C\n    'dgram._createSocketHandle() is deprecated'\x2C\n    'DEP0112'\n  )\x2C\n  createSocket\x2C\n  Socket\n};\n
code-source-info,0x117768a358b8,459,0,27879,C0O0C4O27879,,
code-creation,Function,10,70291,0x117768a37978,1578, node:dgram:1:1,0x117768a35830,~
code-source-info,0x117768a
tick,0x1a4e3b454,70416,1,0x104a8d6ec,3,0x0,0x109cc9ca0,0x109cc956c,0x117768a316b2,0x109cc9d6c,0x109cc956c,0x117768a2c3b7,0x109cc9d6c,0x117768a261c4,0x117768a2575d,0x117768a25564,0x117768a0d526,0x105405ef4
code-creation,Eval,10,70500,0x117768a3af30,5, node:internal/dgram:1:1,0x117768a3ad28,~
script-source,460,node:internal/dgram,'use strict';\n\nconst {\n  FunctionPrototypeBind\x2C\n  Symbol\x2C\n} = primordials;\n\nconst { codes } = require('internal/errors');\nconst { UDP } = internalBinding('udp_wrap');\nconst { guessHandleType } = internalBinding('util');\nconst {\n  isInt32\x2C\n  validateFunction\x2C\n} = require('internal/validators');\nconst { UV_EINVAL } = internalBinding('uv');\nconst {\n  ERR_SOCKET_BAD_TYPE\x2C\n} = codes;\nconst kStateSymbol = Symbol('state symbol');\nlet dns;  // Lazy load for startup performance.\n\n\nfunction lookup4(lookup\x2C address\x2C callback) {\n  return lookup(address || '127.0.0.1'\x2C 4\x2C callback);\n}\n\n\nfunction lookup6(lookup\x2C address\x2C callback) {\n  return lookup(address || '::1'\x2C 6\x2C callback);\n}\n\nfunction newHandle(type\x2C lookup) {\n  if (lookup === undefined) {\n    if (dns === undefined) {\n      dns = require('dns');\n    }\n\n    lookup = dns.lookup;\n  } else {\n    validateFunction(lookup\x2C 'lookup');\n  }\n\n  if (type === 'udp4') {\n    const handle = new UDP();\n\n    handle.lookup = FunctionPrototypeBind(lookup4\x2C handle\x2C lookup);\n    return handle;\n  }\n\n  if (type === 'udp6') {\n    const handle = new UDP();\n\n    handle.lookup = FunctionPrototypeBind(lookup6\x2C handle\x2C lookup);\n    handle.bind = handle.bind6;\n    handle.connect = handle.connect6;\n    handle.send = handle.send6;\n    return handle;\n  }\n\n  throw new ERR_SOCKET_BAD_TYPE();\n}\n\n\nfunction _createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\n  const handle = newHandle(addressType);\n  let err;\n\n  if (isInt32(fd) && fd > 0) {\n    const type = guessHandleType(fd);\n    if (type !== 'UDP') {\n      err = UV_EINVAL;\n    } else {\n      err = handle.open(fd);\n    }\n  } else if (port || address) {\n    err = handle.bind(address\x2C port || 0\x2C flags);\n  }\n\n  if (err) {\n    handle.close();\n    return err;\n  }\n\n  return handle;\n}\n\n\nmodule.exports = {\n  kStateSymbol\x2C\n  _createSocketHandle\x2C\n  newHandle\n};\n
code-source-info,0x117768a3af30,460,0,1849,C0O0C4O1849,,
code-creation,Function,10,70583,0x117768a3b1f8,196, node:internal/dgram:1:1,0x117768a3aea8,~
code-source-info,0x117768a3b1f8,460,0,1849,C0O0C56O25C62O50C67O94C73O94C78O84C83O138C86O138C91O130C97O195C100O195C105O175C111O263C117O263C122O230C128O241C134O317C137O317C142O303C148O350C154O403C157O403C162O431C163O431C165O1776C172O1797C178O1813C184O1836C190O1791C195O1848,,
code-creation,Eval,10,70708,0x117768a3dfb0,5, node:diagnostics_channel:1:1,0x117768a3dd40,~
script-source,461,node:diagnostics_channel,'use strict';\n\nconst {\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSplice\x2C\n  ObjectCreate\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectSetPrototypeOf\x2C\n  SymbolHasInstance\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n  }\n} = require('internal/errors');\nconst {\n  validateFunction\x2C\n} = require('internal/validators');\n\nconst { triggerUncaughtException } = internalBinding('errors');\n\nconst { WeakReference } = internalBinding('util');\n\n// TODO(qard): should there be a C++ channel interface?\nclass ActiveChannel {\n  subscribe(subscription) {\n    validateFunction(subscription\x2C 'subscription');\n    ArrayPrototypePush(this._subscribers\x2C subscription);\n  }\n\n  unsubscribe(subscription) {\n    const index = ArrayPrototypeIndexOf(this._subscribers\x2C subscription);\n    if (index === -1) return false;\n\n    ArrayPrototypeSplice(this._subscribers\x2C index\x2C 1);\n\n    // When there are no more active subscribers\x2C restore to fast prototype.\n    if (!this._subscribers.length) {\n      // eslint-disable-next-line no-use-before-define\n      ObjectSetPrototypeOf(this\x2C Channel.prototype);\n    }\n\n    return true;\n  }\n\n  get hasSubscribers() {\n    return true;\n  }\n\n  publish(data) {\n    for (let i = 0; i < this._subscribers.length; i++) {\n      try {\n        const onMessage = this._subscribers[i];\n        onMessage(data\x2C this.name);\n      } catch (err) {\n        process.nextTick(() => {\n          triggerUncaughtException(err\x2C false);\n        });\n      }\n    }\n  }\n}\n\nclass Channel {\n  constructor(name) {\n    this._subscribers = undefined;\n    this.name = name;\n  }\n\n  static [SymbolHasInstance](instance) {\n    const prototype = ObjectGetPrototypeOf(instance);\n    return prototype === Channel.prototype ||\n           prototype === ActiveChannel.prototype;\n  }\n\n  subscribe(subscription) {\n    ObjectSetPrototypeOf(this\x2C ActiveChannel.prototype);\n    this._subscribers = [];\n    this.subscribe(subscription);\n  }\n\n  unsubscribe() {\n    return false;\n  }\n\n  get hasSubscribers() {\n    return false;\n  }\n\n  publish() {}\n}\n\nconst channels = ObjectCreate(null);\n\nfunction channel(name) {\n  let channel;\n  const ref = channels[name];\n  if (ref) channel = ref.get();\n  if (channel) return channel;\n\n  if (typeof name !== 'string' && typeof name !== 'symbol') {\n    throw new ERR_INVALID_ARG_TYPE('channel'\x2C ['string'\x2C 'symbol']\x2C name);\n  }\n\n  channel = new Channel(name);\n  channels[name] = new WeakReference(channel);\n  return channel;\n}\n\nfunction subscribe(name\x2C subscription) {\n  const chan = channel(name);\n  channels[name].incRef();\n  chan.subscribe(subscription);\n}\n\nfunction unsubscribe(name\x2C subscription) {\n  const chan = channel(name);\n  if (!chan.unsubscribe(subscription)) {\n    return false;\n  }\n\n  channels[name].decRef();\n  return true;\n}\n\nfunction hasSubscribers(name) {\n  let channel;\n  const ref = channels[name];\n  if (ref) channel = ref.get();\n  if (!channel) {\n    return false;\n  }\n\n  return channel.hasSubscribers;\n}\n\nmodule.exports = {\n  channel\x2C\n  hasSubscribers\x2C\n  subscribe\x2C\n  unsubscribe\x2C\n  Channel\n};\n
code-source-info,0x117768a3dfb0,461,0,3040,C0O0C4O3040,,
code-creation,Function,10,70833,0x117768a3ec00,337, node:diagnostics_channel:1:1,0x117768a3df28,~
code-source-info,0x117768a3ec00,461,0,3040,C0O0C66O25C72O50C78O72C84O96C89O112C95O136C101O160C106O250C109O250C114O250C119O220C125O310C128O310C133O288C139O380C142O380C147O351C153O434C156O434C161O416C208O516C226O1592C284O1482C286O2054C288O2054C292O2054C294O2951C301O2972C307O2983C313O3001C319O3014C325O3029C331O2966C336O3039,,
code-creation,LazyCompile,10,70916,0x117768a3f5d0,105,channel node:diagnostics_channel:97:17,0x117768a3dfe0,~
code-source-info,0x117768a3f5d0,461,2091,2448,C0O2106C2O2129C9O2137C13O2147C15O2170C20O2170C25O2179C29O2192C31O2207C32O2211C44O2275C62O2281C67O2275C68O2353C75O2363C81O2384C88O2405C93O2401C98O2399C102O2431C104O2446,,
code-creation,LazyCompile,10,70916,0x117768a3fc08,13,Channel node:diagnostics_channel:67:14,0x117768a3e2d8,~
code-source-info,0x117768a3fc08,461,1511,1580,C0O1524C1O1542C5O1559C7O1569C12O1579,,
new,MemoryChunk,0xf2c00780000,262144
code-creation,Function,11,71000,0x109cd3fc0,1480,deprecate node:internal/util:98:19,0x3d9b801bbc10,^
code-source-info,0x109cd3fc0,21,2450,3626,,,
code-creation,Function,11,71041,0x109cd4600,2816,nextHookFactory node:internal/modules/esm/loader:115:25,0x1e372ce22bf8,^
code-source-info,0x109cd4600,433,3346,5403,,,
code-creation,Function,11,71083,0x109cd5160,1584,get origin node:internal/url:770:13,0x3b46b2026908,^
code-source-info,0x109cd5160,74,21293,21919,,,
code-creation,Function,11,71083,0x109cd5800,64,noop node:internal/util/debuglog:47:14,0xa0ae21dce18,^
code-source-info,0x109cd5800,28,1419,1427,,,
code-creation,Function,11,71083,0x109cd58a0,384,getOwn node:internal/bootstrap/loaders:187:16,0x3d9b8018e768,^
code-source-info,0x109cd58a0,15,5643,5797,,,
code-creation,Function,11,71125,0x109cd5a80,824,syncExports node:internal/bootstrap/loaders:304:14,0x3d9b8018ec28,^
code-source-info,0x109cd5a80,15,9636,9969,,,
tick,0x1a4e3ea90,71166,0,0x0,0,0x0,0x3d9b801bbd17,0x117768a37ed0,0x109cc9d6c,0x109cc956c,0x117768a316b2,0x109cc9d6c,0x109cc956c,0x117768a2c3b7,0x109cc9d6c,0x117768a261c4,0x117768a2575d,0x117768a25564,0x117768a0d526,0x105405ef4
code-creation,Eval,10,71208,0xf2c00782790,5, node:internal/socket_list:1:1,0xf2c00782638,~
script-source,462,node:internal/socket_list,'use strict';\n\nconst { ERR_CHILD_CLOSED_BEFORE_REPLY } = require('internal/errors').codes;\n\nconst EventEmitter = require('events');\n\n// This object keeps track of the sockets that are sent\nclass SocketListSend extends EventEmitter {\n  constructor(child\x2C key) {\n    super();\n    this.key = key;\n    this.child = child;\n    child.once('exit'\x2C () => this.emit('exit'\x2C this));\n  }\n\n  _request(msg\x2C cmd\x2C swallowErrors\x2C callback) {\n    const self = this;\n\n    if (!this.child.connected) return onclose();\n    this.child._send(msg\x2C undefined\x2C swallowErrors);\n\n    function onclose() {\n      self.child.removeListener('internalMessage'\x2C onreply);\n      callback(new ERR_CHILD_CLOSED_BEFORE_REPLY());\n    }\n\n    function onreply(msg) {\n      if (!(msg.cmd === cmd && msg.key === self.key)) return;\n      self.child.removeListener('disconnect'\x2C onclose);\n      self.child.removeListener('internalMessage'\x2C onreply);\n\n      callback(null\x2C msg);\n    }\n\n    this.child.once('disconnect'\x2C onclose);\n    this.child.on('internalMessage'\x2C onreply);\n  }\n\n  close(callback) {\n    this._request({\n      cmd: 'NODE_SOCKET_NOTIFY_CLOSE'\x2C\n      key: this.key\n    }\x2C 'NODE_SOCKET_ALL_CLOSED'\x2C true\x2C callback);\n  }\n\n  getConnections(callback) {\n    this._request({\n      cmd: 'NODE_SOCKET_GET_COUNT'\x2C\n      key: this.key\n    }\x2C 'NODE_SOCKET_COUNT'\x2C false\x2C (err\x2C msg) => {\n      if (err) return callback(err);\n      callback(null\x2C msg.count);\n    });\n  }\n}\n\n\n// This object keeps track of the sockets that are received\nclass SocketListReceive extends EventEmitter {\n  constructor(child\x2C key) {\n    super();\n\n    this.connections = 0;\n    this.key = key;\n    this.child = child;\n\n    function onempty(self) {\n      if (!self.child.connected) return;\n\n      self.child._send({\n        cmd: 'NODE_SOCKET_ALL_CLOSED'\x2C\n        key: self.key\n      }\x2C undefined\x2C true);\n    }\n\n    this.child.on('internalMessage'\x2C (msg) => {\n      if (msg.key !== this.key) return;\n\n      if (msg.cmd === 'NODE_SOCKET_NOTIFY_CLOSE') {\n        // Already empty\n        if (this.connections === 0) return onempty(this);\n\n        // Wait for sockets to get closed\n        this.once('empty'\x2C onempty);\n      } else if (msg.cmd === 'NODE_SOCKET_GET_COUNT') {\n        if (!this.child.connected) return;\n        this.child._send({\n          cmd: 'NODE_SOCKET_COUNT'\x2C\n          key: this.key\x2C\n          count: this.connections\n        });\n      }\n    });\n  }\n\n  add(obj) {\n    this.connections++;\n\n    // Notify the previous owner of the socket about its state change\n    obj.socket.once('close'\x2C () => {\n      this.connections--;\n\n      if (this.connections === 0) this.emit('empty'\x2C this);\n    });\n  }\n}\n\nmodule.exports = { SocketListSend\x2C SocketListReceive };\n
code-source-info,0xf2c00782790,462,0,2705,C0O0C4O2705,,
code-creation,Function,10,71333,0xf2c00782dd0,126, node:internal/socket_list:1:1,0xf2c00782708,~
code-source-info,0xf2c00782dd0,462,0,2705,C0O0C8O57C11O57C16O83C21O23C27O113C30O113C35O218C73O1525C101O2649C108O2668C114O2684C120O2664C125O2704,,
code-creation,LazyCompile,10,71458,0xf2c00783b60,14,customPromiseExecFunction node:child_process:231:35,0x117768a2bc80,~
code-source-info,0xf2c00783b60,457,6608,6972,C0O6608C9O6622C13O6970,,
code-creation,Script,10,71708,0xf2c00786868,206, file:///Users/sayers/Projects/protobuf-es/packages/protobuf-performance/gen/protobuf-es/data/bench_pb.js:1:1,0xf2c00786078,~
script-source,463,file:///Users/sayers/Projects/protobuf-es/packages/protobuf-performance/gen/protobuf-es/data/bench_pb.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// @generated by protoc-gen-es v0.3.0 with parameter "target=js"\n// @generated from file data/bench.proto (syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\n\nimport { proto3 } from "@bufbuild/protobuf";\n\n/**\n * @generated from message Test\n */\nexport const Test = proto3.makeMessageType("Test"\x2C () => [\n  { no: 1\x2C name: "string"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */ }\x2C\n  { no: 2\x2C name: "uint32"\x2C kind: "scalar"\x2C T: 13 /* ScalarType.UINT32 */ }\x2C\n  { no: 3\x2C name: "inner"\x2C kind: "message"\x2C T: Test_Inner }\x2C\n  { no: 4\x2C name: "float"\x2C kind: "scalar"\x2C T: 2 /* ScalarType.FLOAT */ }\x2C\n]);\n\n/**\n * @generated from enum Test.Enum\n */\nexport const Test_Enum = proto3.makeEnum("Test.Enum"\x2C [\n  { no: 0\x2C name: "ONE" }\x2C\n  { no: 1\x2C name: "TWO" }\x2C\n  { no: 2\x2C name: "THREE" }\x2C\n  { no: 3\x2C name: "FOUR" }\x2C\n  { no: 4\x2C name: "FIVE" }\x2C\n]);\n\n/**\n * @generated from message Test.Inner\n */\nexport const Test_Inner = proto3.makeMessageType(\n  "Test.Inner"\x2C\n  () => [\n    { no: 1\x2C name: "int32"\x2C kind: "scalar"\x2C T: 5 /* ScalarType.INT32 */ }\x2C\n    { no: 2\x2C name: "innerInner"\x2C kind: "message"\x2C T: Test_Inner_InnerInner }\x2C\n    { no: 3\x2C name: "outer"\x2C kind: "message"\x2C T: Outer }\x2C\n  ]\x2C\n  { localName: "Test_Inner" }\n);\n\n/**\n * @generated from message Test.Inner.InnerInner\n */\nexport const Test_Inner_InnerInner = proto3.makeMessageType(\n  "Test.Inner.InnerInner"\x2C\n  () => [\n    { no: 1\x2C name: "longField"\x2C kind: "scalar"\x2C T: 3 /* ScalarType.INT64 */ }\x2C\n    { no: 2\x2C name: "enum"\x2C kind: "enum"\x2C T: proto3.getEnumType(Test_Enum) }\x2C\n    { no: 3\x2C name: "sint32"\x2C kind: "scalar"\x2C T: 17 /* ScalarType.SINT32 */ }\x2C\n  ]\x2C\n  { localName: "Test_Inner_InnerInner" }\n);\n\n/**\n * @generated from message Outer\n */\nexport const Outer = proto3.makeMessageType("Outer"\x2C () => [\n  {\n    no: 1\x2C\n    name: "bool"\x2C\n    kind: "scalar"\x2C\n    T: 8 /* ScalarType.BOOL */\x2C\n    repeated: true\x2C\n  }\x2C\n  { no: 2\x2C name: "double"\x2C kind: "scalar"\x2C T: 1 /* ScalarType.DOUBLE */ }\x2C\n]);\n
code-source-info,0xf2c00786868,463,0,2537,C10O0C28O0C48O0C55O871C61O878C74O878C80O871C83O1266C89O1273C102O1273C108O1266C111O1508C117O1515C135O1515C140O1508C143O1901C149O1908C167O1908C172O1901C175O2308C181O2315C194O2315C200O2308C205O2537,,
code-creation,LazyCompile,10,71875,0xf2c00786ea8,213,parsePackageName node:internal/modules/esm/resolve:715:26,0x1e372ce2c4f0,~
code-source-info,0xf2c00786ea8,437,23658,24685,C0O23701C8O23701C14O23766C16O23789C18O23798C19O23811C25O23815C30O23830C32O23851C34O23870C39O23890C45O23897C50O23912C54O23957C64O24037C71O23974C77O24076C79O24091C90O24116C101O24116C107O24267C114O24291C117O24271C124O24343C126O24372C130O24401C140O24489C143O24489C153O24407C158O24401C159O24541C164O24563C175O24581C178O24581C183O24545C187O24634C194O24643C200O24656C206O24672C212O24683,,
code-creation,LazyCompile,10,72083,0xf2c00787258,67,uvErrmapGet node:internal/errors:471:21,0x3d9b801a48d8,~
code-source-info,0xf2c00787258,17,13198,13330,C0O13209C3O13221C9O13219C15O13233C30O13254C33O13264C38O13264C42O13250C46O13281C53O13304C56O13314C61O13288C66O13328,,
code-creation,LazyCompile,10,72083,0xf2c00787398,32,lazyUv node:internal/errors:464:16,0x3d9b801a4888,~
code-source-info,0xf2c00787398,17,13056,13121,C0O13063C14O13077C21O13073C27O13102C31O13119,,
code-creation,Function,11,72375,0x109cd5e20,632,filterOwnProperties node:internal/util:517:29,0x3d9b801bcb88,^
code-source-info,0x109cd5e20,21,14431,14674,,,
code-creation,Function,11,72375,0x109cd6100,136,SafeIterator node:internal/per_context/primordials:285:16,0x3d9b801881c0,^
code-source-info,0x109cd6100,12,8138,8198,,,
code-creation,Function,11,72416,0x109cd6200,64, node:internal/per_context/primordials:291:21,0x3d9b80188400,^
code-source-info,0x109cd6200,12,8273,8302,,,
code-creation,Function,11,72416,0x109cd62a0,1080,fileURLToPath node:internal/url:1482:23,0x3b46b2027698,^
code-source-info,0x109cd62a0,74,40676,41001,,,
tick,0x1a4d3d608,72416,0,0x0,0,0x0,0x1a3e29cbc877,0x117768a0b8e8,0x117768a22ee3,0x117768a069c7,0x117768a03236,0x109cd29f0,0x117768a01959,0x117768a011ba,0x117768a1e75e,0x104a6cb38,0x117768a11d14,0x105405ef4
code-creation,Function,11,72458,0x109cd6740,200,toPathIfFileURL node:internal/url:1565:25,0x3b46b20277d8,^
code-source-info,0x109cd6740,74,43877,43998,,,
code-creation,Function,11,72458,0x109cd6880,392, node:internal/fs/utils:686:42,0x3b46b20355b8,^
code-source-info,0x109cd6880,77,18638,18773,,,
code-creation,Function,11,72458,0x109cd6a80,1064, node:internal/fs/utils:361:35,0x3b46b2034c08,^
code-source-info,0x109cd6a80,77,8625,9214,,,
code-creation,Function,11,72500,0x109cd6f20,824, node:internal/fs/utils:674:38,0x3b46b2035568,^
code-source-info,0x109cd6f20,77,18323,18593,,,
code-creation,Function,11,72500,0x109cd72c0,384,StatsBase node:internal/fs/utils:404:19,0x3b46b2034ca8,^
code-source-info,0x109cd72c0,77,9975,10264,,,
code-creation,Function,11,72541,0x109cd74a0,784,Stats node:internal/fs/utils:501:15,0x3b46b20352a8,^
code-source-info,0x109cd74a0,77,12911,13439,,,
code-creation,Function,11,72541,0x109cd7820,208,StatsBase.isDirectory node:internal/fs/utils:418:43,0x3b46b2034cf8,^
code-source-info,0x109cd7820,77,10308,10357,,,
code-creation,LazyCompile,10,72625,0xf2c00787f00,467,packageExportsResolve node:internal/modules/esm/resolve:549:31,0x1e372ce2c3b0,~
code-source-info,0xf2c00787f
code-creation,LazyCompile,10,72666,0xf2c007883c8,161,isConditionalExportsMainSugar node:internal/modules/esm/resolve:518:39,0x1e372ce2c360,~
code-source-info,0xf2c007883c8,437,16563,17460,C0O16599C8O16634C11O16634C17O16657C18O16669C19O16672C29O16725C30O16738C31O16755C36O16755C41O16818C43O16835C45O16853C47O16865C51O16858C56O16896C58O16900C62O16939C64O16943C70O16956C76O16960C81O16973C90O16981C95O16996C102O17051C104O17074C109O17109C116O17155C119O17155C129O17271C135O17352C144O17115C149O17109C150O16874C155O16840C158O17432C160O17458,,
code-creation,LazyCompile,10,72750,0xf2c00788830,403,resolvePackageTarget node:internal/modules/esm/resolve:443:30,0x1e372ce2c310,~
code-source-info,0xf2c
code-creation,LazyCompile,10,72750,0xf2c00788b88,28,isArrayIndex node:internal/modules/esm/resolve:437:22,0x1e372ce2c2c0,~
code-source-info,0xf2c00788b88,437,14017,14136,C0O14042C2O14042C5O14050C9O14066C14O14075C15O14088C16O14091C17O14105C24O14120C27O14134,,
new,MemoryChunk,0x130d36c40000,278528
code-creation,LazyCompile,10,72875,0xf2c00788e78,553,resolvePackageTargetString node:internal/modules/esm/resolve:375:36,0x1e372ce2c270,~
code-source-info,0xf2c00788e
tick,0x104e5df80,73625,1,0x104a6bc1c,3,0x0,0x117768a18b79,0x117768a0d526,0x105405ef4
code-creation,Script,10,73666,0xf2c007899e0,133, file:///Users/sayers/Projects/protobuf-es/packages/protobuf-performance/data/bench.js:1:1,0xf2c00789670,~
script-source,464,file:///Users/sayers/Projects/protobuf-es/packages/protobuf-performance/data/bench.js,import { protoInt64 } from "@bufbuild/protobuf";\n\nexport const jsonData = {\n  string: "Lorem ipsum dolor sit amet."\x2C\n  uint32: 9000\x2C\n  inner: {\n    int32: 20161110\x2C\n    innerInner: {\n      longField: protoInt64.uDec(1051\x2C 151234).toString()\x2C\n      enum: 1\x2C\n      sint32: -42\x2C\n    }\x2C\n  }\x2C\n  float: 0.25\x2C\n};\n
code-source-info,0xf2c007899e0,464,0,306,C10O0C28O0C48O0C55O74C60O142C65O181C70O200C76O211C93O211C100O229C105O230C127O74C132O306,,
code-creation,RegExp,3,73791,0x109cd7960,1320,^\\.|%|\\\\
code-creation,RegExp,3,74291,0x109cd7f00,37768,(^|\\\\|\\/)((\\.|%2e)(\\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))(\\\\|\\/|$)
code-creation,Function,11,74375,0x109ce1300,1560,getPackageScopeConfig node:internal/modules/esm/package_config:105:31,0x1e372ce300e0,^
code-source-info,0x109ce1300,438,2494,3557,,,
code-creation,Function,11,74416,0x109ce1980,1128,statSync node:fs:1588:18,0x3b46b2017f70,^
code-source-info,0x109ce1980,73,40613,41017,,,
code-creation,Function,11,74416,0x109ce1e60,696,splitRoot node:fs:2430:33,0x3b46b2018a60,^
code-source-info,0x109ce1e60,73,64777,64969,,,
code-creation,Function,11,74458,0x109ce2180,104, node:internal/errors:1369:30,0x3d9b801a5350,^
code-source-info,0x109ce2180,17,47806,47951,,,
code-creation,Function,11,74458,0x109ce2260,840,captureLargerStackTrace node:internal/errors:478:35,0x3d9b801a4928,^
code-source-info,0x109ce2260,17,13415,13785,,,
code-creation,Function,11,74500,0x109ce2620,1560,NodeError node:internal/errors:361:28,0x3d9b801a4290,^
code-source-info,0x109ce2620,17,10116,11100,,,
code-creation,Function,11,74500,0x109ce2ca0,392,tryStatSync node:internal/modules/esm/resolve:158:3,0x1e372ce2c860,^
code-source-info,0x109ce2ca0,437,4859,4925,,,
code-creation,Function,11,74500,0x109ce2ea0,712,Stats._checkModeProperty node:internal/fs/utils:523:46,0x3b46b20352f8,^
code-source-info,0x109ce2ea0,77,13788,14010,,,
new,MemoryChunk,0x170c25400000,262144
new,MemoryChunk,0xce51b040000,262144
new,MemoryChunk,0x99aa4ec0000,262144
new,MemoryChunk,0x14727140000,262144
tick,0x105026aa4,74875,0,0x0,1
code-creation,Script,10,75000,0xf2c0078bad8,45, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/index.js:1:1,0xf2c0078adc8,~
script-source,465,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/index.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nexport { proto3 } from "./proto3.js";\nexport { proto2 } from "./proto2.js";\nexport { protoInt64 } from "./proto-int64.js";\nexport { protoBase64 } from "./proto-base64.js";\nexport { codegenInfo } from "./codegen-info.js";\nexport { Message\x2C } from "./message.js";\nexport { ScalarType } from "./field.js";\nexport { MethodKind\x2C MethodIdempotency } from "./service-type.js";\nexport { WireType\x2C BinaryWriter\x2C BinaryReader } from "./binary-encoding.js";\nexport {} from "./json-format.js";\nexport {} from "./descriptor-set.js";\nexport { createDescriptorSet } from "./create-descriptor-set.js";\nexport {} from "./type-registry.js";\nexport { createRegistry } from "./create-registry.js";\nexport { createRegistryFromDescriptors } from "./create-registry-from-desc.js";\n// ideally\x2C we would export these types with sub-path exports:\nexport * from "./google/protobuf/compiler/plugin_pb.js";\nexport * from "./google/protobuf/api_pb.js";\nexport * from "./google/protobuf/any_pb.js";\nexport * from "./google/protobuf/descriptor_pb.js";\nexport * from "./google/protobuf/duration_pb.js";\nexport * from "./google/protobuf/empty_pb.js";\nexport * from "./google/protobuf/field_mask_pb.js";\nexport * from "./google/protobuf/source_context_pb.js";\nexport * from "./google/protobuf/struct_pb.js";\nexport * from "./google/protobuf/timestamp_pb.js";\nexport * from "./google/protobuf/type_pb.js";\nexport * from "./google/protobuf/wrappers_pb.js";\n
code-source-info,0xf2c0078bad8,465,0,2025,C10O0C15O0C35O0C44O2025,,
code-creation,Function,11,75291,0x109ce31e0,912,set pathname node:internal/url:936:15,0x3b46b2026f08,^
code-source-info,0x109ce31e0,74,25485,25754,,,
code-creation,Function,11,75291,0x109ce35e0,416,arrayToSafePromiseIterable node:internal/per_context/primordials:435:36,0x3d9b80189530,^
code-source-info,0x109ce35e0,12,12771,13006,,,
code-creation,Function,11,75291,0x109ce37e0,424, node:internal/per_context/primordials:452:15,0x117768a246b0,^
code-source-info,0x109ce37e0,12,13314,13399,,,
code-creation,Function,11,75333,0x109ce3a00,392,primordials.SafePromiseAll node:internal/per_context/primordials:449:30,0x3d9b80189580,^
code-source-info,0x109ce3a00,12,13176,13403,,,
code-creation,Function,11,75333,0x109ce3c00,400, node:internal/per_context/primordials:439:7,0x117768a24980,^
code-source-info,0x109ce3c00,12,12874,12996,,,
code-creation,Function,11,75333,0x109ce3e00,400, node:internal/per_context/primordials:440:25,0x117768a24b48,^
code-source-info,0x109ce3e00,12,12914,12995,,,
code-creation,Function,11,75375,0x109ce4000,448,validateArgs node:internal/modules/esm/loader:819:26,0x117768a014c0,^
code-source-info,0x109ce4000,433,23804,24073,,,
code-creation,Function,11,75375,0x109ce4220,696,handleErrorFromBinding node:internal/fs/utils:344:32,0x3b46b2034bb8,^
code-source-info,0x109ce4220,77,7986,8484,,,
code-creation,Function,11,75375,0x109ce4540,648,defaultGetFormatWithoutErrors node:internal/modules/esm/get_format:107:39,0x1e372ce31030,^
code-source-info,0x109ce4540,439,3505,3711,,,
code-creation,Function,11,75416,0x109ce4840,200,isBigInt64Array node:internal/util/types:49:25,0xa0ae21c2608,^
code-source-info,0x109ce4840,23,1256,1344,,,
code-creation,Function,11,75416,0x109ce4980,1056,onParsePathComplete node:internal/url:603:29,0x3b46b2026480,^
code-source-info,0x109ce4980,74,16674,17140,,,
code-creation,Function,11,75708,0x109ce4e00,8520,URLSearchParams node:internal/url:183:14,0x3b46b2025e40,^
code-source-info,0x109ce4e00,74,4348,7204,,,
code-creation,Function,11,75708,0x109ce6fc0,208,StatsBase.isFile node:internal/fs/utils:422:38,0x3b46b2034d88,^
code-source-info,0x109ce6fc0,77,10397,10446,,,
code-creation,Function,11,75750,0x109ce7100,208,getPackageType node:internal/modules/esm/resolve:705:24,0x1e372ce2c4a0,^
code-source-info,0x109ce7100,437,23381,23471,,,
code-creation,Function,11,75750,0x109ce7240,1056, node:internal/modules/esm/module_job:75:41,0x117768a11b80,^
code-source-info,0x109ce7240,435,2268,2519,,,
code-creation,Function,11,75750,0x109ce76c0,632,isRelativeSpecifier node:internal/modules/esm/resolve:821:29,0x1e372ce2c5e0,^
code-source-info,0x109ce76c0,437,27139,27382,,,
code-creation,Function,11,76125,0x109ce79a0,2792,getStatsFromBinding node:internal/fs/utils:536:29,0x3b46b2035388,^
code-source-info,0x109ce79a0,77,14156,15205,,,
tick,0x109ce1bf4,76125,0,0x0,0,0x109ce2d40,0x117768a06d28,0x117768a069e8,0x117768a03236,0x109cd29f0,0x117768a01959,0x117768a011ba,0x109ce7398,0x104a6cb38,0x117768a11d14,0x105405ef4
code-creation,Function,11,76166,0x109ce8500,1232,moduleResolve node:internal/modules/esm/resolve:844:23,0x1e372ce2c680,^
code-source-info,0x109ce8500,437,27782,28551,,,
code-creation,Function,11,76166,0x109ce8a40,600,hasNoEntryError node:fs:1525:25,0x3b46b2017e80,^
code-source-info,0x109ce8a40,73,39050,39241,,,
code-creation,Function,11,76208,0x109ce8d00,1288,getOptions node:internal/fs/utils:319:20,0x3b46b2034b68,^
code-source-info,0x109ce8d00,77,7291,7897,,,
code-creation,Function,11,76416,0x109ce9280,4136,resolve node:internal/modules/esm/loader:786:16,0x1e372ce22f98,^
code-source-info,0x109ce9280,433,23089,25779,,,
code-creation,Function,11,76458,0x109cea320,480,toUSVString node:internal/util:61:21,0x3d9b801bb6f8,^
code-source-info,0x109cea320,21,1393,1685,,,
code-creation,Function,11,76458,0x109cea560,1688,getModuleJob node:internal/modules/esm/loader:412:21,0x1e372ce22e08,^
code-source-info,0x109cea560,433,11431,12352,,,
code-creation,Function,11,76500,0x109ceac60,2064,encodePathChars node:internal/url:1509:25,0x3b46b20276e8,^
code-source-info,0x109ceac60,74,41785,42477,,,
code-creation,Function,11,76750,0x109ceb4e0,4368,finalizeResolution node:internal/modules/esm/resolve:272:28,0x1e372ce2c0e0,^
code-source-info,0x109ceb4e0,437,8682,10272,,,
code-creation,Function,11,76791,0x109cec660,632,get search node:internal/url:947:13,0x3b46b2026f78,^
code-source-info,0x109cec660,74,25768,25961,,,
code-creation,Function,11,76791,0x109cec940,632,get hash node:internal/url:983:11,0x3b46b20270c8,^
code-source-info,0x109cec940,74,26701,26906,,,
code-creation,Function,11,77291,0x109cecc20,6520,defaultResolve node:internal/modules/esm/resolve:984:30,0x1e372ce2c810,^
code-source-info,0x109cecc20,437,32129,36020,,,
code-creation,Function,11,77291,0x109cee600,1800,set search node:internal/url:956:13,0x3b46b2026fe8,^
code-source-info,0x109cee600,74,25975,26549,,,
code-creation,Function,11,77333,0x109ceed80,512,throwIfUnsupportedURLProtocol node:internal/modules/esm/resolve:956:39,0x1e372ce2c770,^
code-source-info,0x109ceed80,437,31448,31608,,,
tick,0x109cc9050,77416,0,0x0,0,0x109ccaee8,0x1a3e29cbda6a,0x109cec418,0x109ce895c,0x109cedc58,0x109cd29f0,0x109ce98c4,0x109cea7b4,0x109ce7398,0x104a6cb38,0x117768a11d14,0x105405ef4
code-creation,Function,11,77458,0x109ceefe0,2976,getPackageConfig node:internal/modules/esm/package_config:40:26,0x1e372ce30090,^
code-source-info,0x109ceefe0,438,908,2391,,,
code-creation,Function,11,77500,0x109cefbe0,2632,pathToFileURL node:internal/url:1524:23,0x3b46b2027738,^
code-source-info,0x109cefbe0,74,42501,43730,,,
new,MemoryChunk,0x1f083e6c0000,262144
new,MemoryChunk,0x25edec7c0000,262144
tick,0x1a4c861b4,78666,0,0x0,0,0x0,0x109ccbedc,0x109cd6668,0x109ce14d4,0x109ce717c,0x117768a0a6b0,0x109ce476c,0x109cee26c,0x109cd29f0,0x109ce98c4,0x109cea7b4,0x109ce7398,0x104a6cb38,0x117768a11d14,0x105405ef4
code-creation,Function,11,78958,0x109cf06a0,1760,set node:internal/modules/esm/module_map:23:6,0x1e372ce25dd8,^
code-source-info,0x109cf06a0,434,733,1253,,,
code-creation,Function,11,78958,0x109cf0de0,776,getConditionsSet node:internal/modules/esm/resolve:140:26,0x1e372ce2bf00,^
code-source-info,0x109cf0de0,437,4399,4726,,,
code-creation,Function,11,79000,0x109cf1160,1488,set hash node:internal/url:992:11,0x3b46b2027130,^
code-source-info,0x109cf1160,74,26918,27418,,,
code-creation,Function,11,79000,0x109cf17a0,416,validateOutput node:internal/modules/esm/loader:827:28,0x117768a01510,^
code-source-info,0x109cf17a0,433,24102,24339,,,
code-creation,Function,11,79041,0x109cf19a0,672,get node:internal/modules/esm/module_map:18:6,0x1e372ce25d88,^
code-source-info,0x109cf19a0,434,587,727,,,
code-creation,Function,11,79041,0x109cf1ca0,1432,ModuleJob node:internal/modules/esm/module_job:53:14,0x1e372ce26c88,^
code-source-info,0x109cf1ca0,435,1255,3031,,,
code-creation,Function,11,79208,0x109cf22a0,1168,validateArgs node:internal/modules/esm/loader:565:26,0x117768a0d780,^
code-source-info,0x109cf22a0,433,16708,17461,,,
code-creation,Function,11,79208,0x109cf27a0,976,#createModuleJob node:internal/modules/esm/loader:453:19,0x1e372ce22c78,^
code-source-info,0x109cf27a0,433,13006,13858,,,
code-creation,Function,11,79250,0x109cf2be0,1488,open node:internal/fs/promises:507:20,0x1a3e29c93cd8,^
code-source-info,0x109cf2be0,449,12752,13058,,,
code-creation,Function,11,79250,0x109cf3220,1448,moduleProvider node:internal/modules/esm/loader:454:28,0x117768a0c638,^
code-source-info,0x109cf3220,433,13078,13518,,,
code-creation,Function,11,79333,0x109cf3840,1768,link node:internal/modules/esm/module_job:66:18,0x117768a0c8b0,^
code-source-info,0x109cf3840,435,1812,2648,,,
code-creation,Function,11,79333,0x109cf3fa0,1376,readFile node:internal/fs/promises:863:24,0x1a3e29c947c8,^
code-source-info,0x109cf3fa0,449,23904,24225,,,
code-creation,Function,11,79375,0x109cf4560,1760,defaultLoad node:internal/modules/esm/load:72:27,0x1a3e29c91308,^
code-source-info,0x109cf4560,448,2199,2706,,,
code-creation,Function,11,79541,0x109cf4ca0,4480,load node:internal/modules/esm/loader:554:13,0x1e372ce22ea8,^
code-source-info,0x109cf4ca0,433,16442,19653,,,
code-creation,Function,11,79583,0x109cf5e80,1392,validateAssertions node:internal/modules/esm/assert:55:28,0x1e372ce28d10,^
code-source-info,0x109cf5e80,436,1781,2908,,,
code-creation,Function,11,79583,0x109cf6460,1272, node:internal/validators:136:40,0x3d9b801bfe28,^
code-source-info,0x109cf6460,22,3468,3900,,,
code-creation,LazyCompile,13,79833,0x109cf69c0,1456,getPathFromURLPosix node:internal/url:1464:29,0x3b46b2027648,*
code-source-info,0x109cf69c0,74,40176,40652,C0O40176C56O40194C84O17526I4C96O17548I4C108O24238I3C112O24248I3C188O40203C196O40223C200O18155I2C204O25324I0C208O25378I0C212O25383I0C228O25390I0C244O25429I0C336O40363C352O40321C360O40363C536O40367C544O40341C548O40303C564O40621C624O40650C664O40363C700O40407C704O25357I0C708O25361I0C712O24194I3C716O40176C764O24248I3C800O40363C888O40303C1032O40363,F0O40291F1O25223I0F2O25324I0F3O40194F1O24165I3,S0x3b46b2026e98S0x3b46b2026570S0x3b46b20266a8S0x3b46b2026ce8
feedback-vector,79875,0x117768a07a28,29,0x109cf69c0,TieringState::kInProgress,0,230,0,0x117768a07a29: [FeedbackVector] in OldSpace\n - map: 0x0152b3601b89 <Map>\n - length: 29\n - shared function info: 0x3b46b2027649 <SharedFunctionInfo getPathFromURLPosix>\n - no optimized code\n - tiering state: TieringState::kInProgress\n - maybe has optimized code: 0\n - invocation count: 230\n - profiler ticks: 0\n - closure feedback cell array: 0x152b36032f1: [ClosureFeedbackCellArray] in ReadOnlySpace\n - map: 0x0152b3601f39 <Map>\n - length: 0\n\n - slot #0 LoadProperty MONOMORPHIC {\n     [0]: [weak] 0x11d49ccbf6c9 <Map(HOLEY_ELEMENTS)>\n     [1]: 0x117768a0a861 <Other heap object (LOAD_HANDLER_TYPE)>\n  }\n - slot #2 CompareOp CompareOp:InternalizedString {\n     [2]: 16\n  }\n - slot #3 Call UNINITIALIZED {\n     [3]: 0x0152b36068a9 <Symbol: (uninitialized_symbol)>\n     [4]: 0\n  }\n - slot #5 LoadProperty MONOMORPHIC {\n     [5]: [weak] 0x11d49ccbf6c9 <Map(HOLEY_ELEMENTS)>\n     [6]: 0x117768a0a881 <Other heap object (LOAD_HANDLER_TYPE)>\n  }\n - slot #7 LoadProperty MONOMORPHIC {\n     [7]: [weak] 0x0152b3602c29 <Map[32]>\n     [8]: 0x0152b360df71 <Code BUILTIN LoadIC_StringLength>\n  }\n - slot #9 CompareOp CompareOp:SignedSmall {\n     [9]: 1\n  }\n - slot #10 LoadKeyed MONOMORPHIC {\n     [10]: [weak] 0x0152b3602c29 <Map[32]>\n     [11]: 1\n  }\n - slot #12 CompareOp CompareOp:String {\n     [12]: 48\n  }\n - slot #13 BinaryOp BinaryOp:None {\n     [13]: 0\n  }\n - slot #14 LoadProperty UNINITIALIZED {\n     [14]: 0x0152b36068a9 <Symbol: (uninitialized_symbol)>\n     [15]: 0x0152b36068a9 <Symbol: (uninitialized_symbol)>\n  }\n - slot #16 BinaryOp BinaryOp:None {\n     [16]: 0\n  }\n - slot #17 Call UNINITIALIZED {\n     [17]: 0x0152b36068a9 <Symbol: (uninitialized_symbol)>\n     [18]: 0\n  }\n - slot #19 BinaryOp BinaryOp:None {\n     [19]: 0\n  }\n - slot #20 LoadKeyed UNINITIALIZED {\n     [20]: 0x0152b36068a9 <Symbol: (uninitialized_symbol)>\n     [21]: 0x0152b36068a9 <Symbol: (uninitialized_symbol)>\n  }\n - slot #22 CompareOp CompareOp:None {\n     [22]: 0\n  }\n - slot #23 CompareOp CompareOp:None {\n     [23]: 0\n  }\n - slot #24 Call UNINITIALIZED {\n     [24]: 0x0152b36068a9 <Symbol: (uninitialized_symbol)>\n     [25]: 0\n  }\n - slot #26 BinaryOp BinaryOp:SignedSmall {\n     [26]: 1\n  }\n - slot #27 Call MONOMORPHIC {\n     [27]: [weak] 0x31015f6d9309 <JSFunction decodeURIComponent (sfi = 0x1e27ac655721)>\n     [28]: 920\n  }\n
tick,0x1a4dd9970,80041,0,0x0,4,0x0,0x117768a14ac7,0x109cf43e4,0x105405ef4
code-creation,Function,11,80125,0x109cf7020,1424,EventEmitter.init node:events:337:29,0xa0ae21e5f90,^
script-source,29,node:events,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeShift\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSplice\x2C\n  ArrayPrototypeUnshift\x2C\n  Boolean\x2C\n  Error\x2C\n  ErrorCaptureStackTrace\x2C\n  FunctionPrototypeBind\x2C\n  FunctionPrototypeCall\x2C\n  NumberIsNaN\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperty\x2C\n  ObjectDefineProperties\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectSetPrototypeOf\x2C\n  Promise\x2C\n  PromiseReject\x2C\n  PromiseResolve\x2C\n  ReflectApply\x2C\n  ReflectOwnKeys\x2C\n  String\x2C\n  StringPrototypeSplit\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n  SymbolAsyncIterator\x2C\n} = primordials;\nconst kRejection = SymbolFor('nodejs.rejection');\n\nconst { kEmptyObject } = require('internal/util');\n\nconst {\n  inspect\x2C\n  identicalSequenceRange\x2C\n} = require('internal/util/inspect');\n\nlet spliceOne;\n\nconst {\n  AbortError\x2C\n  kEnhanceStackBeforeInspector\x2C\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_THIS\x2C\n    ERR_OUT_OF_RANGE\x2C\n    ERR_UNHANDLED_ERROR\n  }\x2C\n  genericNodeError\x2C\n} = require('internal/errors');\n\nconst {\n  validateAbortSignal\x2C\n  validateBoolean\x2C\n  validateFunction\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst kCapture = Symbol('kCapture');\nconst kErrorMonitor = Symbol('events.errorMonitor');\nconst kMaxEventTargetListeners = Symbol('events.maxEventTargetListeners');\nconst kMaxEventTargetListenersWarned =\n  Symbol('events.maxEventTargetListenersWarned');\n\nlet EventEmitterAsyncResource;\n// The EventEmitterAsyncResource has to be initialized lazily because event.js\n// is loaded so early in the bootstrap process\x2C before async_hooks is available.\n//\n// This implementation was adapted straight from addaleax's\n// eventemitter-asyncresource MIT-licensed userland module.\n// https://github.com/addaleax/eventemitter-asyncresource\nfunction lazyEventEmitterAsyncResource() {\n  if (EventEmitterAsyncResource === undefined) {\n    const {\n      AsyncResource\n    } = require('async_hooks');\n\n    const kEventEmitter = Symbol('kEventEmitter');\n    const kAsyncResource = Symbol('kAsyncResource');\n    class EventEmitterReferencingAsyncResource extends AsyncResource {\n      /**\n       * @param {EventEmitter} ee\n       * @param {string} [type]\n       * @param {{\n       *   triggerAsyncId?: number\x2C\n       *   requireManualDestroy?: boolean\x2C\n       * }} [options]\n       */\n      constructor(ee\x2C type\x2C options) {\n        super(type\x2C options);\n        this[kEventEmitter] = ee;\n      }\n\n      /**\n       * @type {EventEmitter}\n       */\n      get eventEmitter() {\n        if (this[kEventEmitter] === undefined)\n          throw new ERR_INVALID_THIS('EventEmitterReferencingAsyncResource');\n        return this[kEventEmitter];\n      }\n    }\n\n    EventEmitterAsyncResource =\n      class EventEmitterAsyncResource extends EventEmitter {\n        /**\n         * @param {{\n         *   name?: string\x2C\n         *   triggerAsyncId?: number\x2C\n         *   requireManualDestroy?: boolean\x2C\n         * }} [options]\n         */\n        constructor(options = undefined) {\n          let name;\n          if (typeof options === 'string') {\n            name = options;\n            options = undefined;\n          } else {\n            if (new.target === EventEmitterAsyncResource) {\n              validateString(options?.name\x2C 'options.name');\n            }\n            name = options?.name || new.target.name;\n          }\n          super(options);\n\n          this[kAsyncResource] =\n            new EventEmitterReferencingAsyncResource(this\x2C name\x2C options);\n        }\n\n        /**\n         * @param {symbol\x2Cstring} event\n         * @param  {...any} args\n         * @returns {boolean}\n         */\n        emit(event\x2C ...args) {\n          if (this[kAsyncResource] === undefined)\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\n          const { asyncResource } = this;\n          ArrayPrototypeUnshift(args\x2C super.emit\x2C this\x2C event);\n          return ReflectApply(asyncResource.runInAsyncScope\x2C asyncResource\x2C\n                              args);\n        }\n\n        /**\n         * @returns {void}\n         */\n        emitDestroy() {\n          if (this[kAsyncResource] === undefined)\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\n          this.asyncResource.emitDestroy();\n        }\n\n        /**\n         * @type {number}\n         */\n        get asyncId() {\n          if (this[kAsyncResource] === undefined)\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\n          return this.asyncResource.asyncId();\n        }\n\n        /**\n         * @type {number}\n         */\n        get triggerAsyncId() {\n          if (this[kAsyncResource] === undefined)\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\n          return this.asyncResource.triggerAsyncId();\n        }\n\n        /**\n         * @type {EventEmitterReferencingAsyncResource}\n         */\n        get asyncResource() {\n          if (this[kAsyncResource] === undefined)\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\n          return this[kAsyncResource];\n        }\n      };\n  }\n  return EventEmitterAsyncResource;\n}\n\n/**\n * Creates a new `EventEmitter` instance.\n * @param {{ captureRejections?: boolean; }} [opts]\n * @constructs {EventEmitter}\n */\nfunction EventEmitter(opts) {\n  EventEmitter.init.call(this\x2C opts);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\nmodule.exports.on = on;\nmodule.exports.getEventListeners = getEventListeners;\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.usingDomains = false;\n\nEventEmitter.captureRejectionSymbol = kRejection;\nObjectDefineProperty(EventEmitter\x2C 'captureRejections'\x2C {\n  __proto__: null\x2C\n  get() {\n    return EventEmitter.prototype[kCapture];\n  }\x2C\n  set(value) {\n    validateBoolean(value\x2C 'EventEmitter.captureRejections');\n\n    EventEmitter.prototype[kCapture] = value;\n  }\x2C\n  enumerable: true\n});\n\nObjectDefineProperty(EventEmitter\x2C 'EventEmitterAsyncResource'\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  get: lazyEventEmitterAsyncResource\x2C\n  set: undefined\x2C\n  configurable: true\x2C\n});\n\nEventEmitter.errorMonitor = kErrorMonitor;\n\n// The default for captureRejections is false\nObjectDefineProperty(EventEmitter.prototype\x2C kCapture\x2C {\n  __proto__: null\x2C\n  value: false\x2C\n  writable: true\x2C\n  enumerable: false\n});\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nlet defaultMaxListeners = 10;\nlet isEventTarget;\n\nfunction checkListener(listener) {\n  validateFunction(listener\x2C 'listener');\n}\n\nObjectDefineProperty(EventEmitter\x2C 'defaultMaxListeners'\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  get: function() {\n    return defaultMaxListeners;\n  }\x2C\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new ERR_OUT_OF_RANGE('defaultMaxListeners'\x2C\n                                 'a non-negative number'\x2C\n                                 arg);\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nObjectDefineProperties(EventEmitter\x2C {\n  kMaxEventTargetListeners: {\n    __proto__: null\x2C\n    value: kMaxEventTargetListeners\x2C\n    enumerable: false\x2C\n    configurable: false\x2C\n    writable: false\x2C\n  }\x2C\n  kMaxEventTargetListenersWarned: {\n    __proto__: null\x2C\n    value: kMaxEventTargetListenersWarned\x2C\n    enumerable: false\x2C\n    configurable: false\x2C\n    writable: false\x2C\n  }\n});\n\n/**\n * Sets the max listeners.\n * @param {number} n\n * @param {EventTarget[] | EventEmitter[]} [eventTargets]\n * @returns {void}\n */\nEventEmitter.setMaxListeners =\n  function(n = defaultMaxListeners\x2C ...eventTargets) {\n    if (typeof n !== 'number' || n < 0 || NumberIsNaN(n))\n      throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\n    if (eventTargets.length === 0) {\n      defaultMaxListeners = n;\n    } else {\n      if (isEventTarget === undefined)\n        isEventTarget = require('internal/event_target').isEventTarget;\n\n      for (let i = 0; i < eventTargets.length; i++) {\n        const target = eventTargets[i];\n        if (isEventTarget(target)) {\n          target[kMaxEventTargetListeners] = n;\n          target[kMaxEventTargetListenersWarned] = false;\n        } else if (typeof target.setMaxListeners === 'function') {\n          target.setMaxListeners(n);\n        } else {\n          throw new ERR_INVALID_ARG_TYPE(\n            'eventTargets'\x2C\n            ['EventEmitter'\x2C 'EventTarget']\x2C\n            target);\n        }\n      }\n    }\n  };\n\n// If you're updating this function definition\x2C please also update any\n// re-definitions\x2C such as the one in the Domain module (lib/domain.js).\nEventEmitter.init = function(opts) {\n\n  if (this._events === undefined ||\n      this._events === ObjectGetPrototypeOf(this)._events) {\n    this._events = ObjectCreate(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n\n\n  if (opts?.captureRejections) {\n    validateBoolean(opts.captureRejections\x2C 'options.captureRejections');\n    this[kCapture] = Boolean(opts.captureRejections);\n  } else {\n    // Assigning the kCapture property directly saves an expensive\n    // prototype lookup in a very sensitive hot path.\n    this[kCapture] = EventEmitter.prototype[kCapture];\n  }\n};\n\nfunction addCatch(that\x2C promise\x2C type\x2C args) {\n  if (!that[kCapture]) {\n    return;\n  }\n\n  // Handle Promises/A+ spec\x2C then could be a getter\n  // that throws on second use.\n  try {\n    const then = promise.then;\n\n    if (typeof then === 'function') {\n      then.call(promise\x2C undefined\x2C function(err) {\n        // The callback is called with nextTick to avoid a follow-up\n        // rejection from this promise.\n        process.nextTick(emitUnhandledRejectionOrErr\x2C that\x2C err\x2C type\x2C args);\n      });\n    }\n  } catch (err) {\n    that.emit('error'\x2C err);\n  }\n}\n\nfunction emitUnhandledRejectionOrErr(ee\x2C err\x2C type\x2C args) {\n  if (typeof ee[kRejection] === 'function') {\n    ee[kRejection](err\x2C type\x2C ...args);\n  } else {\n    // We have to disable the capture rejections mechanism\x2C otherwise\n    // we might end up in an infinite loop.\n    const prev = ee[kCapture];\n\n    // If the error handler throws\x2C it is not catchable and it\n    // will end up in 'uncaughtException'. We restore the previous\n    // value of kCapture in case the uncaughtException is present\n    // and the exception is handled.\n    try {\n      ee[kCapture] = false;\n      ee.emit('error'\x2C err);\n    } finally {\n      ee[kCapture] = prev;\n    }\n  }\n}\n\n/**\n * Increases the max listeners of the event emitter.\n * @param {number} n\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\n/**\n * Returns the current max listener value for the event emitter.\n * @returns {number}\n */\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nfunction enhanceStackTrace(err\x2C own) {\n  let ctorInfo = '';\n  try {\n    const { name } = this.constructor;\n    if (name !== 'EventEmitter')\n      ctorInfo = ` on ${name} instance`;\n  } catch {\n    // Continue regardless of error.\n  }\n  const sep = `\\nEmitted 'error' event${ctorInfo} at:\\n`;\n\n  const errStack = ArrayPrototypeSlice(\n    StringPrototypeSplit(err.stack\x2C '\\n')\x2C 1);\n  const ownStack = ArrayPrototypeSlice(\n    StringPrototypeSplit(own.stack\x2C '\\n')\x2C 1);\n\n  const { len\x2C offset } = identicalSequenceRange(ownStack\x2C errStack);\n  if (len > 0) {\n    ArrayPrototypeSplice(ownStack\x2C offset + 1\x2C len - 2\x2C\n                         '    [... lines matching original stack trace ...]');\n  }\n\n  return err.stack + sep + ArrayPrototypeJoin(ownStack\x2C '\\n');\n}\n\n/**\n * Synchronously calls each of the listeners registered\n * for the event.\n * @param {string | symbol} type\n * @param {...any} [args]\n * @returns {boolean}\n */\nEventEmitter.prototype.emit = function emit(type\x2C ...args) {\n  let doError = (type === 'error');\n\n  const events = this._events;\n  if (events !== undefined) {\n    if (doError && events[kErrorMonitor] !== undefined)\n      this.emit(kErrorMonitor\x2C ...args);\n    doError = (doError && events.error === undefined);\n  } else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    let er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      try {\n        const capture = {};\n        ErrorCaptureStackTrace(capture\x2C EventEmitter.prototype.emit);\n        ObjectDefineProperty(er\x2C kEnhanceStackBeforeInspector\x2C {\n          __proto__: null\x2C\n          value: FunctionPrototypeBind(enhanceStackTrace\x2C this\x2C er\x2C capture)\x2C\n          configurable: true\n        });\n      } catch {\n        // Continue regardless of error.\n      }\n\n      // Note: The comments on the `throw` lines are intentional\x2C they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n\n    let stringifiedEr;\n    try {\n      stringifiedEr = inspect(er);\n    } catch {\n      stringifiedEr = er;\n    }\n\n    // At least give some kind of context to the user\n    const err = new ERR_UNHANDLED_ERROR(stringifiedEr);\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  const handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    const result = handler.apply(this\x2C args);\n\n    // We check if result is undefined first because that\n    // is the most common case so we do not pay any perf\n    // penalty\n    if (result !== undefined && result !== null) {\n      addCatch(this\x2C result\x2C type\x2C args);\n    }\n  } else {\n    const len = handler.length;\n    const listeners = arrayClone(handler);\n    for (let i = 0; i < len; ++i) {\n      const result = listeners[i].apply(this\x2C args);\n\n      // We check if result is undefined first because that\n      // is the most common case so we do not pay any perf\n      // penalty.\n      // This code is duplicated because extracting it away\n      // would make it non-inlineable.\n      if (result !== undefined && result !== null) {\n        addCatch(this\x2C result\x2C type\x2C args);\n      }\n    }\n  }\n\n  return true;\n};\n\nfunction _addListener(target\x2C type\x2C listener\x2C prepend) {\n  let m;\n  let events;\n  let existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = ObjectCreate(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === "newListener"! Before\n    // adding it to the listeners\x2C first emit "newListener".\n    if (events.newListener !== undefined) {\n      target.emit('newListener'\x2C type\x2C\n                  listener.listener ?? listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element\x2C need to change to array.\n      existing = events[type] =\n        prepend ? [listener\x2C existing] : [existing\x2C listener];\n      // If we've already got an array\x2C just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      const w = genericNodeError(\n        `Possible EventEmitter memory leak detected. ${existing.length} ${String(type)} listeners ` +\n        `added to ${inspect(target\x2C { depth: -1 })}. Use emitter.setMaxListeners() to increase limit`\x2C\n        { name: 'MaxListenersExceededWarning'\x2C emitter: target\x2C type: type\x2C count: existing.length });\n      process.emitWarning(w);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Adds a listener to the event emitter.\n * @param {string | symbol} type\n * @param {Function} listener\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.addListener = function addListener(type\x2C listener) {\n  return _addListener(this\x2C type\x2C listener\x2C false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\n/**\n * Adds the `listener` function to the beginning of\n * the listeners array.\n * @param {string | symbol} type\n * @param {Function} listener\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.prependListener =\n    function prependListener(type\x2C listener) {\n      return _addListener(this\x2C type\x2C listener\x2C true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type\x2C this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target\x2C arguments);\n  }\n}\n\nfunction _onceWrap(target\x2C type\x2C listener) {\n  const state = { fired: false\x2C wrapFn: undefined\x2C target\x2C type\x2C listener };\n  const wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\n/**\n * Adds a one-time `listener` function to the event emitter.\n * @param {string | symbol} type\n * @param {Function} listener\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.once = function once(type\x2C listener) {\n  checkListener(listener);\n\n  this.on(type\x2C _onceWrap(this\x2C type\x2C listener));\n  return this;\n};\n\n/**\n * Adds a one-time `listener` function to the beginning of\n * the listeners array.\n * @param {string | symbol} type\n * @param {Function} listener\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type\x2C listener) {\n      checkListener(listener);\n\n      this.prependListener(type\x2C _onceWrap(this\x2C type\x2C listener));\n      return this;\n    };\n\n/**\n * Removes the specified `listener` from the listeners array.\n * @param {string | symbol} type\n * @param {Function} listener\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.removeListener =\n    function removeListener(type\x2C listener) {\n      checkListener(listener);\n\n      const events = this._events;\n      if (events === undefined)\n        return this;\n\n      const list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = ObjectCreate(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener'\x2C type\x2C list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        let position = -1;\n\n        for (let i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          if (spliceOne === undefined)\n            spliceOne = require('internal/util').spliceOne;\n          spliceOne(list\x2C position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener'\x2C type\x2C listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\n/**\n * Removes all listeners from the event emitter. (Only\n * removes listeners for a specific event name if specified\n * as `type`).\n * @param {string | symbol} [type]\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      const events = this._events;\n      if (events === undefined)\n        return this;\n\n      // Not listening for removeListener\x2C no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = ObjectCreate(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = ObjectCreate(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // Emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        for (const key of ReflectOwnKeys(events)) {\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = ObjectCreate(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      const listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type\x2C listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (let i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type\x2C listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target\x2C type\x2C unwrap) {\n  const events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  const evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener);\n}\n\n/**\n * Returns a copy of the array of listeners for the event name\n * specified as `type`.\n * @param {string | symbol} type\n * @returns {Function[]}\n */\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this\x2C type\x2C true);\n};\n\n/**\n * Returns a copy of the array of listeners and wrappers for\n * the event name specified as `type`.\n * @param {string | symbol} type\n * @returns {Function[]}\n */\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this\x2C type\x2C false);\n};\n\n/**\n * Returns the number of listeners listening to the event name\n * specified as `type`.\n * @deprecated since v3.2.0\n * @param {EventEmitter} emitter\n * @param {string | symbol} type\n * @returns {number}\n */\nEventEmitter.listenerCount = function(emitter\x2C type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  }\n  return FunctionPrototypeCall(listenerCount\x2C emitter\x2C type);\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\n\n/**\n * Returns the number of listeners listening to event name\n * specified as `type`.\n * @param {string | symbol} type\n * @returns {number}\n */\nfunction listenerCount(type) {\n  const events = this._events;\n\n  if (events !== undefined) {\n    const evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * Returns an array listing the events for which\n * the emitter has registered listeners.\n * @returns {any[]}\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr) {\n  // At least since V8 8.3\x2C this implementation is faster than the previous\n  // which always used a simple for-loop\n  switch (arr.length) {\n    case 2: return [arr[0]\x2C arr[1]];\n    case 3: return [arr[0]\x2C arr[1]\x2C arr[2]];\n    case 4: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]];\n    case 5: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]];\n    case 6: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]\x2C arr[5]];\n  }\n  return ArrayPrototypeSlice(arr);\n}\n\nfunction unwrapListeners(arr) {\n  const ret = arrayClone(arr);\n  for (let i = 0; i < ret.length; ++i) {\n    const orig = ret[i].listener;\n    if (typeof orig === 'function')\n      ret[i] = orig;\n  }\n  return ret;\n}\n\n/**\n * Returns a copy of the array of listeners for the event name\n * specified as `type`.\n * @param {EventEmitter | EventTarget} emitterOrTarget\n * @param {string | symbol} type\n * @returns {Function[]}\n */\nfunction getEventListeners(emitterOrTarget\x2C type) {\n  // First check if EventEmitter\n  if (typeof emitterOrTarget.listeners === 'function') {\n    return emitterOrTarget.listeners(type);\n  }\n  // Require event target lazily to avoid always loading it\n  const { isEventTarget\x2C kEvents } = require('internal/event_target');\n  if (isEventTarget(emitterOrTarget)) {\n    const root = emitterOrTarget[kEvents].get(type);\n    const listeners = [];\n    let handler = root?.next;\n    while (handler?.listener !== undefined) {\n      const listener = handler.listener?.deref ?\n        handler.listener.deref() : handler.listener;\n      listeners.push(listener);\n      handler = handler.next;\n    }\n    return listeners;\n  }\n  throw new ERR_INVALID_ARG_TYPE('emitter'\x2C\n                                 ['EventEmitter'\x2C 'EventTarget']\x2C\n                                 emitterOrTarget);\n}\n\n/**\n * Creates a `Promise` that is fulfilled when the emitter\n * emits the given event.\n * @param {EventEmitter} emitter\n * @param {string} name\n * @param {{ signal: AbortSignal; }} [options]\n * @returns {Promise}\n */\nasync function once(emitter\x2C name\x2C options = kEmptyObject) {\n  const signal = options?.signal;\n  validateAbortSignal(signal\x2C 'options.signal');\n  if (signal?.aborted)\n    throw new AbortError(undefined\x2C { cause: signal?.reason });\n  return new Promise((resolve\x2C reject) => {\n    const errorListener = (err) => {\n      emitter.removeListener(name\x2C resolver);\n      if (signal != null) {\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\n      }\n      reject(err);\n    };\n    const resolver = (...args) => {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error'\x2C errorListener);\n      }\n      if (signal != null) {\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\n      }\n      resolve(args);\n    };\n    eventTargetAgnosticAddListener(emitter\x2C name\x2C resolver\x2C { once: true });\n    if (name !== 'error' && typeof emitter.once === 'function') {\n      // EventTarget does not have `error` event semantics like Node\n      // EventEmitters\x2C we listen to `error` events only on EventEmitters.\n      emitter.once('error'\x2C errorListener);\n    }\n    function abortListener() {\n      eventTargetAgnosticRemoveListener(emitter\x2C name\x2C resolver);\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorListener);\n      reject(new AbortError(undefined\x2C { cause: signal?.reason }));\n    }\n    if (signal != null) {\n      eventTargetAgnosticAddListener(\n        signal\x2C 'abort'\x2C abortListener\x2C { once: true });\n    }\n  });\n}\n\nconst AsyncIteratorPrototype = ObjectGetPrototypeOf(\n  ObjectGetPrototypeOf(async function* () {}).prototype);\n\nfunction createIterResult(value\x2C done) {\n  return { value\x2C done };\n}\n\nfunction eventTargetAgnosticRemoveListener(emitter\x2C name\x2C listener\x2C flags) {\n  if (typeof emitter.removeListener === 'function') {\n    emitter.removeListener(name\x2C listener);\n  } else if (typeof emitter.removeEventListener === 'function') {\n    emitter.removeEventListener(name\x2C listener\x2C flags);\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter\x2C name\x2C listener\x2C flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags?.once) {\n      emitter.once(name\x2C listener);\n    } else {\n      emitter.on(name\x2C listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    emitter.addEventListener(name\x2C listener\x2C flags);\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\n  }\n}\n\n/**\n * Returns an `AsyncIterator` that iterates `event` events.\n * @param {EventEmitter} emitter\n * @param {string | symbol} event\n * @param {{ signal: AbortSignal; }} [options]\n * @returns {AsyncIterator}\n */\nfunction on(emitter\x2C event\x2C options) {\n  const signal = options?.signal;\n  validateAbortSignal(signal\x2C 'options.signal');\n  if (signal?.aborted)\n    throw new AbortError(undefined\x2C { cause: signal?.reason });\n\n  const unconsumedEvents = [];\n  const unconsumedPromises = [];\n  let error = null;\n  let finished = false;\n\n  const iterator = ObjectSetPrototypeOf({\n    next() {\n      // First\x2C we consume all unread events\n      const value = unconsumedEvents.shift();\n      if (value) {\n        return PromiseResolve(createIterResult(value\x2C false));\n      }\n\n      // Then we error\x2C if an error happened\n      // This happens one time if at all\x2C because after 'error'\n      // we stop listening\n      if (error) {\n        const p = PromiseReject(error);\n        // Only the first element errors\n        error = null;\n        return p;\n      }\n\n      // If the iterator is finished\x2C resolve to done\n      if (finished) {\n        return PromiseResolve(createIterResult(undefined\x2C true));\n      }\n\n      // Wait until an event happens\n      return new Promise(function(resolve\x2C reject) {\n        unconsumedPromises.push({ resolve\x2C reject });\n      });\n    }\x2C\n\n    return() {\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\n\n      if (signal) {\n        eventTargetAgnosticRemoveListener(\n          signal\x2C\n          'abort'\x2C\n          abortListener\x2C\n          { once: true });\n      }\n\n      finished = true;\n\n      for (const promise of unconsumedPromises) {\n        promise.resolve(createIterResult(undefined\x2C true));\n      }\n\n      return PromiseResolve(createIterResult(undefined\x2C true));\n    }\x2C\n\n    throw(err) {\n      if (!err || !(err instanceof Error)) {\n        throw new ERR_INVALID_ARG_TYPE('EventEmitter.AsyncIterator'\x2C\n                                       'Error'\x2C err);\n      }\n      error = err;\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\n    }\x2C\n\n    [SymbolAsyncIterator]() {\n      return this;\n    }\n  }\x2C AsyncIteratorPrototype);\n\n  eventTargetAgnosticAddListener(emitter\x2C event\x2C eventHandler);\n  if (event !== 'error' && typeof emitter.on === 'function') {\n    emitter.on('error'\x2C errorHandler);\n  }\n\n  if (signal) {\n    eventTargetAgnosticAddListener(\n      signal\x2C\n      'abort'\x2C\n      abortListener\x2C\n      { once: true });\n  }\n\n  return iterator;\n\n  function abortListener() {\n    errorHandler(new AbortError(undefined\x2C { cause: signal?.reason }));\n  }\n\n  function eventHandler(...args) {\n    const promise = ArrayPrototypeShift(unconsumedPromises);\n    if (promise) {\n      promise.resolve(createIterResult(args\x2C false));\n    } else {\n      unconsumedEvents.push(args);\n    }\n  }\n\n  function errorHandler(err) {\n    finished = true;\n\n    const toError = ArrayPrototypeShift(unconsumedPromises);\n\n    if (toError) {\n      toError.reject(err);\n    } else {\n      // The next time we call next()\n      error = err;\n    }\n\n    iterator.return();\n  }\n}\n
code-source-info,0x109cf7020,29,9844,10433,,,
code-creation,Function,11,81333,0x109cf7620,576,checkAborted node:internal/fs/promises:377:22,0x1a3e29c93af8,^
code-source-info,0x109cf7620,449,8563,8662,,,
tick,0x105ce54f8,81375,0,0x0,0,0x0,0xa0ae21e6094,0xa0ae21e5acd,0x117768a141ce,0x117768a1402b,0x109cf3078,0x105405ef4
code-creation,Function,11,81375,0x109cf78c0,928,parseFileMode node:internal/validators:68:23,0x3d9b801bfd38,^
code-source-info,0x109cf78c0,22,1609,1898,,,
code-creation,Function,11,81375,0x109cf7cc0,152,get fd node:internal/fs/promises:147:9,0x1a3e29c948d0,^
code-source-info,0x109cf7cc0,449,3419,3449,,,
code-creation,Function,11,81375,0x109cf7dc0,184,EventEmitter node:events:212:22,0xa0ae21e5a50,^
code-source-info,0x109cf7dc0,29,6313,6361,,,
code-creation,Function,11,81416,0x109cf7ee0,688,MixedEventEmitter node:internal/event_target:1059:16,0x1a3e29c9c7a0,^
code-source-info,0x109cf7ee0,46,27351,27481,,,
code-creation,Function,11,81416,0x109cf8200,232,<instance_members_initializer> node:internal/fs/promises:130:1,0x1a3e29c95000,^
code-source-info,0x109cf8200,449,3030,7707,,,
code-creation,Function,11,81458,0x109cf8360,1104,FileHandle node:internal/fs/promises:134:14,0x1a3e29c94818,^
code-source-info,0x109cf8360,449,3182,3348,,,
code-creation,Function,11,81458,0x109cf8820,624,handleFdClose node:internal/fs/promises:344:29,0x1a3e29c93a58,^
code-source-info,0x109cf8820,449,7737,8078,,,
code-creation,LazyCompile,13,81500,0x109cf8b00,1688,normalizeString node:path:66:25,0x25eb221f33e8,*
code-source-info,0x109cf8b00,71,2161,4085,C0O2161C56O2341C160O2333C172O2366C180O2443C212O2394C388O2530C432O2581C436O2575C448O2593C456O3110C464O2640C476O3787C480O3750C516O3713C524O3827C532O3750C540O3827C560O3738C576O3750C708O3903C720O3915C756O2672C764O2697C772O2881C780O2923C848O2998C868O3110C916O3210C920O3217C924O3223C996O3221C1088O4006C1100O4022C1136O2351C1140O2315C1156O4083C1208O2760C1212O3384C1216O2161C1264O2394C1384O2998C1396O3110C1424O3221C1436O2315,,
feedback-vector,81500,0xc1101dba4a8,53,0x109cf8b00,TieringState::kInProgress,0,80,0,0xc1101dba4a9: [FeedbackVector] in OldSpace\n - map: 0x0152b3601b89 <Map>\n - length: 53\n - shared function info: 0x25eb221f33e9 <SharedFunctionInfo normalizeString>\n - no optimized code\n - tiering state: TieringState::kInProgress\n - maybe has optimized code: 0\n - invocation count: 80\n - profiler ticks: 0\n - closure feedback cell array: 0x152b36032f1: [ClosureFeedbackCellArray] in ReadOnlySpace\n - map: 0x0152b3601f39 <Map>\n - length: 0\n\n - slot #0 LoadProperty POLYMORPHIC {\n     [0]: 0x1f083e6c7f39 <Other heap object (WEAK_FIXED_ARRAY_TYPE)>\n     [1]: 0x0152b36068a9 <Symbol: (uninitialized_symbol)>\n  }\n - slot #2 CompareOp CompareOp:SignedSmall {\n     [2]: 1\n  }\n - slot #3 CompareOp CompareOp:SignedSmall {\n     [3]: 1\n  }\n - slot #4 Call MONOMORPHIC {\n     [4]: [weak] 0x24471db3d901 <JSBoundFunction (BoundTargetFunction 0xc1101d94bb1)>\n     [5]: 25548\n  }\n - slot #6 Call MONOMORPHIC {\n     [6]: [weak] 0x24471db018e1 <JSFunction isPosixPathSeparator (sfi = 0x25eb221f3349)>\n     [7]: 320\n  }\n - slot #8 Call MONOMORPHIC {\n     [8]: [weak] 0x24471db018e1 <JSFunction isPosixPathSeparator (sfi = 0x25eb221f3349)>\n     [9]: 25548\n  }\n - slot #10 BinaryOp BinaryOp:SignedSmall {\n     [10]: 1\n  }\n - slot #11 CompareOp CompareOp:SignedSmall {\n     [11]: 1\n  }\n - slot #12 CompareOp CompareOp:SignedSmall {\n     [12]: 1\n  }\n - slot #13 CompareOp CompareOp:SignedSmall {\n     [13]: 1\n  }\n - slot #14 CompareOp CompareOp:SignedSmall {\n     [14]: 1\n  }\n - slot #15 CompareOp CompareOp:SignedSmall {\n     [15]: 1\n  }\n - slot #16 BinaryOp BinaryOp:None {\n     [16]: 0\n  }\n - slot #17 Call UNINITIALIZED {\n     [17]: 0x0152b36068a9 <Symbol: (uninitialized_symbol)>\n     [18]: 0\n  }\n - slot #19 CompareOp CompareOp:None {\n     [19]: 0\n  }\n - slot #20 BinaryOp BinaryOp:None {\n     [20]: 0\n  }\n - slot #21 Call UNINITIALIZED {\n     [21]: 0x0152b36068a9 <Symbol: (uninitialized_symbol)>\n     [22]: 0\n  }\n - slot #23 CompareOp CompareOp:None {\n     [23]: 0\n  }\n - slot #24 CompareOp CompareOp:SignedSmall {\n     [24]: 1\n  }\n - slot #25 Call MONOMORPHIC {\n     [25]: [weak] 0x24471db01859 <JSBoundFunction (BoundTargetFunction 0xc1101d94bb1)>\n     [26]: 16\n  }\n - slot #27 CompareOp CompareOp:SignedSmall {\n     [27]: 1\n  }\n - slot #28 Call MONOMORPHIC {\n     [28]: [weak] 0x31015f6c45d9 <JSBoundFunction (BoundTargetFunction 0xc1101d94bb1)>\n     [29]: 16\n  }\n - slot #30 BinaryOp BinaryOp:SignedSmall {\n     [30]: 1\n  }\n - slot #31 Call MONOMORPHIC {\n     [31]: [weak] 0x24471db01859 <JSBoundFunction (BoundTargetFunction 0xc1101d94bb1)>\n     [32]: 16\n  }\n - slot #33 BinaryOp BinaryOp:SignedSmall {\n     [33]: 1\n  }\n - slot #34 CompareOp CompareOp:None {\n     [34]: 0\n  }\n - slot #35 BinaryOp BinaryOp:None {\n     [35]: 0\n  }\n - slot #36 CompareOp CompareOp:None {\n     [36]: 0\n  }\n - slot #37 BinaryOp BinaryOp:None {\n     [37]: 0\n  }\n - slot #38 CompareOp CompareOp:SignedSmall {\n     [38]: 1\n  }\n - slot #39 BinaryOp BinaryOp:String {\n     [39]: 16\n  }\n - slot #40 BinaryOp BinaryOp:String {\n     [40]: 16\n  }\n - slot #41 BinaryOp BinaryOp:SignedSmall {\n     [41]: 1\n  }\n - slot #42 Call MONOMORPHIC {\n     [42]: [weak] 0x31015f6c45d9 <JSBoundFunction (BoundTargetFunction 0xc1101d94bb1)>\n     [43]: 2592\n  }\n - slot #44 BinaryOp BinaryOp:SignedSmall {\n     [44]: 1\n  }\n - slot #45 Call MONOMORPHIC {\n     [45]: [weak] 0x31015f6c45d9 <JSBoundFunction (BoundTargetFunction 0xc1101d94bb1)>\n     [46]: 316\n  }\n - slot #47 BinaryOp BinaryOp:SignedSmall {\n     [47]: 1\n  }\n - slot #48 BinaryOp BinaryOp:SignedSmall {\n     [48]: 1\n  }\n - slot #49 CompareOp CompareOp:SignedSmall {\n     [49]: 1\n  }\n - slot #50 CompareOp CompareOp:SignedSmall {\n     [50]: 1\n  }\n - slot #51 BinaryOp BinaryOp:SignedSmall {\n     [51]: 1\n  }\n - slot #52 BinaryOp BinaryOp:SignedSmall {\n     [52]: 1\n  }\n
code-creation,Function,11,81833,0x109cf9260,4600,readFileHandle node:internal/fs/promises:417:30,0x1a3e29c93b98,^
code-source-info,0x109cf9260,449,9836,11608,,,
code-creation,Function,11,81875,0x109cfa4c0,352,FastBuffer node:internal/buffer:958:14,0xa0ae21ffc30,^
code-source-info,0x109cfa4c0,31,26364,26453,,,
code-creation,Script,10,82166,0xf2c00796340,166, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/proto3.js:1:1,0xf2c00795ac0,~
script-source,466,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/proto3.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { makeProtoRuntime } from "./private/proto-runtime.js";\nimport { makeBinaryFormatProto3 } from "./private/binary-format-proto3.js";\nimport { makeJsonFormatProto3 } from "./private/json-format-proto3.js";\nimport { makeUtilCommon } from "./private/util-common.js";\nimport { InternalFieldList } from "./private/field-list.js";\nimport { scalarDefaultValue } from "./private/scalars.js";\nimport { ScalarType } from "./field.js";\nimport { InternalOneofInfo } from "./private/field.js";\nimport { localFieldName\x2C fieldJsonName } from "./private/names.js";\n/**\n * Provides functionality for messages defined with the proto3 syntax.\n */\nexport const proto3 = makeProtoRuntime("proto3"\x2C makeJsonFormatProto3()\x2C makeBinaryFormatProto3()\x2C Object.assign(Object.assign({}\x2C makeUtilCommon())\x2C { newFieldList(fields) {\n        return new InternalFieldList(fields\x2C normalizeFieldInfosProto3);\n    }\x2C\n    initFields(target) {\n        for (const member of target.getType().fields.byMember()) {\n            if (member.opt) {\n                continue;\n            }\n            const name = member.localName\x2C t = target;\n            if (member.repeated) {\n                t[name] = [];\n                continue;\n            }\n            switch (member.kind) {\n                case "oneof":\n                    t[name] = { case: undefined };\n                    break;\n                case "enum":\n                    t[name] = 0;\n                    break;\n                case "map":\n                    t[name] = {};\n                    break;\n                case "scalar":\n                    t[name] = scalarDefaultValue(member.T); // eslint-disable-line @typescript-eslint/no-unsafe-assignment\n                    break;\n                case "message":\n                    // message fields are always optional in proto3\n                    break;\n            }\n        }\n    } }));\n/* eslint-disable @typescript-eslint/no-explicit-any\x2C@typescript-eslint/no-unsafe-assignment\x2C@typescript-eslint/no-unsafe-member-access\x2C@typescript-eslint/no-unsafe-argument */\nfunction normalizeFieldInfosProto3(fieldInfos) {\n    var _a\x2C _b\x2C _c;\n    const r = [];\n    let o;\n    for (const field of typeof fieldInfos == "function"\n        ? fieldInfos()\n        : fieldInfos) {\n        const f = field;\n        f.localName = localFieldName(field.name\x2C field.oneof !== undefined);\n        f.jsonName = (_a = field.jsonName) !== null && _a !== void 0 ? _a : fieldJsonName(field.name);\n        f.repeated = (_b = field.repeated) !== null && _b !== void 0 ? _b : false;\n        // From the proto3 language guide:\n        // > In proto3\x2C repeated fields of scalar numeric types are packed by default.\n        // This information is incomplete - according to the conformance tests\x2C BOOL\n        // and ENUM are packed by default as well. This means only STRING and BYTES\n        // are not packed by default\x2C which makes sense because they are length-delimited.\n        f.packed =\n            (_c = field.packed) !== null && _c !== void 0 ? _c : (field.kind == "enum" ||\n                (field.kind == "scalar" &&\n                    field.T != ScalarType.BYTES &&\n                    field.T != ScalarType.STRING));\n        // We do not surface options at this time\n        // f.options = field.options ?? emptyReadonlyObject;\n        if (field.oneof !== undefined) {\n            const ooname = typeof field.oneof == "string" ? field.oneof : field.oneof.name;\n            if (!o || o.name != ooname) {\n                o = new InternalOneofInfo(ooname);\n            }\n            f.oneof = o;\n            o.addField(f);\n        }\n        r.push(f);\n    }\n    return r;\n}\n
code-source-info,0xf2c00796340,466,0,4245,C10O0C34O0C54O0C61O1261C70O1288C76O1288C80O1312C86O1312C90O1338C94O1345C99O1352C103O1359C110O1370C116O1370C120O1359C132O1391C140O1498C148O1345C155O1261C160O1261C165O4245,,
tick,0x1a4e3b4d0,82458,1,0x104ab1b54,6,0x0,0x1a3e29cbc100,0x109cef138,0x109ce14fc,0x109ce717c,0x117768a0a6b0,0x109ce476c,0x109cee26c,0x109cd29f0,0x109ce98c4,0x109cea7b4,0x109ce7398,0x104a6cb38,0x109cf3c04,0x105405ef4
code-creation,Script,10,83500,0xf2c00796f10,244, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/proto-base64.js:1:1,0xf2c00796c08,~
script-source,467,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/proto-base64.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/* eslint-disable @typescript-eslint/ban-ts-comment\x2C @typescript-eslint/no-unnecessary-condition\x2C prefer-const */\n// lookup table from base64 character to byte\nlet encTable = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split("");\n// lookup table from base64 character *code* to byte because lookup by number is fast\nlet decTable = [];\nfor (let i = 0; i < encTable.length; i++)\n    decTable[encTable[i].charCodeAt(0)] = i;\n// support base64url variants\ndecTable["-".charCodeAt(0)] = encTable.indexOf("+");\ndecTable["_".charCodeAt(0)] = encTable.indexOf("/");\nexport const protoBase64 = {\n    /**\n     * Decodes a base64 string to a byte array.\n     *\n     * - ignores white-space\x2C including line breaks and tabs\n     * - allows inner padding (can decode concatenated base64 strings)\n     * - does not require padding\n     * - understands base64url encoding:\n     *   "-" instead of "+"\x2C\n     *   "_" instead of "/"\x2C\n     *   no padding\n     */\n    dec(base64Str) {\n        // estimate byte size\x2C not accounting for inner padding and whitespace\n        let es = (base64Str.length * 3) / 4;\n        // if (es % 3 !== 0)\n        // throw new Error("invalid base64 string");\n        if (base64Str[base64Str.length - 2] == "=")\n            es -= 2;\n        else if (base64Str[base64Str.length - 1] == "=")\n            es -= 1;\n        let bytes = new Uint8Array(es)\x2C bytePos = 0\x2C // position in byte array\n        groupPos = 0\x2C // position in base64 group\n        b\x2C // current byte\n        p = 0; // previous byte\n        for (let i = 0; i < base64Str.length; i++) {\n            b = decTable[base64Str.charCodeAt(i)];\n            if (b === undefined) {\n                switch (base64Str[i]) {\n                    // @ts-ignore TS7029: Fallthrough case in switch\n                    case "=":\n                        groupPos = 0; // reset state when padding found\n                    // @ts-ignore TS7029: Fallthrough case in switch\n                    case "\\n":\n                    case "\\r":\n                    case "\\t":\n                    case " ":\n                        continue; // skip white-space\x2C and padding\n                    default:\n                        throw Error("invalid base64 string.");\n                }\n            }\n            switch (groupPos) {\n                case 0:\n                    p = b;\n                    groupPos = 1;\n                    break;\n                case 1:\n                    bytes[bytePos++] = (p << 2) | ((b & 48) >> 4);\n                    p = b;\n                    groupPos = 2;\n                    break;\n                case 2:\n                    bytes[bytePos++] = ((p & 15) << 4) | ((b & 60) >> 2);\n                    p = b;\n                    groupPos = 3;\n                    break;\n                case 3:\n                    bytes[bytePos++] = ((p & 3) << 6) | b;\n                    groupPos = 0;\n                    break;\n            }\n        }\n        if (groupPos == 1)\n            throw Error("invalid base64 string.");\n        return bytes.subarray(0\x2C bytePos);\n    }\x2C\n    /**\n     * Decodes a base64 string to a byte array.\n     *\n     * - ignores white-space\x2C including line breaks and tabs\n     * - allows inner padding (can decode concatenated base64 strings)\n     * - does not require padding\n     * - understands base64url encoding:\n     *   "-" instead of "+"\x2C\n     *   "_" instead of "/"\x2C\n     *   no padding\n     */\n    enc(bytes) {\n        let base64 = ""\x2C groupPos = 0\x2C // position in base64 group\n        b\x2C // current byte\n        p = 0; // carry over from previous byte\n        for (let i = 0; i < bytes.length; i++) {\n            b = bytes[i];\n            switch (groupPos) {\n                case 0:\n                    base64 += encTable[b >> 2];\n                    p = (b & 3) << 4;\n                    groupPos = 1;\n                    break;\n                case 1:\n                    base64 += encTable[p | (b >> 4)];\n                    p = (b & 15) << 2;\n                    groupPos = 2;\n                    break;\n                case 2:\n                    base64 += encTable[p | (b >> 6)];\n                    base64 += encTable[b & 63];\n                    groupPos = 0;\n                    break;\n            }\n        }\n        // padding required?\n        if (groupPos) {\n            base64 += encTable[p];\n            base64 += "=";\n            if (groupPos == 1)\n                base64 += "=";\n        }\n        return base64;\n    }\x2C\n};\n
code-source-info,0xf2c00796f10,467,0,5077,C10O0C34O0C54O0C58O780C61O847C69O847C74O780C76O959C78O959C80O976C82O981C85O992C89O981C94O1009C102O1026C106O1030C113O1030C121O1045C125O1001C130O963C133O1080C139O1093C146O1093C155O1119C163O1119C168O1108C172O1133C178O1146C185O1146C194O1172C202O1172C208O1161C215O1213C220O1575C228O4035C238O1213C243O5077,,
tick,0x1a4db2bb8,83750,1,0x104a6bc1c,3,0x0,0x117768a18b79,0x109cf3688,0x105405ef4
code-creation,Script,10,83833,0xf2c00797d38,69, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/proto-int64.js:1:1,0xf2c007978e0,~
script-source,468,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/proto-int64.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { assert } from "./private/assert.js";\nimport { int64FromString\x2C int64ToString\x2C uInt64ToString\x2C } from "./google/varint.js";\nfunction makeInt64Support() {\n    const dv = new DataView(new ArrayBuffer(8));\n    // note that Safari 14 implements BigInt\x2C but not the DataView methods\n    const ok = globalThis.BigInt !== undefined &&\n        typeof dv.getBigInt64 === "function" &&\n        typeof dv.getBigUint64 === "function" &&\n        typeof dv.setBigInt64 === "function" &&\n        typeof dv.setBigUint64 === "function" &&\n        (typeof process != "object" ||\n            typeof process.env != "object" ||\n            process.env.BUF_BIGINT_DISABLE !== "1");\n    if (ok) {\n        const MIN = BigInt("-9223372036854775808")\x2C MAX = BigInt("9223372036854775807")\x2C UMIN = BigInt("0")\x2C UMAX = BigInt("18446744073709551615");\n        return {\n            zero: BigInt(0)\x2C\n            supported: true\x2C\n            parse(value) {\n                const bi = typeof value == "bigint" ? value : BigInt(value);\n                if (bi > MAX || bi < MIN) {\n                    throw new Error(`int64 invalid: ${value}`);\n                }\n                return bi;\n            }\x2C\n            uParse(value) {\n                const bi = typeof value == "bigint" ? value : BigInt(value);\n                if (bi > UMAX || bi < UMIN) {\n                    throw new Error(`uint64 invalid: ${value}`);\n                }\n                return bi;\n            }\x2C\n            enc(value) {\n                dv.setBigInt64(0\x2C this.parse(value)\x2C true);\n                return {\n                    lo: dv.getInt32(0\x2C true)\x2C\n                    hi: dv.getInt32(4\x2C true)\x2C\n                };\n            }\x2C\n            uEnc(value) {\n                dv.setBigInt64(0\x2C this.uParse(value)\x2C true);\n                return {\n                    lo: dv.getInt32(0\x2C true)\x2C\n                    hi: dv.getInt32(4\x2C true)\x2C\n                };\n            }\x2C\n            dec(lo\x2C hi) {\n                dv.setInt32(0\x2C lo\x2C true);\n                dv.setInt32(4\x2C hi\x2C true);\n                return dv.getBigInt64(0\x2C true);\n            }\x2C\n            uDec(lo\x2C hi) {\n                dv.setInt32(0\x2C lo\x2C true);\n                dv.setInt32(4\x2C hi\x2C true);\n                return dv.getBigUint64(0\x2C true);\n            }\x2C\n        };\n    }\n    const assertInt64String = (value) => assert(/^-?[0-9]+$/.test(value)\x2C `int64 invalid: ${value}`);\n    const assertUInt64String = (value) => assert(/^[0-9]+$/.test(value)\x2C `uint64 invalid: ${value}`);\n    return {\n        zero: "0"\x2C\n        supported: false\x2C\n        parse(value) {\n            if (typeof value != "string") {\n                value = value.toString();\n            }\n            assertInt64String(value);\n            return value;\n        }\x2C\n        uParse(value) {\n            if (typeof value != "string") {\n                value = value.toString();\n            }\n            assertUInt64String(value);\n            return value;\n        }\x2C\n        enc(value) {\n            if (typeof value != "string") {\n                value = value.toString();\n            }\n            assertInt64String(value);\n            return int64FromString(value);\n        }\x2C\n        uEnc(value) {\n            if (typeof value != "string") {\n                value = value.toString();\n            }\n            assertUInt64String(value);\n            return int64FromString(value);\n        }\x2C\n        dec(lo\x2C hi) {\n            return int64ToString(lo\x2C hi);\n        }\x2C\n        uDec(lo\x2C hi) {\n            return uInt64ToString(lo\x2C hi);\n        }\x2C\n    };\n}\nexport const protoInt64 = makeInt64Support();\n
code-source-info,0xf2c00797d38,468,0,4192,C10O0C33O0C53O0C60O4172C63O4172C68O4192,,
code-creation,Script,10,84208,0xf2c00798b38,166, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/proto2.js:1:1,0xf2c007983c8,~
script-source,469,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/proto2.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { makeProtoRuntime } from "./private/proto-runtime.js";\nimport { makeBinaryFormatProto2 } from "./private/binary-format-proto2.js";\nimport { makeUtilCommon } from "./private/util-common.js";\nimport { InternalFieldList } from "./private/field-list.js";\nimport { InternalOneofInfo } from "./private/field.js";\nimport { localFieldName\x2C fieldJsonName } from "./private/names.js";\nimport { makeJsonFormatProto2 } from "./private/json-format-proto2.js";\n/**\n * Provides functionality for messages defined with the proto2 syntax.\n */\nexport const proto2 = makeProtoRuntime("proto2"\x2C makeJsonFormatProto2()\x2C makeBinaryFormatProto2()\x2C Object.assign(Object.assign({}\x2C makeUtilCommon())\x2C { newFieldList(fields) {\n        return new InternalFieldList(fields\x2C normalizeFieldInfosProto2);\n    }\x2C\n    initFields(target) {\n        for (const member of target.getType().fields.byMember()) {\n            const name = member.localName\x2C t = target;\n            if (member.repeated) {\n                t[name] = [];\n                continue;\n            }\n            switch (member.kind) {\n                case "oneof":\n                    t[name] = { case: undefined };\n                    break;\n                case "map":\n                    t[name] = {};\n                    break;\n                case "scalar":\n                case "enum":\n                case "message":\n                    // In contrast to proto3\x2C enum and scalar fields have no intrinsic default value\x2C\n                    // only an optional explicit default value.\n                    // Unlike proto3 intrinsic default values\x2C proto2 explicit default values are not\n                    // set on construction\x2C because they are not omitted on the wire. If we did set\n                    // default values on construction\x2C a deserialize-serialize round-trip would add\n                    // fields to a message.\n                    break;\n            }\n        }\n    } }));\n/* eslint-disable @typescript-eslint/no-explicit-any\x2C@typescript-eslint/no-unsafe-assignment\x2C@typescript-eslint/no-unsafe-member-access\x2C@typescript-eslint/no-unsafe-argument */\nfunction normalizeFieldInfosProto2(fieldInfos) {\n    var _a\x2C _b\x2C _c;\n    const r = [];\n    let o;\n    for (const field of typeof fieldInfos == "function"\n        ? fieldInfos()\n        : fieldInfos) {\n        const f = field;\n        f.localName = localFieldName(field.name\x2C field.oneof !== undefined);\n        f.jsonName = (_a = field.jsonName) !== null && _a !== void 0 ? _a : fieldJsonName(field.name);\n        f.repeated = (_b = field.repeated) !== null && _b !== void 0 ? _b : false;\n        // In contrast to proto3\x2C repeated fields are unpacked except when explicitly specified.\n        f.packed = (_c = field.packed) !== null && _c !== void 0 ? _c : false;\n        // We do not surface options at this time\n        // f.options = field.options ?? emptyReadonlyObject;\n        if (field.oneof !== undefined) {\n            const ooname = typeof field.oneof == "string" ? field.oneof : field.oneof.name;\n            if (!o || o.name != ooname) {\n                o = new InternalOneofInfo(ooname);\n            }\n            f.oneof = o;\n            o.addField(f);\n        }\n        r.push(f);\n    }\n    return r;\n}\n
code-source-info,0xf2c00798b38,469,0,3840,C10O0C34O0C54O0C61O1161C70O1188C76O1188C80O1212C86O1212C90O1238C94O1245C99O1252C103O1259C110O1270C116O1270C120O1259C132O1291C140O1398C148O1245C155O1161C160O1161C165O3840,,
code-creation,Function,11,84583,0x109cfa680,2456,getFileProtocolModuleFormat node:internal/modules/esm/get_format:55:37,0x1e372ce30f90,^
code-source-info,0x109cfa680,439,1597,2902,,,
code-creation,Function,11,84583,0x109cfb080,272,allocUnsafeSlow node:buffer:388:50,0xa0ae21f2d50,^
code-source-info,0x109cfb080,30,11330,11395,,,
code-creation,Function,11,84625,0x109cfb200,648,createUnsafeBuffer node:internal/buffer:1059:28,0x111f698c19c0,^
code-source-info,0x109cfb200,31,30321,30430,,,
code-creation,Function,11,84625,0x109cfb500,600, node:buffer:354:36,0xa0ae21f2c60,^
code-source-info,0x109cfb500,30,10308,10463,,,
code-creation,Function,11,84625,0x109cfb7c0,216, node:internal/per_context/primordials:425:21,0x117768a18228,^
code-source-info,0x109cfb7c0,12,12480,12529,,,
code-creation,Function,11,84625,0x109cfb900,376, node:internal/per_context/primordials:424:15,0x117768a18098,^
code-source-info,0x109cfb900,12,12450,12574,,,
code-creation,Function,11,84666,0x109cfbae0,392,primordials.SafePromisePrototypeFinally node:internal/per_context/primordials:421:43,0x3d9b801894a0,^
code-source-info,0x109cfbae0,12,12305,12578,,,
code-creation,Function,11,84666,0x109cfbce0,376, node:internal/fs/promises:347:5,0x117768a14998,^
code-source-info,0x109cfbce0,449,7820,7879,,,
new,MemoryChunk,0x109d00000,262144
code-creation,Function,11,84708,0x109d08060,2096,close node:internal/fs/promises:207:11,0x1a3e29c96b80,^
code-source-info,0x109d08060,449,4545,5335,,,
tick,0x105408d18,84958,0,0x0,0,0x109cd3050,0x109ccdb34,0x109ccdbd0,0x109ce15d4,0x109ce717c,0x109cfa800,0x109ce476c,0x109cee26c,0x109cd29f0,0x109ce98c4,0x109cea7b4,0x109ce7398,0x104a6cb38,0x109cf3c04,0x105405ef4
code-creation,Function,11,85041,0x109d08900,3792,getSource node:internal/modules/esm/load:32:25,0x1a3e29c912b8,^
code-source-info,0x109d08900,448,1000,2061,,,
code-creation,Function,11,85083,0x109d09840,1664,checkIfDisallowedImport node:internal/modules/esm/resolve:916:33,0x1e372ce2c720,^
code-source-info,0x109d09840,437,30248,31408,,,
code-creation,Function,11,85083,0x109d09f20,984,throwIfUnsupportedURLScheme node:internal/modules/esm/resolve:963:37,0x1e372ce2c7c0,^
code-source-info,0x109d09f20,437,31646,32098,,,
code-creation,Function,11,85083,0x109d0a360,192, node:internal/fs/promises:221:9,0x117768a17b48,^
code-source-info,0x109d0a360,449,4857,4899,,,
code-creation,Function,11,85125,0x109d0a480,64, node:internal/fs/promises:347:51,0x117768a179b8,^
code-source-info,0x109d0a480,449,7866,7878,,,
code-creation,Script,10,85166,0xf2c0079ac88,430, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/codegen-info.js:1:1,0xf2c00799fe8,~
script-source,470,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/codegen-info.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { localName } from "./private/names.js";\nimport { getUnwrappedFieldType } from "./private/field-wrapper.js";\nimport { scalarDefaultValue } from "./private/scalars.js";\nimport { reifyWkt } from "./private/reify-wkt.js";\nconst packageName = "@bufbuild/protobuf";\nexport const codegenInfo = {\n    packageName\x2C\n    localName\x2C\n    reifyWkt\x2C\n    getUnwrappedFieldType\x2C\n    scalarDefaultValue\x2C\n    // prettier-ignore\n    symbols: {\n        proto2: { typeOnly: false\x2C privateImportPath: "./proto2.js"\x2C publicImportPath: packageName }\x2C\n        proto3: { typeOnly: false\x2C privateImportPath: "./proto3.js"\x2C publicImportPath: packageName }\x2C\n        Message: { typeOnly: false\x2C privateImportPath: "./message.js"\x2C publicImportPath: packageName }\x2C\n        PartialMessage: { typeOnly: true\x2C privateImportPath: "./message.js"\x2C publicImportPath: packageName }\x2C\n        PlainMessage: { typeOnly: true\x2C privateImportPath: "./message.js"\x2C publicImportPath: packageName }\x2C\n        FieldList: { typeOnly: true\x2C privateImportPath: "./field-list.js"\x2C publicImportPath: packageName }\x2C\n        MessageType: { typeOnly: true\x2C privateImportPath: "./message-type.js"\x2C publicImportPath: packageName }\x2C\n        BinaryReadOptions: { typeOnly: true\x2C privateImportPath: "./binary-format.js"\x2C publicImportPath: packageName }\x2C\n        BinaryWriteOptions: { typeOnly: true\x2C privateImportPath: "./binary-format.js"\x2C publicImportPath: packageName }\x2C\n        JsonReadOptions: { typeOnly: true\x2C privateImportPath: "./json-format.js"\x2C publicImportPath: packageName }\x2C\n        JsonWriteOptions: { typeOnly: true\x2C privateImportPath: "./json-format.js"\x2C publicImportPath: packageName }\x2C\n        JsonValue: { typeOnly: true\x2C privateImportPath: "./json-format.js"\x2C publicImportPath: packageName }\x2C\n        JsonObject: { typeOnly: true\x2C privateImportPath: "./json-format.js"\x2C publicImportPath: packageName }\x2C\n        protoInt64: { typeOnly: false\x2C privateImportPath: "./proto-int64.js"\x2C publicImportPath: packageName }\x2C\n        ScalarType: { typeOnly: false\x2C privateImportPath: "./field.js"\x2C publicImportPath: packageName }\x2C\n        MethodKind: { typeOnly: false\x2C privateImportPath: "./service-type.js"\x2C publicImportPath: packageName }\x2C\n        MethodIdempotency: { typeOnly: false\x2C privateImportPath: "./service-type.js"\x2C publicImportPath: packageName }\x2C\n        IMessageTypeRegistry: { typeOnly: true\x2C privateImportPath: "./type-registry.js"\x2C publicImportPath: packageName }\x2C\n    }\x2C\n    wktSourceFiles: [\n        "google/protobuf/compiler/plugin.proto"\x2C\n        "google/protobuf/any.proto"\x2C\n        "google/protobuf/api.proto"\x2C\n        "google/protobuf/descriptor.proto"\x2C\n        "google/protobuf/duration.proto"\x2C\n        "google/protobuf/empty.proto"\x2C\n        "google/protobuf/field_mask.proto"\x2C\n        "google/protobuf/source_context.proto"\x2C\n        "google/protobuf/struct.proto"\x2C\n        "google/protobuf/timestamp.proto"\x2C\n        "google/protobuf/type.proto"\x2C\n        "google/protobuf/wrappers.proto"\x2C\n    ]\x2C\n};\n
code-source-info,0xf2c0079ac88,470,0,3583,C10O0C28O0C48O0C55O851C58O900C65O906C69O923C78O938C87O952C96O979C105O1035C110O1053C117O1124C127O1155C134O1226C144O1258C151O1330C161O1369C168O1440C178O1477C185O1548C195O1582C202O1656C212O1692C219O1768C229O1810C236O1887C246O1930C253O2007C263O2047C270O2122C280O2163C287O2238C297O2272C304O2347C314O2382C321O2457C331O2492C338O2568C348O2603C355O2673C365O2708C372O2785C382O2827C389O2904C399O2949C406O3026C424O900C429O3583,,
code-creation,Script,10,85666,0xf2c0079c658,79, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/service-type.js:1:1,0xf2c0079c378,~
script-source,471,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/service-type.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * MethodKind represents the four method types that can be declared in\n * protobuf with the `stream` keyword:\n *\n * 1. Unary:           rpc (Input) returns (Output)\n * 2. ServerStreaming: rpc (Input) returns (stream Output)\n * 3. ClientStreaming: rpc (stream Input) returns (Output)\n * 4. BiDiStreaming:   rpc (stream Input) returns (stream Output)\n */\nexport var MethodKind;\n(function (MethodKind) {\n    MethodKind[MethodKind["Unary"] = 0] = "Unary";\n    MethodKind[MethodKind["ServerStreaming"] = 1] = "ServerStreaming";\n    MethodKind[MethodKind["ClientStreaming"] = 2] = "ClientStreaming";\n    MethodKind[MethodKind["BiDiStreaming"] = 3] = "BiDiStreaming";\n})(MethodKind || (MethodKind = {}));\n/**\n * Is this method side-effect-free (or safe in HTTP parlance)\x2C or just\n * idempotent\x2C or neither? HTTP based RPC implementation may choose GET verb\n * for safe methods\x2C and PUT verb for idempotent methods instead of the\n * default POST.\n *\n * This enum matches the protobuf enum google.protobuf.MethodOptions.IdempotencyLevel\x2C\n * defined in the well-known type google/protobuf/descriptor.proto\x2C but\n * drops UNKNOWN.\n */\nexport var MethodIdempotency;\n(function (MethodIdempotency) {\n    /**\n     * Idempotent\x2C no side effects.\n     */\n    MethodIdempotency[MethodIdempotency["NoSideEffects"] = 1] = "NoSideEffects";\n    /**\n     * Idempotent\x2C but may have side effects.\n     */\n    MethodIdempotency[MethodIdempotency["Idempotent"] = 2] = "Idempotent";\n})(MethodIdempotency || (MethodIdempotency = {}));\n
code-source-info,0xf2c0079c658,471,0,2115,C10O0C15O0C35O0C39O985C44O1273C50O1299C54O1272C58O1762C63O2067C69O2107C73O2066C78O2115,,
code-creation,Function,10,85750,0xf2c0079c750,28, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/service-type.js:41:11,0xf2c0079c5b0,~
code-source-info,0xf2c0079c750,471,1772,2065,C0O1850C3O1903C9O1908C13O1993C16O2043C22O2048C27O2064,,
code-creation,Function,10,85750,0xf2c0079c818,53, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/service-type.js:24:11,0xf2c0079c578,~
code-source-info,0xf2c0079c818,471,995,1271,C0O1014C2O1045C8O1050C12O1065C15O1106C21O1111C25O1136C28O1177C34O1182C38O1207C41O1246C47O1251C52O1270,,
new,MemoryChunk,0x3685f0200000,262144
code-creation,Script,10,86041,0xf2c0079d130,60, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/field.js:1:1,0xf2c0079cf28,~
script-source,472,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/field.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Scalar value types. This is a subset of field types declared by protobuf\n * enum google.protobuf.FieldDescriptorProto.Type The types GROUP and MESSAGE\n * are omitted\x2C but the numerical values are identical.\n */\nexport var ScalarType;\n(function (ScalarType) {\n    // 0 is reserved for errors.\n    // Order is weird for historical reasons.\n    ScalarType[ScalarType["DOUBLE"] = 1] = "DOUBLE";\n    ScalarType[ScalarType["FLOAT"] = 2] = "FLOAT";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n    // negative values are likely.\n    ScalarType[ScalarType["INT64"] = 3] = "INT64";\n    ScalarType[ScalarType["UINT64"] = 4] = "UINT64";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n    // negative values are likely.\n    ScalarType[ScalarType["INT32"] = 5] = "INT32";\n    ScalarType[ScalarType["FIXED64"] = 6] = "FIXED64";\n    ScalarType[ScalarType["FIXED32"] = 7] = "FIXED32";\n    ScalarType[ScalarType["BOOL"] = 8] = "BOOL";\n    ScalarType[ScalarType["STRING"] = 9] = "STRING";\n    // Tag-delimited aggregate.\n    // Group type is deprecated and not supported in proto3. However\x2C Proto3\n    // implementations should still be able to parse the group wire format and\n    // treat group fields as unknown fields.\n    // TYPE_GROUP = 10\x2C\n    // TYPE_MESSAGE = 11\x2C  // Length-delimited aggregate.\n    // New in version 2.\n    ScalarType[ScalarType["BYTES"] = 12] = "BYTES";\n    ScalarType[ScalarType["UINT32"] = 13] = "UINT32";\n    // TYPE_ENUM = 14\x2C\n    ScalarType[ScalarType["SFIXED32"] = 15] = "SFIXED32";\n    ScalarType[ScalarType["SFIXED64"] = 16] = "SFIXED64";\n    ScalarType[ScalarType["SINT32"] = 17] = "SINT32";\n    ScalarType[ScalarType["SINT64"] = 18] = "SINT64";\n})(ScalarType || (ScalarType = {}));\n
code-source-info,0xf2c0079d130,472,0,2381,C10O0C15O0C35O0C39O846C44O2347C50O2373C54O2346C59O2381,,
code-creation,Function,10,86125,0xf2c0079d270,197, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/field.js:20:11,0xf2c0079d090,~
code-source-info,0xf2c0079d270,472,856,2345,C0O954C3O986C9O991C13O1007C16O1038C22O1043C26O1173C29O1204C35O1209C39O1224C42O1256C48O1261C52O1392C55O1423C61O1428C65O1443C68O1476C74O1481C78O1498C81O1531C87O1536C91O1553C94O1583C100O1588C104O1602C107O1634C113O1639C117O1995C120O2026C126O2032C130O2047C133O2079C139O2085C143O2124C146O2158C152O2164C156O2182C159O2216C165O2222C169O2240C172O2272C178O2278C182O2294C185O2326C191O2332C196O2344,,
tick,0x104c1f14c,86208,1,0x104a6bc1c,5,0x0,0x117768a18b79,0x109cf3688,0x105405ef4
code-creation,Script,10,86250,0xf2c0079e048,132, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/message.js:1:1,0xf2c0079d8b8,~
script-source,473,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/message.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Message is the base class of every message\x2C generated\x2C or created at\n * runtime.\n *\n * It is _not_ safe to extend this class. If you want to create a message at\n * run time\x2C use proto3.makeMessageType().\n */\nexport class Message {\n    /**\n     * Compare with a message of the same type.\n     */\n    equals(other) {\n        return this.getType().runtime.util.equals(this.getType()\x2C this\x2C other);\n    }\n    /**\n     * Create a deep copy.\n     */\n    clone() {\n        return this.getType().runtime.util.clone(this);\n    }\n    /**\n     * Parse from binary data\x2C merging fields.\n     *\n     * Repeated fields are appended. Map entries are added\x2C overwriting\n     * existing keys.\n     *\n     * If a message field is already present\x2C it will be merged with the\n     * new data.\n     */\n    fromBinary(bytes\x2C options) {\n        const type = this.getType()\x2C format = type.runtime.bin\x2C opt = format.makeReadOptions(options);\n        format.readMessage(this\x2C opt.readerFactory(bytes)\x2C bytes.byteLength\x2C opt);\n        return this;\n    }\n    /**\n     * Parse a message from a JSON value.\n     */\n    fromJson(jsonValue\x2C options) {\n        const type = this.getType()\x2C format = type.runtime.json\x2C opt = format.makeReadOptions(options);\n        format.readMessage(type\x2C jsonValue\x2C opt\x2C this);\n        return this;\n    }\n    /**\n     * Parse a message from a JSON string.\n     */\n    fromJsonString(jsonString\x2C options) {\n        let json;\n        try {\n            json = JSON.parse(jsonString);\n        }\n        catch (e) {\n            throw new Error(`cannot decode ${this.getType().typeName} from JSON: ${e instanceof Error ? e.message : String(e)}`);\n        }\n        return this.fromJson(json\x2C options);\n    }\n    /**\n     * Serialize the message to binary data.\n     */\n    toBinary(options) {\n        const type = this.getType()\x2C bin = type.runtime.bin\x2C opt = bin.makeWriteOptions(options)\x2C writer = opt.writerFactory();\n        bin.writeMessage(this\x2C writer\x2C opt);\n        return writer.finish();\n    }\n    /**\n     * Serialize the message to a JSON value\x2C a JavaScript value that can be\n     * passed to JSON.stringify().\n     */\n    toJson(options) {\n        const type = this.getType()\x2C json = type.runtime.json\x2C opt = json.makeWriteOptions(options);\n        return json.writeMessage(this\x2C opt);\n    }\n    /**\n     * Serialize the message to a JSON string.\n     */\n    toJsonString(options) {\n        var _a;\n        const value = this.toJson(options);\n        return JSON.stringify(value\x2C null\x2C (_a = options === null || options === void 0 ? void 0 : options.prettySpaces) !== null && _a !== void 0 ? _a : 0);\n    }\n    /**\n     * Override for serialization behavior. This will be invoked when calling\n     * JSON.stringify on this message (i.e. JSON.stringify(msg)).\n     *\n     * Note that this will not serialize google.protobuf.Any with a packed\n     * message because the protobuf JSON format specifies that it needs to be\n     * unpacked\x2C and this is only possible with a type registry to look up the\n     * message type.  As a result\x2C attempting to serialize a message with this\n     * type will throw an Error.\n     */\n    toJSON() {\n        return this.toJson({\n            emitDefaultValues: true\x2C\n        });\n    }\n    /**\n     * Retrieve the MessageType of this message - a singleton that represents\n     * the protobuf message declaration and provides metadata for reflection-\n     * based operations.\n     */\n    getType() {\n        // Any class that extends Message _must_ provide a complete static\n        // implementation of MessageType.\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\x2C@typescript-eslint/no-unsafe-return\n        return Object.getPrototypeOf(this).constructor;\n    }\n}\n
code-source-info,0xf2c0079e048,473,0,4348,C10O0C28O0C48O0C126O827C131O4348,,
code-creation,Function,11,86500,0x109d0a520,2048,decode node:internal/encoding:412:11,0x111f698c96a0,^
code-source-info,0x109d0a520,33,11200,12032,,,
code-creation,Function,11,86500,0x109d0ad80,128,slice node:buffer:608:12,0xa0ae21f38f8,^
code-source-info,0x109d0ad80,30,17110,17156,,,
code-creation,Function,11,86541,0x109d0ae60,640,encodeRealpathResult node:fs:2439:30,0x3b46b2018ab0,^
code-source-info,0x109d0ae60,73,65003,65261,,,
code-creation,Function,11,86541,0x109d0b140,416,validateOutput node:internal/modules/esm/loader:591:28,0x117768a0d7d0,^
code-source-info,0x109d0b140,433,17490,17727,,,
code-creation,Function,11,86541,0x109d0b340,856,stringify node:internal/modules/esm/translators:94:19,0x1a3e29c9f870,^
code-source-info,0x109d0b340,451,2550,2750,,,
code-creation,Function,11,86583,0x109d0b700,1432,moduleStrategy node:internal/modules/esm/translators:114:56,0x1a3e29c9fa50,^
code-source-info,0x109d0b700,451,3148,3567,,,
code-creation,Function,11,86583,0x109d0bd00,784,assertBufferSource node:internal/modules/esm/translators:78:28,0x1a3e29c9f820,^
code-source-info,0x109d0bd00,451,2137,2530,,,
code-creation,Function,11,86625,0x109d0c080,456,lazyTypes node:internal/modules/esm/translators:22:19,0x1a3e29c9f780,^
code-source-info,0x109d0c080,451,396,490,,,
code-creation,Script,10,86625,0xf2c0079ead8,45, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/json-format.js:1:1,0xf2c0079e9b8,~
script-source,474,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/json-format.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nexport {};\n
code-source-info,0xf2c0079ead8,474,0,616,C10O0C15O0C35O0C44O616,,
code-creation,Script,10,86708,0xf2c0079ef58,45, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/descriptor-set.js:1:1,0xf2c0079ee38,~
script-source,475,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/descriptor-set.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nexport {};\n
code-source-info,0xf2c0079ef58,475,0,616,C10O0C15O0C35O0C44O616,,
code-creation,Script,10,87166,0xf2c007a10b0,656, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/create-descriptor-set.js:1:1,0xf2c0079fdd0,~
script-source,476,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/create-descriptor-set.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { FieldDescriptorProto_Label\x2C FieldDescriptorProto_Type\x2C FileDescriptorSet\x2C MethodOptions_IdempotencyLevel\x2C } from "./google/protobuf/descriptor_pb.js";\nimport { assert } from "./private/assert.js";\nimport { ScalarType } from "./field.js";\nimport { MethodIdempotency\x2C MethodKind } from "./service-type.js";\nimport { findEnumSharedPrefix\x2C fieldJsonName } from "./private/names.js";\nimport { protoInt64 } from "./proto-int64.js";\n/**\n * Create a DescriptorSet\x2C a convenient interface for working with a set of\n * google.protobuf.FileDescriptorProto.\n *\n * Note that files must be given in topological order\x2C so each file appears\n * before any file that imports it. Protocol buffer compilers always produce\n * files in topological order.\n */\nexport function createDescriptorSet(input) {\n    const cart = {\n        enums: new Map()\x2C\n        messages: new Map()\x2C\n        services: new Map()\x2C\n        extensions: new Map()\x2C\n        mapEntries: new Map()\x2C\n    };\n    const fileDescriptors = input instanceof FileDescriptorSet\n        ? input.file\n        : input instanceof Uint8Array\n            ? FileDescriptorSet.fromBinary(input).file\n            : input;\n    const files = fileDescriptors.map((proto) => newFile(proto\x2C cart));\n    return Object.assign({ files }\x2C cart);\n}\n/**\n * Create a descriptor for a file.\n */\nfunction newFile(proto\x2C cart) {\n    var _a\x2C _b\x2C _c;\n    assert(proto.name\x2C `invalid FileDescriptorProto: missing name`);\n    assert(proto.syntax === undefined || proto.syntax === "proto3"\x2C `invalid FileDescriptorProto: unsupported syntax: ${(_a = proto.syntax) !== null && _a !== void 0 ? _a : "undefined"}`);\n    const file = {\n        kind: "file"\x2C\n        proto\x2C\n        deprecated: (_c = (_b = proto.options) === null || _b === void 0 ? void 0 : _b.deprecated) !== null && _c !== void 0 ? _c : false\x2C\n        syntax: proto.syntax === "proto3" ? "proto3" : "proto2"\x2C\n        name: proto.name.replace(/\\.proto/\x2C "")\x2C\n        enums: []\x2C\n        messages: []\x2C\n        extensions: []\x2C\n        services: []\x2C\n        toString() {\n            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions -- we asserted above\n            return `file ${this.proto.name}`;\n        }\x2C\n        getSyntaxComments() {\n            return findComments(this.proto.sourceCodeInfo\x2C [\n                FieldNumber.FileDescriptorProto_Syntax\x2C\n            ]);\n        }\x2C\n        getPackageComments() {\n            return findComments(this.proto.sourceCodeInfo\x2C [\n                FieldNumber.FileDescriptorProto_Package\x2C\n            ]);\n        }\x2C\n    };\n    cart.mapEntries.clear(); // map entries are local to the file\x2C we can safely discard\n    for (const enumProto of proto.enumType) {\n        addEnum(enumProto\x2C file\x2C undefined\x2C cart);\n    }\n    for (const messageProto of proto.messageType) {\n        addMessage(messageProto\x2C file\x2C undefined\x2C cart);\n    }\n    for (const serviceProto of proto.service) {\n        addService(serviceProto\x2C file\x2C cart);\n    }\n    addExtensions(file\x2C cart);\n    for (const mapEntry of cart.mapEntries.values()) {\n        addFields(mapEntry\x2C cart);\n    }\n    for (const message of file.messages) {\n        addFields(message\x2C cart);\n        addExtensions(message\x2C cart);\n    }\n    cart.mapEntries.clear(); // map entries are local to the file\x2C we can safely discard\n    return file;\n}\n/**\n * Create descriptors for extensions\x2C and add them to the message / file\x2C\n * and to our cart.\n * Recurses into nested types.\n */\nfunction addExtensions(desc\x2C cart) {\n    switch (desc.kind) {\n        case "file":\n            for (const proto of desc.proto.extension) {\n                const ext = newExtension(proto\x2C desc\x2C undefined\x2C cart);\n                desc.extensions.push(ext);\n                cart.extensions.set(ext.typeName\x2C ext);\n            }\n            break;\n        case "message":\n            for (const proto of desc.proto.extension) {\n                const ext = newExtension(proto\x2C desc.file\x2C desc\x2C cart);\n                desc.nestedExtensions.push(ext);\n                cart.extensions.set(ext.typeName\x2C ext);\n            }\n            for (const message of desc.nestedMessages) {\n                addExtensions(message\x2C cart);\n            }\n            break;\n    }\n}\n/**\n * Create descriptors for fields and oneof groups\x2C and add them to the message.\n * Recurses into nested types.\n */\nfunction addFields(message\x2C cart) {\n    const allOneofs = message.proto.oneofDecl.map((proto) => newOneof(proto\x2C message));\n    const oneofsSeen = new Set();\n    for (const proto of message.proto.field) {\n        const oneof = findOneof(proto\x2C allOneofs);\n        const field = newField(proto\x2C message.file\x2C message\x2C oneof\x2C cart);\n        message.fields.push(field);\n        if (oneof === undefined) {\n            message.members.push(field);\n        }\n        else {\n            oneof.fields.push(field);\n            if (!oneofsSeen.has(oneof)) {\n                oneofsSeen.add(oneof);\n                message.members.push(oneof);\n            }\n        }\n    }\n    for (const oneof of allOneofs.filter((o) => oneofsSeen.has(o))) {\n        message.oneofs.push(oneof);\n    }\n    for (const child of message.nestedMessages) {\n        addFields(child\x2C cart);\n    }\n}\n/**\n * Create a descriptor for an enumeration\x2C and add it our cart and to the\n * parent type\x2C if any.\n */\nfunction addEnum(proto\x2C file\x2C parent\x2C cart) {\n    var _a\x2C _b\x2C _c;\n    assert(proto.name\x2C `invalid EnumDescriptorProto: missing name`);\n    const desc = {\n        kind: "enum"\x2C\n        proto\x2C\n        deprecated: (_b = (_a = proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) !== null && _b !== void 0 ? _b : false\x2C\n        file\x2C\n        parent\x2C\n        name: proto.name\x2C\n        typeName: makeTypeName(proto\x2C parent\x2C file)\x2C\n        values: []\x2C\n        sharedPrefix: findEnumSharedPrefix(proto.name\x2C proto.value.map((v) => { var _a; return (_a = v.name) !== null && _a !== void 0 ? _a : ""; }))\x2C\n        toString() {\n            return `enum ${this.typeName}`;\n        }\x2C\n        getComments() {\n            const path = this.parent\n                ? [\n                    ...this.parent.getComments().sourcePath\x2C\n                    FieldNumber.DescriptorProto_EnumType\x2C\n                    this.parent.proto.enumType.indexOf(this.proto)\x2C\n                ]\n                : [\n                    FieldNumber.FileDescriptorProto_EnumType\x2C\n                    this.file.proto.enumType.indexOf(this.proto)\x2C\n                ];\n            return findComments(file.proto.sourceCodeInfo\x2C path);\n        }\x2C\n    };\n    cart.enums.set(desc.typeName\x2C desc);\n    proto.value.forEach((proto) => {\n        var _a\x2C _b;\n        assert(proto.name\x2C `invalid EnumValueDescriptorProto: missing name`);\n        assert(proto.number !== undefined\x2C `invalid EnumValueDescriptorProto: missing number`);\n        desc.values.push({\n            kind: "enum_value"\x2C\n            proto\x2C\n            deprecated: (_b = (_a = proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) !== null && _b !== void 0 ? _b : false\x2C\n            parent: desc\x2C\n            name: proto.name\x2C\n            number: proto.number\x2C\n            toString() {\n                return `enum value ${desc.typeName}.${this.name}`;\n            }\x2C\n            declarationString() {\n                var _a;\n                let str = `${this.name} = ${this.number}`;\n                if (((_a = this.proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) === true) {\n                    str += " [deprecated = true]";\n                }\n                return str;\n            }\x2C\n            getComments() {\n                const path = [\n                    ...this.parent.getComments().sourcePath\x2C\n                    FieldNumber.EnumDescriptorProto_Value\x2C\n                    this.parent.proto.value.indexOf(this.proto)\x2C\n                ];\n                return findComments(file.proto.sourceCodeInfo\x2C path);\n            }\x2C\n        });\n    });\n    ((_c = parent === null || parent === void 0 ? void 0 : parent.nestedEnums) !== null && _c !== void 0 ? _c : file.enums).push(desc);\n}\n/**\n * Create a descriptor for a message\x2C including nested types\x2C and add it to our\n * cart. Note that this does not create descriptors fields.\n */\nfunction addMessage(proto\x2C file\x2C parent\x2C cart) {\n    var _a\x2C _b\x2C _c\x2C _d;\n    assert(proto.name\x2C `invalid DescriptorProto: missing name`);\n    const desc = {\n        kind: "message"\x2C\n        proto\x2C\n        deprecated: (_b = (_a = proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) !== null && _b !== void 0 ? _b : false\x2C\n        file\x2C\n        parent\x2C\n        name: proto.name\x2C\n        typeName: makeTypeName(proto\x2C parent\x2C file)\x2C\n        fields: []\x2C\n        oneofs: []\x2C\n        members: []\x2C\n        nestedEnums: []\x2C\n        nestedMessages: []\x2C\n        nestedExtensions: []\x2C\n        toString() {\n            return `message ${this.typeName}`;\n        }\x2C\n        getComments() {\n            const path = this.parent\n                ? [\n                    ...this.parent.getComments().sourcePath\x2C\n                    FieldNumber.DescriptorProto_NestedType\x2C\n                    this.parent.proto.nestedType.indexOf(this.proto)\x2C\n                ]\n                : [\n                    FieldNumber.FileDescriptorProto_MessageType\x2C\n                    this.file.proto.messageType.indexOf(this.proto)\x2C\n                ];\n            return findComments(file.proto.sourceCodeInfo\x2C path);\n        }\x2C\n    };\n    if (((_c = proto.options) === null || _c === void 0 ? void 0 : _c.mapEntry) === true) {\n        cart.mapEntries.set(desc.typeName\x2C desc);\n    }\n    else {\n        ((_d = parent === null || parent === void 0 ? void 0 : parent.nestedMessages) !== null && _d !== void 0 ? _d : file.messages).push(desc);\n        cart.messages.set(desc.typeName\x2C desc);\n    }\n    for (const enumProto of proto.enumType) {\n        addEnum(enumProto\x2C file\x2C desc\x2C cart);\n    }\n    for (const messageProto of proto.nestedType) {\n        addMessage(messageProto\x2C file\x2C desc\x2C cart);\n    }\n}\n/**\n * Create a descriptor for a service\x2C including methods\x2C and add it to our\n * cart.\n */\nfunction addService(proto\x2C file\x2C cart) {\n    var _a\x2C _b;\n    assert(proto.name\x2C `invalid ServiceDescriptorProto: missing name`);\n    const desc = {\n        kind: "service"\x2C\n        proto\x2C\n        deprecated: (_b = (_a = proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) !== null && _b !== void 0 ? _b : false\x2C\n        file\x2C\n        name: proto.name\x2C\n        typeName: makeTypeName(proto\x2C undefined\x2C file)\x2C\n        methods: []\x2C\n        toString() {\n            return `service ${this.typeName}`;\n        }\x2C\n        getComments() {\n            const path = [\n                FieldNumber.FileDescriptorProto_Service\x2C\n                this.file.proto.service.indexOf(this.proto)\x2C\n            ];\n            return findComments(file.proto.sourceCodeInfo\x2C path);\n        }\x2C\n    };\n    file.services.push(desc);\n    cart.services.set(desc.typeName\x2C desc);\n    for (const methodProto of proto.method) {\n        desc.methods.push(newMethod(methodProto\x2C desc\x2C cart));\n    }\n}\n/**\n * Create a descriptor for a method.\n */\nfunction newMethod(proto\x2C parent\x2C cart) {\n    var _a\x2C _b\x2C _c;\n    assert(proto.name\x2C `invalid MethodDescriptorProto: missing name`);\n    assert(proto.inputType\x2C `invalid MethodDescriptorProto: missing input_type`);\n    assert(proto.outputType\x2C `invalid MethodDescriptorProto: missing output_type`);\n    let methodKind;\n    if (proto.clientStreaming === true && proto.serverStreaming === true) {\n        methodKind = MethodKind.BiDiStreaming;\n    }\n    else if (proto.clientStreaming === true) {\n        methodKind = MethodKind.ClientStreaming;\n    }\n    else if (proto.serverStreaming === true) {\n        methodKind = MethodKind.ServerStreaming;\n    }\n    else {\n        methodKind = MethodKind.Unary;\n    }\n    let idempotency;\n    switch ((_a = proto.options) === null || _a === void 0 ? void 0 : _a.idempotencyLevel) {\n        case MethodOptions_IdempotencyLevel.IDEMPOTENT:\n            idempotency = MethodIdempotency.Idempotent;\n            break;\n        case MethodOptions_IdempotencyLevel.NO_SIDE_EFFECTS:\n            idempotency = MethodIdempotency.NoSideEffects;\n            break;\n        case MethodOptions_IdempotencyLevel.IDEMPOTENCY_UNKNOWN:\n        case undefined:\n            idempotency = undefined;\n            break;\n    }\n    const input = cart.messages.get(trimLeadingDot(proto.inputType));\n    const output = cart.messages.get(trimLeadingDot(proto.outputType));\n    assert(input\x2C `invalid MethodDescriptorProto: input_type ${proto.inputType} not found`);\n    assert(output\x2C `invalid MethodDescriptorProto: output_type ${proto.inputType} not found`);\n    const name = proto.name;\n    return {\n        kind: "rpc"\x2C\n        proto\x2C\n        deprecated: (_c = (_b = proto.options) === null || _b === void 0 ? void 0 : _b.deprecated) !== null && _c !== void 0 ? _c : false\x2C\n        parent\x2C\n        name\x2C\n        methodKind\x2C\n        input\x2C\n        output\x2C\n        idempotency\x2C\n        toString() {\n            return `rpc ${parent.typeName}.${name}`;\n        }\x2C\n        getComments() {\n            const path = [\n                ...this.parent.getComments().sourcePath\x2C\n                FieldNumber.ServiceDescriptorProto_Method\x2C\n                this.parent.proto.method.indexOf(this.proto)\x2C\n            ];\n            return findComments(parent.file.proto.sourceCodeInfo\x2C path);\n        }\x2C\n    };\n}\n/**\n * Create a descriptor for a oneof group.\n */\nfunction newOneof(proto\x2C parent) {\n    assert(proto.name\x2C `invalid OneofDescriptorProto: missing name`);\n    return {\n        kind: "oneof"\x2C\n        proto\x2C\n        deprecated: false\x2C\n        parent\x2C\n        fields: []\x2C\n        name: proto.name\x2C\n        toString() {\n            return `oneof ${parent.typeName}.${this.name}`;\n        }\x2C\n        getComments() {\n            const path = [\n                ...this.parent.getComments().sourcePath\x2C\n                FieldNumber.DescriptorProto_OneofDecl\x2C\n                this.parent.proto.oneofDecl.indexOf(this.proto)\x2C\n            ];\n            return findComments(parent.file.proto.sourceCodeInfo\x2C path);\n        }\x2C\n    };\n}\n/**\n * Create a descriptor for a field.\n */\nfunction newField(proto\x2C file\x2C parent\x2C oneof\x2C cart) {\n    var _a\x2C _b\x2C _c\x2C _d;\n    assert(proto.name\x2C `invalid FieldDescriptorProto: missing name`);\n    assert(proto.number\x2C `invalid FieldDescriptorProto: missing number`);\n    assert(proto.type\x2C `invalid FieldDescriptorProto: missing type`);\n    const packedByDefault = isPackedFieldByDefault(proto\x2C file.syntax);\n    const common = {\n        proto\x2C\n        deprecated: (_b = (_a = proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) !== null && _b !== void 0 ? _b : false\x2C\n        name: proto.name\x2C\n        number: proto.number\x2C\n        parent\x2C\n        oneof\x2C\n        optional: isOptionalField(proto\x2C file.syntax)\x2C\n        packed: (_d = (_c = proto.options) === null || _c === void 0 ? void 0 : _c.packed) !== null && _d !== void 0 ? _d : packedByDefault\x2C\n        packedByDefault\x2C\n        jsonName: proto.jsonName === fieldJsonName(proto.name) ? undefined : proto.jsonName\x2C\n        scalar: undefined\x2C\n        message: undefined\x2C\n        enum: undefined\x2C\n        mapKey: undefined\x2C\n        mapValue: undefined\x2C\n        toString() {\n            // note that newExtension() calls us with parent = null\n            return `field ${this.parent.typeName}.${this.name}`;\n        }\x2C\n        declarationString\x2C\n        getComments() {\n            const path = [\n                ...this.parent.getComments().sourcePath\x2C\n                FieldNumber.DescriptorProto_Field\x2C\n                this.parent.proto.field.indexOf(this.proto)\x2C\n            ];\n            return findComments(file.proto.sourceCodeInfo\x2C path);\n        }\x2C\n    };\n    const repeated = proto.label === FieldDescriptorProto_Label.REPEATED;\n    switch (proto.type) {\n        case FieldDescriptorProto_Type.MESSAGE:\n        case FieldDescriptorProto_Type.GROUP: {\n            assert(proto.typeName\x2C `invalid FieldDescriptorProto: missing type_name`);\n            const mapEntry = cart.mapEntries.get(trimLeadingDot(proto.typeName));\n            if (mapEntry !== undefined) {\n                assert(repeated\x2C `invalid FieldDescriptorProto: expected map entry to be repeated`);\n                return Object.assign(Object.assign(Object.assign({}\x2C common)\x2C { kind: "field"\x2C fieldKind: "map"\x2C repeated: false })\x2C getMapFieldTypes(mapEntry));\n            }\n            const message = cart.messages.get(trimLeadingDot(proto.typeName));\n            assert(message !== undefined\x2C `invalid FieldDescriptorProto: type_name ${proto.typeName} not found`);\n            return Object.assign(Object.assign({}\x2C common)\x2C { kind: "field"\x2C fieldKind: "message"\x2C repeated\x2C\n                message });\n        }\n        case FieldDescriptorProto_Type.ENUM: {\n            assert(proto.typeName\x2C `invalid FieldDescriptorProto: missing type_name`);\n            const e = cart.enums.get(trimLeadingDot(proto.typeName));\n            assert(e !== undefined\x2C `invalid FieldDescriptorProto: type_name ${proto.typeName} not found`);\n            return Object.assign(Object.assign({}\x2C common)\x2C { kind: "field"\x2C fieldKind: "enum"\x2C getDefaultValue\x2C\n                repeated\x2C enum: e });\n        }\n        default: {\n            const scalar = fieldTypeToScalarType[proto.type];\n            assert(scalar\x2C `invalid FieldDescriptorProto: unknown type ${proto.type}`);\n            return Object.assign(Object.assign({}\x2C common)\x2C { kind: "field"\x2C fieldKind: "scalar"\x2C getDefaultValue\x2C\n                repeated\x2C\n                scalar });\n        }\n    }\n}\n/**\n * Create a descriptor for an extension field.\n */\nfunction newExtension(proto\x2C file\x2C parent\x2C cart) {\n    assert(proto.extendee\x2C `invalid FieldDescriptorProto: missing extendee`);\n    const field = newField(proto\x2C file\x2C null\x2C // to safe us many lines of duplicated code\x2C we trick the type system\n    undefined\x2C cart);\n    const extendee = cart.messages.get(trimLeadingDot(proto.extendee));\n    assert(extendee\x2C `invalid FieldDescriptorProto: extendee ${proto.extendee} not found`);\n    return Object.assign(Object.assign({}\x2C field)\x2C { kind: "extension"\x2C typeName: makeTypeName(proto\x2C parent\x2C file)\x2C parent\x2C\n        file\x2C\n        extendee\x2C\n        toString() {\n            return `extension ${this.typeName}`;\n        }\x2C\n        getComments() {\n            const path = this.parent\n                ? [\n                    ...this.parent.getComments().sourcePath\x2C\n                    FieldNumber.DescriptorProto_Extension\x2C\n                    this.parent.proto.extension.indexOf(proto)\x2C\n                ]\n                : [\n                    FieldNumber.FileDescriptorProto_Extension\x2C\n                    this.file.proto.extension.indexOf(proto)\x2C\n                ];\n            return findComments(file.proto.sourceCodeInfo\x2C path);\n        } });\n}\n/**\n * Create a fully qualified name for a protobuf type or extension field.\n *\n * The fully qualified name for messages\x2C enumerations\x2C and services is\n * constructed by concatenating the package name (if present)\x2C parent\n * message names (for nested types)\x2C and the type name. We omit the leading\n * dot added by protobuf compilers. Examples:\n * - mypackage.MyMessage\n * - mypackage.MyMessage.NestedMessage\n *\n * The fully qualified name for extension fields is constructed by\n * concatenating the package name (if present)\x2C parent message names (for\n * extensions declared within a message)\x2C and the field name. Examples:\n * - mypackage.extfield\n * - mypackage.MyMessage.extfield\n */\nfunction makeTypeName(proto\x2C parent\x2C file) {\n    assert(proto.name\x2C `invalid ${proto.getType().typeName}: missing name`);\n    let typeName;\n    if (parent) {\n        typeName = `${parent.typeName}.${proto.name}`;\n    }\n    else if (file.proto.package !== undefined) {\n        typeName = `${file.proto.package}.${proto.name}`;\n    }\n    else {\n        typeName = `${proto.name}`;\n    }\n    return typeName;\n}\n/**\n * Remove the leading dot from a fully qualified type name.\n */\nfunction trimLeadingDot(typeName) {\n    return typeName.startsWith(".") ? typeName.substring(1) : typeName;\n}\nfunction getMapFieldTypes(mapEntry) {\n    var _a\x2C _b;\n    assert((_a = mapEntry.proto.options) === null || _a === void 0 ? void 0 : _a.mapEntry\x2C `invalid DescriptorProto: expected ${mapEntry.toString()} to be a map entry`);\n    assert(mapEntry.fields.length === 2\x2C `invalid DescriptorProto: map entry ${mapEntry.toString()} has ${mapEntry.fields.length} fields`);\n    const keyField = mapEntry.fields.find((f) => f.proto.number === 1);\n    assert(keyField\x2C `invalid DescriptorProto: map entry ${mapEntry.toString()} is missing key field`);\n    const mapKey = keyField.scalar;\n    assert(mapKey !== undefined &&\n        mapKey !== ScalarType.BYTES &&\n        mapKey !== ScalarType.FLOAT &&\n        mapKey !== ScalarType.DOUBLE\x2C `invalid DescriptorProto: map entry ${mapEntry.toString()} has unexpected key type ${(_b = keyField.proto.type) !== null && _b !== void 0 ? _b : -1}`);\n    const valueField = mapEntry.fields.find((f) => f.proto.number === 2);\n    assert(valueField\x2C `invalid DescriptorProto: map entry ${mapEntry.toString()} is missing value field`);\n    switch (valueField.fieldKind) {\n        case "scalar":\n            return {\n                mapKey\x2C\n                mapValue: Object.assign(Object.assign({}\x2C valueField)\x2C { kind: "scalar" })\x2C\n            };\n        case "message":\n            return {\n                mapKey\x2C\n                mapValue: Object.assign(Object.assign({}\x2C valueField)\x2C { kind: "message" })\x2C\n            };\n        case "enum":\n            return {\n                mapKey\x2C\n                mapValue: Object.assign(Object.assign({}\x2C valueField)\x2C { kind: "enum" })\x2C\n            };\n        default:\n            throw new Error("invalid DescriptorProto: unsupported map entry value field");\n    }\n}\n/**\n * Did the user put the field in a oneof group?\n * This handles proto3 optionals.\n */\nfunction findOneof(proto\x2C allOneofs) {\n    var _a;\n    const oneofIndex = proto.oneofIndex;\n    if (oneofIndex === undefined) {\n        return undefined;\n    }\n    let oneof;\n    if (proto.proto3Optional !== true) {\n        oneof = allOneofs[oneofIndex];\n        assert(oneof\x2C `invalid FieldDescriptorProto: oneof #${oneofIndex} for field #${(_a = proto.number) !== null && _a !== void 0 ? _a : -1} not found`);\n    }\n    return oneof;\n}\n/**\n * Did the user use the `optional` keyword?\n * This handles proto3 optionals.\n */\nfunction isOptionalField(proto\x2C syntax) {\n    switch (syntax) {\n        case "proto2":\n            return (proto.oneofIndex === undefined &&\n                proto.label === FieldDescriptorProto_Label.OPTIONAL);\n        case "proto3":\n            return proto.proto3Optional === true;\n    }\n}\n/**\n * Get the default `packed` state of a repeated field.\n */\nexport function isPackedFieldByDefault(proto\x2C syntax) {\n    assert(proto.type\x2C `invalid FieldDescriptorProto: missing type`);\n    if (syntax === "proto3") {\n        switch (proto.type) {\n            case FieldDescriptorProto_Type.DOUBLE:\n            case FieldDescriptorProto_Type.FLOAT:\n            case FieldDescriptorProto_Type.INT64:\n            case FieldDescriptorProto_Type.UINT64:\n            case FieldDescriptorProto_Type.INT32:\n            case FieldDescriptorProto_Type.FIXED64:\n            case FieldDescriptorProto_Type.FIXED32:\n            case FieldDescriptorProto_Type.UINT32:\n            case FieldDescriptorProto_Type.SFIXED32:\n            case FieldDescriptorProto_Type.SFIXED64:\n            case FieldDescriptorProto_Type.SINT32:\n            case FieldDescriptorProto_Type.SINT64:\n            case FieldDescriptorProto_Type.BOOL:\n            case FieldDescriptorProto_Type.ENUM:\n                // From the proto3 language guide:\n                // > In proto3\x2C repeated fields of scalar numeric types are packed by default.\n                // This information is incomplete - according to the conformance tests\x2C BOOL\n                // and ENUM are packed by default as well. This means only STRING and BYTES\n                // are not packed by default\x2C which makes sense because they are length-delimited.\n                return true;\n            default:\n                return false;\n        }\n    }\n    return false;\n}\n/**\n * Map from a compiler-generated field type to our ScalarType\x2C which is a\n * subset of field types declared by protobuf enum google.protobuf.FieldDescriptorProto.\n */\nconst fieldTypeToScalarType = {\n    [FieldDescriptorProto_Type.DOUBLE]: ScalarType.DOUBLE\x2C\n    [FieldDescriptorProto_Type.FLOAT]: ScalarType.FLOAT\x2C\n    [FieldDescriptorProto_Type.INT64]: ScalarType.INT64\x2C\n    [FieldDescriptorProto_Type.UINT64]: ScalarType.UINT64\x2C\n    [FieldDescriptorProto_Type.INT32]: ScalarType.INT32\x2C\n    [FieldDescriptorProto_Type.FIXED64]: ScalarType.FIXED64\x2C\n    [FieldDescriptorProto_Type.FIXED32]: ScalarType.FIXED32\x2C\n    [FieldDescriptorProto_Type.BOOL]: ScalarType.BOOL\x2C\n    [FieldDescriptorProto_Type.STRING]: ScalarType.STRING\x2C\n    [FieldDescriptorProto_Type.GROUP]: undefined\x2C\n    [FieldDescriptorProto_Type.MESSAGE]: undefined\x2C\n    [FieldDescriptorProto_Type.BYTES]: ScalarType.BYTES\x2C\n    [FieldDescriptorProto_Type.UINT32]: ScalarType.UINT32\x2C\n    [FieldDescriptorProto_Type.ENUM]: undefined\x2C\n    [FieldDescriptorProto_Type.SFIXED32]: ScalarType.SFIXED32\x2C\n    [FieldDescriptorProto_Type.SFIXED64]: ScalarType.SFIXED64\x2C\n    [FieldDescriptorProto_Type.SINT32]: ScalarType.SINT32\x2C\n    [FieldDescriptorProto_Type.SINT64]: ScalarType.SINT64\x2C\n};\n/**\n * Find comments.\n */\nfunction findComments(sourceCodeInfo\x2C sourcePath) {\n    if (!sourceCodeInfo) {\n        return {\n            leadingDetached: []\x2C\n            sourcePath\x2C\n        };\n    }\n    for (const location of sourceCodeInfo.location) {\n        if (location.path.length !== sourcePath.length) {\n            continue;\n        }\n        if (location.path.some((value\x2C index) => sourcePath[index] !== value)) {\n            continue;\n        }\n        return {\n            leadingDetached: location.leadingDetachedComments\x2C\n            leading: location.leadingComments\x2C\n            trailing: location.trailingComments\x2C\n            sourcePath\x2C\n        };\n    }\n    return {\n        leadingDetached: []\x2C\n        sourcePath\x2C\n    };\n}\n/**\n * The following field numbers are used to find comments in\n * google.protobuf.SourceCodeInfo.\n */\nvar FieldNumber;\n(function (FieldNumber) {\n    FieldNumber[FieldNumber["FileDescriptorProto_Package"] = 2] = "FileDescriptorProto_Package";\n    FieldNumber[FieldNumber["FileDescriptorProto_MessageType"] = 4] = "FileDescriptorProto_MessageType";\n    FieldNumber[FieldNumber["FileDescriptorProto_EnumType"] = 5] = "FileDescriptorProto_EnumType";\n    FieldNumber[FieldNumber["FileDescriptorProto_Service"] = 6] = "FileDescriptorProto_Service";\n    FieldNumber[FieldNumber["FileDescriptorProto_Extension"] = 7] = "FileDescriptorProto_Extension";\n    FieldNumber[FieldNumber["FileDescriptorProto_Syntax"] = 12] = "FileDescriptorProto_Syntax";\n    FieldNumber[FieldNumber["DescriptorProto_Field"] = 2] = "DescriptorProto_Field";\n    FieldNumber[FieldNumber["DescriptorProto_NestedType"] = 3] = "DescriptorProto_NestedType";\n    FieldNumber[FieldNumber["DescriptorProto_EnumType"] = 4] = "DescriptorProto_EnumType";\n    FieldNumber[FieldNumber["DescriptorProto_Extension"] = 6] = "DescriptorProto_Extension";\n    FieldNumber[FieldNumber["DescriptorProto_OneofDecl"] = 8] = "DescriptorProto_OneofDecl";\n    FieldNumber[FieldNumber["EnumDescriptorProto_Value"] = 2] = "EnumDescriptorProto_Value";\n    FieldNumber[FieldNumber["ServiceDescriptorProto_Method"] = 2] = "ServiceDescriptorProto_Method";\n})(FieldNumber || (FieldNumber = {}));\n/**\n * Return a string that matches the definition of a field in the protobuf\n * source. Does not take custom options into account.\n */\nfunction declarationString() {\n    var _a\x2C _b;\n    const parts = [];\n    if (this.repeated) {\n        parts.push("repeated");\n    }\n    if (this.optional) {\n        parts.push("optional");\n    }\n    const file = this.kind === "extension" ? this.file : this.parent.file;\n    if (file.syntax == "proto2" &&\n        this.proto.label === FieldDescriptorProto_Label.REQUIRED) {\n        parts.push("required");\n    }\n    let type;\n    switch (this.fieldKind) {\n        case "scalar":\n            type = ScalarType[this.scalar].toLowerCase();\n            break;\n        case "enum":\n            type = this.enum.typeName;\n            break;\n        case "message":\n            type = this.message.typeName;\n            break;\n        case "map": {\n            const k = ScalarType[this.mapKey].toLowerCase();\n            let v;\n            switch (this.mapValue.kind) {\n                case "scalar":\n                    v = ScalarType[this.mapValue.scalar].toLowerCase();\n                    break;\n                case "enum":\n                    v = this.mapValue.enum.typeName;\n                    break;\n                case "message":\n                    v = this.mapValue.message.typeName;\n                    break;\n            }\n            type = `map<${k}\x2C ${v}>`;\n            break;\n        }\n    }\n    parts.push(`${type} ${this.name} = ${this.number}`);\n    const options = [];\n    if (((_a = this.proto.options) === null || _a === void 0 ? void 0 : _a.packed) !== undefined) {\n        options.push(`packed = ${this.proto.options.packed.toString()}`);\n    }\n    let defaultValue = this.proto.defaultValue;\n    if (defaultValue !== undefined) {\n        if (this.proto.type == FieldDescriptorProto_Type.BYTES ||\n            this.proto.type == FieldDescriptorProto_Type.STRING) {\n            defaultValue = '"' + defaultValue.replace('"'\x2C '\\\\"') + '"';\n        }\n        options.push(`default = ${defaultValue}`);\n    }\n    if (this.jsonName !== undefined) {\n        options.push(`json_name = "${this.jsonName}"`);\n    }\n    if (((_b = this.proto.options) === null || _b === void 0 ? void 0 : _b.deprecated) === true) {\n        options.push(`deprecated = true`);\n    }\n    if (options.length > 0) {\n        parts.push("[" + options.join("\x2C ") + "]");\n    }\n    return parts.join(" ");\n}\n/**\n * Parses a text-encoded default value (proto2) of a scalar or enum field.\n */\nfunction getDefaultValue() {\n    const d = this.proto.defaultValue;\n    if (d === undefined) {\n        return undefined;\n    }\n    switch (this.fieldKind) {\n        case "enum": {\n            const enumValue = this.enum.values.find((v) => v.name === d);\n            assert(enumValue\x2C `cannot parse ${this.toString()} default value: ${d}`);\n            return enumValue.number;\n        }\n        case "scalar":\n            switch (this.scalar) {\n                case ScalarType.STRING:\n                    return d;\n                case ScalarType.BYTES: {\n                    const u = unescapeBytesDefaultValue(d);\n                    if (u === false) {\n                        throw new Error(`cannot parse ${this.toString()} default value: ${d}`);\n                    }\n                    return u;\n                }\n                case ScalarType.INT64:\n                case ScalarType.SFIXED64:\n                case ScalarType.SINT64:\n                    return protoInt64.parse(d);\n                case ScalarType.UINT64:\n                case ScalarType.FIXED64:\n                    return protoInt64.uParse(d);\n                case ScalarType.DOUBLE:\n                case ScalarType.FLOAT:\n                    switch (d) {\n                        case "inf":\n                            return Number.POSITIVE_INFINITY;\n                        case "-inf":\n                            return Number.NEGATIVE_INFINITY;\n                        case "nan":\n                            return Number.NaN;\n                        default:\n                            return parseFloat(d);\n                    }\n                case ScalarType.BOOL:\n                    return d === "true";\n                case ScalarType.INT32:\n                case ScalarType.UINT32:\n                case ScalarType.SINT32:\n                case ScalarType.FIXED32:\n                case ScalarType.SFIXED32:\n                    return parseInt(d\x2C 10);\n            }\n            break;\n        default:\n            return undefined;\n    }\n}\n/**\n * Parses a text-encoded default value (proto2) of a BYTES field.\n */\nfunction unescapeBytesDefaultValue(str) {\n    const b = [];\n    const input = {\n        tail: str\x2C\n        c: ""\x2C\n        next() {\n            if (this.tail.length == 0) {\n                return false;\n            }\n            this.c = this.tail[0];\n            this.tail = this.tail.substring(1);\n            return true;\n        }\x2C\n        take(n) {\n            if (this.tail.length >= n) {\n                const r = this.tail.substring(0\x2C n);\n                this.tail = this.tail.substring(n);\n                return r;\n            }\n            return false;\n        }\x2C\n    };\n    while (input.next()) {\n        switch (input.c) {\n            case "\\\\":\n                if (input.next()) {\n                    switch (input.c) {\n                        case "\\\\":\n                            b.push(input.c.charCodeAt(0));\n                            break;\n                        case "b":\n                            b.push(0x08);\n                            break;\n                        case "f":\n                            b.push(0x0c);\n                            break;\n                        case "n":\n                            b.push(0x0a);\n                            break;\n                        case "r":\n                            b.push(0x0d);\n                            break;\n                        case "t":\n                            b.push(0x09);\n                            break;\n                        case "v":\n                            b.push(0x0b);\n                            break;\n                        case "0":\n                        case "1":\n                        case "2":\n                        case "3":\n                        case "4":\n                        case "5":\n                        case "6":\n                        case "7": {\n                            const s = input.c;\n                            const t = input.take(2);\n                            if (t === false) {\n                                return false;\n                            }\n                            const n = parseInt(s + t\x2C 8);\n                            if (isNaN(n)) {\n                                return false;\n                            }\n                            b.push(n);\n                            break;\n                        }\n                        case "x": {\n                            const s = input.c;\n                            const t = input.take(2);\n                            if (t === false) {\n                                return false;\n                            }\n                            const n = parseInt(s + t\x2C 16);\n                            if (isNaN(n)) {\n                                return false;\n                            }\n                            b.push(n);\n                            break;\n                        }\n                        case "u": {\n                            const s = input.c;\n                            const t = input.take(4);\n                            if (t === false) {\n                                return false;\n                            }\n                            const n = parseInt(s + t\x2C 16);\n                            if (isNaN(n)) {\n                                return false;\n                            }\n                            const chunk = new Uint8Array(4);\n                            const view = new DataView(chunk.buffer);\n                            view.setInt32(0\x2C n\x2C true);\n                            b.push(chunk[0]\x2C chunk[1]\x2C chunk[2]\x2C chunk[3]);\n                            break;\n                        }\n                        case "U": {\n                            const s = input.c;\n                            const t = input.take(8);\n                            if (t === false) {\n                                return false;\n                            }\n                            const tc = protoInt64.uEnc(s + t);\n                            const chunk = new Uint8Array(8);\n                            const view = new DataView(chunk.buffer);\n                            view.setInt32(0\x2C tc.lo\x2C true);\n                            view.setInt32(4\x2C tc.hi\x2C true);\n                            b.push(chunk[0]\x2C chunk[1]\x2C chunk[2]\x2C chunk[3]\x2C chunk[4]\x2C chunk[5]\x2C chunk[6]\x2C chunk[7]);\n                            break;\n                        }\n                    }\n                }\n                break;\n            default:\n                b.push(input.c.charCodeAt(0));\n        }\n    }\n    return new Uint8Array(b);\n}\n
code-source-info,0xf2c007a10b
code-creation,Function,10,88625,0xf2c007a1500,171, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/create-descriptor-set.js:681:11,0xf2c007a0ec8,~
code-source-info,0xf2c007a1500,476,27038,28301,C0O27058C3O27113C9O27118C13O27155C16O27214C22O27219C26O27260C29O27316C35O27321C39O27359C42O27414C48O27419C52O27456C55O27513C61O27518C65O27557C68O27611C74O27617C78O27653C81O27702C87O27707C91O27738C94O27792C100O27797C104O27833C107O27885C113O27890C117O27924C120O27977C126O27982C130O28017C133O28070C139O28075C143O28110C146O28163C152O28168C156O28203C159O28260C165O28265C170O28300,,
tick,0x1a4e3b454,88666,1,0x104a6bc1c,3,0x0,0x109d0ba34,0x109cf3688,0x105405ef4
tick,0x105028a0c,88750,0,0x0,0,0x105460d34,0x109cf6ad8,0x109cd6668,0x109ce14d4,0x109ce717c,0x109cfa800,0x109ce476c,0x109cee26c,0x109cd29f0,0x109ce98c4,0x109cea7b4,0x109ce7398,0x104a6cb38,0x109cf3c04,0x105405ef4
code-creation,Script,10,89208,0xf2c007a5468,325, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/binary-encoding.js:1:1,0xf2c007a3ab0,~
script-source,477,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/binary-encoding.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { varint32read\x2C varint32write\x2C varint64read\x2C varint64write\x2C } from "./google/varint.js";\nimport { assertFloat32\x2C assertInt32\x2C assertUInt32 } from "./private/assert.js";\nimport { protoInt64 } from "./proto-int64.js";\n/* eslint-disable prefer-const\x2Cno-case-declarations\x2C@typescript-eslint/restrict-plus-operands */\n/**\n * Protobuf binary format wire types.\n *\n * A wire type provides just enough information to find the length of the\n * following value.\n *\n * See https://developers.google.com/protocol-buffers/docs/encoding#structure\n */\nexport var WireType;\n(function (WireType) {\n    /**\n     * Used for int32\x2C int64\x2C uint32\x2C uint64\x2C sint32\x2C sint64\x2C bool\x2C enum\n     */\n    WireType[WireType["Varint"] = 0] = "Varint";\n    /**\n     * Used for fixed64\x2C sfixed64\x2C double.\n     * Always 8 bytes with little-endian byte order.\n     */\n    WireType[WireType["Bit64"] = 1] = "Bit64";\n    /**\n     * Used for string\x2C bytes\x2C embedded messages\x2C packed repeated fields\n     *\n     * Only repeated numeric types (types which use the varint\x2C 32-bit\x2C\n     * or 64-bit wire types) can be packed. In proto3\x2C such fields are\n     * packed by default.\n     */\n    WireType[WireType["LengthDelimited"] = 2] = "LengthDelimited";\n    /**\n     * Used for groups\n     * @deprecated\n     */\n    WireType[WireType["StartGroup"] = 3] = "StartGroup";\n    /**\n     * Used for groups\n     * @deprecated\n     */\n    WireType[WireType["EndGroup"] = 4] = "EndGroup";\n    /**\n     * Used for fixed32\x2C sfixed32\x2C float.\n     * Always 4 bytes with little-endian byte order.\n     */\n    WireType[WireType["Bit32"] = 5] = "Bit32";\n})(WireType || (WireType = {}));\nexport class BinaryWriter {\n    constructor(textEncoder) {\n        /**\n         * Previous fork states.\n         */\n        this.stack = [];\n        this.textEncoder = textEncoder !== null && textEncoder !== void 0 ? textEncoder : new TextEncoder();\n        this.chunks = [];\n        this.buf = [];\n    }\n    /**\n     * Return all bytes written and reset this writer.\n     */\n    finish() {\n        this.chunks.push(new Uint8Array(this.buf)); // flush the buffer\n        let len = 0;\n        for (let i = 0; i < this.chunks.length; i++)\n            len += this.chunks[i].length;\n        let bytes = new Uint8Array(len);\n        let offset = 0;\n        for (let i = 0; i < this.chunks.length; i++) {\n            bytes.set(this.chunks[i]\x2C offset);\n            offset += this.chunks[i].length;\n        }\n        this.chunks = [];\n        return bytes;\n    }\n    /**\n     * Start a new fork for length-delimited data like a message\n     * or a packed repeated field.\n     *\n     * Must be joined later with `join()`.\n     */\n    fork() {\n        this.stack.push({ chunks: this.chunks\x2C buf: this.buf });\n        this.chunks = [];\n        this.buf = [];\n        return this;\n    }\n    /**\n     * Join the last fork. Write its length and bytes\x2C then\n     * return to the previous state.\n     */\n    join() {\n        // get chunk of fork\n        let chunk = this.finish();\n        // restore previous state\n        let prev = this.stack.pop();\n        if (!prev)\n            throw new Error("invalid state\x2C fork stack empty");\n        this.chunks = prev.chunks;\n        this.buf = prev.buf;\n        // write length of chunk as varint\n        this.uint32(chunk.byteLength);\n        return this.raw(chunk);\n    }\n    /**\n     * Writes a tag (field number and wire type).\n     *\n     * Equivalent to `uint32( (fieldNo << 3 | type) >>> 0 )`.\n     *\n     * Generated code should compute the tag ahead of time and call `uint32()`.\n     */\n    tag(fieldNo\x2C type) {\n        return this.uint32(((fieldNo << 3) | type) >>> 0);\n    }\n    /**\n     * Write a chunk of raw bytes.\n     */\n    raw(chunk) {\n        if (this.buf.length) {\n            this.chunks.push(new Uint8Array(this.buf));\n            this.buf = [];\n        }\n        this.chunks.push(chunk);\n        return this;\n    }\n    /**\n     * Write a `uint32` value\x2C an unsigned 32 bit varint.\n     */\n    uint32(value) {\n        assertUInt32(value);\n        // write value as varint 32\x2C inlined for speed\n        while (value > 0x7f) {\n            this.buf.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        this.buf.push(value);\n        return this;\n    }\n    /**\n     * Write a `int32` value\x2C a signed 32 bit varint.\n     */\n    int32(value) {\n        assertInt32(value);\n        varint32write(value\x2C this.buf);\n        return this;\n    }\n    /**\n     * Write a `bool` value\x2C a variant.\n     */\n    bool(value) {\n        this.buf.push(value ? 1 : 0);\n        return this;\n    }\n    /**\n     * Write a `bytes` value\x2C length-delimited arbitrary data.\n     */\n    bytes(value) {\n        this.uint32(value.byteLength); // write length of chunk as varint\n        return this.raw(value);\n    }\n    /**\n     * Write a `string` value\x2C length-delimited data converted to UTF-8 text.\n     */\n    string(value) {\n        let chunk = this.textEncoder.encode(value);\n        this.uint32(chunk.byteLength); // write length of chunk as varint\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `float` value\x2C 32-bit floating point number.\n     */\n    float(value) {\n        assertFloat32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setFloat32(0\x2C value\x2C true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `double` value\x2C a 64-bit floating point number.\n     */\n    double(value) {\n        let chunk = new Uint8Array(8);\n        new DataView(chunk.buffer).setFloat64(0\x2C value\x2C true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed32` value\x2C an unsigned\x2C fixed-length 32-bit integer.\n     */\n    fixed32(value) {\n        assertUInt32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setUint32(0\x2C value\x2C true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sfixed32` value\x2C a signed\x2C fixed-length 32-bit integer.\n     */\n    sfixed32(value) {\n        assertInt32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setInt32(0\x2C value\x2C true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sint32` value\x2C a signed\x2C zigzag-encoded 32-bit varint.\n     */\n    sint32(value) {\n        assertInt32(value);\n        // zigzag encode\n        value = ((value << 1) ^ (value >> 31)) >>> 0;\n        varint32write(value\x2C this.buf);\n        return this;\n    }\n    /**\n     * Write a `fixed64` value\x2C a signed\x2C fixed-length 64-bit integer.\n     */\n    sfixed64(value) {\n        let chunk = new Uint8Array(8)\x2C view = new DataView(chunk.buffer)\x2C tc = protoInt64.enc(value);\n        view.setInt32(0\x2C tc.lo\x2C true);\n        view.setInt32(4\x2C tc.hi\x2C true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed64` value\x2C an unsigned\x2C fixed-length 64 bit integer.\n     */\n    fixed64(value) {\n        let chunk = new Uint8Array(8)\x2C view = new DataView(chunk.buffer)\x2C tc = protoInt64.uEnc(value);\n        view.setInt32(0\x2C tc.lo\x2C true);\n        view.setInt32(4\x2C tc.hi\x2C true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `int64` value\x2C a signed 64-bit varint.\n     */\n    int64(value) {\n        let tc = protoInt64.enc(value);\n        varint64write(tc.lo\x2C tc.hi\x2C this.buf);\n        return this;\n    }\n    /**\n     * Write a `sint64` value\x2C a signed\x2C zig-zag-encoded 64-bit varint.\n     */\n    sint64(value) {\n        let tc = protoInt64.enc(value)\x2C \n        // zigzag encode\n        sign = tc.hi >> 31\x2C lo = (tc.lo << 1) ^ sign\x2C hi = ((tc.hi << 1) | (tc.lo >>> 31)) ^ sign;\n        varint64write(lo\x2C hi\x2C this.buf);\n        return this;\n    }\n    /**\n     * Write a `uint64` value\x2C an unsigned 64-bit varint.\n     */\n    uint64(value) {\n        let tc = protoInt64.uEnc(value);\n        varint64write(tc.lo\x2C tc.hi\x2C this.buf);\n        return this;\n    }\n}\nexport class BinaryReader {\n    constructor(buf\x2C textDecoder) {\n        this.varint64 = varint64read; // dirty cast for `this`\n        /**\n         * Read a `uint32` field\x2C an unsigned 32 bit varint.\n         */\n        this.uint32 = varint32read; // dirty cast for `this` and access to protected `buf`\n        this.buf = buf;\n        this.len = buf.length;\n        this.pos = 0;\n        this.view = new DataView(buf.buffer\x2C buf.byteOffset\x2C buf.byteLength);\n        this.textDecoder = textDecoder !== null && textDecoder !== void 0 ? textDecoder : new TextDecoder();\n    }\n    /**\n     * Reads a tag - field number and wire type.\n     */\n    tag() {\n        let tag = this.uint32()\x2C fieldNo = tag >>> 3\x2C wireType = tag & 7;\n        if (fieldNo <= 0 || wireType < 0 || wireType > 5)\n            throw new Error("illegal tag: field no " + fieldNo + " wire type " + wireType);\n        return [fieldNo\x2C wireType];\n    }\n    /**\n     * Skip one element on the wire and return the skipped data.\n     * Supports WireType.StartGroup since v2.0.0-alpha.23.\n     */\n    skip(wireType) {\n        let start = this.pos;\n        switch (wireType) {\n            case WireType.Varint:\n                while (this.buf[this.pos++] & 0x80) {\n                    // ignore\n                }\n                break;\n            // eslint-disable-next-line\n            // @ts-ignore TS7029: Fallthrough case in switch\n            case WireType.Bit64:\n                this.pos += 4;\n            // eslint-disable-next-line\n            // @ts-ignore TS7029: Fallthrough case in switch\n            case WireType.Bit32:\n                this.pos += 4;\n                break;\n            case WireType.LengthDelimited:\n                let len = this.uint32();\n                this.pos += len;\n                break;\n            case WireType.StartGroup:\n                // From descriptor.proto: Group type is deprecated\x2C not supported in proto3.\n                // But we must still be able to parse and treat as unknown.\n                let t;\n                while ((t = this.tag()[1]) !== WireType.EndGroup) {\n                    this.skip(t);\n                }\n                break;\n            default:\n                throw new Error("cant skip wire type " + wireType);\n        }\n        this.assertBounds();\n        return this.buf.subarray(start\x2C this.pos);\n    }\n    /**\n     * Throws error if position in byte array is out of range.\n     */\n    assertBounds() {\n        if (this.pos > this.len)\n            throw new RangeError("premature EOF");\n    }\n    /**\n     * Read a `int32` field\x2C a signed 32 bit varint.\n     */\n    int32() {\n        return this.uint32() | 0;\n    }\n    /**\n     * Read a `sint32` field\x2C a signed\x2C zigzag-encoded 32-bit varint.\n     */\n    sint32() {\n        let zze = this.uint32();\n        // decode zigzag\n        return (zze >>> 1) ^ -(zze & 1);\n    }\n    /**\n     * Read a `int64` field\x2C a signed 64-bit varint.\n     */\n    int64() {\n        return protoInt64.dec(...this.varint64());\n    }\n    /**\n     * Read a `uint64` field\x2C an unsigned 64-bit varint.\n     */\n    uint64() {\n        return protoInt64.uDec(...this.varint64());\n    }\n    /**\n     * Read a `sint64` field\x2C a signed\x2C zig-zag-encoded 64-bit varint.\n     */\n    sint64() {\n        let [lo\x2C hi] = this.varint64();\n        // decode zig zag\n        let s = -(lo & 1);\n        lo = ((lo >>> 1) | ((hi & 1) << 31)) ^ s;\n        hi = (hi >>> 1) ^ s;\n        return protoInt64.dec(lo\x2C hi);\n    }\n    /**\n     * Read a `bool` field\x2C a variant.\n     */\n    bool() {\n        let [lo\x2C hi] = this.varint64();\n        return lo !== 0 || hi !== 0;\n    }\n    /**\n     * Read a `fixed32` field\x2C an unsigned\x2C fixed-length 32-bit integer.\n     */\n    fixed32() {\n        return this.view.getUint32((this.pos += 4) - 4\x2C true);\n    }\n    /**\n     * Read a `sfixed32` field\x2C a signed\x2C fixed-length 32-bit integer.\n     */\n    sfixed32() {\n        return this.view.getInt32((this.pos += 4) - 4\x2C true);\n    }\n    /**\n     * Read a `fixed64` field\x2C an unsigned\x2C fixed-length 64 bit integer.\n     */\n    fixed64() {\n        return protoInt64.uDec(this.sfixed32()\x2C this.sfixed32());\n    }\n    /**\n     * Read a `fixed64` field\x2C a signed\x2C fixed-length 64-bit integer.\n     */\n    sfixed64() {\n        return protoInt64.dec(this.sfixed32()\x2C this.sfixed32());\n    }\n    /**\n     * Read a `float` field\x2C 32-bit floating point number.\n     */\n    float() {\n        return this.view.getFloat32((this.pos += 4) - 4\x2C true);\n    }\n    /**\n     * Read a `double` field\x2C a 64-bit floating point number.\n     */\n    double() {\n        return this.view.getFloat64((this.pos += 8) - 8\x2C true);\n    }\n    /**\n     * Read a `bytes` field\x2C length-delimited arbitrary data.\n     */\n    bytes() {\n        let len = this.uint32()\x2C start = this.pos;\n        this.pos += len;\n        this.assertBounds();\n        return this.buf.subarray(start\x2C start + len);\n    }\n    /**\n     * Read a `string` field\x2C length-delimited data converted to UTF-8 text.\n     */\n    string() {\n        return this.textDecoder.decode(this.bytes());\n    }\n}\n
code-source-info,0xf2c007a5468,477,0,13494,C10O0C28O0C48O0C52O1170C57O2209C63O2231C67O2208C203O2246C319O8435C324O13494,,
code-creation,Function,10,89708,0xf2c007a5670,79, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/binary-encoding.js:27:11,0xf2c007a4060,~
code-source-info,0xf2c007a5670,477,1180,2207,C0O1286C2O1314C8O1319C12O1447C15O1474C21O1479C25O1759C28O1796C34O1801C38O1884C41O1916C47O1921C51O1999C54O2029C60O2034C64O2163C67O2190C73O2195C78O2206,,
code-creation,Script,10,89916,0xf2c007a67e0,45, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/type-registry.js:1:1,0xf2c007a66c0,~
script-source,478,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/type-registry.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nexport {};\n
code-source-info,0xf2c007a67e0,478,0,616,C10O0C15O0C35O0C44O616,,
tick,0x105088ce0,90000,1,0x104a6bc1c,2,0x0,0x109d0ba34,0x109cf3688,0x105405ef4
code-creation,Script,10,90000,0xf2c007a6ce8,58, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/create-registry.js:1:1,0xf2c007a6ab0,~
script-source,479,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/create-registry.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Create a new registry from the given types.\n */\nexport function createRegistry(...types) {\n    const messages = {};\n    const enums = {};\n    const services = {};\n    const registry = {\n        /**\n         * Add a type to the registry. For messages\x2C the types used in message\n         * fields are added recursively. For services\x2C the message types used\n         * for requests and responses are added recursively.\n         */\n        add(type) {\n            if ("fields" in type) {\n                if (!this.findMessage(type.typeName)) {\n                    messages[type.typeName] = type;\n                    for (const field of type.fields.list()) {\n                        if (field.kind == "message") {\n                            this.add(field.T);\n                        }\n                        else if (field.kind == "map" && field.V.kind == "message") {\n                            this.add(field.V.T);\n                        }\n                        else if (field.kind == "enum") {\n                            this.add(field.T);\n                        }\n                    }\n                }\n            }\n            else if ("methods" in type) {\n                if (!this.findService(type.typeName)) {\n                    services[type.typeName] = type;\n                    for (const method of Object.values(type.methods)) {\n                        this.add(method.I);\n                        this.add(method.O);\n                    }\n                }\n            }\n            else {\n                enums[type.typeName] = type;\n            }\n        }\x2C\n        findMessage(typeName) {\n            return messages[typeName];\n        }\x2C\n        findEnum(typeName) {\n            return enums[typeName];\n        }\x2C\n        findService(typeName) {\n            return services[typeName];\n        }\x2C\n    };\n    for (const type of types) {\n        registry.add(type);\n    }\n    return registry;\n}\n
code-source-info,0xf2c007a6ce8,479,0,2527,C10O0C28O0C48O0C57O2527,,
code-creation,Script,10,90250,0xf2c007a8720,349, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/create-registry-from-desc.js:1:1,0xf2c007a7580,~
script-source,480,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/create-registry-from-desc.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { assert } from "./private/assert.js";\nimport { proto3 } from "./proto3.js";\nimport { proto2 } from "./proto2.js";\nimport { localName } from "./private/names.js";\nimport { Timestamp } from "./google/protobuf/timestamp_pb.js";\nimport { Duration } from "./google/protobuf/duration_pb.js";\nimport { Any } from "./google/protobuf/any_pb.js";\nimport { Empty } from "./google/protobuf/empty_pb.js";\nimport { FieldMask } from "./google/protobuf/field_mask_pb.js";\nimport { ListValue\x2C NullValue\x2C Struct\x2C Value\x2C } from "./google/protobuf/struct_pb.js";\nimport { getEnumType } from "./private/enum.js";\nimport { BoolValue\x2C BytesValue\x2C DoubleValue\x2C FloatValue\x2C Int32Value\x2C Int64Value\x2C StringValue\x2C UInt32Value\x2C UInt64Value\x2C } from "./google/protobuf/wrappers_pb.js";\nimport { FileDescriptorSet } from "./google/protobuf/descriptor_pb.js";\nimport { createDescriptorSet } from "./create-descriptor-set.js";\n// well-known message types with specialized JSON representation\nconst wkMessages = [\n    Any\x2C\n    Duration\x2C\n    Empty\x2C\n    FieldMask\x2C\n    Struct\x2C\n    Value\x2C\n    ListValue\x2C\n    Timestamp\x2C\n    Duration\x2C\n    DoubleValue\x2C\n    FloatValue\x2C\n    Int64Value\x2C\n    Int32Value\x2C\n    UInt32Value\x2C\n    UInt64Value\x2C\n    BoolValue\x2C\n    StringValue\x2C\n    BytesValue\x2C\n];\n// well-known enum types with specialized JSON representation\nconst wkEnums = [getEnumType(NullValue)];\n/**\n * Create a registry from a set of descriptors. The types returned by this\n * registry behave exactly like types from generated code.\n *\n * This function accepts google.protobuf.FileDescriptorSet in serialized or\n * deserialized form. Alternatively\x2C it also accepts a DescriptorSet (see\n * createDescriptorSet()).\n *\n * By default\x2C all well-known types with a specialized JSON representation\n * are replaced with their generated counterpart in this package.\n */\nexport function createRegistryFromDescriptors(input\x2C replaceWkt = true) {\n    const set = input instanceof Uint8Array || input instanceof FileDescriptorSet\n        ? createDescriptorSet(input)\n        : input;\n    const enums = {};\n    const messages = {};\n    const services = {};\n    if (replaceWkt) {\n        for (const mt of wkMessages) {\n            messages[mt.typeName] = mt;\n        }\n        for (const et of wkEnums) {\n            enums[et.typeName] = et;\n        }\n    }\n    return {\n        /**\n         * May raise an error on invalid descriptors.\n         */\n        findEnum(typeName) {\n            const existing = enums[typeName];\n            if (existing) {\n                return existing;\n            }\n            const desc = set.enums.get(typeName);\n            if (!desc) {\n                return undefined;\n            }\n            const runtime = desc.file.syntax == "proto3" ? proto3 : proto2;\n            const type = runtime.makeEnumType(typeName\x2C desc.values.map((u) => ({\n                no: u.number\x2C\n                name: u.name\x2C\n                localName: localName(u)\x2C\n            }))\x2C {});\n            enums[typeName] = type;\n            return type;\n        }\x2C\n        /**\n         * May raise an error on invalid descriptors.\n         */\n        findMessage(typeName) {\n            const existing = messages[typeName];\n            if (existing) {\n                return existing;\n            }\n            const desc = set.messages.get(typeName);\n            if (!desc) {\n                return undefined;\n            }\n            const runtime = desc.file.syntax == "proto3" ? proto3 : proto2;\n            const fields = [];\n            const type = runtime.makeMessageType(typeName\x2C () => fields\x2C {\n                localName: localName(desc)\x2C\n            });\n            messages[typeName] = type;\n            for (const field of desc.fields) {\n                const fieldInfo = makeFieldInfo(field\x2C this);\n                fields.push(fieldInfo);\n            }\n            return type;\n        }\x2C\n        /**\n         * May raise an error on invalid descriptors.\n         */\n        findService(typeName) {\n            const existing = services[typeName];\n            if (existing) {\n                return existing;\n            }\n            const desc = set.services.get(typeName);\n            if (!desc) {\n                return undefined;\n            }\n            const methods = {};\n            for (const method of desc.methods) {\n                const I = this.findMessage(method.input.typeName);\n                const O = this.findMessage(method.output.typeName);\n                assert(I\x2C `message "${method.input.typeName}" for ${method.toString()} not found`);\n                assert(O\x2C `output message "${method.output.typeName}" for ${method.toString()} not found`);\n                const m = {\n                    name: method.name\x2C\n                    localName: localName(method)\x2C\n                    I\x2C\n                    O\x2C\n                    kind: method.methodKind\x2C\n                    idempotency: method.idempotency\x2C\n                    options: {}\x2C\n                };\n                methods[m.localName] = m;\n            }\n            return (services[typeName] = {\n                typeName: desc.typeName\x2C\n                methods\x2C\n            });\n        }\x2C\n    };\n}\nfunction makeFieldInfo(desc\x2C resolver) {\n    switch (desc.fieldKind) {\n        case "map":\n            return makeMapFieldInfo(desc\x2C resolver);\n        case "message":\n            return makeMessageFieldInfo(desc\x2C resolver);\n        case "enum": {\n            const fi = makeEnumFieldInfo(desc\x2C resolver);\n            fi.default = desc.getDefaultValue();\n            return fi;\n        }\n        case "scalar": {\n            const fi = makeScalarFieldInfo(desc);\n            fi.default = desc.getDefaultValue();\n            return fi;\n        }\n    }\n}\nfunction makeMapFieldInfo(field\x2C resolver) {\n    const base = {\n        kind: "map"\x2C\n        no: field.number\x2C\n        name: field.name\x2C\n        jsonName: field.jsonName\x2C\n        K: field.mapKey\x2C\n    };\n    if (field.mapValue.message) {\n        const messageType = resolver.findMessage(field.mapValue.message.typeName);\n        assert(messageType\x2C `message "${field.mapValue.message.typeName}" for ${field.toString()} not found`);\n        return Object.assign(Object.assign({}\x2C base)\x2C { V: {\n                kind: "message"\x2C\n                T: messageType\x2C\n            } });\n    }\n    if (field.mapValue.enum) {\n        const enumType = resolver.findEnum(field.mapValue.enum.typeName);\n        assert(enumType\x2C `enum "${field.mapValue.enum.typeName}" for ${field.toString()} not found`);\n        return Object.assign(Object.assign({}\x2C base)\x2C { V: {\n                kind: "enum"\x2C\n                T: enumType\x2C\n            } });\n    }\n    return Object.assign(Object.assign({}\x2C base)\x2C { V: {\n            kind: "scalar"\x2C\n            T: field.mapValue.scalar\x2C\n        } });\n}\nfunction makeScalarFieldInfo(field) {\n    const base = {\n        kind: "scalar"\x2C\n        no: field.number\x2C\n        name: field.name\x2C\n        jsonName: field.jsonName\x2C\n        T: field.scalar\x2C\n    };\n    if (field.repeated) {\n        return Object.assign(Object.assign({}\x2C base)\x2C { repeated: true\x2C packed: field.packed\x2C oneof: undefined\x2C T: field.scalar });\n    }\n    if (field.oneof) {\n        return Object.assign(Object.assign({}\x2C base)\x2C { oneof: field.oneof.name });\n    }\n    if (field.optional) {\n        return Object.assign(Object.assign({}\x2C base)\x2C { opt: true });\n    }\n    return base;\n}\nfunction makeMessageFieldInfo(field\x2C resolver) {\n    const messageType = resolver.findMessage(field.message.typeName);\n    assert(messageType\x2C `message "${field.message.typeName}" for ${field.toString()} not found`);\n    const base = {\n        kind: "message"\x2C\n        no: field.number\x2C\n        name: field.name\x2C\n        jsonName: field.jsonName\x2C\n        T: messageType\x2C\n    };\n    if (field.repeated) {\n        return Object.assign(Object.assign({}\x2C base)\x2C { repeated: true\x2C packed: field.packed\x2C oneof: undefined });\n    }\n    if (field.oneof) {\n        return Object.assign(Object.assign({}\x2C base)\x2C { oneof: field.oneof.name });\n    }\n    if (field.optional) {\n        return Object.assign(Object.assign({}\x2C base)\x2C { opt: true });\n    }\n    return base;\n}\nfunction makeEnumFieldInfo(field\x2C resolver) {\n    const enumType = resolver.findEnum(field.enum.typeName);\n    assert(enumType\x2C `enum "${field.enum.typeName}" for ${field.toString()} not found`);\n    const base = {\n        kind: "enum"\x2C\n        no: field.number\x2C\n        name: field.name\x2C\n        jsonName: field.jsonName\x2C\n        T: enumType\x2C\n    };\n    if (field.repeated) {\n        return Object.assign(Object.assign({}\x2C base)\x2C { repeated: true\x2C packed: field.packed\x2C oneof: undefined });\n    }\n    if (field.oneof) {\n        return Object.assign(Object.assign({}\x2C base)\x2C { oneof: field.oneof.name });\n    }\n    if (field.optional) {\n        return Object.assign(Object.assign({}\x2C base)\x2C { opt: true });\n    }\n    return base;\n}\n
code-source-info,0xf2c007a8720,480,0,9477,C10O0C64O0C84O0C91O1590C98O1596C110O1605C122O1619C134O1630C146O1645C158O1657C170O1668C182O1683C194O1698C206O1712C218O1729C230O1745C242O1761C254O1777C266O1794C278O1811C290O1826C302O1843C313O1590C315O1936C322O1937C328O1949C334O1937C344O1936C348O9477,,
tick,0x1a4c86d40,91250,0,0x0,0,0x0,0x109cf6c30,0x109cd6668,0x109ce14d4,0x109ce717c,0x109cfa800,0x109ce476c,0x109cee26c,0x109cd29f0,0x109ce98c4,0x109cea7b4,0x109ce7398,0x104a6cb38,0x109cf3c04,0x105405ef4
new,MemoryChunk,0x6044c0c0000,262144
new,MemoryChunk,0x17313f500000,262144
new,MemoryChunk,0x1f8889000000,262144
new,MemoryChunk,0x108bdd040000,262144
new,MemoryChunk,0x27cc95800000,262144
new,MemoryChunk,0x3cff4e500000,262144
new,MemoryChunk,0x1a4c4f500000,262144
new,MemoryChunk,0x34becee80000,262144
new,MemoryChunk,0x1715ca040000,262144
new,MemoryChunk,0x13959b00000,262144
code-creation,Script,10,91958,0xf2c007ab048,575, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/google/protobuf/compiler/plugin_pb.js:1:1,0xf2c007a99b8,~
script-source,481,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/google/protobuf/compiler/plugin_pb.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from "../../../message.js";\nimport { proto2 } from "../../../proto2.js";\nimport { FileDescriptorProto\x2C GeneratedCodeInfo } from "../descriptor_pb.js";\n/**\n * The version number of protocol compiler.\n *\n * @generated from message google.protobuf.compiler.Version\n */\nexport class Version extends Message {\n    constructor(data) {\n        super();\n        proto2.util.initPartial(data\x2C this);\n    }\n    static fromBinary(bytes\x2C options) {\n        return new Version().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new Version().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new Version().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto2.util.equals(Version\x2C a\x2C b);\n    }\n}\nVersion.runtime = proto2;\nVersion.typeName = "google.protobuf.compiler.Version";\nVersion.fields = proto2.util.newFieldList(() => [\n    { no: 1\x2C name: "major"\x2C kind: "scalar"\x2C T: 5 /* ScalarType.INT32 */\x2C opt: true }\x2C\n    { no: 2\x2C name: "minor"\x2C kind: "scalar"\x2C T: 5 /* ScalarType.INT32 */\x2C opt: true }\x2C\n    { no: 3\x2C name: "patch"\x2C kind: "scalar"\x2C T: 5 /* ScalarType.INT32 */\x2C opt: true }\x2C\n    { no: 4\x2C name: "suffix"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C opt: true }\x2C\n]);\n/**\n * An encoded CodeGeneratorRequest is written to the plugin's stdin.\n *\n * @generated from message google.protobuf.compiler.CodeGeneratorRequest\n */\nexport class CodeGeneratorRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The .proto files that were explicitly listed on the command-line.  The\n         * code generator should generate code only for these files.  Each file's\n         * descriptor will be included in proto_file\x2C below.\n         *\n         * @generated from field: repeated string file_to_generate = 1;\n         */\n        this.fileToGenerate = [];\n        /**\n         * FileDescriptorProtos for all files in files_to_generate and everything\n         * they import.  The files will appear in topological order\x2C so each file\n         * appears before any file that imports it.\n         *\n         * protoc guarantees that all proto_files will be written after\n         * the fields above\x2C even though this is not technically guaranteed by the\n         * protobuf wire format.  This theoretically could allow a plugin to stream\n         * in the FileDescriptorProtos and handle them one by one rather than read\n         * the entire set into memory at once.  However\x2C as of this writing\x2C this\n         * is not similarly optimized on protoc's end -- it will store all fields in\n         * memory at once before sending them to the plugin.\n         *\n         * Type names of fields and extensions in the FileDescriptorProto are always\n         * fully qualified.\n         *\n         * @generated from field: repeated google.protobuf.FileDescriptorProto proto_file = 15;\n         */\n        this.protoFile = [];\n        proto2.util.initPartial(data\x2C this);\n    }\n    static fromBinary(bytes\x2C options) {\n        return new CodeGeneratorRequest().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new CodeGeneratorRequest().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new CodeGeneratorRequest().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto2.util.equals(CodeGeneratorRequest\x2C a\x2C b);\n    }\n}\nCodeGeneratorRequest.runtime = proto2;\nCodeGeneratorRequest.typeName = "google.protobuf.compiler.CodeGeneratorRequest";\nCodeGeneratorRequest.fields = proto2.util.newFieldList(() => [\n    { no: 1\x2C name: "file_to_generate"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C repeated: true }\x2C\n    { no: 2\x2C name: "parameter"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C opt: true }\x2C\n    { no: 15\x2C name: "proto_file"\x2C kind: "message"\x2C T: FileDescriptorProto\x2C repeated: true }\x2C\n    { no: 3\x2C name: "compiler_version"\x2C kind: "message"\x2C T: Version\x2C opt: true }\x2C\n]);\n/**\n * The plugin writes an encoded CodeGeneratorResponse to stdout.\n *\n * @generated from message google.protobuf.compiler.CodeGeneratorResponse\n */\nexport class CodeGeneratorResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated google.protobuf.compiler.CodeGeneratorResponse.File file = 15;\n         */\n        this.file = [];\n        proto2.util.initPartial(data\x2C this);\n    }\n    static fromBinary(bytes\x2C options) {\n        return new CodeGeneratorResponse().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new CodeGeneratorResponse().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new CodeGeneratorResponse().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto2.util.equals(CodeGeneratorResponse\x2C a\x2C b);\n    }\n}\nCodeGeneratorResponse.runtime = proto2;\nCodeGeneratorResponse.typeName = "google.protobuf.compiler.CodeGeneratorResponse";\nCodeGeneratorResponse.fields = proto2.util.newFieldList(() => [\n    { no: 1\x2C name: "error"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C opt: true }\x2C\n    { no: 2\x2C name: "supported_features"\x2C kind: "scalar"\x2C T: 4 /* ScalarType.UINT64 */\x2C opt: true }\x2C\n    { no: 15\x2C name: "file"\x2C kind: "message"\x2C T: CodeGeneratorResponse_File\x2C repeated: true }\x2C\n]);\n/**\n * Sync with code_generator.h.\n *\n * @generated from enum google.protobuf.compiler.CodeGeneratorResponse.Feature\n */\nexport var CodeGeneratorResponse_Feature;\n(function (CodeGeneratorResponse_Feature) {\n    /**\n     * @generated from enum value: FEATURE_NONE = 0;\n     */\n    CodeGeneratorResponse_Feature[CodeGeneratorResponse_Feature["NONE"] = 0] = "NONE";\n    /**\n     * @generated from enum value: FEATURE_PROTO3_OPTIONAL = 1;\n     */\n    CodeGeneratorResponse_Feature[CodeGeneratorResponse_Feature["PROTO3_OPTIONAL"] = 1] = "PROTO3_OPTIONAL";\n})(CodeGeneratorResponse_Feature || (CodeGeneratorResponse_Feature = {}));\n// Retrieve enum metadata with: proto2.getEnumType(CodeGeneratorResponse_Feature)\nproto2.util.setEnumType(CodeGeneratorResponse_Feature\x2C "google.protobuf.compiler.CodeGeneratorResponse.Feature"\x2C [\n    { no: 0\x2C name: "FEATURE_NONE" }\x2C\n    { no: 1\x2C name: "FEATURE_PROTO3_OPTIONAL" }\x2C\n]);\n/**\n * Represents a single generated file.\n *\n * @generated from message google.protobuf.compiler.CodeGeneratorResponse.File\n */\nexport class CodeGeneratorResponse_File extends Message {\n    constructor(data) {\n        super();\n        proto2.util.initPartial(data\x2C this);\n    }\n    static fromBinary(bytes\x2C options) {\n        return new CodeGeneratorResponse_File().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new CodeGeneratorResponse_File().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new CodeGeneratorResponse_File().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto2.util.equals(CodeGeneratorResponse_File\x2C a\x2C b);\n    }\n}\nCodeGeneratorResponse_File.runtime = proto2;\nCodeGeneratorResponse_File.typeName = "google.protobuf.compiler.CodeGeneratorResponse.File";\nCodeGeneratorResponse_File.fields = proto2.util.newFieldList(() => [\n    { no: 1\x2C name: "name"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C opt: true }\x2C\n    { no: 2\x2C name: "insertion_point"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C opt: true }\x2C\n    { no: 15\x2C name: "content"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C opt: true }\x2C\n    { no: 16\x2C name: "generated_code_info"\x2C kind: "message"\x2C T: GeneratedCodeInfo\x2C opt: true }\x2C\n]);\n
code-source-info,0xf2c007ab
code-creation,Function,10,92333,0xf2c007ab3c8,27, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/google/protobuf/compiler/plugin_pb.js:146:11,0xf2c007aa548,~
code-source-info,0xf2c007ab3c8,481,6228,6608,C0O6335C2O6403C8O6408C12O6502C15O6581C21O6586C26O6607,,
tick,0x1054284f0,92500,0,0x0,0,0x109cd1770,0x109cce00c,0x109cd63bc,0x109ce14d4,0x109ce717c,0x109cfa800,0x109ce476c,0x109cee26c,0x109cd29f0,0x109ce98c4,0x109cea7b4,0x109ce7398,0x104a6cb38,0x109cf3c04,0x105405ef4
code-creation,Script,10,92666,0xf2c007ad038,407, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/google/protobuf/api_pb.js:1:1,0xf2c007abf10,~
script-source,482,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/google/protobuf/api_pb.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from "../../message.js";\nimport { Option\x2C Syntax } from "./type_pb.js";\nimport { SourceContext } from "./source_context_pb.js";\nimport { proto3 } from "../../proto3.js";\n/**\n * Api is a light-weight descriptor for an API Interface.\n *\n * Interfaces are also described as "protocol buffer services" in some contexts\x2C\n * such as by the "service" keyword in a .proto file\x2C but they are different\n * from API Services\x2C which represent a concrete implementation of an interface\n * as opposed to simply a description of methods and bindings. They are also\n * sometimes simply referred to as "APIs" in other contexts\x2C such as the name of\n * this message itself. See https://cloud.google.com/apis/design/glossary for\n * detailed terminology.\n *\n * @generated from message google.protobuf.Api\n */\nexport class Api extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The fully qualified name of this interface\x2C including package name\n         * followed by the interface's simple name.\n         *\n         * @generated from field: string name = 1;\n         */\n        this.name = "";\n        /**\n         * The methods of this interface\x2C in unspecified order.\n         *\n         * @generated from field: repeated google.protobuf.Method methods = 2;\n         */\n        this.methods = [];\n        /**\n         * Any metadata attached to the interface.\n         *\n         * @generated from field: repeated google.protobuf.Option options = 3;\n         */\n        this.options = [];\n        /**\n         * A version string for this interface. If specified\x2C must have the form\n         * `major-version.minor-version`\x2C as in `1.10`. If the minor version is\n         * omitted\x2C it defaults to zero. If the entire version field is empty\x2C the\n         * major version is derived from the package name\x2C as outlined below. If the\n         * field is not empty\x2C the version in the package name will be verified to be\n         * consistent with what is provided here.\n         *\n         * The versioning schema uses [semantic\n         * versioning](http://semver.org) where the major version number\n         * indicates a breaking change and the minor version an additive\x2C\n         * non-breaking change. Both version numbers are signals to users\n         * what to expect from different versions\x2C and should be carefully\n         * chosen based on the product plan.\n         *\n         * The major version is also reflected in the package name of the\n         * interface\x2C which must end in `v<major-version>`\x2C as in\n         * `google.feature.v1`. For major versions 0 and 1\x2C the suffix can\n         * be omitted. Zero major versions must only be used for\n         * experimental\x2C non-GA interfaces.\n         *\n         *\n         *\n         * @generated from field: string version = 4;\n         */\n        this.version = "";\n        /**\n         * Included interfaces. See [Mixin][].\n         *\n         * @generated from field: repeated google.protobuf.Mixin mixins = 6;\n         */\n        this.mixins = [];\n        /**\n         * The source syntax of the service.\n         *\n         * @generated from field: google.protobuf.Syntax syntax = 7;\n         */\n        this.syntax = Syntax.PROTO2;\n        proto3.util.initPartial(data\x2C this);\n    }\n    static fromBinary(bytes\x2C options) {\n        return new Api().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new Api().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new Api().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto3.util.equals(Api\x2C a\x2C b);\n    }\n}\nApi.runtime = proto3;\nApi.typeName = "google.protobuf.Api";\nApi.fields = proto3.util.newFieldList(() => [\n    { no: 1\x2C name: "name"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */ }\x2C\n    { no: 2\x2C name: "methods"\x2C kind: "message"\x2C T: Method\x2C repeated: true }\x2C\n    { no: 3\x2C name: "options"\x2C kind: "message"\x2C T: Option\x2C repeated: true }\x2C\n    { no: 4\x2C name: "version"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */ }\x2C\n    { no: 5\x2C name: "source_context"\x2C kind: "message"\x2C T: SourceContext }\x2C\n    { no: 6\x2C name: "mixins"\x2C kind: "message"\x2C T: Mixin\x2C repeated: true }\x2C\n    { no: 7\x2C name: "syntax"\x2C kind: "enum"\x2C T: proto3.getEnumType(Syntax) }\x2C\n]);\n/**\n * Method represents a method of an API interface.\n *\n * @generated from message google.protobuf.Method\n */\nexport class Method extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The simple name of this method.\n         *\n         * @generated from field: string name = 1;\n         */\n        this.name = "";\n        /**\n         * A URL of the input message type.\n         *\n         * @generated from field: string request_type_url = 2;\n         */\n        this.requestTypeUrl = "";\n        /**\n         * If true\x2C the request is streamed.\n         *\n         * @generated from field: bool request_streaming = 3;\n         */\n        this.requestStreaming = false;\n        /**\n         * The URL of the output message type.\n         *\n         * @generated from field: string response_type_url = 4;\n         */\n        this.responseTypeUrl = "";\n        /**\n         * If true\x2C the response is streamed.\n         *\n         * @generated from field: bool response_streaming = 5;\n         */\n        this.responseStreaming = false;\n        /**\n         * Any metadata attached to the method.\n         *\n         * @generated from field: repeated google.protobuf.Option options = 6;\n         */\n        this.options = [];\n        /**\n         * The source syntax of this method.\n         *\n         * @generated from field: google.protobuf.Syntax syntax = 7;\n         */\n        this.syntax = Syntax.PROTO2;\n        proto3.util.initPartial(data\x2C this);\n    }\n    static fromBinary(bytes\x2C options) {\n        return new Method().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new Method().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new Method().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto3.util.equals(Method\x2C a\x2C b);\n    }\n}\nMethod.runtime = proto3;\nMethod.typeName = "google.protobuf.Method";\nMethod.fields = proto3.util.newFieldList(() => [\n    { no: 1\x2C name: "name"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */ }\x2C\n    { no: 2\x2C name: "request_type_url"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */ }\x2C\n    { no: 3\x2C name: "request_streaming"\x2C kind: "scalar"\x2C T: 8 /* ScalarType.BOOL */ }\x2C\n    { no: 4\x2C name: "response_type_url"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */ }\x2C\n    { no: 5\x2C name: "response_streaming"\x2C kind: "scalar"\x2C T: 8 /* ScalarType.BOOL */ }\x2C\n    { no: 6\x2C name: "options"\x2C kind: "message"\x2C T: Option\x2C repeated: true }\x2C\n    { no: 7\x2C name: "syntax"\x2C kind: "enum"\x2C T: proto3.getEnumType(Syntax) }\x2C\n]);\n/**\n * Declares an API Interface to be included in this interface. The including\n * interface must redeclare all the methods from the included interface\x2C but\n * documentation and options are inherited as follows:\n *\n * - If after comment and whitespace stripping\x2C the documentation\n *   string of the redeclared method is empty\x2C it will be inherited\n *   from the original method.\n *\n * - Each annotation belonging to the service config (http\x2C\n *   visibility) which is not set in the redeclared method will be\n *   inherited.\n *\n * - If an http annotation is inherited\x2C the path pattern will be\n *   modified as follows. Any version prefix will be replaced by the\n *   version of the including interface plus the [root][] path if\n *   specified.\n *\n * Example of a simple mixin:\n *\n *     package google.acl.v1;\n *     service AccessControl {\n *       // Get the underlying ACL object.\n *       rpc GetAcl(GetAclRequest) returns (Acl) {\n *         option (google.api.http).get = "/v1/{resource=**}:getAcl";\n *       }\n *     }\n *\n *     package google.storage.v2;\n *     service Storage {\n *       rpc GetAcl(GetAclRequest) returns (Acl);\n *\n *       // Get a data record.\n *       rpc GetData(GetDataRequest) returns (Data) {\n *         option (google.api.http).get = "/v2/{resource=**}";\n *       }\n *     }\n *\n * Example of a mixin configuration:\n *\n *     apis:\n *     - name: google.storage.v2.Storage\n *       mixins:\n *       - name: google.acl.v1.AccessControl\n *\n * The mixin construct implies that all methods in `AccessControl` are\n * also declared with same name and request/response types in\n * `Storage`. A documentation generator or annotation processor will\n * see the effective `Storage.GetAcl` method after inheriting\n * documentation and annotations as follows:\n *\n *     service Storage {\n *       // Get the underlying ACL object.\n *       rpc GetAcl(GetAclRequest) returns (Acl) {\n *         option (google.api.http).get = "/v2/{resource=**}:getAcl";\n *       }\n *       ...\n *     }\n *\n * Note how the version in the path pattern changed from `v1` to `v2`.\n *\n * If the `root` field in the mixin is specified\x2C it should be a\n * relative path under which inherited HTTP paths are placed. Example:\n *\n *     apis:\n *     - name: google.storage.v2.Storage\n *       mixins:\n *       - name: google.acl.v1.AccessControl\n *         root: acls\n *\n * This implies the following inherited HTTP annotation:\n *\n *     service Storage {\n *       // Get the underlying ACL object.\n *       rpc GetAcl(GetAclRequest) returns (Acl) {\n *         option (google.api.http).get = "/v2/acls/{resource=**}:getAcl";\n *       }\n *       ...\n *     }\n *\n * @generated from message google.protobuf.Mixin\n */\nexport class Mixin extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The fully qualified name of the interface which is included.\n         *\n         * @generated from field: string name = 1;\n         */\n        this.name = "";\n        /**\n         * If non-empty specifies a path under which inherited HTTP paths\n         * are rooted.\n         *\n         * @generated from field: string root = 2;\n         */\n        this.root = "";\n        proto3.util.initPartial(data\x2C this);\n    }\n    static fromBinary(bytes\x2C options) {\n        return new Mixin().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new Mixin().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new Mixin().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto3.util.equals(Mixin\x2C a\x2C b);\n    }\n}\nMixin.runtime = proto3;\nMixin.typeName = "google.protobuf.Mixin";\nMixin.fields = proto3.util.newFieldList(() => [\n    { no: 1\x2C name: "name"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */ }\x2C\n    { no: 2\x2C name: "root"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */ }\x2C\n]);\n
code-source-info,0xf2c007ad038,482,0,11423,C10O0C28O0C48O0C59O1437C108O1419C111O4284C115O4298C120O4296C124O4306C130O4319C134O4344C138O4357C144O4364C149O4369C159O4369C164O4355C175O5063C224O5042C227O6826C231O6843C236O6841C240O6851C246O6867C250O6895C254O6911C260O6918C265O6923C275O6923C280O6909C291O10257C340O10237C343O11155C347O11171C352O11169C356O11179C362O11194C366O11221C370O11236C376O11243C381O11248C391O11248C397O11234C406O11423,,
tick,0x104d65ed8,93791,1,0x104a6bc1c,2,0x0,0x109d0ba34,0x109cf3688,0x105405ef4
code-creation,Script,10,93958,0xf2c007b8228,3671, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/google/protobuf/descriptor_pb.js:1:1,0xf2c007afb88,~
script-source,483,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/google/protobuf/descriptor_pb.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from "../../message.js";\nimport { proto2 } from "../../proto2.js";\n/**\n * The protocol compiler can output a FileDescriptorSet containing the .proto\n * files it parses.\n *\n * @generated from message google.protobuf.FileDescriptorSet\n */\nexport class FileDescriptorSet extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated google.protobuf.FileDescriptorProto file = 1;\n         */\n        this.file = [];\n        proto2.util.initPartial(data\x2C this);\n    }\n    static fromBinary(bytes\x2C options) {\n        return new FileDescriptorSet().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new FileDescriptorSet().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new FileDescriptorSet().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto2.util.equals(FileDescriptorSet\x2C a\x2C b);\n    }\n}\nFileDescriptorSet.runtime = proto2;\nFileDescriptorSet.typeName = "google.protobuf.FileDescriptorSet";\nFileDescriptorSet.fields = proto2.util.newFieldList(() => [\n    { no: 1\x2C name: "file"\x2C kind: "message"\x2C T: FileDescriptorProto\x2C repeated: true }\x2C\n]);\n/**\n * Describes a complete .proto file.\n *\n * @generated from message google.protobuf.FileDescriptorProto\n */\nexport class FileDescriptorProto extends Message {\n    constructor(data) {\n        super();\n        /**\n         * Names of files imported by this file.\n         *\n         * @generated from field: repeated string dependency = 3;\n         */\n        this.dependency = [];\n        /**\n         * Indexes of the public imported files in the dependency list above.\n         *\n         * @generated from field: repeated int32 public_dependency = 10;\n         */\n        this.publicDependency = [];\n        /**\n         * Indexes of the weak imported files in the dependency list.\n         * For Google-internal migration only. Do not use.\n         *\n         * @generated from field: repeated int32 weak_dependency = 11;\n         */\n        this.weakDependency = [];\n        /**\n         * All top-level definitions in this file.\n         *\n         * @generated from field: repeated google.protobuf.DescriptorProto message_type = 4;\n         */\n        this.messageType = [];\n        /**\n         * @generated from field: repeated google.protobuf.EnumDescriptorProto enum_type = 5;\n         */\n        this.enumType = [];\n        /**\n         * @generated from field: repeated google.protobuf.ServiceDescriptorProto service = 6;\n         */\n        this.service = [];\n        /**\n         * @generated from field: repeated google.protobuf.FieldDescriptorProto extension = 7;\n         */\n        this.extension = [];\n        proto2.util.initPartial(data\x2C this);\n    }\n    static fromBinary(bytes\x2C options) {\n        return new FileDescriptorProto().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new FileDescriptorProto().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new FileDescriptorProto().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto2.util.equals(FileDescriptorProto\x2C a\x2C b);\n    }\n}\nFileDescriptorProto.runtime = proto2;\nFileDescriptorProto.typeName = "google.protobuf.FileDescriptorProto";\nFileDescriptorProto.fields = proto2.util.newFieldList(() => [\n    { no: 1\x2C name: "name"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C opt: true }\x2C\n    { no: 2\x2C name: "package"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C opt: true }\x2C\n    { no: 3\x2C name: "dependency"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C repeated: true }\x2C\n    { no: 10\x2C name: "public_dependency"\x2C kind: "scalar"\x2C T: 5 /* ScalarType.INT32 */\x2C repeated: true }\x2C\n    { no: 11\x2C name: "weak_dependency"\x2C kind: "scalar"\x2C T: 5 /* ScalarType.INT32 */\x2C repeated: true }\x2C\n    { no: 4\x2C name: "message_type"\x2C kind: "message"\x2C T: DescriptorProto\x2C repeated: true }\x2C\n    { no: 5\x2C name: "enum_type"\x2C kind: "message"\x2C T: EnumDescriptorProto\x2C repeated: true }\x2C\n    { no: 6\x2C name: "service"\x2C kind: "message"\x2C T: ServiceDescriptorProto\x2C repeated: true }\x2C\n    { no: 7\x2C name: "extension"\x2C kind: "message"\x2C T: FieldDescriptorProto\x2C repeated: true }\x2C\n    { no: 8\x2C name: "options"\x2C kind: "message"\x2C T: FileOptions\x2C opt: true }\x2C\n    { no: 9\x2C name: "source_code_info"\x2C kind: "message"\x2C T: SourceCodeInfo\x2C opt: true }\x2C\n    { no: 12\x2C name: "syntax"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C opt: true }\x2C\n]);\n/**\n * Describes a message type.\n *\n * @generated from message google.protobuf.DescriptorProto\n */\nexport class DescriptorProto extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated google.protobuf.FieldDescriptorProto field = 2;\n         */\n        this.field = [];\n        /**\n         * @generated from field: repeated google.protobuf.FieldDescriptorProto extension = 6;\n         */\n        this.extension = [];\n        /**\n         * @generated from field: repeated google.protobuf.DescriptorProto nested_type = 3;\n         */\n        this.nestedType = [];\n        /**\n         * @generated from field: repeated google.protobuf.EnumDescriptorProto enum_type = 4;\n         */\n        this.enumType = [];\n        /**\n         * @generated from field: repeated google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;\n         */\n        this.extensionRange = [];\n        /**\n         * @generated from field: repeated google.protobuf.OneofDescriptorProto oneof_decl = 8;\n         */\n        this.oneofDecl = [];\n        /**\n         * @generated from field: repeated google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;\n         */\n        this.reservedRange = [];\n        /**\n         * Reserved field names\x2C which may not be used by fields in the same message.\n         * A given name may only be reserved once.\n         *\n         * @generated from field: repeated string reserved_name = 10;\n         */\n        this.reservedName = [];\n        proto2.util.initPartial(data\x2C this);\n    }\n    static fromBinary(bytes\x2C options) {\n        return new DescriptorProto().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new DescriptorProto().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new DescriptorProto().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto2.util.equals(DescriptorProto\x2C a\x2C b);\n    }\n}\nDescriptorProto.runtime = proto2;\nDescriptorProto.typeName = "google.protobuf.DescriptorProto";\nDescriptorProto.fields = proto2.util.newFieldList(() => [\n    { no: 1\x2C name: "name"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C opt: true }\x2C\n    { no: 2\x2C name: "field"\x2C kind: "message"\x2C T: FieldDescriptorProto\x2C repeated: true }\x2C\n    { no: 6\x2C name: "extension"\x2C kind: "message"\x2C T: FieldDescriptorProto\x2C repeated: true }\x2C\n    { no: 3\x2C name: "nested_type"\x2C kind: "message"\x2C T: DescriptorProto\x2C repeated: true }\x2C\n    { no: 4\x2C name: "enum_type"\x2C kind: "message"\x2C T: EnumDescriptorProto\x2C repeated: true }\x2C\n    { no: 5\x2C name: "extension_range"\x2C kind: "message"\x2C T: DescriptorProto_ExtensionRange\x2C repeated: true }\x2C\n    { no: 8\x2C name: "oneof_decl"\x2C kind: "message"\x2C T: OneofDescriptorProto\x2C repeated: true }\x2C\n    { no: 7\x2C name: "options"\x2C kind: "message"\x2C T: MessageOptions\x2C opt: true }\x2C\n    { no: 9\x2C name: "reserved_range"\x2C kind: "message"\x2C T: DescriptorProto_ReservedRange\x2C repeated: true }\x2C\n    { no: 10\x2C name: "reserved_name"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C repeated: true }\x2C\n]);\n/**\n * @generated from message google.protobuf.DescriptorProto.ExtensionRange\n */\nexport class DescriptorProto_ExtensionRange extends Message {\n    constructor(data) {\n        super();\n        proto2.util.initPartial(data\x2C this);\n    }\n    static fromBinary(bytes\x2C options) {\n        return new DescriptorProto_ExtensionRange().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new DescriptorProto_ExtensionRange().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new DescriptorProto_ExtensionRange().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto2.util.equals(DescriptorProto_ExtensionRange\x2C a\x2C b);\n    }\n}\nDescriptorProto_ExtensionRange.runtime = proto2;\nDescriptorProto_ExtensionRange.typeName = "google.protobuf.DescriptorProto.ExtensionRange";\nDescriptorProto_ExtensionRange.fields = proto2.util.newFieldList(() => [\n    { no: 1\x2C name: "start"\x2C kind: "scalar"\x2C T: 5 /* ScalarType.INT32 */\x2C opt: true }\x2C\n    { no: 2\x2C name: "end"\x2C kind: "scalar"\x2C T: 5 /* ScalarType.INT32 */\x2C opt: true }\x2C\n    { no: 3\x2C name: "options"\x2C kind: "message"\x2C T: ExtensionRangeOptions\x2C opt: true }\x2C\n]);\n/**\n * Range of reserved tag numbers. Reserved tag numbers may not be used by\n * fields or extension ranges in the same message. Reserved ranges may\n * not overlap.\n *\n * @generated from message google.protobuf.DescriptorProto.ReservedRange\n */\nexport class DescriptorProto_ReservedRange extends Message {\n    constructor(data) {\n        super();\n        proto2.util.initPartial(data\x2C this);\n    }\n    static fromBinary(bytes\x2C options) {\n        return new DescriptorProto_ReservedRange().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new DescriptorProto_ReservedRange().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new DescriptorProto_ReservedRange().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto2.util.equals(DescriptorProto_ReservedRange\x2C a\x2C b);\n    }\n}\nDescriptorProto_ReservedRange.runtime = proto2;\nDescriptorProto_ReservedRange.typeName = "google.protobuf.DescriptorProto.ReservedRange";\nDescriptorProto_ReservedRange.fields = proto2.util.newFieldList(() => [\n    { no: 1\x2C name: "start"\x2C kind: "scalar"\x2C T: 5 /* ScalarType.INT32 */\x2C opt: true }\x2C\n    { no: 2\x2C name: "end"\x2C kind: "scalar"\x2C T: 5 /* ScalarType.INT32 */\x2C opt: true }\x2C\n]);\n/**\n * @generated from message google.protobuf.ExtensionRangeOptions\n */\nexport class ExtensionRangeOptions extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The parser stores options it doesn't recognize here. See above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */\n        this.uninterpretedOption = [];\n        proto2.util.initPartial(data\x2C this);\n    }\n    static fromBinary(bytes\x2C options) {\n        return new ExtensionRangeOptions().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new ExtensionRangeOptions().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new ExtensionRangeOptions().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto2.util.equals(ExtensionRangeOptions\x2C a\x2C b);\n    }\n}\nExtensionRangeOptions.runtime = proto2;\nExtensionRangeOptions.typeName = "google.protobuf.ExtensionRangeOptions";\nExtensionRangeOptions.fields = proto2.util.newFieldList(() => [\n    { no: 999\x2C name: "uninterpreted_option"\x2C kind: "message"\x2C T: UninterpretedOption\x2C repeated: true }\x2C\n]);\n/**\n * Describes a field within a message.\n *\n * @generated from message google.protobuf.FieldDescriptorProto\n */\nexport class FieldDescriptorProto extends Message {\n    constructor(data) {\n        super();\n        proto2.util.initPartial(data\x2C this);\n    }\n    static fromBinary(bytes\x2C options) {\n        return new FieldDescriptorProto().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new FieldDescriptorProto().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new FieldDescriptorProto().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto2.util.equals(FieldDescriptorProto\x2C a\x2C b);\n    }\n}\nFieldDescriptorProto.runtime = proto2;\nFieldDescriptorProto.typeName = "google.protobuf.FieldDescriptorProto";\nFieldDescriptorProto.fields = proto2.util.newFieldList(() => [\n    { no: 1\x2C name: "name"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C opt: true }\x2C\n    { no: 3\x2C name: "number"\x2C kind: "scalar"\x2C T: 5 /* ScalarType.INT32 */\x2C opt: true }\x2C\n    { no: 4\x2C name: "label"\x2C kind: "enum"\x2C T: proto2.getEnumType(FieldDescriptorProto_Label)\x2C opt: true }\x2C\n    { no: 5\x2C name: "type"\x2C kind: "enum"\x2C T: proto2.getEnumType(FieldDescriptorProto_Type)\x2C opt: true }\x2C\n    { no: 6\x2C name: "type_name"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C opt: true }\x2C\n    { no: 2\x2C name: "extendee"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C opt: true }\x2C\n    { no: 7\x2C name: "default_value"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C opt: true }\x2C\n    { no: 9\x2C name: "oneof_index"\x2C kind: "scalar"\x2C T: 5 /* ScalarType.INT32 */\x2C opt: true }\x2C\n    { no: 10\x2C name: "json_name"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C opt: true }\x2C\n    { no: 8\x2C name: "options"\x2C kind: "message"\x2C T: FieldOptions\x2C opt: true }\x2C\n    { no: 17\x2C name: "proto3_optional"\x2C kind: "scalar"\x2C T: 8 /* ScalarType.BOOL */\x2C opt: true }\x2C\n]);\n/**\n * @generated from enum google.protobuf.FieldDescriptorProto.Type\n */\nexport var FieldDescriptorProto_Type;\n(function (FieldDescriptorProto_Type) {\n    /**\n     * 0 is reserved for errors.\n     * Order is weird for historical reasons.\n     *\n     * @generated from enum value: TYPE_DOUBLE = 1;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type["DOUBLE"] = 1] = "DOUBLE";\n    /**\n     * @generated from enum value: TYPE_FLOAT = 2;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type["FLOAT"] = 2] = "FLOAT";\n    /**\n     * Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n     * negative values are likely.\n     *\n     * @generated from enum value: TYPE_INT64 = 3;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type["INT64"] = 3] = "INT64";\n    /**\n     * @generated from enum value: TYPE_UINT64 = 4;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type["UINT64"] = 4] = "UINT64";\n    /**\n     * Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n     * negative values are likely.\n     *\n     * @generated from enum value: TYPE_INT32 = 5;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type["INT32"] = 5] = "INT32";\n    /**\n     * @generated from enum value: TYPE_FIXED64 = 6;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type["FIXED64"] = 6] = "FIXED64";\n    /**\n     * @generated from enum value: TYPE_FIXED32 = 7;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type["FIXED32"] = 7] = "FIXED32";\n    /**\n     * @generated from enum value: TYPE_BOOL = 8;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type["BOOL"] = 8] = "BOOL";\n    /**\n     * @generated from enum value: TYPE_STRING = 9;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type["STRING"] = 9] = "STRING";\n    /**\n     * Tag-delimited aggregate.\n     * Group type is deprecated and not supported in proto3. However\x2C Proto3\n     * implementations should still be able to parse the group wire format and\n     * treat group fields as unknown fields.\n     *\n     * @generated from enum value: TYPE_GROUP = 10;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type["GROUP"] = 10] = "GROUP";\n    /**\n     * Length-delimited aggregate.\n     *\n     * @generated from enum value: TYPE_MESSAGE = 11;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type["MESSAGE"] = 11] = "MESSAGE";\n    /**\n     * New in version 2.\n     *\n     * @generated from enum value: TYPE_BYTES = 12;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type["BYTES"] = 12] = "BYTES";\n    /**\n     * @generated from enum value: TYPE_UINT32 = 13;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type["UINT32"] = 13] = "UINT32";\n    /**\n     * @generated from enum value: TYPE_ENUM = 14;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type["ENUM"] = 14] = "ENUM";\n    /**\n     * @generated from enum value: TYPE_SFIXED32 = 15;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type["SFIXED32"] = 15] = "SFIXED32";\n    /**\n     * @generated from enum value: TYPE_SFIXED64 = 16;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type["SFIXED64"] = 16] = "SFIXED64";\n    /**\n     * Uses ZigZag encoding.\n     *\n     * @generated from enum value: TYPE_SINT32 = 17;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type["SINT32"] = 17] = "SINT32";\n    /**\n     * Uses ZigZag encoding.\n     *\n     * @generated from enum value: TYPE_SINT64 = 18;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type["SINT64"] = 18] = "SINT64";\n})(FieldDescriptorProto_Type || (FieldDescriptorProto_Type = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FieldDescriptorProto_Type)\nproto2.util.setEnumType(FieldDescriptorProto_Type\x2C "google.protobuf.FieldDescriptorProto.Type"\x2C [\n    { no: 1\x2C name: "TYPE_DOUBLE" }\x2C\n    { no: 2\x2C name: "TYPE_FLOAT" }\x2C\n    { no: 3\x2C name: "TYPE_INT64" }\x2C\n    { no: 4\x2C name: "TYPE_UINT64" }\x2C\n    { no: 5\x2C name: "TYPE_INT32" }\x2C\n    { no: 6\x2C name: "TYPE_FIXED64" }\x2C\n    { no: 7\x2C name: "TYPE_FIXED32" }\x2C\n    { no: 8\x2C name: "TYPE_BOOL" }\x2C\n    { no: 9\x2C name: "TYPE_STRING" }\x2C\n    { no: 10\x2C name: "TYPE_GROUP" }\x2C\n    { no: 11\x2C name: "TYPE_MESSAGE" }\x2C\n    { no: 12\x2C name: "TYPE_BYTES" }\x2C\n    { no: 13\x2C name: "TYPE_UINT32" }\x2C\n    { no: 14\x2C name: "TYPE_ENUM" }\x2C\n    { no: 15\x2C name: "TYPE_SFIXED32" }\x2C\n    { no: 16\x2C name: "TYPE_SFIXED64" }\x2C\n    { no: 17\x2C name: "TYPE_SINT32" }\x2C\n    { no: 18\x2C name: "TYPE_SINT64" }\x2C\n]);\n/**\n * @generated from enum google.protobuf.FieldDescriptorProto.Label\n */\nexport var FieldDescriptorProto_Label;\n(function (FieldDescriptorProto_Label) {\n    /**\n     * 0 is reserved for errors\n     *\n     * @generated from enum value: LABEL_OPTIONAL = 1;\n     */\n    FieldDescriptorProto_Label[FieldDescriptorProto_Label["OPTIONAL"] = 1] = "OPTIONAL";\n    /**\n     * @generated from enum value: LABEL_REQUIRED = 2;\n     */\n    FieldDescriptorProto_Label[FieldDescriptorProto_Label["REQUIRED"] = 2] = "REQUIRED";\n    /**\n     * @generated from enum value: LABEL_REPEATED = 3;\n     */\n    FieldDescriptorProto_Label[FieldDescriptorProto_Label["REPEATED"] = 3] = "REPEATED";\n})(FieldDescriptorProto_Label || (FieldDescriptorProto_Label = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FieldDescriptorProto_Label)\nproto2.util.setEnumType(FieldDescriptorProto_Label\x2C "google.protobuf.FieldDescriptorProto.Label"\x2C [\n    { no: 1\x2C name: "LABEL_OPTIONAL" }\x2C\n    { no: 2\x2C name: "LABEL_REQUIRED" }\x2C\n    { no: 3\x2C name: "LABEL_REPEATED" }\x2C\n]);\n/**\n * Describes a oneof.\n *\n * @generated from message google.protobuf.OneofDescriptorProto\n */\nexport class OneofDescriptorProto extends Message {\n    constructor(data) {\n        super();\n        proto2.util.initPartial(data\x2C this);\n    }\n    static fromBinary(bytes\x2C options) {\n        return new OneofDescriptorProto().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new OneofDescriptorProto().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new OneofDescriptorProto().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto2.util.equals(OneofDescriptorProto\x2C a\x2C b);\n    }\n}\nOneofDescriptorProto.runtime = proto2;\nOneofDescriptorProto.typeName = "google.protobuf.OneofDescriptorProto";\nOneofDescriptorProto.fields = proto2.util.newFieldList(() => [\n    { no: 1\x2C name: "name"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C opt: true }\x2C\n    { no: 2\x2C name: "options"\x2C kind: "message"\x2C T: OneofOptions\x2C opt: true }\x2C\n]);\n/**\n * Describes an enum type.\n *\n * @generated from message google.protobuf.EnumDescriptorProto\n */\nexport class EnumDescriptorProto extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated google.protobuf.EnumValueDescriptorProto value = 2;\n         */\n        this.value = [];\n        /**\n         * Range of reserved numeric values. Reserved numeric values may not be used\n         * by enum values in the same enum declaration. Reserved ranges may not\n         * overlap.\n         *\n         * @generated from field: repeated google.protobuf.EnumDescriptorProto.EnumReservedRange reserved_range = 4;\n         */\n        this.reservedRange = [];\n        /**\n         * Reserved enum value names\x2C which may not be reused. A given name may only\n         * be reserved once.\n         *\n         * @generated from field: repeated string reserved_name = 5;\n         */\n        this.reservedName = [];\n        proto2.util.initPartial(data\x2C this);\n    }\n    static fromBinary(bytes\x2C options) {\n        return new EnumDescriptorProto().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new EnumDescriptorProto().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new EnumDescriptorProto().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto2.util.equals(EnumDescriptorProto\x2C a\x2C b);\n    }\n}\nEnumDescriptorProto.runtime = proto2;\nEnumDescriptorProto.typeName = "google.protobuf.EnumDescriptorProto";\nEnumDescriptorProto.fields = proto2.util.newFieldList(() => [\n    { no: 1\x2C name: "name"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C opt: true }\x2C\n    { no: 2\x2C name: "value"\x2C kind: "message"\x2C T: EnumValueDescriptorProto\x2C repeated: true }\x2C\n    { no: 3\x2C name: "options"\x2C kind: "message"\x2C T: EnumOptions\x2C opt: true }\x2C\n    { no: 4\x2C name: "reserved_range"\x2C kind: "message"\x2C T: EnumDescriptorProto_EnumReservedRange\x2C repeated: true }\x2C\n    { no: 5\x2C name: "reserved_name"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C repeated: true }\x2C\n]);\n/**\n * Range of reserved numeric values. Reserved values may not be used by\n * entries in the same enum. Reserved ranges may not overlap.\n *\n * Note that this is distinct from DescriptorProto.ReservedRange in that it\n * is inclusive such that it can appropriately represent the entire int32\n * domain.\n *\n * @generated from message google.protobuf.EnumDescriptorProto.EnumReservedRange\n */\nexport class EnumDescriptorProto_EnumReservedRange extends Message {\n    constructor(data) {\n        super();\n        proto2.util.initPartial(data\x2C this);\n    }\n    static fromBinary(bytes\x2C options) {\n        return new EnumDescriptorProto_EnumReservedRange().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new EnumDescriptorProto_EnumReservedRange().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new EnumDescriptorProto_EnumReservedRange().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto2.util.equals(EnumDescriptorProto_EnumReservedRange\x2C a\x2C b);\n    }\n}\nEnumDescriptorProto_EnumReservedRange.runtime = proto2;\nEnumDescriptorProto_EnumReservedRange.typeName = "google.protobuf.EnumDescriptorProto.EnumReservedRange";\nEnumDescriptorProto_EnumReservedRange.fields = proto2.util.newFieldList(() => [\n    { no: 1\x2C name: "start"\x2C kind: "scalar"\x2C T: 5 /* ScalarType.INT32 */\x2C opt: true }\x2C\n    { no: 2\x2C name: "end"\x2C kind: "scalar"\x2C T: 5 /* ScalarType.INT32 */\x2C opt: true }\x2C\n]);\n/**\n * Describes a value within an enum.\n *\n * @generated from message google.protobuf.EnumValueDescriptorProto\n */\nexport class EnumValueDescriptorProto extends Message {\n    constructor(data) {\n        super();\n        proto2.util.initPartial(data\x2C this);\n    }\n    static fromBinary(bytes\x2C options) {\n        return new EnumValueDescriptorProto().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new EnumValueDescriptorProto().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new EnumValueDescriptorProto().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto2.util.equals(EnumValueDescriptorProto\x2C a\x2C b);\n    }\n}\nEnumValueDescriptorProto.runtime = proto2;\nEnumValueDescriptorProto.typeName = "google.protobuf.EnumValueDescriptorProto";\nEnumValueDescriptorProto.fields = proto2.util.newFieldList(() => [\n    { no: 1\x2C name: "name"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C opt: true }\x2C\n    { no: 2\x2C name: "number"\x2C kind: "scalar"\x2C T: 5 /* ScalarType.INT32 */\x2C opt: true }\x2C\n    { no: 3\x2C name: "options"\x2C kind: "message"\x2C T: EnumValueOptions\x2C opt: true }\x2C\n]);\n/**\n * Describes a service.\n *\n * @generated from message google.protobuf.ServiceDescriptorProto\n */\nexport class ServiceDescriptorProto extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated google.protobuf.MethodDescriptorProto method = 2;\n         */\n        this.method = [];\n        proto2.util.initPartial(data\x2C this);\n    }\n    static fromBinary(bytes\x2C options) {\n        return new ServiceDescriptorProto().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new ServiceDescriptorProto().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new ServiceDescriptorProto().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto2.util.equals(ServiceDescriptorProto\x2C a\x2C b);\n    }\n}\nServiceDescriptorProto.runtime = proto2;\nServiceDescriptorProto.typeName = "google.protobuf.ServiceDescriptorProto";\nServiceDescriptorProto.fields = proto2.util.newFieldList(() => [\n    { no: 1\x2C name: "name"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C opt: true }\x2C\n    { no: 2\x2C name: "method"\x2C kind: "message"\x2C T: MethodDescriptorProto\x2C repeated: true }\x2C\n    { no: 3\x2C name: "options"\x2C kind: "message"\x2C T: ServiceOptions\x2C opt: true }\x2C\n]);\n/**\n * Describes a method of a service.\n *\n * @generated from message google.protobuf.MethodDescriptorProto\n */\nexport class MethodDescriptorProto extends Message {\n    constructor(data) {\n        super();\n        proto2.util.initPartial(data\x2C this);\n    }\n    static fromBinary(bytes\x2C options) {\n        return new MethodDescriptorProto().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new MethodDescriptorProto().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new MethodDescriptorProto().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto2.util.equals(MethodDescriptorProto\x2C a\x2C b);\n    }\n}\nMethodDescriptorProto.runtime = proto2;\nMethodDescriptorProto.typeName = "google.protobuf.MethodDescriptorProto";\nMethodDescriptorProto.fields = proto2.util.newFieldList(() => [\n    { no: 1\x2C name: "name"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C opt: true }\x2C\n    { no: 2\x2C name: "input_type"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C opt: true }\x2C\n    { no: 3\x2C name: "output_type"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C opt: true }\x2C\n    { no: 4\x2C name: "options"\x2C kind: "message"\x2C T: MethodOptions\x2C opt: true }\x2C\n    { no: 5\x2C name: "client_streaming"\x2C kind: "scalar"\x2C T: 8 /* ScalarType.BOOL */\x2C opt: true\x2C default: false }\x2C\n    { no: 6\x2C name: "server_streaming"\x2C kind: "scalar"\x2C T: 8 /* ScalarType.BOOL */\x2C opt: true\x2C default: false }\x2C\n]);\n/**\n * @generated from message google.protobuf.FileOptions\n */\nexport class FileOptions extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The parser stores options it doesn't recognize here.\n         * See the documentation for the "Options" section above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */\n        this.uninterpretedOption = [];\n        proto2.util.initPartial(data\x2C this);\n    }\n    static fromBinary(bytes\x2C options) {\n        return new FileOptions().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new FileOptions().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new FileOptions().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto2.util.equals(FileOptions\x2C a\x2C b);\n    }\n}\nFileOptions.runtime = proto2;\nFileOptions.typeName = "google.protobuf.FileOptions";\nFileOptions.fields = proto2.util.newFieldList(() => [\n    { no: 1\x2C name: "java_package"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C opt: true }\x2C\n    { no: 8\x2C name: "java_outer_classname"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C opt: true }\x2C\n    { no: 10\x2C name: "java_multiple_files"\x2C kind: "scalar"\x2C T: 8 /* ScalarType.BOOL */\x2C opt: true\x2C default: false }\x2C\n    { no: 20\x2C name: "java_generate_equals_and_hash"\x2C kind: "scalar"\x2C T: 8 /* ScalarType.BOOL */\x2C opt: true }\x2C\n    { no: 27\x2C name: "java_string_check_utf8"\x2C kind: "scalar"\x2C T: 8 /* ScalarType.BOOL */\x2C opt: true\x2C default: false }\x2C\n    { no: 9\x2C name: "optimize_for"\x2C kind: "enum"\x2C T: proto2.getEnumType(FileOptions_OptimizeMode)\x2C opt: true\x2C default: FileOptions_OptimizeMode.SPEED }\x2C\n    { no: 11\x2C name: "go_package"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C opt: true }\x2C\n    { no: 16\x2C name: "cc_generic_services"\x2C kind: "scalar"\x2C T: 8 /* ScalarType.BOOL */\x2C opt: true\x2C default: false }\x2C\n    { no: 17\x2C name: "java_generic_services"\x2C kind: "scalar"\x2C T: 8 /* ScalarType.BOOL */\x2C opt: true\x2C default: false }\x2C\n    { no: 18\x2C name: "py_generic_services"\x2C kind: "scalar"\x2C T: 8 /* ScalarType.BOOL */\x2C opt: true\x2C default: false }\x2C\n    { no: 42\x2C name: "php_generic_services"\x2C kind: "scalar"\x2C T: 8 /* ScalarType.BOOL */\x2C opt: true\x2C default: false }\x2C\n    { no: 23\x2C name: "deprecated"\x2C kind: "scalar"\x2C T: 8 /* ScalarType.BOOL */\x2C opt: true\x2C default: false }\x2C\n    { no: 31\x2C name: "cc_enable_arenas"\x2C kind: "scalar"\x2C T: 8 /* ScalarType.BOOL */\x2C opt: true\x2C default: true }\x2C\n    { no: 36\x2C name: "objc_class_prefix"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C opt: true }\x2C\n    { no: 37\x2C name: "csharp_namespace"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C opt: true }\x2C\n    { no: 39\x2C name: "swift_prefix"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C opt: true }\x2C\n    { no: 40\x2C name: "php_class_prefix"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C opt: true }\x2C\n    { no: 41\x2C name: "php_namespace"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C opt: true }\x2C\n    { no: 44\x2C name: "php_metadata_namespace"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C opt: true }\x2C\n    { no: 45\x2C name: "ruby_package"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C opt: true }\x2C\n    { no: 999\x2C name: "uninterpreted_option"\x2C kind: "message"\x2C T: UninterpretedOption\x2C repeated: true }\x2C\n]);\n/**\n * Generated classes can be optimized for speed or code size.\n *\n * @generated from enum google.protobuf.FileOptions.OptimizeMode\n */\nexport var FileOptions_OptimizeMode;\n(function (FileOptions_OptimizeMode) {\n    /**\n     * Generate complete code for parsing\x2C serialization\x2C\n     *\n     * @generated from enum value: SPEED = 1;\n     */\n    FileOptions_OptimizeMode[FileOptions_OptimizeMode["SPEED"] = 1] = "SPEED";\n    /**\n     * etc.\n     *\n     * Use ReflectionOps to implement these methods.\n     *\n     * @generated from enum value: CODE_SIZE = 2;\n     */\n    FileOptions_OptimizeMode[FileOptions_OptimizeMode["CODE_SIZE"] = 2] = "CODE_SIZE";\n    /**\n     * Generate code using MessageLite and the lite runtime.\n     *\n     * @generated from enum value: LITE_RUNTIME = 3;\n     */\n    FileOptions_OptimizeMode[FileOptions_OptimizeMode["LITE_RUNTIME"] = 3] = "LITE_RUNTIME";\n})(FileOptions_OptimizeMode || (FileOptions_OptimizeMode = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FileOptions_OptimizeMode)\nproto2.util.setEnumType(FileOptions_OptimizeMode\x2C "google.protobuf.FileOptions.OptimizeMode"\x2C [\n    { no: 1\x2C name: "SPEED" }\x2C\n    { no: 2\x2C name: "CODE_SIZE" }\x2C\n    { no: 3\x2C name: "LITE_RUNTIME" }\x2C\n]);\n/**\n * @generated from message google.protobuf.MessageOptions\n */\nexport class MessageOptions extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The parser stores options it doesn't recognize here. See above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */\n        this.uninterpretedOption = [];\n        proto2.util.initPartial(data\x2C this);\n    }\n    static fromBinary(bytes\x2C options) {\n        return new MessageOptions().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new MessageOptions().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new MessageOptions().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto2.util.equals(MessageOptions\x2C a\x2C b);\n    }\n}\nMessageOptions.runtime = proto2;\nMessageOptions.typeName = "google.protobuf.MessageOptions";\nMessageOptions.fields = proto2.util.newFieldList(() => [\n    { no: 1\x2C name: "message_set_wire_format"\x2C kind: "scalar"\x2C T: 8 /* ScalarType.BOOL */\x2C opt: true\x2C default: false }\x2C\n    { no: 2\x2C name: "no_standard_descriptor_accessor"\x2C kind: "scalar"\x2C T: 8 /* ScalarType.BOOL */\x2C opt: true\x2C default: false }\x2C\n    { no: 3\x2C name: "deprecated"\x2C kind: "scalar"\x2C T: 8 /* ScalarType.BOOL */\x2C opt: true\x2C default: false }\x2C\n    { no: 7\x2C name: "map_entry"\x2C kind: "scalar"\x2C T: 8 /* ScalarType.BOOL */\x2C opt: true }\x2C\n    { no: 999\x2C name: "uninterpreted_option"\x2C kind: "message"\x2C T: UninterpretedOption\x2C repeated: true }\x2C\n]);\n/**\n * @generated from message google.protobuf.FieldOptions\n */\nexport class FieldOptions extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The parser stores options it doesn't recognize here. See above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */\n        this.uninterpretedOption = [];\n        proto2.util.initPartial(data\x2C this);\n    }\n    static fromBinary(bytes\x2C options) {\n        return new FieldOptions().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new FieldOptions().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new FieldOptions().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto2.util.equals(FieldOptions\x2C a\x2C b);\n    }\n}\nFieldOptions.runtime = proto2;\nFieldOptions.typeName = "google.protobuf.FieldOptions";\nFieldOptions.fields = proto2.util.newFieldList(() => [\n    { no: 1\x2C name: "ctype"\x2C kind: "enum"\x2C T: proto2.getEnumType(FieldOptions_CType)\x2C opt: true\x2C default: FieldOptions_CType.STRING }\x2C\n    { no: 2\x2C name: "packed"\x2C kind: "scalar"\x2C T: 8 /* ScalarType.BOOL */\x2C opt: true }\x2C\n    { no: 6\x2C name: "jstype"\x2C kind: "enum"\x2C T: proto2.getEnumType(FieldOptions_JSType)\x2C opt: true\x2C default: FieldOptions_JSType.JS_NORMAL }\x2C\n    { no: 5\x2C name: "lazy"\x2C kind: "scalar"\x2C T: 8 /* ScalarType.BOOL */\x2C opt: true\x2C default: false }\x2C\n    { no: 15\x2C name: "unverified_lazy"\x2C kind: "scalar"\x2C T: 8 /* ScalarType.BOOL */\x2C opt: true\x2C default: false }\x2C\n    { no: 3\x2C name: "deprecated"\x2C kind: "scalar"\x2C T: 8 /* ScalarType.BOOL */\x2C opt: true\x2C default: false }\x2C\n    { no: 10\x2C name: "weak"\x2C kind: "scalar"\x2C T: 8 /* ScalarType.BOOL */\x2C opt: true\x2C default: false }\x2C\n    { no: 999\x2C name: "uninterpreted_option"\x2C kind: "message"\x2C T: UninterpretedOption\x2C repeated: true }\x2C\n]);\n/**\n * @generated from enum google.protobuf.FieldOptions.CType\n */\nexport var FieldOptions_CType;\n(function (FieldOptions_CType) {\n    /**\n     * Default mode.\n     *\n     * @generated from enum value: STRING = 0;\n     */\n    FieldOptions_CType[FieldOptions_CType["STRING"] = 0] = "STRING";\n    /**\n     * @generated from enum value: CORD = 1;\n     */\n    FieldOptions_CType[FieldOptions_CType["CORD"] = 1] = "CORD";\n    /**\n     * @generated from enum value: STRING_PIECE = 2;\n     */\n    FieldOptions_CType[FieldOptions_CType["STRING_PIECE"] = 2] = "STRING_PIECE";\n})(FieldOptions_CType || (FieldOptions_CType = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FieldOptions_CType)\nproto2.util.setEnumType(FieldOptions_CType\x2C "google.protobuf.FieldOptions.CType"\x2C [\n    { no: 0\x2C name: "STRING" }\x2C\n    { no: 1\x2C name: "CORD" }\x2C\n    { no: 2\x2C name: "STRING_PIECE" }\x2C\n]);\n/**\n * @generated from enum google.protobuf.FieldOptions.JSType\n */\nexport var FieldOptions_JSType;\n(function (FieldOptions_JSType) {\n    /**\n     * Use the default type.\n     *\n     * @generated from enum value: JS_NORMAL = 0;\n     */\n    FieldOptions_JSType[FieldOptions_JSType["JS_NORMAL"] = 0] = "JS_NORMAL";\n    /**\n     * Use JavaScript strings.\n     *\n     * @generated from enum value: JS_STRING = 1;\n     */\n    FieldOptions_JSType[FieldOptions_JSType["JS_STRING"] = 1] = "JS_STRING";\n    /**\n     * Use JavaScript numbers.\n     *\n     * @generated from enum value: JS_NUMBER = 2;\n     */\n    FieldOptions_JSType[FieldOptions_JSType["JS_NUMBER"] = 2] = "JS_NUMBER";\n})(FieldOptions_JSType || (FieldOptions_JSType = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FieldOptions_JSType)\nproto2.util.setEnumType(FieldOptions_JSType\x2C "google.protobuf.FieldOptions.JSType"\x2C [\n    { no: 0\x2C name: "JS_NORMAL" }\x2C\n    { no: 1\x2C name: "JS_STRING" }\x2C\n    { no: 2\x2C name: "JS_NUMBER" }\x2C\n]);\n/**\n * @generated from message google.protobuf.OneofOptions\n */\nexport class OneofOptions extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The parser stores options it doesn't recognize here. See above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */\n        this.uninterpretedOption = [];\n        proto2.util.initPartial(data\x2C this);\n    }\n    static fromBinary(bytes\x2C options) {\n        return new OneofOptions().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new OneofOptions().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new OneofOptions().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto2.util.equals(OneofOptions\x2C a\x2C b);\n    }\n}\nOneofOptions.runtime = proto2;\nOneofOptions.typeName = "google.protobuf.OneofOptions";\nOneofOptions.fields = proto2.util.newFieldList(() => [\n    { no: 999\x2C name: "uninterpreted_option"\x2C kind: "message"\x2C T: UninterpretedOption\x2C repeated: true }\x2C\n]);\n/**\n * @generated from message google.protobuf.EnumOptions\n */\nexport class EnumOptions extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The parser stores options it doesn't recognize here. See above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */\n        this.uninterpretedOption = [];\n        proto2.util.initPartial(data\x2C this);\n    }\n    static fromBinary(bytes\x2C options) {\n        return new EnumOptions().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new EnumOptions().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new EnumOptions().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto2.util.equals(EnumOptions\x2C a\x2C b);\n    }\n}\nEnumOptions.runtime = proto2;\nEnumOptions.typeName = "google.protobuf.EnumOptions";\nEnumOptions.fields = proto2.util.newFieldList(() => [\n    { no: 2\x2C name: "allow_alias"\x2C kind: "scalar"\x2C T: 8 /* ScalarType.BOOL */\x2C opt: true }\x2C\n    { no: 3\x2C name: "deprecated"\x2C kind: "scalar"\x2C T: 8 /* ScalarType.BOOL */\x2C opt: true\x2C default: false }\x2C\n    { no: 999\x2C name: "uninterpreted_option"\x2C kind: "message"\x2C T: UninterpretedOption\x2C repeated: true }\x2C\n]);\n/**\n * @generated from message google.protobuf.EnumValueOptions\n */\nexport class EnumValueOptions extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The parser stores options it doesn't recognize here. See above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */\n        this.uninterpretedOption = [];\n        proto2.util.initPartial(data\x2C this);\n    }\n    static fromBinary(bytes\x2C options) {\n        return new EnumValueOptions().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new EnumValueOptions().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new EnumValueOptions().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto2.util.equals(EnumValueOptions\x2C a\x2C b);\n    }\n}\nEnumValueOptions.runtime = proto2;\nEnumValueOptions.typeName = "google.protobuf.EnumValueOptions";\nEnumValueOptions.fields = proto2.util.newFieldList(() => [\n    { no: 1\x2C name: "deprecated"\x2C kind: "scalar"\x2C T: 8 /* ScalarType.BOOL */\x2C opt: true\x2C default: false }\x2C\n    { no: 999\x2C name: "uninterpreted_option"\x2C kind: "message"\x2C T: UninterpretedOption\x2C repeated: true }\x2C\n]);\n/**\n * @generated from message google.protobuf.ServiceOptions\n */\nexport class ServiceOptions extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The parser stores options it doesn't recognize here. See above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */\n        this.uninterpretedOption = [];\n        proto2.util.initPartial(data\x2C this);\n    }\n    static fromBinary(bytes\x2C options) {\n        return new ServiceOptions().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new ServiceOptions().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new ServiceOptions().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto2.util.equals(ServiceOptions\x2C a\x2C b);\n    }\n}\nServiceOptions.runtime = proto2;\nServiceOptions.typeName = "google.protobuf.ServiceOptions";\nServiceOptions.fields = proto2.util.newFieldList(() => [\n    { no: 33\x2C name: "deprecated"\x2C kind: "scalar"\x2C T: 8 /* ScalarType.BOOL */\x2C opt: true\x2C default: false }\x2C\n    { no: 999\x2C name: "uninterpreted_option"\x2C kind: "message"\x2C T: UninterpretedOption\x2C repeated: true }\x2C\n]);\n/**\n * @generated from message google.protobuf.MethodOptions\n */\nexport class MethodOptions extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The parser stores options it doesn't recognize here. See above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */\n        this.uninterpretedOption = [];\n        proto2.util.initPartial(data\x2C this);\n    }\n    static fromBinary(bytes\x2C options) {\n        return new MethodOptions().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new MethodOptions().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new MethodOptions().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto2.util.equals(MethodOptions\x2C a\x2C b);\n    }\n}\nMethodOptions.runtime = proto2;\nMethodOptions.typeName = "google.protobuf.MethodOptions";\nMethodOptions.fields = proto2.util.newFieldList(() => [\n    { no: 33\x2C name: "deprecated"\x2C kind: "scalar"\x2C T: 8 /* ScalarType.BOOL */\x2C opt: true\x2C default: false }\x2C\n    { no: 34\x2C name: "idempotency_level"\x2C kind: "enum"\x2C T: proto2.getEnumType(MethodOptions_IdempotencyLevel)\x2C opt: true\x2C default: MethodOptions_IdempotencyLevel.IDEMPOTENCY_UNKNOWN }\x2C\n    { no: 999\x2C name: "uninterpreted_option"\x2C kind: "message"\x2C T: UninterpretedOption\x2C repeated: true }\x2C\n]);\n/**\n * Is this method side-effect-free (or safe in HTTP parlance)\x2C or idempotent\x2C\n * or neither? HTTP based RPC implementation may choose GET verb for safe\n * methods\x2C and PUT verb for idempotent methods instead of the default POST.\n *\n * @generated from enum google.protobuf.MethodOptions.IdempotencyLevel\n */\nexport var MethodOptions_IdempotencyLevel;\n(function (MethodOptions_IdempotencyLevel) {\n    /**\n     * @generated from enum value: IDEMPOTENCY_UNKNOWN = 0;\n     */\n    MethodOptions_IdempotencyLevel[MethodOptions_IdempotencyLevel["IDEMPOTENCY_UNKNOWN"] = 0] = "IDEMPOTENCY_UNKNOWN";\n    /**\n     * implies idempotent\n     *\n     * @generated from enum value: NO_SIDE_EFFECTS = 1;\n     */\n    MethodOptions_IdempotencyLevel[MethodOptions_IdempotencyLevel["NO_SIDE_EFFECTS"] = 1] = "NO_SIDE_EFFECTS";\n    /**\n     * idempotent\x2C but may have side effects\n     *\n     * @generated from enum value: IDEMPOTENT = 2;\n     */\n    MethodOptions_IdempotencyLevel[MethodOptions_IdempotencyLevel["IDEMPOTENT"] = 2] = "IDEMPOTENT";\n})(MethodOptions_IdempotencyLevel || (MethodOptions_IdempotencyLevel = {}));\n// Retrieve enum metadata with: proto2.getEnumType(MethodOptions_IdempotencyLevel)\nproto2.util.setEnumType(MethodOptions_IdempotencyLevel\x2C "google.protobuf.MethodOptions.IdempotencyLevel"\x2C [\n    { no: 0\x2C name: "IDEMPOTENCY_UNKNOWN" }\x2C\n    { no: 1\x2C name: "NO_SIDE_EFFECTS" }\x2C\n    { no: 2\x2C name: "IDEMPOTENT" }\x2C\n]);\n/**\n * A message representing a option the parser does not recognize. This only\n * appears in options protos created by the compiler::Parser class.\n * DescriptorPool resolves these when building Descriptor objects. Therefore\x2C\n * options protos in descriptor objects (e.g. returned by Descriptor::options()\x2C\n * or produced by Descriptor::CopyTo()) will never have UninterpretedOptions\n * in them.\n *\n * @generated from message google.protobuf.UninterpretedOption\n */\nexport class UninterpretedOption extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated google.protobuf.UninterpretedOption.NamePart name = 2;\n         */\n        this.name = [];\n        proto2.util.initPartial(data\x2C this);\n    }\n    static fromBinary(bytes\x2C options) {\n        return new UninterpretedOption().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new UninterpretedOption().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new UninterpretedOption().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto2.util.equals(UninterpretedOption\x2C a\x2C b);\n    }\n}\nUninterpretedOption.runtime = proto2;\nUninterpretedOption.typeName = "google.protobuf.UninterpretedOption";\nUninterpretedOption.fields = proto2.util.newFieldList(() => [\n    { no: 2\x2C name: "name"\x2C kind: "message"\x2C T: UninterpretedOption_NamePart\x2C repeated: true }\x2C\n    { no: 3\x2C name: "identifier_value"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C opt: true }\x2C\n    { no: 4\x2C name: "positive_int_value"\x2C kind: "scalar"\x2C T: 4 /* ScalarType.UINT64 */\x2C opt: true }\x2C\n    { no: 5\x2C name: "negative_int_value"\x2C kind: "scalar"\x2C T: 3 /* ScalarType.INT64 */\x2C opt: true }\x2C\n    { no: 6\x2C name: "double_value"\x2C kind: "scalar"\x2C T: 1 /* ScalarType.DOUBLE */\x2C opt: true }\x2C\n    { no: 7\x2C name: "string_value"\x2C kind: "scalar"\x2C T: 12 /* ScalarType.BYTES */\x2C opt: true }\x2C\n    { no: 8\x2C name: "aggregate_value"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C opt: true }\x2C\n]);\n/**\n * The name of the uninterpreted option.  Each string represents a segment in\n * a dot-separated name.  is_extension is true iff a segment represents an\n * extension (denoted with parentheses in options specs in .proto files).\n * E.g.\x2C{ ["foo"\x2C false]\x2C ["bar.baz"\x2C true]\x2C ["moo"\x2C false] } represents\n * "foo.(bar.baz).moo".\n *\n * @generated from message google.protobuf.UninterpretedOption.NamePart\n */\nexport class UninterpretedOption_NamePart extends Message {\n    constructor(data) {\n        super();\n        proto2.util.initPartial(data\x2C this);\n    }\n    static fromBinary(bytes\x2C options) {\n        return new UninterpretedOption_NamePart().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new UninterpretedOption_NamePart().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new UninterpretedOption_NamePart().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto2.util.equals(UninterpretedOption_NamePart\x2C a\x2C b);\n    }\n}\nUninterpretedOption_NamePart.runtime = proto2;\nUninterpretedOption_NamePart.typeName = "google.protobuf.UninterpretedOption.NamePart";\nUninterpretedOption_NamePart.fields = proto2.util.newFieldList(() => [\n    { no: 1\x2C name: "name_part"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */ }\x2C\n    { no: 2\x2C name: "is_extension"\x2C kind: "scalar"\x2C T: 8 /* ScalarType.BOOL */ }\x2C\n]);\n/**\n * Encapsulates information about the original source file from which a\n * FileDescriptorProto was generated.\n *\n * @generated from message google.protobuf.SourceCodeInfo\n */\nexport class SourceCodeInfo extends Message {\n    constructor(data) {\n        super();\n        /**\n         * A Location identifies a piece of source code in a .proto file which\n         * corresponds to a particular definition.  This information is intended\n         * to be useful to IDEs\x2C code indexers\x2C documentation generators\x2C and similar\n         * tools.\n         *\n         * For example\x2C say we have a file like:\n         *   message Foo {\n         *     optional string foo = 1;\n         *   }\n         * Let's look at just the field definition:\n         *   optional string foo = 1;\n         *   ^       ^^     ^^  ^  ^^^\n         *   a       bc     de  f  ghi\n         * We have the following locations:\n         *   span   path               represents\n         *   [a\x2Ci)  [ 4\x2C 0\x2C 2\x2C 0 ]     The whole field definition.\n         *   [a\x2Cb)  [ 4\x2C 0\x2C 2\x2C 0\x2C 4 ]  The label (optional).\n         *   [c\x2Cd)  [ 4\x2C 0\x2C 2\x2C 0\x2C 5 ]  The type (string).\n         *   [e\x2Cf)  [ 4\x2C 0\x2C 2\x2C 0\x2C 1 ]  The name (foo).\n         *   [g\x2Ch)  [ 4\x2C 0\x2C 2\x2C 0\x2C 3 ]  The number (1).\n         *\n         * Notes:\n         * - A location may refer to a repeated field itself (i.e. not to any\n         *   particular index within it).  This is used whenever a set of elements are\n         *   logically enclosed in a single code segment.  For example\x2C an entire\n         *   extend block (possibly containing multiple extension definitions) will\n         *   have an outer location whose path refers to the "extensions" repeated\n         *   field without an index.\n         * - Multiple locations may have the same path.  This happens when a single\n         *   logical declaration is spread out across multiple places.  The most\n         *   obvious example is the "extend" block again -- there may be multiple\n         *   extend blocks in the same scope\x2C each of which will have the same path.\n         * - A location's span is not always a subset of its parent's span.  For\n         *   example\x2C the "extendee" of an extension declaration appears at the\n         *   beginning of the "extend" block and is shared by all extensions within\n         *   the block.\n         * - Just because a location's span is a subset of some other location's span\n         *   does not mean that it is a descendant.  For example\x2C a "group" defines\n         *   both a type and a field in a single declaration.  Thus\x2C the locations\n         *   corresponding to the type and field and their components will overlap.\n         * - Code which tries to interpret locations should probably be designed to\n         *   ignore those that it doesn't understand\x2C as more types of locations could\n         *   be recorded in the future.\n         *\n         * @generated from field: repeated google.protobuf.SourceCodeInfo.Location location = 1;\n         */\n        this.location = [];\n        proto2.util.initPartial(data\x2C this);\n    }\n    static fromBinary(bytes\x2C options) {\n        return new SourceCodeInfo().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new SourceCodeInfo().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new SourceCodeInfo().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto2.util.equals(SourceCodeInfo\x2C a\x2C b);\n    }\n}\nSourceCodeInfo.runtime = proto2;\nSourceCodeInfo.typeName = "google.protobuf.SourceCodeInfo";\nSourceCodeInfo.fields = proto2.util.newFieldList(() => [\n    { no: 1\x2C name: "location"\x2C kind: "message"\x2C T: SourceCodeInfo_Location\x2C repeated: true }\x2C\n]);\n/**\n * @generated from message google.protobuf.SourceCodeInfo.Location\n */\nexport class SourceCodeInfo_Location extends Message {\n    constructor(data) {\n        super();\n        /**\n         * Identifies which part of the FileDescriptorProto was defined at this\n         * location.\n         *\n         * Each element is a field number or an index.  They form a path from\n         * the root FileDescriptorProto to the place where the definition occurs.\n         * For example\x2C this path:\n         *   [ 4\x2C 3\x2C 2\x2C 7\x2C 1 ]\n         * refers to:\n         *   file.message_type(3)  // 4\x2C 3\n         *       .field(7)         // 2\x2C 7\n         *       .name()           // 1\n         * This is because FileDescriptorProto.message_type has field number 4:\n         *   repeated DescriptorProto message_type = 4;\n         * and DescriptorProto.field has field number 2:\n         *   repeated FieldDescriptorProto field = 2;\n         * and FieldDescriptorProto.name has field number 1:\n         *   optional string name = 1;\n         *\n         * Thus\x2C the above path gives the location of a field name.  If we removed\n         * the last element:\n         *   [ 4\x2C 3\x2C 2\x2C 7 ]\n         * this path refers to the whole field declaration (from the beginning\n         * of the label to the terminating semicolon).\n         *\n         * @generated from field: repeated int32 path = 1 [packed = true];\n         */\n        this.path = [];\n        /**\n         * Always has exactly three or four elements: start line\x2C start column\x2C\n         * end line (optional\x2C otherwise assumed same as start line)\x2C end column.\n         * These are packed into a single field for efficiency.  Note that line\n         * and column numbers are zero-based -- typically you will want to add\n         * 1 to each before displaying to a user.\n         *\n         * @generated from field: repeated int32 span = 2 [packed = true];\n         */\n        this.span = [];\n        /**\n         * @generated from field: repeated string leading_detached_comments = 6;\n         */\n        this.leadingDetachedComments = [];\n        proto2.util.initPartial(data\x2C this);\n    }\n    static fromBinary(bytes\x2C options) {\n        return new SourceCodeInfo_Location().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new SourceCodeInfo_Location().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new SourceCodeInfo_Location().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto2.util.equals(SourceCodeInfo_Location\x2C a\x2C b);\n    }\n}\nSourceCodeInfo_Location.runtime = proto2;\nSourceCodeInfo_Location.typeName = "google.protobuf.SourceCodeInfo.Location";\nSourceCodeInfo_Location.fields = proto2.util.newFieldList(() => [\n    { no: 1\x2C name: "path"\x2C kind: "scalar"\x2C T: 5 /* ScalarType.INT32 */\x2C repeated: true\x2C packed: true }\x2C\n    { no: 2\x2C name: "span"\x2C kind: "scalar"\x2C T: 5 /* ScalarType.INT32 */\x2C repeated: true\x2C packed: true }\x2C\n    { no: 3\x2C name: "leading_comments"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C opt: true }\x2C\n    { no: 4\x2C name: "trailing_comments"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C opt: true }\x2C\n    { no: 6\x2C name: "leading_detached_comments"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C repeated: true }\x2C\n]);\n/**\n * Describes the relationship between generated code and its original source\n * file. A GeneratedCodeInfo message is associated with only one generated\n * source file\x2C but may contain references to different source .proto files.\n *\n * @generated from message google.protobuf.GeneratedCodeInfo\n */\nexport class GeneratedCodeInfo extends Message {\n    constructor(data) {\n        super();\n        /**\n         * An Annotation connects some span of text in generated code to an element\n         * of its generating .proto file.\n         *\n         * @generated from field: repeated google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;\n         */\n        this.annotation = [];\n        proto2.util.initPartial(data\x2C this);\n    }\n    static fromBinary(bytes\x2C options) {\n        return new GeneratedCodeInfo().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new GeneratedCodeInfo().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new GeneratedCodeInfo().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto2.util.equals(GeneratedCodeInfo\x2C a\x2C b);\n    }\n}\nGeneratedCodeInfo.runtime = proto2;\nGeneratedCodeInfo.typeName = "google.protobuf.GeneratedCodeInfo";\nGeneratedCodeInfo.fields = proto2.util.newFieldList(() => [\n    { no: 1\x2C name: "annotation"\x2C kind: "message"\x2C T: GeneratedCodeInfo_Annotation\x2C repeated: true }\x2C\n]);\n/**\n * @generated from message google.protobuf.GeneratedCodeInfo.Annotation\n */\nexport class GeneratedCodeInfo_Annotation extends Message {\n    constructor(data) {\n        super();\n        /**\n         * Identifies the element in the original source .proto file. This field\n         * is formatted the same as SourceCodeInfo.Location.path.\n         *\n         * @generated from field: repeated int32 path = 1 [packed = true];\n         */\n        this.path = [];\n        proto2.util.initPartial(data\x2C this);\n    }\n    static fromBinary(bytes\x2C options) {\n        return new GeneratedCodeInfo_Annotation().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new GeneratedCodeInfo_Annotation().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new GeneratedCodeInfo_Annotation().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto2.util.equals(GeneratedCodeInfo_Annotation\x2C a\x2C b);\n    }\n}\nGeneratedCodeInfo_Annotation.runtime = proto2;\nGeneratedCodeInfo_Annotation.typeName = "google.protobuf.GeneratedCodeInfo.Annotation";\nGeneratedCodeInfo_Annotation.fields = proto2.util.newFieldList(() => [\n    { no: 1\x2C name: "path"\x2C kind: "scalar"\x2C T: 5 /* ScalarType.INT32 */\x2C repeated: true\x2C packed: true }\x2C\n    { no: 2\x2C name: "source_file"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C opt: true }\x2C\n    { no: 3\x2C name: "begin"\x2C kind: "scalar"\x2C T: 5 /* ScalarType.INT32 */\x2C opt: true }\x2C\n    { no: 4\x2C name: "end"\x2C kind: "scalar"\x2C T: 5 /* ScalarType.INT32 */\x2C opt: true }\x2C\n]);\n
code-source-info,0xf2c007b
code-creation,Function,10,96291,0xf2c007b95a8,40, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/google/protobuf/descriptor_pb.js:1076:11,0xf2c007b39a8,~
code-source-info,0xf2c007b95a8,483,44905,45572,C0O45020C2O45105C8O45110C12O45244C15O45325C21O45330C25O45474C28O45550C34O45555C39O45571,,
code-creation,Function,10,96291,0xf2c007b9678,40, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/google/protobuf/descriptor_pb.js:876:11,0xf2c007b3010,~
code-source-info,0xf2c007b9678,483,37191,37757,C0O37321C2O37374C8O37379C12O37502C15O37555C21O37560C25O37683C28O37736C34O37741C39O37756,,
code-creation,Function,10,96333,0xf2c007b9748,40, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/google/protobuf/descriptor_pb.js:850:11,0xf2c007b2fd8,~
code-source-info,0xf2c007b9748,483,36313,36773,C0O36431C2O36479C8O36484C12O36561C15O36607C21O36612C25O36695C28O36749C34O36754C39O36772,,
code-creation,Function,10,96333,0xf2c007b9818,41, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/google/protobuf/descriptor_pb.js:743:11,0xf2c007b2be0,~
code-source-info,0xf2c007b9818,483,31643,32341,C0O31803C3O31862C9O31867C13O32027C16O32090C22O32095C26O32251C29O32317C35O32322C40O32340,,
code-creation,Function,10,96375,0xf2c007b98f0,41, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/google/protobuf/descriptor_pb.js:451:11,0xf2c007b1e88,~
code-source-info,0xf2c007b98f0,483,18544,19095,C0O18689C3O18755C9O18760C13O18849C16O18915C22O18920C26O19009C29O19075C35O19080C40O19094,,
code-creation,Function,10,96375,0xf2c007b9a40,236, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/google/protobuf/descriptor_pb.js:330:11,0xf2c007b1e50,~
code-source-info,0xf2c007b9a40,483,14042,17519,C0O14230C3O14292C9O14297C13O14380C16O14441C22O14446C26O14650C29O14711C35O14716C39O14799C42O14861C48O14866C52O15071C55O15132C61O15137C65O15221C68O15284C74O15289C78O15375C81O15438C87O15443C91O15526C94O15586C100O15591C104O15673C107O15735C113O15740C117O16064C120O16125C126O16131C130O16258C133O16321C139O16327C143O16444C146O16505C152O16511C156O16595C159O16657C165O16663C169O16746C172O16806C178O16812C182O16897C185O16961C191O16967C195O17056C198O17120C204O17126C208O17249C211O17311C217O17317C221O17438C224O17500C230O17506C235O17518,,
tick,0x1a4e72868,96416,1,0x104a6bc1c,3,0x0,0x109d0ba34,0x109cf3688,0x105405ef4
tick,0x105ce5ca8,96416,1,0x104a6bc1c,3,0x0,0x109d0ba34,0x109cf3688,0x105405ef4
code-creation,Script,10,96625,0xf2c007bd2c8,185, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/google/protobuf/duration_pb.js:1:1,0xf2c007bca58,~
script-source,484,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/google/protobuf/duration_pb.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from "../../message.js";\nimport { protoInt64 } from "../../proto-int64.js";\nimport { proto3 } from "../../proto3.js";\n/**\n * A Duration represents a signed\x2C fixed-length span of time represented\n * as a count of seconds and fractions of seconds at nanosecond\n * resolution. It is independent of any calendar and concepts like "day"\n * or "month". It is related to Timestamp in that the difference between\n * two Timestamp values is a Duration and it can be added or subtracted\n * from a Timestamp. Range is approximately +-10\x2C000 years.\n *\n * # Examples\n *\n * Example 1: Compute Duration from two Timestamps in pseudo code.\n *\n *     Timestamp start = ...;\n *     Timestamp end = ...;\n *     Duration duration = ...;\n *\n *     duration.seconds = end.seconds - start.seconds;\n *     duration.nanos = end.nanos - start.nanos;\n *\n *     if (duration.seconds < 0 && duration.nanos > 0) {\n *       duration.seconds += 1;\n *       duration.nanos -= 1000000000;\n *     } else if (duration.seconds > 0 && duration.nanos < 0) {\n *       duration.seconds -= 1;\n *       duration.nanos += 1000000000;\n *     }\n *\n * Example 2: Compute Timestamp from Timestamp + Duration in pseudo code.\n *\n *     Timestamp start = ...;\n *     Duration duration = ...;\n *     Timestamp end = ...;\n *\n *     end.seconds = start.seconds + duration.seconds;\n *     end.nanos = start.nanos + duration.nanos;\n *\n *     if (end.nanos < 0) {\n *       end.seconds -= 1;\n *       end.nanos += 1000000000;\n *     } else if (end.nanos >= 1000000000) {\n *       end.seconds += 1;\n *       end.nanos -= 1000000000;\n *     }\n *\n * Example 3: Compute Duration from datetime.timedelta in Python.\n *\n *     td = datetime.timedelta(days=3\x2C minutes=10)\n *     duration = Duration()\n *     duration.FromTimedelta(td)\n *\n * # JSON Mapping\n *\n * In JSON format\x2C the Duration type is encoded as a string rather than an\n * object\x2C where the string ends in the suffix "s" (indicating seconds) and\n * is preceded by the number of seconds\x2C with nanoseconds expressed as\n * fractional seconds. For example\x2C 3 seconds with 0 nanoseconds should be\n * encoded in JSON format as "3s"\x2C while 3 seconds and 1 nanosecond should\n * be expressed in JSON format as "3.000000001s"\x2C and 3 seconds and 1\n * microsecond should be expressed in JSON format as "3.000001s".\n *\n *\n *\n * @generated from message google.protobuf.Duration\n */\nexport class Duration extends Message {\n    constructor(data) {\n        super();\n        /**\n         * Signed seconds of the span of time. Must be from -315\x2C576\x2C000\x2C000\n         * to +315\x2C576\x2C000\x2C000 inclusive. Note: these bounds are computed from:\n         * 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years\n         *\n         * @generated from field: int64 seconds = 1;\n         */\n        this.seconds = protoInt64.zero;\n        /**\n         * Signed fractions of a second at nanosecond resolution of the span\n         * of time. Durations less than one second are represented with a 0\n         * `seconds` field and a positive or negative `nanos` field. For durations\n         * of one second or more\x2C a non-zero value for the `nanos` field must be\n         * of the same sign as the `seconds` field. Must be from -999\x2C999\x2C999\n         * to +999\x2C999\x2C999 inclusive.\n         *\n         * @generated from field: int32 nanos = 2;\n         */\n        this.nanos = 0;\n        proto3.util.initPartial(data\x2C this);\n    }\n    fromJson(json\x2C options) {\n        if (typeof json !== "string") {\n            throw new Error(`cannot decode google.protobuf.Duration from JSON: ${proto3.json.debug(json)}`);\n        }\n        const match = json.match(/^(-?[0-9]+)(?:\\.([0-9]+))?s/);\n        if (match === null) {\n            throw new Error(`cannot decode google.protobuf.Duration from JSON: ${proto3.json.debug(json)}`);\n        }\n        const longSeconds = Number(match[1]);\n        if (longSeconds > 315576000000 || longSeconds < -315576000000) {\n            throw new Error(`cannot decode google.protobuf.Duration from JSON: ${proto3.json.debug(json)}`);\n        }\n        this.seconds = protoInt64.parse(longSeconds);\n        if (typeof match[2] == "string") {\n            const nanosStr = match[2] + "0".repeat(9 - match[2].length);\n            this.nanos = parseInt(nanosStr);\n            if (longSeconds < protoInt64.zero) {\n                this.nanos = -this.nanos;\n            }\n        }\n        return this;\n    }\n    toJson(options) {\n        if (Number(this.seconds) > 315576000000 || Number(this.seconds) < -315576000000) {\n            throw new Error(`cannot encode google.protobuf.Duration to JSON: value out of range`);\n        }\n        let text = this.seconds.toString();\n        if (this.nanos !== 0) {\n            let nanosStr = Math.abs(this.nanos).toString();\n            nanosStr = "0".repeat(9 - nanosStr.length) + nanosStr;\n            if (nanosStr.substring(3) === "000000") {\n                nanosStr = nanosStr.substring(0\x2C 3);\n            }\n            else if (nanosStr.substring(6) === "000") {\n                nanosStr = nanosStr.substring(0\x2C 6);\n            }\n            text += "." + nanosStr;\n        }\n        return text + "s";\n    }\n    static fromBinary(bytes\x2C options) {\n        return new Duration().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new Duration().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new Duration().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto3.util.equals(Duration\x2C a\x2C b);\n    }\n}\nDuration.runtime = proto3;\nDuration.typeName = "google.protobuf.Duration";\nDuration.fields = proto3.util.newFieldList(() => [\n    { no: 1\x2C name: "seconds"\x2C kind: "scalar"\x2C T: 3 /* ScalarType.INT64 */ }\x2C\n    { no: 2\x2C name: "nanos"\x2C kind: "scalar"\x2C T: 5 /* ScalarType.INT32 */ }\x2C\n]);\n
code-source-info,0xf2c007bd2c8,484,0,6476,C10O0C28O0C48O0C59O3020C118O2997C121O6194C125O6213C130O6211C134O6221C140O6239C144O6269C148O6287C154O6294C159O6299C169O6299C175O6285C184O6476,,
code-creation,Script,10,97125,0xf2c007be718,224, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/google/protobuf/any_pb.js:1:1,0xf2c007bdc20,~
script-source,485,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/google/protobuf/any_pb.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from "../../message.js";\nimport { proto3 } from "../../proto3.js";\n/**\n * `Any` contains an arbitrary serialized protocol buffer message along with a\n * URL that describes the type of the serialized message.\n *\n * Protobuf library provides support to pack/unpack Any values in the form\n * of utility functions or additional generated methods of the Any type.\n *\n * Example 1: Pack and unpack a message in C++.\n *\n *     Foo foo = ...;\n *     Any any;\n *     any.PackFrom(foo);\n *     ...\n *     if (any.UnpackTo(&foo)) {\n *       ...\n *     }\n *\n * Example 2: Pack and unpack a message in Java.\n *\n *     Foo foo = ...;\n *     Any any = Any.pack(foo);\n *     ...\n *     if (any.is(Foo.class)) {\n *       foo = any.unpack(Foo.class);\n *     }\n *\n * Example 3: Pack and unpack a message in Python.\n *\n *     foo = Foo(...)\n *     any = Any()\n *     any.Pack(foo)\n *     ...\n *     if any.Is(Foo.DESCRIPTOR):\n *       any.Unpack(foo)\n *       ...\n *\n * Example 4: Pack and unpack a message in Go\n *\n *      foo := &pb.Foo{...}\n *      any\x2C err := anypb.New(foo)\n *      if err != nil {\n *        ...\n *      }\n *      ...\n *      foo := &pb.Foo{}\n *      if err := any.UnmarshalTo(foo); err != nil {\n *        ...\n *      }\n *\n * The pack methods provided by protobuf library will by default use\n * 'type.googleapis.com/full.type.name' as the type URL and the unpack\n * methods only use the fully qualified type name after the last '/'\n * in the type URL\x2C for example "foo.bar.com/x/y.z" will yield type\n * name "y.z".\n *\n *\n * JSON\n *\n * The JSON representation of an `Any` value uses the regular\n * representation of the deserialized\x2C embedded message\x2C with an\n * additional field `@type` which contains the type URL. Example:\n *\n *     package google.profile;\n *     message Person {\n *       string first_name = 1;\n *       string last_name = 2;\n *     }\n *\n *     {\n *       "@type": "type.googleapis.com/google.profile.Person"\x2C\n *       "firstName": <string>\x2C\n *       "lastName": <string>\n *     }\n *\n * If the embedded message type is well-known and has a custom JSON\n * representation\x2C that representation will be embedded adding a field\n * `value` which holds the custom JSON in addition to the `@type`\n * field. Example (for message [google.protobuf.Duration][]):\n *\n *     {\n *       "@type": "type.googleapis.com/google.protobuf.Duration"\x2C\n *       "value": "1.212s"\n *     }\n *\n *\n * @generated from message google.protobuf.Any\n */\nexport class Any extends Message {\n    constructor(data) {\n        super();\n        /**\n         * A URL/resource name that uniquely identifies the type of the serialized\n         * protocol buffer message. This string must contain at least\n         * one "/" character. The last segment of the URL's path must represent\n         * the fully qualified name of the type (as in\n         * `path/google.protobuf.Duration`). The name should be in a canonical form\n         * (e.g.\x2C leading "." is not accepted).\n         *\n         * In practice\x2C teams usually precompile into the binary all types that they\n         * expect it to use in the context of Any. However\x2C for URLs which use the\n         * scheme `http`\x2C `https`\x2C or no scheme\x2C one can optionally set up a type\n         * server that maps type URLs to message definitions as follows:\n         *\n         * * If no scheme is provided\x2C `https` is assumed.\n         * * An HTTP GET on the URL must yield a [google.protobuf.Type][]\n         *   value in binary format\x2C or produce an error.\n         * * Applications are allowed to cache lookup results based on the\n         *   URL\x2C or have them precompiled into a binary to avoid any\n         *   lookup. Therefore\x2C binary compatibility needs to be preserved\n         *   on changes to types. (Use versioned type names to manage\n         *   breaking changes.)\n         *\n         * Note: this functionality is not currently available in the official\n         * protobuf release\x2C and it is not used for type URLs beginning with\n         * type.googleapis.com.\n         *\n         * Schemes other than `http`\x2C `https` (or the empty scheme) might be\n         * used with implementation specific semantics.\n         *\n         *\n         * @generated from field: string type_url = 1;\n         */\n        this.typeUrl = "";\n        /**\n         * Must be a valid serialized protocol buffer of the above specified type.\n         *\n         * @generated from field: bytes value = 2;\n         */\n        this.value = new Uint8Array(0);\n        proto3.util.initPartial(data\x2C this);\n    }\n    toJson(options) {\n        var _a;\n        if (this.typeUrl === "") {\n            return {};\n        }\n        const typeName = this.typeUrlToName(this.typeUrl);\n        const messageType = (_a = options === null || options === void 0 ? void 0 : options.typeRegistry) === null || _a === void 0 ? void 0 : _a.findMessage(typeName);\n        if (!messageType) {\n            throw new Error(`cannot encode message google.protobuf.Any to JSON: "${this.typeUrl}" is not in the type registry`);\n        }\n        const message = messageType.fromBinary(this.value);\n        let json = message.toJson(options);\n        if (typeName.startsWith("google.protobuf.") || (json === null || Array.isArray(json) || typeof json !== "object")) {\n            json = { value: json };\n        }\n        json["@type"] = this.typeUrl;\n        return json;\n    }\n    fromJson(json\x2C options) {\n        var _a;\n        if (json === null || Array.isArray(json) || typeof json != "object") {\n            throw new Error(`cannot decode message google.protobuf.Any from JSON: expected object but got ${json === null ? "null" : Array.isArray(json) ? "array" : typeof json}`);\n        }\n        if (Object.keys(json).length == 0) {\n            return this;\n        }\n        const typeUrl = json["@type"];\n        if (typeof typeUrl != "string" || typeUrl == "") {\n            throw new Error(`cannot decode message google.protobuf.Any from JSON: "@type" is empty`);\n        }\n        const typeName = this.typeUrlToName(typeUrl)\x2C messageType = (_a = options === null || options === void 0 ? void 0 : options.typeRegistry) === null || _a === void 0 ? void 0 : _a.findMessage(typeName);\n        if (!messageType) {\n            throw new Error(`cannot decode message google.protobuf.Any from JSON: ${typeUrl} is not in the type registry`);\n        }\n        let message;\n        if (typeName.startsWith("google.protobuf.") && Object.prototype.hasOwnProperty.call(json\x2C "value")) {\n            message = messageType.fromJson(json["value"]\x2C options);\n        }\n        else {\n            const copy = Object.assign({}\x2C json);\n            delete copy["@type"];\n            message = messageType.fromJson(copy\x2C options);\n        }\n        this.packFrom(message);\n        return this;\n    }\n    packFrom(message) {\n        this.value = message.toBinary();\n        this.typeUrl = this.typeNameToUrl(message.getType().typeName);\n    }\n    unpackTo(target) {\n        if (!this.is(target.getType())) {\n            return false;\n        }\n        target.fromBinary(this.value);\n        return true;\n    }\n    unpack(registry) {\n        if (this.typeUrl === "") {\n            return undefined;\n        }\n        const messageType = registry.findMessage(this.typeUrlToName(this.typeUrl));\n        if (!messageType) {\n            return undefined;\n        }\n        return messageType.fromBinary(this.value);\n    }\n    is(type) {\n        if (this.typeUrl === '') {\n            return false;\n        }\n        const name = this.typeUrlToName(this.typeUrl);\n        let typeName = '';\n        if (typeof type === 'string') {\n            typeName = type;\n        }\n        else {\n            typeName = type.typeName;\n        }\n        return name === typeName;\n    }\n    typeNameToUrl(name) {\n        return `type.googleapis.com/${name}`;\n    }\n    typeUrlToName(url) {\n        if (!url.length) {\n            throw new Error(`invalid type url: ${url}`);\n        }\n        const slash = url.lastIndexOf("/");\n        const name = slash > 0 ? url.substring(slash + 1) : url;\n        if (!name.length) {\n            throw new Error(`invalid type url: ${url}`);\n        }\n        return name;\n    }\n    static pack(message) {\n        const any = new Any();\n        any.packFrom(message);\n        return any;\n    }\n    static fromBinary(bytes\x2C options) {\n        return new Any().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new Any().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new Any().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto3.util.equals(Any\x2C a\x2C b);\n    }\n}\nAny.runtime = proto3;\nAny.typeName = "google.protobuf.Any";\nAny.fields = proto3.util.newFieldList(() => [\n    { no: 1\x2C name: "type_url"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */ }\x2C\n    { no: 2\x2C name: "value"\x2C kind: "scalar"\x2C T: 12 /* ScalarType.BYTES */ }\x2C\n]);\n
code-source-info,0xf2c007be718,485,0,9579,C10O0C28O0C48O0C59O3092C157O3074C160O9314C164O9328C169O9326C173O9336C179O9349C183O9374C187O9387C193O9394C198O9399C208O9399C214O9385C223O9579,,
tick,0x105408b1c,97583,0,0x0,0,0x109cd3050,0x109ccdb34,0x109ccdbd0,0x109ce15d4,0x109ce717c,0x109cfa800,0x109ce476c,0x109cee26c,0x109cd29f0,0x109ce98c4,0x109cea7b4,0x109ce7398,0x104a6cb38,0x109cf3c04,0x105405ef4
code-creation,Script,10,97625,0xf2c007bf980,175, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/google/protobuf/empty_pb.js:1:1,0xf2c007bf278,~
script-source,486,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/google/protobuf/empty_pb.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from "../../message.js";\nimport { proto3 } from "../../proto3.js";\n/**\n * A generic empty message that you can re-use to avoid defining duplicated\n * empty messages in your APIs. A typical example is to use it as the request\n * or the response type of an API method. For instance:\n *\n *     service Foo {\n *       rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n *     }\n *\n *\n * @generated from message google.protobuf.Empty\n */\nexport class Empty extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data\x2C this);\n    }\n    static fromBinary(bytes\x2C options) {\n        return new Empty().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new Empty().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new Empty().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto3.util.equals(Empty\x2C a\x2C b);\n    }\n}\nEmpty.runtime = proto3;\nEmpty.typeName = "google.protobuf.Empty";\nEmpty.fields = proto3.util.newFieldList(() => []);\n
code-source-info,0xf2c007bf980,486,0,1723,C10O0C28O0C48O0C59O1097C108O1077C111O1606C115O1622C120O1620C124O1630C130O1645C134O1672C138O1687C144O1694C149O1699C159O1699C165O1685C174O1723,,
code-creation,Script,10,97875,0x13959b16958,175, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/google/protobuf/source_context_pb.js:1:1,0xf2c007bfe08,~
script-source,487,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/google/protobuf/source_context_pb.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from "../../message.js";\nimport { proto3 } from "../../proto3.js";\n/**\n * `SourceContext` represents information about the source of a\n * protobuf element\x2C like the file in which it is defined.\n *\n * @generated from message google.protobuf.SourceContext\n */\nexport class SourceContext extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The path-qualified name of the .proto file that contained the associated\n         * protobuf element.  For example: `"google/protobuf/source_context.proto"`.\n         *\n         * @generated from field: string file_name = 1;\n         */\n        this.fileName = "";\n        proto3.util.initPartial(data\x2C this);\n    }\n    static fromBinary(bytes\x2C options) {\n        return new SourceContext().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new SourceContext().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new SourceContext().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto3.util.equals(SourceContext\x2C a\x2C b);\n    }\n}\nSourceContext.runtime = proto3;\nSourceContext.typeName = "google.protobuf.SourceContext";\nSourceContext.fields = proto3.util.newFieldList(() => [\n    { no: 1\x2C name: "file_name"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */ }\x2C\n]);\n
code-source-info,0x13959b16958,487,0,1976,C10O0C28O0C48O0C59O917C108O889C111O1746C115O1770C120O1768C124O1778C130O1801C134O1836C138O1859C144O1866C149O1871C159O1871C165O1857C174O1976,,
code-creation,Script,10,98208,0x13959b18398,489, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/google/protobuf/struct_pb.js:1:1,0x13959b16fe8,~
script-source,488,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/google/protobuf/struct_pb.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// @generated by protoc-gen-es v0.3.0 with parameter "bootstrap_wkt=true\x2Cts_nocheck=false\x2Ctarget=ts"\n// @generated from file google/protobuf/struct.proto (package google.protobuf\x2C syntax proto3)\n/* eslint-disable */\nimport { proto3 } from "../../proto3.js";\nimport { Message } from "../../message.js";\n/**\n * `NullValue` is a singleton enumeration to represent the null value for the\n * `Value` type union.\n *\n *  The JSON representation for `NullValue` is JSON `null`.\n *\n * @generated from enum google.protobuf.NullValue\n */\nexport var NullValue;\n(function (NullValue) {\n    /**\n     * Null value.\n     *\n     * @generated from enum value: NULL_VALUE = 0;\n     */\n    NullValue[NullValue["NULL_VALUE"] = 0] = "NULL_VALUE";\n})(NullValue || (NullValue = {}));\n// Retrieve enum metadata with: proto3.getEnumType(NullValue)\nproto3.util.setEnumType(NullValue\x2C "google.protobuf.NullValue"\x2C [\n    { no: 0\x2C name: "NULL_VALUE" }\x2C\n]);\n/**\n * `Struct` represents a structured data value\x2C consisting of fields\n * which map to dynamically typed values. In some languages\x2C `Struct`\n * might be supported by a native representation. For example\x2C in\n * scripting languages like JS a struct is represented as an\n * object. The details of that representation are described together\n * with the proto support for the language.\n *\n * The JSON representation for `Struct` is JSON object.\n *\n * @generated from message google.protobuf.Struct\n */\nexport class Struct extends Message {\n    constructor(data) {\n        super();\n        /**\n         * Unordered map of dynamically typed values.\n         *\n         * @generated from field: map<string\x2C google.protobuf.Value> fields = 1;\n         */\n        this.fields = {};\n        proto3.util.initPartial(data\x2C this);\n    }\n    toJson(options) {\n        const json = {};\n        for (const [k\x2C v] of Object.entries(this.fields)) {\n            json[k] = v.toJson(options);\n        }\n        return json;\n    }\n    fromJson(json\x2C options) {\n        if (typeof json != "object" || json == null || Array.isArray(json)) {\n            throw new Error("cannot decode google.protobuf.Struct from JSON " + proto3.json.debug(json));\n        }\n        for (const [k\x2C v] of Object.entries(json)) {\n            this.fields[k] = Value.fromJson(v);\n        }\n        return this;\n    }\n    static fromBinary(bytes\x2C options) {\n        return new Struct().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new Struct().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new Struct().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto3.util.equals(Struct\x2C a\x2C b);\n    }\n}\nStruct.runtime = proto3;\nStruct.typeName = "google.protobuf.Struct";\nStruct.fields = proto3.util.newFieldList(() => [\n    { no: 1\x2C name: "fields"\x2C kind: "map"\x2C K: 9 /* ScalarType.STRING */\x2C V: { kind: "message"\x2C T: Value } }\x2C\n]);\n/**\n * `Value` represents a dynamically typed value which can be either\n * null\x2C a number\x2C a string\x2C a boolean\x2C a recursive struct value\x2C or a\n * list of values. A producer of value is expected to set one of these\n * variants. Absence of any variant indicates an error.\n *\n * The JSON representation for `Value` is JSON value.\n *\n * @generated from message google.protobuf.Value\n */\nexport class Value extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The kind of value.\n         *\n         * @generated from oneof google.protobuf.Value.kind\n         */\n        this.kind = { case: undefined };\n        proto3.util.initPartial(data\x2C this);\n    }\n    toJson(options) {\n        switch (this.kind.case) {\n            case "nullValue":\n                return null;\n            case "boolValue":\n            case "numberValue":\n            case "stringValue":\n                return this.kind.value;\n            case "structValue":\n            case "listValue":\n                return this.kind.value.toJson(Object.assign(Object.assign({}\x2C options)\x2C { emitDefaultValues: true }));\n        }\n        throw new Error("google.protobuf.Value must have a value");\n    }\n    fromJson(json\x2C options) {\n        switch (typeof json) {\n            case "number":\n                this.kind = { case: "numberValue"\x2C value: json };\n                break;\n            case "string":\n                this.kind = { case: "stringValue"\x2C value: json };\n                break;\n            case "boolean":\n                this.kind = { case: "boolValue"\x2C value: json };\n                break;\n            case "object":\n                if (json === null) {\n                    this.kind = { case: "nullValue"\x2C value: NullValue.NULL_VALUE };\n                }\n                else if (Array.isArray(json)) {\n                    this.kind = { case: "listValue"\x2C value: ListValue.fromJson(json) };\n                }\n                else {\n                    this.kind = { case: "structValue"\x2C value: Struct.fromJson(json) };\n                }\n                break;\n            default:\n                throw new Error("cannot decode google.protobuf.Value from JSON " + proto3.json.debug(json));\n        }\n        return this;\n    }\n    static fromBinary(bytes\x2C options) {\n        return new Value().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new Value().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new Value().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto3.util.equals(Value\x2C a\x2C b);\n    }\n}\nValue.runtime = proto3;\nValue.typeName = "google.protobuf.Value";\nValue.fields = proto3.util.newFieldList(() => [\n    { no: 1\x2C name: "null_value"\x2C kind: "enum"\x2C T: proto3.getEnumType(NullValue)\x2C oneof: "kind" }\x2C\n    { no: 2\x2C name: "number_value"\x2C kind: "scalar"\x2C T: 1 /* ScalarType.DOUBLE */\x2C oneof: "kind" }\x2C\n    { no: 3\x2C name: "string_value"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C oneof: "kind" }\x2C\n    { no: 4\x2C name: "bool_value"\x2C kind: "scalar"\x2C T: 8 /* ScalarType.BOOL */\x2C oneof: "kind" }\x2C\n    { no: 5\x2C name: "struct_value"\x2C kind: "message"\x2C T: Struct\x2C oneof: "kind" }\x2C\n    { no: 6\x2C name: "list_value"\x2C kind: "message"\x2C T: ListValue\x2C oneof: "kind" }\x2C\n]);\n/**\n * `ListValue` is a wrapper around a repeated field of values.\n *\n * The JSON representation for `ListValue` is JSON array.\n *\n * @generated from message google.protobuf.ListValue\n */\nexport class ListValue extends Message {\n    constructor(data) {\n        super();\n        /**\n         * Repeated field of dynamically typed values.\n         *\n         * @generated from field: repeated google.protobuf.Value values = 1;\n         */\n        this.values = [];\n        proto3.util.initPartial(data\x2C this);\n    }\n    toJson(options) {\n        return this.values.map(v => v.toJson());\n    }\n    fromJson(json\x2C options) {\n        if (!Array.isArray(json)) {\n            throw new Error("cannot decode google.protobuf.ListValue from JSON " + proto3.json.debug(json));\n        }\n        for (let e of json) {\n            this.values.push(Value.fromJson(e));\n        }\n        return this;\n    }\n    static fromBinary(bytes\x2C options) {\n        return new ListValue().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new ListValue().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new ListValue().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto3.util.equals(ListValue\x2C a\x2C b);\n    }\n}\nListValue.runtime = proto3;\nListValue.typeName = "google.protobuf.ListValue";\nListValue.fields = proto3.util.newFieldList(() => [\n    { no: 1\x2C name: "values"\x2C kind: "message"\x2C T: Value\x2C repeated: true }\x2C\n]);\n
code-source-info,0x13959b18398,488,0,8380,C10O0C28O0C48O0C52O1154C57O1333C63O1357C67O1332C71O1427C77O1434C82O1439C87O1451C99O1439C111O2059C170O2038C173O3315C177O3332C182O3330C186O3340C192O3356C196O3384C200O3400C206O3407C211O3412C221O3412C226O3398C237O3955C296O3935C299O6190C303O6206C308O6204C312O6214C318O6229C322O6256C326O6271C332O6278C337O6283C347O6283C352O6269C363O7076C422O7052C425O8172C429O8192C434O8190C438O8200C444O8219C448O8250C452O8269C458O8276C463O8281C473O8281C479O8267C488O8380,,
code-creation,Function,10,98541,0x13959b18690,14, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/google/protobuf/struct_pb.js:28:11,0x13959b17458,~
code-source-info,0x13959b18690,488,1164,1331,C0O1275C2O1309C8O1314C13O1330,,
code-creation,Script,10,98750,0x13959b19ab8,200, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/google/protobuf/timestamp_pb.js:1:1,0x13959b190f8,~
script-source,489,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/google/protobuf/timestamp_pb.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from "../../message.js";\nimport { protoInt64 } from "../../proto-int64.js";\nimport { proto3 } from "../../proto3.js";\n/**\n * A Timestamp represents a point in time independent of any time zone or local\n * calendar\x2C encoded as a count of seconds and fractions of seconds at\n * nanosecond resolution. The count is relative to an epoch at UTC midnight on\n * January 1\x2C 1970\x2C in the proleptic Gregorian calendar which extends the\n * Gregorian calendar backwards to year one.\n *\n * All minutes are 60 seconds long. Leap seconds are "smeared" so that no leap\n * second table is needed for interpretation\x2C using a [24-hour linear\n * smear](https://developers.google.com/time/smear).\n *\n * The range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By\n * restricting to that range\x2C we ensure that we can convert to and from [RFC\n * 3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.\n *\n * # Examples\n *\n * Example 1: Compute Timestamp from POSIX `time()`.\n *\n *     Timestamp timestamp;\n *     timestamp.set_seconds(time(NULL));\n *     timestamp.set_nanos(0);\n *\n * Example 2: Compute Timestamp from POSIX `gettimeofday()`.\n *\n *     struct timeval tv;\n *     gettimeofday(&tv\x2C NULL);\n *\n *     Timestamp timestamp;\n *     timestamp.set_seconds(tv.tv_sec);\n *     timestamp.set_nanos(tv.tv_usec * 1000);\n *\n * Example 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.\n *\n *     FILETIME ft;\n *     GetSystemTimeAsFileTime(&ft);\n *     UINT64 ticks = (((UINT64)ft.dwHighDateTime) << 32) | ft.dwLowDateTime;\n *\n *     // A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z\n *     // is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.\n *     Timestamp timestamp;\n *     timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));\n *     timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));\n *\n * Example 4: Compute Timestamp from Java `System.currentTimeMillis()`.\n *\n *     long millis = System.currentTimeMillis();\n *\n *     Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)\n *         .setNanos((int) ((millis % 1000) * 1000000)).build();\n *\n *\n * Example 5: Compute Timestamp from Java `Instant.now()`.\n *\n *     Instant now = Instant.now();\n *\n *     Timestamp timestamp =\n *         Timestamp.newBuilder().setSeconds(now.getEpochSecond())\n *             .setNanos(now.getNano()).build();\n *\n *\n * Example 6: Compute Timestamp from current time in Python.\n *\n *     timestamp = Timestamp()\n *     timestamp.GetCurrentTime()\n *\n * # JSON Mapping\n *\n * In JSON format\x2C the Timestamp type is encoded as a string in the\n * [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format. That is\x2C the\n * format is "{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z"\n * where {year} is always expressed using four digits while {month}\x2C {day}\x2C\n * {hour}\x2C {min}\x2C and {sec} are zero-padded to two digits each. The fractional\n * seconds\x2C which can go up to 9 digits (i.e. up to 1 nanosecond resolution)\x2C\n * are optional. The "Z" suffix indicates the timezone ("UTC"); the timezone\n * is required. A proto3 JSON serializer should always use UTC (as indicated by\n * "Z") when printing the Timestamp type and a proto3 JSON parser should be\n * able to accept both UTC and other timezones (as indicated by an offset).\n *\n * For example\x2C "2017-01-15T01:30:15.01Z" encodes 15.01 seconds past\n * 01:30 UTC on January 15\x2C 2017.\n *\n * In JavaScript\x2C one can convert a Date object to this format using the\n * standard\n * [toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString)\n * method. In Python\x2C a standard `datetime.datetime` object can be converted\n * to this format using\n * [`strftime`](https://docs.python.org/2/library/time.html#time.strftime) with\n * the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise\x2C in Java\x2C one can use\n * the Joda Time's [`ISODateTimeFormat.dateTime()`](\n * http://www.joda.org/joda-time/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime%2D%2D\n * ) to obtain a formatter capable of generating timestamps in this format.\n *\n *\n *\n * @generated from message google.protobuf.Timestamp\n */\nexport class Timestamp extends Message {\n    constructor(data) {\n        super();\n        /**\n         * Represents seconds of UTC time since Unix epoch\n         * 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n         * 9999-12-31T23:59:59Z inclusive.\n         *\n         * @generated from field: int64 seconds = 1;\n         */\n        this.seconds = protoInt64.zero;\n        /**\n         * Non-negative fractions of a second at nanosecond resolution. Negative\n         * second values with fractions must still have non-negative nanos values\n         * that count forward in time. Must be from 0 to 999\x2C999\x2C999\n         * inclusive.\n         *\n         * @generated from field: int32 nanos = 2;\n         */\n        this.nanos = 0;\n        proto3.util.initPartial(data\x2C this);\n    }\n    fromJson(json\x2C options) {\n        if (typeof json !== "string") {\n            throw new Error(`cannot decode google.protobuf.Timestamp from JSON: ${proto3.json.debug(json)}`);\n        }\n        const matches = json.match(/^([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2}):([0-9]{2})(?:Z|\\.([0-9]{3\x2C9})Z|([+-][0-9][0-9]:[0-9][0-9]))$/);\n        if (!matches) {\n            throw new Error(`cannot decode google.protobuf.Timestamp from JSON: invalid RFC 3339 string`);\n        }\n        const ms = Date.parse(matches[1] + "-" + matches[2] + "-" + matches[3] + "T" + matches[4] + ":" + matches[5] + ":" + matches[6] + (matches[8] ? matches[8] : "Z"));\n        if (Number.isNaN(ms)) {\n            throw new Error(`cannot decode google.protobuf.Timestamp from JSON: invalid RFC 3339 string`);\n        }\n        if (ms < Date.parse("0001-01-01T00:00:00Z") || ms > Date.parse("9999-12-31T23:59:59Z")) {\n            throw new Error(`cannot decode message google.protobuf.Timestamp from JSON: must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive`);\n        }\n        this.seconds = protoInt64.parse(ms / 1000);\n        this.nanos = 0;\n        if (matches[7]) {\n            this.nanos = (parseInt("1" + matches[7] + "0".repeat(9 - matches[7].length)) - 1000000000);\n        }\n        return this;\n    }\n    toJson(options) {\n        const ms = Number(this.seconds) * 1000;\n        if (ms < Date.parse("0001-01-01T00:00:00Z") || ms > Date.parse("9999-12-31T23:59:59Z")) {\n            throw new Error(`cannot encode google.protobuf.Timestamp to JSON: must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive`);\n        }\n        if (this.nanos < 0) {\n            throw new Error(`cannot encode google.protobuf.Timestamp to JSON: nanos must not be negative`);\n        }\n        let z = "Z";\n        if (this.nanos > 0) {\n            const nanosStr = (this.nanos + 1000000000).toString().substring(1);\n            if (nanosStr.substring(3) === "000000") {\n                z = "." + nanosStr.substring(0\x2C 3) + "Z";\n            }\n            else if (nanosStr.substring(6) === "000") {\n                z = "." + nanosStr.substring(0\x2C 6) + "Z";\n            }\n            else {\n                z = "." + nanosStr + "Z";\n            }\n        }\n        return new Date(ms).toISOString().replace(".000Z"\x2C z);\n    }\n    toDate() {\n        return new Date(Number(this.seconds) * 1000 + Math.ceil(this.nanos / 1000000));\n    }\n    static now() {\n        return Timestamp.fromDate(new Date());\n    }\n    static fromDate(date) {\n        const ms = date.getTime();\n        return new Timestamp({\n            seconds: protoInt64.parse(Math.floor(ms / 1000))\x2C\n            nanos: (ms % 1000) * 1000000\x2C\n        });\n    }\n    static fromBinary(bytes\x2C options) {\n        return new Timestamp().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new Timestamp().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new Timestamp().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto3.util.equals(Timestamp\x2C a\x2C b);\n    }\n}\nTimestamp.runtime = proto3;\nTimestamp.typeName = "google.protobuf.Timestamp";\nTimestamp.fields = proto3.util.newFieldList(() => [\n    { no: 1\x2C name: "seconds"\x2C kind: "scalar"\x2C T: 3 /* ScalarType.INT64 */ }\x2C\n    { no: 2\x2C name: "nanos"\x2C kind: "scalar"\x2C T: 5 /* ScalarType.INT32 */ }\x2C\n]);\n
code-source-info,0x13959b19ab8,489,0,9018,C10O0C28O0C48O0C59O4814C133O4790C136O8732C140O8752C145O8750C149O8760C155O8779C159O8810C163O8829C169O8836C174O8841C184O8841C190O8827C199O9018,,
tick,0x1a4d3d6bc,99125,1,0x104a6bc1c,3,0x0,0x109d0ba34,0x109cf3688,0x105405ef4
code-creation,Script,10,99375,0x13959b1adc0,185, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/google/protobuf/field_mask_pb.js:1:1,0x13959b1a588,~
script-source,490,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/google/protobuf/field_mask_pb.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from "../../message.js";\nimport { proto3 } from "../../proto3.js";\n/**\n * `FieldMask` represents a set of symbolic field paths\x2C for example:\n *\n *     paths: "f.a"\n *     paths: "f.b.d"\n *\n * Here `f` represents a field in some root message\x2C `a` and `b`\n * fields in the message found in `f`\x2C and `d` a field found in the\n * message in `f.b`.\n *\n * Field masks are used to specify a subset of fields that should be\n * returned by a get operation or modified by an update operation.\n * Field masks also have a custom JSON encoding (see below).\n *\n * # Field Masks in Projections\n *\n * When used in the context of a projection\x2C a response message or\n * sub-message is filtered by the API to only contain those fields as\n * specified in the mask. For example\x2C if the mask in the previous\n * example is applied to a response message as follows:\n *\n *     f {\n *       a : 22\n *       b {\n *         d : 1\n *         x : 2\n *       }\n *       y : 13\n *     }\n *     z: 8\n *\n * The result will not contain specific values for fields x\x2Cy and z\n * (their value will be set to the default\x2C and omitted in proto text\n * output):\n *\n *\n *     f {\n *       a : 22\n *       b {\n *         d : 1\n *       }\n *     }\n *\n * A repeated field is not allowed except at the last position of a\n * paths string.\n *\n * If a FieldMask object is not present in a get operation\x2C the\n * operation applies to all fields (as if a FieldMask of all fields\n * had been specified).\n *\n * Note that a field mask does not necessarily apply to the\n * top-level response message. In case of a REST get operation\x2C the\n * field mask applies directly to the response\x2C but in case of a REST\n * list operation\x2C the mask instead applies to each individual message\n * in the returned resource list. In case of a REST custom method\x2C\n * other definitions may be used. Where the mask applies will be\n * clearly documented together with its declaration in the API.  In\n * any case\x2C the effect on the returned resource/resources is required\n * behavior for APIs.\n *\n * # Field Masks in Update Operations\n *\n * A field mask in update operations specifies which fields of the\n * targeted resource are going to be updated. The API is required\n * to only change the values of the fields as specified in the mask\n * and leave the others untouched. If a resource is passed in to\n * describe the updated values\x2C the API ignores the values of all\n * fields not covered by the mask.\n *\n * If a repeated field is specified for an update operation\x2C new values will\n * be appended to the existing repeated field in the target resource. Note that\n * a repeated field is only allowed in the last position of a `paths` string.\n *\n * If a sub-message is specified in the last position of the field mask for an\n * update operation\x2C then new value will be merged into the existing sub-message\n * in the target resource.\n *\n * For example\x2C given the target message:\n *\n *     f {\n *       b {\n *         d: 1\n *         x: 2\n *       }\n *       c: [1]\n *     }\n *\n * And an update message:\n *\n *     f {\n *       b {\n *         d: 10\n *       }\n *       c: [2]\n *     }\n *\n * then if the field mask is:\n *\n *  paths: ["f.b"\x2C "f.c"]\n *\n * then the result will be:\n *\n *     f {\n *       b {\n *         d: 10\n *         x: 2\n *       }\n *       c: [1\x2C 2]\n *     }\n *\n * An implementation may provide options to override this default behavior for\n * repeated and message fields.\n *\n * In order to reset a field's value to the default\x2C the field must\n * be in the mask and set to the default value in the provided resource.\n * Hence\x2C in order to reset all fields of a resource\x2C provide a default\n * instance of the resource and set all fields in the mask\x2C or do\n * not provide a mask as described below.\n *\n * If a field mask is not present on update\x2C the operation applies to\n * all fields (as if a field mask of all fields has been specified).\n * Note that in the presence of schema evolution\x2C this may mean that\n * fields the client does not know and has therefore not filled into\n * the request will be reset to their default. If this is unwanted\n * behavior\x2C a specific service may require a client to always specify\n * a field mask\x2C producing an error if not.\n *\n * As with get operations\x2C the location of the resource which\n * describes the updated values in the request message depends on the\n * operation kind. In any case\x2C the effect of the field mask is\n * required to be honored by the API.\n *\n * ## Considerations for HTTP REST\n *\n * The HTTP kind of an update operation which uses a field mask must\n * be set to PATCH instead of PUT in order to satisfy HTTP semantics\n * (PUT must only be used for full updates).\n *\n * # JSON Encoding of Field Masks\n *\n * In JSON\x2C a field mask is encoded as a single string where paths are\n * separated by a comma. Fields name in each path are converted\n * to/from lower-camel naming conventions.\n *\n * As an example\x2C consider the following message declarations:\n *\n *     message Profile {\n *       User user = 1;\n *       Photo photo = 2;\n *     }\n *     message User {\n *       string display_name = 1;\n *       string address = 2;\n *     }\n *\n * In proto a field mask for `Profile` may look as such:\n *\n *     mask {\n *       paths: "user.display_name"\n *       paths: "photo"\n *     }\n *\n * In JSON\x2C the same mask is represented as below:\n *\n *     {\n *       mask: "user.displayName\x2Cphoto"\n *     }\n *\n * # Field Masks and Oneof Fields\n *\n * Field masks treat fields in oneofs just as regular fields. Consider the\n * following message:\n *\n *     message SampleMessage {\n *       oneof test_oneof {\n *         string name = 4;\n *         SubMessage sub_message = 9;\n *       }\n *     }\n *\n * The field mask can be:\n *\n *     mask {\n *       paths: "name"\n *     }\n *\n * Or:\n *\n *     mask {\n *       paths: "sub_message"\n *     }\n *\n * Note that oneof type names ("test_oneof" in this case) cannot be used in\n * paths.\n *\n * ## Field Mask Verification\n *\n * The implementation of any API method which has a FieldMask type field in the\n * request should verify the included field paths\x2C and return an\n * `INVALID_ARGUMENT` error if any path is unmappable.\n *\n * @generated from message google.protobuf.FieldMask\n */\nexport class FieldMask extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The set of field mask paths.\n         *\n         * @generated from field: repeated string paths = 1;\n         */\n        this.paths = [];\n        proto3.util.initPartial(data\x2C this);\n    }\n    toJson(options) {\n        // Converts snake_case to protoCamelCase according to the convention\n        // used by protoc to convert a field name to a JSON name.\n        function protoCamelCase(snakeCase) {\n            let capNext = false;\n            const b = [];\n            for (let i = 0; i < snakeCase.length; i++) {\n                let c = snakeCase.charAt(i);\n                switch (c) {\n                    case '_':\n                        capNext = true;\n                        break;\n                    case '0':\n                    case '1':\n                    case '2':\n                    case '3':\n                    case '4':\n                    case '5':\n                    case '6':\n                    case '7':\n                    case '8':\n                    case '9':\n                        b.push(c);\n                        capNext = false;\n                        break;\n                    default:\n                        if (capNext) {\n                            capNext = false;\n                            c = c.toUpperCase();\n                        }\n                        b.push(c);\n                        break;\n                }\n            }\n            return b.join('');\n        }\n        return this.paths.map(p => {\n            if (p.match(/_[0-9]?_/g) || p.match(/[A-Z]/g)) {\n                throw new Error("cannot decode google.protobuf.FieldMask from JSON: lowerCamelCase of path name \\"" + p + "\\" is irreversible");\n            }\n            return protoCamelCase(p);\n        }).join("\x2C");\n    }\n    fromJson(json\x2C options) {\n        if (typeof json !== "string") {\n            throw new Error("cannot decode google.protobuf.FieldMask from JSON: " + proto3.json.debug(json));\n        }\n        if (json === "") {\n            return this;\n        }\n        function camelToSnake(str) {\n            if (str.includes("_")) {\n                throw new Error("cannot decode google.protobuf.FieldMask from JSON: path names must be lowerCamelCase");\n            }\n            const sc = str.replace(/[A-Z]/g\x2C letter => "_" + letter.toLowerCase());\n            return (sc[0] === "_") ? sc.substring(1) : sc;\n        }\n        this.paths = json.split("\x2C").map(camelToSnake);\n        return this;\n    }\n    static fromBinary(bytes\x2C options) {\n        return new FieldMask().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new FieldMask().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new FieldMask().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto3.util.equals(FieldMask\x2C a\x2C b);\n    }\n}\nFieldMask.runtime = proto3;\nFieldMask.typeName = "google.protobuf.FieldMask";\nFieldMask.fields = proto3.util.newFieldList(() => [\n    { no: 1\x2C name: "paths"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C repeated: true }\x2C\n]);\n
code-source-info,0x13959b1adc0,490,0,10018,C10O0C28O0C48O0C59O6851C118O6827C121O9792C125O9812C130O9810C134O9820C140O9839C144O9870C148O9889C154O9896C159O9901C169O9901C175O9887C184O10018,,
tick,0x105027bec,100125,1,0x104a6bc1c,3,0x0,0x109d0ba34,0x109cf3688,0x105405ef4
code-creation,Script,10,100125,0x13959b1fa30,1471, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/google/protobuf/wrappers_pb.js:1:1,0x13959b1bef0,~
script-source,491,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/google/protobuf/wrappers_pb.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from "../../message.js";\nimport { proto3 } from "../../proto3.js";\nimport { ScalarType } from "../../field.js";\nimport { protoInt64 } from "../../proto-int64.js";\n/**\n * Wrapper message for `double`.\n *\n * The JSON representation for `DoubleValue` is JSON number.\n *\n * @generated from message google.protobuf.DoubleValue\n */\nexport class DoubleValue extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The double value.\n         *\n         * @generated from field: double value = 1;\n         */\n        this.value = 0;\n        proto3.util.initPartial(data\x2C this);\n    }\n    toJson(options) {\n        return proto3.json.writeScalar(ScalarType.DOUBLE\x2C this.value\x2C true);\n    }\n    fromJson(json\x2C options) {\n        try {\n            this.value = proto3.json.readScalar(ScalarType.DOUBLE\x2C json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.DoubleValue from JSON"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes\x2C options) {\n        return new DoubleValue().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new DoubleValue().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new DoubleValue().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto3.util.equals(DoubleValue\x2C a\x2C b);\n    }\n}\nDoubleValue.runtime = proto3;\nDoubleValue.typeName = "google.protobuf.DoubleValue";\nDoubleValue.fields = proto3.util.newFieldList(() => [\n    { no: 1\x2C name: "value"\x2C kind: "scalar"\x2C T: 1 /* ScalarType.DOUBLE */ }\x2C\n]);\nDoubleValue.fieldWrapper = {\n    wrapField(value) {\n        return new DoubleValue({ value });\n    }\x2C\n    unwrapField(value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `float`.\n *\n * The JSON representation for `FloatValue` is JSON number.\n *\n * @generated from message google.protobuf.FloatValue\n */\nexport class FloatValue extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The float value.\n         *\n         * @generated from field: float value = 1;\n         */\n        this.value = 0;\n        proto3.util.initPartial(data\x2C this);\n    }\n    toJson(options) {\n        return proto3.json.writeScalar(ScalarType.FLOAT\x2C this.value\x2C true);\n    }\n    fromJson(json\x2C options) {\n        try {\n            this.value = proto3.json.readScalar(ScalarType.FLOAT\x2C json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.FloatValue from JSON"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes\x2C options) {\n        return new FloatValue().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new FloatValue().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new FloatValue().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto3.util.equals(FloatValue\x2C a\x2C b);\n    }\n}\nFloatValue.runtime = proto3;\nFloatValue.typeName = "google.protobuf.FloatValue";\nFloatValue.fields = proto3.util.newFieldList(() => [\n    { no: 1\x2C name: "value"\x2C kind: "scalar"\x2C T: 2 /* ScalarType.FLOAT */ }\x2C\n]);\nFloatValue.fieldWrapper = {\n    wrapField(value) {\n        return new FloatValue({ value });\n    }\x2C\n    unwrapField(value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `int64`.\n *\n * The JSON representation for `Int64Value` is JSON string.\n *\n * @generated from message google.protobuf.Int64Value\n */\nexport class Int64Value extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The int64 value.\n         *\n         * @generated from field: int64 value = 1;\n         */\n        this.value = protoInt64.zero;\n        proto3.util.initPartial(data\x2C this);\n    }\n    toJson(options) {\n        return proto3.json.writeScalar(ScalarType.INT64\x2C this.value\x2C true);\n    }\n    fromJson(json\x2C options) {\n        try {\n            this.value = proto3.json.readScalar(ScalarType.INT64\x2C json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.Int64Value from JSON"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes\x2C options) {\n        return new Int64Value().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new Int64Value().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new Int64Value().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto3.util.equals(Int64Value\x2C a\x2C b);\n    }\n}\nInt64Value.runtime = proto3;\nInt64Value.typeName = "google.protobuf.Int64Value";\nInt64Value.fields = proto3.util.newFieldList(() => [\n    { no: 1\x2C name: "value"\x2C kind: "scalar"\x2C T: 3 /* ScalarType.INT64 */ }\x2C\n]);\nInt64Value.fieldWrapper = {\n    wrapField(value) {\n        return new Int64Value({ value });\n    }\x2C\n    unwrapField(value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `uint64`.\n *\n * The JSON representation for `UInt64Value` is JSON string.\n *\n * @generated from message google.protobuf.UInt64Value\n */\nexport class UInt64Value extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The uint64 value.\n         *\n         * @generated from field: uint64 value = 1;\n         */\n        this.value = protoInt64.zero;\n        proto3.util.initPartial(data\x2C this);\n    }\n    toJson(options) {\n        return proto3.json.writeScalar(ScalarType.UINT64\x2C this.value\x2C true);\n    }\n    fromJson(json\x2C options) {\n        try {\n            this.value = proto3.json.readScalar(ScalarType.UINT64\x2C json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.UInt64Value from JSON"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes\x2C options) {\n        return new UInt64Value().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new UInt64Value().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new UInt64Value().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto3.util.equals(UInt64Value\x2C a\x2C b);\n    }\n}\nUInt64Value.runtime = proto3;\nUInt64Value.typeName = "google.protobuf.UInt64Value";\nUInt64Value.fields = proto3.util.newFieldList(() => [\n    { no: 1\x2C name: "value"\x2C kind: "scalar"\x2C T: 4 /* ScalarType.UINT64 */ }\x2C\n]);\nUInt64Value.fieldWrapper = {\n    wrapField(value) {\n        return new UInt64Value({ value });\n    }\x2C\n    unwrapField(value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `int32`.\n *\n * The JSON representation for `Int32Value` is JSON number.\n *\n * @generated from message google.protobuf.Int32Value\n */\nexport class Int32Value extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The int32 value.\n         *\n         * @generated from field: int32 value = 1;\n         */\n        this.value = 0;\n        proto3.util.initPartial(data\x2C this);\n    }\n    toJson(options) {\n        return proto3.json.writeScalar(ScalarType.INT32\x2C this.value\x2C true);\n    }\n    fromJson(json\x2C options) {\n        try {\n            this.value = proto3.json.readScalar(ScalarType.INT32\x2C json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.Int32Value from JSON"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes\x2C options) {\n        return new Int32Value().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new Int32Value().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new Int32Value().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto3.util.equals(Int32Value\x2C a\x2C b);\n    }\n}\nInt32Value.runtime = proto3;\nInt32Value.typeName = "google.protobuf.Int32Value";\nInt32Value.fields = proto3.util.newFieldList(() => [\n    { no: 1\x2C name: "value"\x2C kind: "scalar"\x2C T: 5 /* ScalarType.INT32 */ }\x2C\n]);\nInt32Value.fieldWrapper = {\n    wrapField(value) {\n        return new Int32Value({ value });\n    }\x2C\n    unwrapField(value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `uint32`.\n *\n * The JSON representation for `UInt32Value` is JSON number.\n *\n * @generated from message google.protobuf.UInt32Value\n */\nexport class UInt32Value extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The uint32 value.\n         *\n         * @generated from field: uint32 value = 1;\n         */\n        this.value = 0;\n        proto3.util.initPartial(data\x2C this);\n    }\n    toJson(options) {\n        return proto3.json.writeScalar(ScalarType.UINT32\x2C this.value\x2C true);\n    }\n    fromJson(json\x2C options) {\n        try {\n            this.value = proto3.json.readScalar(ScalarType.UINT32\x2C json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.UInt32Value from JSON"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes\x2C options) {\n        return new UInt32Value().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new UInt32Value().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new UInt32Value().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto3.util.equals(UInt32Value\x2C a\x2C b);\n    }\n}\nUInt32Value.runtime = proto3;\nUInt32Value.typeName = "google.protobuf.UInt32Value";\nUInt32Value.fields = proto3.util.newFieldList(() => [\n    { no: 1\x2C name: "value"\x2C kind: "scalar"\x2C T: 13 /* ScalarType.UINT32 */ }\x2C\n]);\nUInt32Value.fieldWrapper = {\n    wrapField(value) {\n        return new UInt32Value({ value });\n    }\x2C\n    unwrapField(value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `bool`.\n *\n * The JSON representation for `BoolValue` is JSON `true` and `false`.\n *\n * @generated from message google.protobuf.BoolValue\n */\nexport class BoolValue extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The bool value.\n         *\n         * @generated from field: bool value = 1;\n         */\n        this.value = false;\n        proto3.util.initPartial(data\x2C this);\n    }\n    toJson(options) {\n        return proto3.json.writeScalar(ScalarType.BOOL\x2C this.value\x2C true);\n    }\n    fromJson(json\x2C options) {\n        try {\n            this.value = proto3.json.readScalar(ScalarType.BOOL\x2C json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.BoolValue from JSON"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes\x2C options) {\n        return new BoolValue().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new BoolValue().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new BoolValue().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto3.util.equals(BoolValue\x2C a\x2C b);\n    }\n}\nBoolValue.runtime = proto3;\nBoolValue.typeName = "google.protobuf.BoolValue";\nBoolValue.fields = proto3.util.newFieldList(() => [\n    { no: 1\x2C name: "value"\x2C kind: "scalar"\x2C T: 8 /* ScalarType.BOOL */ }\x2C\n]);\nBoolValue.fieldWrapper = {\n    wrapField(value) {\n        return new BoolValue({ value });\n    }\x2C\n    unwrapField(value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `string`.\n *\n * The JSON representation for `StringValue` is JSON string.\n *\n * @generated from message google.protobuf.StringValue\n */\nexport class StringValue extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The string value.\n         *\n         * @generated from field: string value = 1;\n         */\n        this.value = "";\n        proto3.util.initPartial(data\x2C this);\n    }\n    toJson(options) {\n        return proto3.json.writeScalar(ScalarType.STRING\x2C this.value\x2C true);\n    }\n    fromJson(json\x2C options) {\n        try {\n            this.value = proto3.json.readScalar(ScalarType.STRING\x2C json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.StringValue from JSON"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes\x2C options) {\n        return new StringValue().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new StringValue().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new StringValue().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto3.util.equals(StringValue\x2C a\x2C b);\n    }\n}\nStringValue.runtime = proto3;\nStringValue.typeName = "google.protobuf.StringValue";\nStringValue.fields = proto3.util.newFieldList(() => [\n    { no: 1\x2C name: "value"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */ }\x2C\n]);\nStringValue.fieldWrapper = {\n    wrapField(value) {\n        return new StringValue({ value });\n    }\x2C\n    unwrapField(value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `bytes`.\n *\n * The JSON representation for `BytesValue` is JSON string.\n *\n * @generated from message google.protobuf.BytesValue\n */\nexport class BytesValue extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The bytes value.\n         *\n         * @generated from field: bytes value = 1;\n         */\n        this.value = new Uint8Array(0);\n        proto3.util.initPartial(data\x2C this);\n    }\n    toJson(options) {\n        return proto3.json.writeScalar(ScalarType.BYTES\x2C this.value\x2C true);\n    }\n    fromJson(json\x2C options) {\n        try {\n            this.value = proto3.json.readScalar(ScalarType.BYTES\x2C json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.BytesValue from JSON"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes\x2C options) {\n        return new BytesValue().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new BytesValue().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new BytesValue().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto3.util.equals(BytesValue\x2C a\x2C b);\n    }\n}\nBytesValue.runtime = proto3;\nBytesValue.typeName = "google.protobuf.BytesValue";\nBytesValue.fields = proto3.util.newFieldList(() => [\n    { no: 1\x2C name: "value"\x2C kind: "scalar"\x2C T: 12 /* ScalarType.BYTES */ }\x2C\n]);\nBytesValue.fieldWrapper = {\n    wrapField(value) {\n        return new BytesValue({ value });\n    }\x2C\n    unwrapField(value) {\n        return value.value;\n    }\n};\n
code-source-info,0x13959b1fa
code-creation,Script,10,101166,0x13959b23cd8,795, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/google/protobuf/type_pb.js:1:1,0x13959b219e8,~
script-source,492,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/google/protobuf/type_pb.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// @generated by protoc-gen-es v0.3.0 with parameter "bootstrap_wkt=true\x2Cts_nocheck=false\x2Ctarget=ts"\n// @generated from file google/protobuf/type.proto (package google.protobuf\x2C syntax proto3)\n/* eslint-disable */\nimport { proto3 } from "../../proto3.js";\nimport { Message } from "../../message.js";\nimport { SourceContext } from "./source_context_pb.js";\nimport { Any } from "./any_pb.js";\n/**\n * The syntax in which a protocol buffer element is defined.\n *\n * @generated from enum google.protobuf.Syntax\n */\nexport var Syntax;\n(function (Syntax) {\n    /**\n     * Syntax `proto2`.\n     *\n     * @generated from enum value: SYNTAX_PROTO2 = 0;\n     */\n    Syntax[Syntax["PROTO2"] = 0] = "PROTO2";\n    /**\n     * Syntax `proto3`.\n     *\n     * @generated from enum value: SYNTAX_PROTO3 = 1;\n     */\n    Syntax[Syntax["PROTO3"] = 1] = "PROTO3";\n})(Syntax || (Syntax = {}));\n// Retrieve enum metadata with: proto3.getEnumType(Syntax)\nproto3.util.setEnumType(Syntax\x2C "google.protobuf.Syntax"\x2C [\n    { no: 0\x2C name: "SYNTAX_PROTO2" }\x2C\n    { no: 1\x2C name: "SYNTAX_PROTO3" }\x2C\n]);\n/**\n * A protocol buffer message type.\n *\n * @generated from message google.protobuf.Type\n */\nexport class Type extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The fully qualified message name.\n         *\n         * @generated from field: string name = 1;\n         */\n        this.name = "";\n        /**\n         * The list of fields.\n         *\n         * @generated from field: repeated google.protobuf.Field fields = 2;\n         */\n        this.fields = [];\n        /**\n         * The list of types appearing in `oneof` definitions in this type.\n         *\n         * @generated from field: repeated string oneofs = 3;\n         */\n        this.oneofs = [];\n        /**\n         * The protocol buffer options.\n         *\n         * @generated from field: repeated google.protobuf.Option options = 4;\n         */\n        this.options = [];\n        /**\n         * The source syntax.\n         *\n         * @generated from field: google.protobuf.Syntax syntax = 6;\n         */\n        this.syntax = Syntax.PROTO2;\n        proto3.util.initPartial(data\x2C this);\n    }\n    static fromBinary(bytes\x2C options) {\n        return new Type().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new Type().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new Type().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto3.util.equals(Type\x2C a\x2C b);\n    }\n}\nType.runtime = proto3;\nType.typeName = "google.protobuf.Type";\nType.fields = proto3.util.newFieldList(() => [\n    { no: 1\x2C name: "name"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */ }\x2C\n    { no: 2\x2C name: "fields"\x2C kind: "message"\x2C T: Field\x2C repeated: true }\x2C\n    { no: 3\x2C name: "oneofs"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */\x2C repeated: true }\x2C\n    { no: 4\x2C name: "options"\x2C kind: "message"\x2C T: Option\x2C repeated: true }\x2C\n    { no: 5\x2C name: "source_context"\x2C kind: "message"\x2C T: SourceContext }\x2C\n    { no: 6\x2C name: "syntax"\x2C kind: "enum"\x2C T: proto3.getEnumType(Syntax) }\x2C\n]);\n/**\n * A single field of a message type.\n *\n * @generated from message google.protobuf.Field\n */\nexport class Field extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The field type.\n         *\n         * @generated from field: google.protobuf.Field.Kind kind = 1;\n         */\n        this.kind = Field_Kind.TYPE_UNKNOWN;\n        /**\n         * The field cardinality.\n         *\n         * @generated from field: google.protobuf.Field.Cardinality cardinality = 2;\n         */\n        this.cardinality = Field_Cardinality.UNKNOWN;\n        /**\n         * The field number.\n         *\n         * @generated from field: int32 number = 3;\n         */\n        this.number = 0;\n        /**\n         * The field name.\n         *\n         * @generated from field: string name = 4;\n         */\n        this.name = "";\n        /**\n         * The field type URL\x2C without the scheme\x2C for message or enumeration\n         * types. Example: `"type.googleapis.com/google.protobuf.Timestamp"`.\n         *\n         * @generated from field: string type_url = 6;\n         */\n        this.typeUrl = "";\n        /**\n         * The index of the field type in `Type.oneofs`\x2C for message or enumeration\n         * types. The first type has index 1; zero means the type is not in the list.\n         *\n         * @generated from field: int32 oneof_index = 7;\n         */\n        this.oneofIndex = 0;\n        /**\n         * Whether to use alternative packed wire representation.\n         *\n         * @generated from field: bool packed = 8;\n         */\n        this.packed = false;\n        /**\n         * The protocol buffer options.\n         *\n         * @generated from field: repeated google.protobuf.Option options = 9;\n         */\n        this.options = [];\n        /**\n         * The field JSON name.\n         *\n         * @generated from field: string json_name = 10;\n         */\n        this.jsonName = "";\n        /**\n         * The string value of the default value of this field. Proto2 syntax only.\n         *\n         * @generated from field: string default_value = 11;\n         */\n        this.defaultValue = "";\n        proto3.util.initPartial(data\x2C this);\n    }\n    static fromBinary(bytes\x2C options) {\n        return new Field().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new Field().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new Field().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto3.util.equals(Field\x2C a\x2C b);\n    }\n}\nField.runtime = proto3;\nField.typeName = "google.protobuf.Field";\nField.fields = proto3.util.newFieldList(() => [\n    { no: 1\x2C name: "kind"\x2C kind: "enum"\x2C T: proto3.getEnumType(Field_Kind) }\x2C\n    { no: 2\x2C name: "cardinality"\x2C kind: "enum"\x2C T: proto3.getEnumType(Field_Cardinality) }\x2C\n    { no: 3\x2C name: "number"\x2C kind: "scalar"\x2C T: 5 /* ScalarType.INT32 */ }\x2C\n    { no: 4\x2C name: "name"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */ }\x2C\n    { no: 6\x2C name: "type_url"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */ }\x2C\n    { no: 7\x2C name: "oneof_index"\x2C kind: "scalar"\x2C T: 5 /* ScalarType.INT32 */ }\x2C\n    { no: 8\x2C name: "packed"\x2C kind: "scalar"\x2C T: 8 /* ScalarType.BOOL */ }\x2C\n    { no: 9\x2C name: "options"\x2C kind: "message"\x2C T: Option\x2C repeated: true }\x2C\n    { no: 10\x2C name: "json_name"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */ }\x2C\n    { no: 11\x2C name: "default_value"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */ }\x2C\n]);\n/**\n * Basic field types.\n *\n * @generated from enum google.protobuf.Field.Kind\n */\nexport var Field_Kind;\n(function (Field_Kind) {\n    /**\n     * Field type unknown.\n     *\n     * @generated from enum value: TYPE_UNKNOWN = 0;\n     */\n    Field_Kind[Field_Kind["TYPE_UNKNOWN"] = 0] = "TYPE_UNKNOWN";\n    /**\n     * Field type double.\n     *\n     * @generated from enum value: TYPE_DOUBLE = 1;\n     */\n    Field_Kind[Field_Kind["TYPE_DOUBLE"] = 1] = "TYPE_DOUBLE";\n    /**\n     * Field type float.\n     *\n     * @generated from enum value: TYPE_FLOAT = 2;\n     */\n    Field_Kind[Field_Kind["TYPE_FLOAT"] = 2] = "TYPE_FLOAT";\n    /**\n     * Field type int64.\n     *\n     * @generated from enum value: TYPE_INT64 = 3;\n     */\n    Field_Kind[Field_Kind["TYPE_INT64"] = 3] = "TYPE_INT64";\n    /**\n     * Field type uint64.\n     *\n     * @generated from enum value: TYPE_UINT64 = 4;\n     */\n    Field_Kind[Field_Kind["TYPE_UINT64"] = 4] = "TYPE_UINT64";\n    /**\n     * Field type int32.\n     *\n     * @generated from enum value: TYPE_INT32 = 5;\n     */\n    Field_Kind[Field_Kind["TYPE_INT32"] = 5] = "TYPE_INT32";\n    /**\n     * Field type fixed64.\n     *\n     * @generated from enum value: TYPE_FIXED64 = 6;\n     */\n    Field_Kind[Field_Kind["TYPE_FIXED64"] = 6] = "TYPE_FIXED64";\n    /**\n     * Field type fixed32.\n     *\n     * @generated from enum value: TYPE_FIXED32 = 7;\n     */\n    Field_Kind[Field_Kind["TYPE_FIXED32"] = 7] = "TYPE_FIXED32";\n    /**\n     * Field type bool.\n     *\n     * @generated from enum value: TYPE_BOOL = 8;\n     */\n    Field_Kind[Field_Kind["TYPE_BOOL"] = 8] = "TYPE_BOOL";\n    /**\n     * Field type string.\n     *\n     * @generated from enum value: TYPE_STRING = 9;\n     */\n    Field_Kind[Field_Kind["TYPE_STRING"] = 9] = "TYPE_STRING";\n    /**\n     * Field type group. Proto2 syntax only\x2C and deprecated.\n     *\n     * @generated from enum value: TYPE_GROUP = 10;\n     */\n    Field_Kind[Field_Kind["TYPE_GROUP"] = 10] = "TYPE_GROUP";\n    /**\n     * Field type message.\n     *\n     * @generated from enum value: TYPE_MESSAGE = 11;\n     */\n    Field_Kind[Field_Kind["TYPE_MESSAGE"] = 11] = "TYPE_MESSAGE";\n    /**\n     * Field type bytes.\n     *\n     * @generated from enum value: TYPE_BYTES = 12;\n     */\n    Field_Kind[Field_Kind["TYPE_BYTES"] = 12] = "TYPE_BYTES";\n    /**\n     * Field type uint32.\n     *\n     * @generated from enum value: TYPE_UINT32 = 13;\n     */\n    Field_Kind[Field_Kind["TYPE_UINT32"] = 13] = "TYPE_UINT32";\n    /**\n     * Field type enum.\n     *\n     * @generated from enum value: TYPE_ENUM = 14;\n     */\n    Field_Kind[Field_Kind["TYPE_ENUM"] = 14] = "TYPE_ENUM";\n    /**\n     * Field type sfixed32.\n     *\n     * @generated from enum value: TYPE_SFIXED32 = 15;\n     */\n    Field_Kind[Field_Kind["TYPE_SFIXED32"] = 15] = "TYPE_SFIXED32";\n    /**\n     * Field type sfixed64.\n     *\n     * @generated from enum value: TYPE_SFIXED64 = 16;\n     */\n    Field_Kind[Field_Kind["TYPE_SFIXED64"] = 16] = "TYPE_SFIXED64";\n    /**\n     * Field type sint32.\n     *\n     * @generated from enum value: TYPE_SINT32 = 17;\n     */\n    Field_Kind[Field_Kind["TYPE_SINT32"] = 17] = "TYPE_SINT32";\n    /**\n     * Field type sint64.\n     *\n     * @generated from enum value: TYPE_SINT64 = 18;\n     */\n    Field_Kind[Field_Kind["TYPE_SINT64"] = 18] = "TYPE_SINT64";\n})(Field_Kind || (Field_Kind = {}));\n// Retrieve enum metadata with: proto3.getEnumType(Field_Kind)\nproto3.util.setEnumType(Field_Kind\x2C "google.protobuf.Field.Kind"\x2C [\n    { no: 0\x2C name: "TYPE_UNKNOWN" }\x2C\n    { no: 1\x2C name: "TYPE_DOUBLE" }\x2C\n    { no: 2\x2C name: "TYPE_FLOAT" }\x2C\n    { no: 3\x2C name: "TYPE_INT64" }\x2C\n    { no: 4\x2C name: "TYPE_UINT64" }\x2C\n    { no: 5\x2C name: "TYPE_INT32" }\x2C\n    { no: 6\x2C name: "TYPE_FIXED64" }\x2C\n    { no: 7\x2C name: "TYPE_FIXED32" }\x2C\n    { no: 8\x2C name: "TYPE_BOOL" }\x2C\n    { no: 9\x2C name: "TYPE_STRING" }\x2C\n    { no: 10\x2C name: "TYPE_GROUP" }\x2C\n    { no: 11\x2C name: "TYPE_MESSAGE" }\x2C\n    { no: 12\x2C name: "TYPE_BYTES" }\x2C\n    { no: 13\x2C name: "TYPE_UINT32" }\x2C\n    { no: 14\x2C name: "TYPE_ENUM" }\x2C\n    { no: 15\x2C name: "TYPE_SFIXED32" }\x2C\n    { no: 16\x2C name: "TYPE_SFIXED64" }\x2C\n    { no: 17\x2C name: "TYPE_SINT32" }\x2C\n    { no: 18\x2C name: "TYPE_SINT64" }\x2C\n]);\n/**\n * Whether a field is optional\x2C required\x2C or repeated.\n *\n * @generated from enum google.protobuf.Field.Cardinality\n */\nexport var Field_Cardinality;\n(function (Field_Cardinality) {\n    /**\n     * For fields with unknown cardinality.\n     *\n     * @generated from enum value: CARDINALITY_UNKNOWN = 0;\n     */\n    Field_Cardinality[Field_Cardinality["UNKNOWN"] = 0] = "UNKNOWN";\n    /**\n     * For optional fields.\n     *\n     * @generated from enum value: CARDINALITY_OPTIONAL = 1;\n     */\n    Field_Cardinality[Field_Cardinality["OPTIONAL"] = 1] = "OPTIONAL";\n    /**\n     * For required fields. Proto2 syntax only.\n     *\n     * @generated from enum value: CARDINALITY_REQUIRED = 2;\n     */\n    Field_Cardinality[Field_Cardinality["REQUIRED"] = 2] = "REQUIRED";\n    /**\n     * For repeated fields.\n     *\n     * @generated from enum value: CARDINALITY_REPEATED = 3;\n     */\n    Field_Cardinality[Field_Cardinality["REPEATED"] = 3] = "REPEATED";\n})(Field_Cardinality || (Field_Cardinality = {}));\n// Retrieve enum metadata with: proto3.getEnumType(Field_Cardinality)\nproto3.util.setEnumType(Field_Cardinality\x2C "google.protobuf.Field.Cardinality"\x2C [\n    { no: 0\x2C name: "CARDINALITY_UNKNOWN" }\x2C\n    { no: 1\x2C name: "CARDINALITY_OPTIONAL" }\x2C\n    { no: 2\x2C name: "CARDINALITY_REQUIRED" }\x2C\n    { no: 3\x2C name: "CARDINALITY_REPEATED" }\x2C\n]);\n/**\n * Enum type definition.\n *\n * @generated from message google.protobuf.Enum\n */\nexport class Enum extends Message {\n    constructor(data) {\n        super();\n        /**\n         * Enum type name.\n         *\n         * @generated from field: string name = 1;\n         */\n        this.name = "";\n        /**\n         * Enum value definitions.\n         *\n         * @generated from field: repeated google.protobuf.EnumValue enumvalue = 2;\n         */\n        this.enumvalue = [];\n        /**\n         * Protocol buffer options.\n         *\n         * @generated from field: repeated google.protobuf.Option options = 3;\n         */\n        this.options = [];\n        /**\n         * The source syntax.\n         *\n         * @generated from field: google.protobuf.Syntax syntax = 5;\n         */\n        this.syntax = Syntax.PROTO2;\n        proto3.util.initPartial(data\x2C this);\n    }\n    static fromBinary(bytes\x2C options) {\n        return new Enum().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new Enum().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new Enum().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto3.util.equals(Enum\x2C a\x2C b);\n    }\n}\nEnum.runtime = proto3;\nEnum.typeName = "google.protobuf.Enum";\nEnum.fields = proto3.util.newFieldList(() => [\n    { no: 1\x2C name: "name"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */ }\x2C\n    { no: 2\x2C name: "enumvalue"\x2C kind: "message"\x2C T: EnumValue\x2C repeated: true }\x2C\n    { no: 3\x2C name: "options"\x2C kind: "message"\x2C T: Option\x2C repeated: true }\x2C\n    { no: 4\x2C name: "source_context"\x2C kind: "message"\x2C T: SourceContext }\x2C\n    { no: 5\x2C name: "syntax"\x2C kind: "enum"\x2C T: proto3.getEnumType(Syntax) }\x2C\n]);\n/**\n * Enum value definition.\n *\n * @generated from message google.protobuf.EnumValue\n */\nexport class EnumValue extends Message {\n    constructor(data) {\n        super();\n        /**\n         * Enum value name.\n         *\n         * @generated from field: string name = 1;\n         */\n        this.name = "";\n        /**\n         * Enum value number.\n         *\n         * @generated from field: int32 number = 2;\n         */\n        this.number = 0;\n        /**\n         * Protocol buffer options.\n         *\n         * @generated from field: repeated google.protobuf.Option options = 3;\n         */\n        this.options = [];\n        proto3.util.initPartial(data\x2C this);\n    }\n    static fromBinary(bytes\x2C options) {\n        return new EnumValue().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new EnumValue().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new EnumValue().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto3.util.equals(EnumValue\x2C a\x2C b);\n    }\n}\nEnumValue.runtime = proto3;\nEnumValue.typeName = "google.protobuf.EnumValue";\nEnumValue.fields = proto3.util.newFieldList(() => [\n    { no: 1\x2C name: "name"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */ }\x2C\n    { no: 2\x2C name: "number"\x2C kind: "scalar"\x2C T: 5 /* ScalarType.INT32 */ }\x2C\n    { no: 3\x2C name: "options"\x2C kind: "message"\x2C T: Option\x2C repeated: true }\x2C\n]);\n/**\n * A protocol buffer option\x2C which can be attached to a message\x2C field\x2C\n * enumeration\x2C etc.\n *\n * @generated from message google.protobuf.Option\n */\nexport class Option extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The option's name. For protobuf built-in options (options defined in\n         * descriptor.proto)\x2C this is the short name. For example\x2C `"map_entry"`.\n         * For custom options\x2C it should be the fully-qualified name. For example\x2C\n         * `"google.api.http"`.\n         *\n         * @generated from field: string name = 1;\n         */\n        this.name = "";\n        proto3.util.initPartial(data\x2C this);\n    }\n    static fromBinary(bytes\x2C options) {\n        return new Option().fromBinary(bytes\x2C options);\n    }\n    static fromJson(jsonValue\x2C options) {\n        return new Option().fromJson(jsonValue\x2C options);\n    }\n    static fromJsonString(jsonString\x2C options) {\n        return new Option().fromJsonString(jsonString\x2C options);\n    }\n    static equals(a\x2C b) {\n        return proto3.util.equals(Option\x2C a\x2C b);\n    }\n}\nOption.runtime = proto3;\nOption.typeName = "google.protobuf.Option";\nOption.fields = proto3.util.newFieldList(() => [\n    { no: 1\x2C name: "name"\x2C kind: "scalar"\x2C T: 9 /* ScalarType.STRING */ }\x2C\n    { no: 2\x2C name: "value"\x2C kind: "message"\x2C T: Any }\x2C\n]);\n
code-source-info,0x13959b23cd
code-creation,Function,10,101833,0x13959b24190,53, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/google/protobuf/type_pb.js:358:11,0x13959b225f8,~
code-source-info,0x13959b24190,492,11586,12374,C0O11739C2O11786C8O11791C12O11920C15O11968C21O11973C25O12123C28O12171C34O12176C38O12306C41O12354C47O12359C52O12373,,
code-creation,Function,10,101833,0x13959b24300,248, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/google/protobuf/type_pb.js:214:11,0x13959b225c0,~
code-source-info,0x13959b24300,492,7377,10559,C0O7499C2O7537C8O7542C12O7665C15O7702C21O7707C25O7827C28O7863C34O7868C38O7987C41O8023C47O8028C51O8149C54O8186C60O8191C64O8311C67O8347C73O8352C77O8475C80O8513C86O8518C90O8643C93O8681C99O8686C103O8805C106O8840C112O8845C116O8965C119O9002C125O9007C129O9164C132O9200C138O9206C142O9330C145O9368C151O9374C155O9496C158O9532C164O9538C168O9660C171O9697C177O9703C181O9822C184O9857C190O9863C194O9988C197O10027C203O10033C207O10162C210O10201C216O10207C220O10332C223O10369C229O10375C233O10498C236O10535C242O10541C247O10558,,
code-creation,Function,10,101875,0x13959b24548,27, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/google/protobuf/type_pb.js:27:11,0x13959b221c8,~
code-source-info,0x13959b24548,492,1144,1448,C0O1260C2O1284C8O1289C12O1406C15O1430C21O1435C26O1447,,
tick,0x1a4dd99a4,101916,1,0x104a6bc1c,3,0x0,0x109d0ba34,0x109cf3688,0x105405ef4
code-creation,LazyCompile,13,102416,0x109d0c2c0,284,isURLThis node:internal/url:631:19,0x3b46b2026570,*
code-source-info,0x109d0c2c0,74,17502,17591,C0O17502C52O17526C68O17548C80O17564C104O17589C164O17502,,
feedback-vector,102416,0x117768a07108,2,0x109d0c2c0,TieringState::kInProgress,0,6152,0,0x117768a07109: [FeedbackVector] in OldSpace\n - map: 0x0152b3601b89 <Map>\n - length: 2\n - shared function info: 0x3b46b2026571 <SharedFunctionInfo isURLThis>\n - no optimized code\n - tiering state: TieringState::kInProgress\n - maybe has optimized code: 0\n - invocation count: 6152\n - profiler ticks: 0\n - closure feedback cell array: 0x152b36032f1: [ClosureFeedbackCellArray] in ReadOnlySpace\n - map: 0x0152b3601f39 <Map>\n - length: 0\n\n - slot #0 LoadKeyed MONOMORPHIC {\n     [0]: 0x1e27ac666c49 <Symbol: context>\n     [1]: 0x1f083e6cbb31 <Other heap object (WEAK_FIXED_ARRAY_TYPE)>\n  }\n
code-creation,Function,11,102583,0x109d0c460,1744,validateNumber node:internal/validators:174:24,0x3d9b801bffb0,^
code-source-info,0x109d0c460,22,4409,4854,,,
code-creation,Function,11,102583,0x109d0cba0,1248,toString node:buffer:789:46,0xa0ae21f4d40,^
code-source-info,0x109d0cba0,30,23289,23851,,,
code-creation,Function,11,102625,0x109d0d0e0,456,validateDecoder node:internal/encoding:68:25,0x111f698c9228,^
code-source-info,0x109d0d0e0,33,1349,1450,,,
code-creation,Function,11,102708,0x109d0d320,232,assert node:internal/assert:11:16,0xa0ae21dbc70,^
code-source-info,0x109d0d320,27,172,307,,,
code-creation,Function,11,102750,0x109d0d480,496,assertEncoding node:internal/fs/utils:156:24,0x3b46b2034640,^
code-source-info,0x109d0d480,77,3600,3777,,,
code-creation,Function,11,102750,0x109d0d6e0,416,getSourceMapsEnabled node:internal/source_map/source_map_cache:51:30,0x1e372ce12848,^
code-source-info,0x109d0d6e0,427,1839,1984,,,
tick,0x1a4e3ea90,102791,0,0x0,0,0x0,0x117768a178f8,0x109cfb58c,0x109cfb0f8,0x109cf98b0,0x105405ef4
code-creation,Function,11,102791,0x109d0d8e0,1176,addJobsToDependencyGraph node:internal/modules/esm/module_job:107:38,0x117768a13550,^
code-source-info,0x109d0d8e0,435,3283,3533,,,
code-creation,Script,10,103041,0x13959b26ab8,58, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/proto-runtime.js:1:1,0x13959b266a8,~
script-source,493,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/proto-runtime.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { getEnumType\x2C makeEnum\x2C makeEnumType } from "./enum.js";\nimport { makeMessageType } from "./message-type.js";\nexport function makeProtoRuntime(syntax\x2C json\x2C bin\x2C util) {\n    return {\n        syntax\x2C\n        json\x2C\n        bin\x2C\n        util\x2C\n        makeMessageType(typeName\x2C fields\x2C opt) {\n            return makeMessageType(this\x2C typeName\x2C fields\x2C opt);\n        }\x2C\n        makeEnum\x2C\n        makeEnumType\x2C\n        getEnumType\x2C\n    };\n}\n
code-source-info,0x13959b26ab8,493,0,1048,C10O0C28O0C48O0C57O1048,,
code-creation,Script,10,103375,0x13959b272e8,58, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/json-format-proto3.js:1:1,0x13959b26f10,~
script-source,494,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/json-format-proto3.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { wrapField } from "./field-wrapper.js";\nimport { assert } from "./assert.js";\nimport { makeJsonFormatCommon } from "./json-format-common.js";\n/* eslint-disable no-case-declarations\x2C @typescript-eslint/restrict-plus-operands\x2C@typescript-eslint/no-explicit-any\x2C@typescript-eslint/no-unsafe-return\x2C@typescript-eslint/no-unsafe-assignment\x2C@typescript-eslint/no-unsafe-call\x2C@typescript-eslint/no-unsafe-member-access\x2C@typescript-eslint/no-unsafe-argument */\nexport function makeJsonFormatProto3() {\n    return makeJsonFormatCommon((writeEnum\x2C writeScalar) => {\n        return function writeField(field\x2C value\x2C options) {\n            if (field.kind == "map") {\n                const jsonObj = {};\n                switch (field.V.kind) {\n                    case "scalar":\n                        for (const [entryKey\x2C entryValue] of Object.entries(value)) {\n                            const val = writeScalar(field.V.T\x2C entryValue\x2C true);\n                            assert(val !== undefined);\n                            jsonObj[entryKey.toString()] = val; // JSON standard allows only (double quoted) string as property key\n                        }\n                        break;\n                    case "message":\n                        for (const [entryKey\x2C entryValue] of Object.entries(value)) {\n                            // JSON standard allows only (double quoted) string as property key\n                            jsonObj[entryKey.toString()] = entryValue.toJson(options);\n                        }\n                        break;\n                    case "enum":\n                        const enumType = field.V.T;\n                        for (const [entryKey\x2C entryValue] of Object.entries(value)) {\n                            assert(entryValue === undefined || typeof entryValue == "number");\n                            const val = writeEnum(enumType\x2C entryValue\x2C true\x2C options.enumAsInteger);\n                            assert(val !== undefined);\n                            jsonObj[entryKey.toString()] = val; // JSON standard allows only (double quoted) string as property key\n                        }\n                        break;\n                }\n                return options.emitDefaultValues || Object.keys(jsonObj).length > 0\n                    ? jsonObj\n                    : undefined;\n            }\n            else if (field.repeated) {\n                const jsonArr = [];\n                switch (field.kind) {\n                    case "scalar":\n                        for (let i = 0; i < value.length; i++) {\n                            jsonArr.push(writeScalar(field.T\x2C value[i]\x2C true));\n                        }\n                        break;\n                    case "enum":\n                        for (let i = 0; i < value.length; i++) {\n                            jsonArr.push(writeEnum(field.T\x2C value[i]\x2C true\x2C options.enumAsInteger));\n                        }\n                        break;\n                    case "message":\n                        for (let i = 0; i < value.length; i++) {\n                            jsonArr.push(wrapField(field.T\x2C value[i]).toJson(options));\n                        }\n                        break;\n                }\n                return options.emitDefaultValues || jsonArr.length > 0\n                    ? jsonArr\n                    : undefined;\n            }\n            else {\n                switch (field.kind) {\n                    case "scalar":\n                        return writeScalar(field.T\x2C value\x2C !!field.oneof || field.opt || options.emitDefaultValues);\n                    case "enum":\n                        return writeEnum(field.T\x2C value\x2C !!field.oneof || field.opt || options.emitDefaultValues\x2C options.enumAsInteger);\n                    case "message":\n                        return value !== undefined\n                            ? wrapField(field.T\x2C value).toJson(options)\n                            : undefined;\n                }\n            }\n        };\n    });\n}\n
code-source-info,0x13959b272e8,494,0,4595,C10O0C28O0C48O0C57O4595,,
tick,0x105027bd8,103916,1,0x104a6bc1c,3,0x0,0x109d0ba34,0x109cf3688,0x105405ef4
code-creation,Script,10,103958,0x13959b27e50,64, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/util-common.js:1:1,0x13959b27980,~
script-source,495,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/util-common.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { setEnumType } from "./enum.js";\nimport { Message\x2C } from "../message.js";\nimport { ScalarType } from "../field.js";\nimport { scalarEquals } from "./scalars.js";\n/* eslint-disable @typescript-eslint/no-explicit-any\x2C@typescript-eslint/no-unsafe-assignment\x2C@typescript-eslint/no-unsafe-member-access\x2C@typescript-eslint/no-unsafe-return\x2C@typescript-eslint/no-unsafe-argument\x2Cno-case-declarations */\nexport function makeUtilCommon() {\n    return {\n        setEnumType\x2C\n        initPartial(source\x2C target) {\n            if (source === undefined) {\n                return;\n            }\n            const type = target.getType();\n            for (const member of type.fields.byMember()) {\n                const localName = member.localName\x2C t = target\x2C s = source;\n                if (s[localName] === undefined) {\n                    continue;\n                }\n                switch (member.kind) {\n                    case "oneof":\n                        const sk = s[localName].case;\n                        if (sk === undefined) {\n                            continue;\n                        }\n                        const sourceField = member.findField(sk);\n                        let val = s[localName].value;\n                        if (sourceField &&\n                            sourceField.kind == "message" &&\n                            !(val instanceof sourceField.T)) {\n                            val = new sourceField.T(val);\n                        }\n                        t[localName] = { case: sk\x2C value: val };\n                        break;\n                    case "scalar":\n                    case "enum":\n                        t[localName] = s[localName];\n                        break;\n                    case "map":\n                        switch (member.V.kind) {\n                            case "scalar":\n                            case "enum":\n                                Object.assign(t[localName]\x2C s[localName]);\n                                break;\n                            case "message":\n                                const messageType = member.V.T;\n                                for (const k of Object.keys(s[localName])) {\n                                    let val = s[localName][k];\n                                    if (!messageType.fieldWrapper) {\n                                        // We only take partial input for messages that are not a wrapper type.\n                                        // For those messages\x2C we recursively normalize the partial input.\n                                        val = new messageType(val);\n                                    }\n                                    t[localName][k] = val;\n                                }\n                                break;\n                        }\n                        break;\n                    case "message":\n                        const mt = member.T;\n                        if (member.repeated) {\n                            t[localName] = s[localName].map((val) => val instanceof mt ? val : new mt(val));\n                        }\n                        else if (s[localName] !== undefined) {\n                            const val = s[localName];\n                            if (mt.fieldWrapper) {\n                                t[localName] = val;\n                            }\n                            else {\n                                t[localName] = val instanceof mt ? val : new mt(val);\n                            }\n                        }\n                        break;\n                }\n            }\n        }\x2C\n        equals(type\x2C a\x2C b) {\n            if (a === b) {\n                return true;\n            }\n            if (!a || !b) {\n                return false;\n            }\n            return type.fields.byMember().every((m) => {\n                const va = a[m.localName];\n                const vb = b[m.localName];\n                if (m.repeated) {\n                    if (va.length !== vb.length) {\n                        return false;\n                    }\n                    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- repeated fields are never "map"\n                    switch (m.kind) {\n                        case "message":\n                            return va.every((a\x2C i) => m.T.equals(a\x2C vb[i]));\n                        case "scalar":\n                            return va.every((a\x2C i) => scalarEquals(m.T\x2C a\x2C vb[i]));\n                        case "enum":\n                            return va.every((a\x2C i) => scalarEquals(ScalarType.INT32\x2C a\x2C vb[i]));\n                    }\n                    throw new Error(`repeated cannot contain ${m.kind}`);\n                }\n                switch (m.kind) {\n                    case "message":\n                        return m.T.equals(va\x2C vb);\n                    case "enum":\n                        return scalarEquals(ScalarType.INT32\x2C va\x2C vb);\n                    case "scalar":\n                        return scalarEquals(m.T\x2C va\x2C vb);\n                    case "oneof":\n                        if (va.case !== vb.case) {\n                            return false;\n                        }\n                        const k = va.case\x2C s = m.findField(k);\n                        if (s === undefined) {\n                            return true;\n                        }\n                        // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- oneof fields are never "map"\n                        switch (s.kind) {\n                            case "message":\n                                return s.T.equals(va[k]\x2C vb[k]);\n                            case "enum":\n                                return scalarEquals(ScalarType.INT32\x2C va\x2C vb);\n                            case "scalar":\n                                return scalarEquals(s.T\x2C va\x2C vb);\n                        }\n                        throw new Error(`oneof cannot contain ${s.kind}`);\n                    case "map":\n                        const keys = Object.keys(va).concat(Object.keys(vb));\n                        switch (m.V.kind) {\n                            case "message":\n                                const messageType = m.V.T;\n                                return keys.every((k) => messageType.equals(va[k]\x2C vb[k]));\n                            case "enum":\n                                return keys.every((k) => scalarEquals(ScalarType.INT32\x2C va[k]\x2C vb[k]));\n                            case "scalar":\n                                const scalarType = m.V.T;\n                                return keys.every((k) => scalarEquals(scalarType\x2C va[k]\x2C vb[k]));\n                        }\n                        break;\n                }\n            });\n        }\x2C\n        clone(message) {\n            const type = message.getType()\x2C target = new type()\x2C any = target;\n            for (const member of type.fields.byMember()) {\n                const source = message[member.localName];\n                let copy;\n                if (member.repeated) {\n                    copy = source.map((e) => cloneSingularField(member\x2C e));\n                }\n                else if (member.kind == "map") {\n                    copy = any[member.localName];\n                    for (const [key\x2C v] of Object.entries(source)) {\n                        copy[key] = cloneSingularField(member.V\x2C v);\n                    }\n                }\n                else if (member.kind == "oneof") {\n                    const f = member.findField(source.case);\n                    copy = f\n                        ? { case: source.case\x2C value: cloneSingularField(f\x2C source.value) }\n                        : { case: undefined };\n                }\n                else {\n                    copy = cloneSingularField(member\x2C source);\n                }\n                any[member.localName] = copy;\n            }\n            return target;\n        }\x2C\n    };\n}\n// clone a single field value - i.e. the element type of repeated fields\x2C the value type of maps\nfunction cloneSingularField(field\x2C value) {\n    if (value === undefined) {\n        return value;\n    }\n    if (value instanceof Message) {\n        return value.clone();\n    }\n    if (value instanceof Uint8Array) {\n        const c = new Uint8Array(value.byteLength);\n        c.set(value);\n        return c;\n    }\n    return value;\n}\n
code-source-info,0x13959b27e50,495,0,8968,C10O0C34O0C54O0C63O8968,,
code-creation,Script,10,104583,0x13959b28c90,58, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/binary-format-proto3.js:1:1,0x13959b287c0,~
script-source,496,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/binary-format-proto3.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { ScalarType } from "../field.js";\nimport { makeBinaryFormatCommon\x2C writeMapEntry\x2C writeMessageField\x2C writePacked\x2C writeScalar\x2C } from "./binary-format-common.js";\n/* eslint-disable @typescript-eslint/no-unsafe-member-access\x2C @typescript-eslint/no-unsafe-argument\x2C @typescript-eslint/no-unsafe-assignment\x2C @typescript-eslint/no-unnecessary-condition\x2C @typescript-eslint/strict-boolean-expressions\x2C prefer-const\x2C no-case-declarations */\nexport function makeBinaryFormatProto3() {\n    return Object.assign(Object.assign({}\x2C makeBinaryFormatCommon())\x2C { writeMessage(message\x2C writer\x2C options) {\n            const type = message.getType();\n            for (const field of type.fields.byNumber()) {\n                let value\x2C // this will be our field value\x2C whether it is member of a oneof or regular field\n                repeated = field.repeated\x2C localName = field.localName;\n                if (field.oneof) {\n                    const oneof = message[field.oneof.localName];\n                    if (oneof.case !== localName) {\n                        continue; // field is not selected\x2C skip\n                    }\n                    value = oneof.value;\n                }\n                else {\n                    value = message[localName];\n                }\n                switch (field.kind) {\n                    case "scalar":\n                    case "enum":\n                        let scalarType = field.kind == "enum" ? ScalarType.INT32 : field.T;\n                        if (repeated) {\n                            if (field.packed) {\n                                writePacked(writer\x2C scalarType\x2C field.no\x2C value);\n                            }\n                            else {\n                                for (const item of value) {\n                                    writeScalar(writer\x2C scalarType\x2C field.no\x2C item\x2C true);\n                                }\n                            }\n                        }\n                        else {\n                            if (value !== undefined) {\n                                writeScalar(writer\x2C scalarType\x2C field.no\x2C value\x2C !!field.oneof || field.opt);\n                            }\n                        }\n                        break;\n                    case "message":\n                        if (repeated) {\n                            for (const item of value) {\n                                writeMessageField(writer\x2C options\x2C field.T\x2C field.no\x2C item);\n                            }\n                        }\n                        else {\n                            writeMessageField(writer\x2C options\x2C field.T\x2C field.no\x2C value);\n                        }\n                        break;\n                    case "map":\n                        for (const [key\x2C val] of Object.entries(value)) {\n                            writeMapEntry(writer\x2C options\x2C field\x2C key\x2C val);\n                        }\n                        break;\n                }\n            }\n            if (options.writeUnknownFields) {\n                this.writeUnknownFields(message\x2C writer);\n            }\n            return writer;\n        } });\n}\n
code-source-info,0x13959b28c90,496,0,3724,C10O0C28O0C48O0C57O3724,,
tick,0x105076534,105208,1,0x104a6bc1c,2,0x0,0x109d0ba34,0x109cf3688,0x105405ef4
code-creation,Script,10,105208,0x13959b296a0,58, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/scalars.js:1:1,0x13959b29190,~
script-source,497,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/scalars.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { ScalarType } from "../field.js";\nimport { WireType } from "../binary-encoding.js";\nimport { protoInt64 } from "../proto-int64.js";\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Returns true if both scalar values are equal.\n */\nexport function scalarEquals(type\x2C a\x2C b) {\n    if (a === b) {\n        // This correctly matches equal values except BYTES and (possibly) 64-bit integers.\n        return true;\n    }\n    // Special case BYTES - we need to compare each byte individually\n    if (type == ScalarType.BYTES) {\n        if (!(a instanceof Uint8Array) || !(b instanceof Uint8Array)) {\n            return false;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n            if (a[i] !== b[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    // Special case 64-bit integers - we support number\x2C string and bigint representation.\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n    switch (type) {\n        case ScalarType.UINT64:\n        case ScalarType.FIXED64:\n        case ScalarType.INT64:\n        case ScalarType.SFIXED64:\n        case ScalarType.SINT64:\n            // Loose comparison will match between 0n\x2C 0 and "0".\n            return a == b;\n    }\n    // Anything that hasn't been caught by strict comparison or special cased\n    // BYTES and 64-bit integers is not equal.\n    return false;\n}\n/**\n * Returns the default value for the given scalar type\x2C following\n * proto3 semantics.\n */\nexport function scalarDefaultValue(type) {\n    switch (type) {\n        case ScalarType.BOOL:\n            return false;\n        case ScalarType.UINT64:\n        case ScalarType.FIXED64:\n        case ScalarType.INT64:\n        case ScalarType.SFIXED64:\n        case ScalarType.SINT64:\n            return protoInt64.zero;\n        case ScalarType.DOUBLE:\n        case ScalarType.FLOAT:\n            return 0.0;\n        case ScalarType.BYTES:\n            return new Uint8Array(0);\n        case ScalarType.STRING:\n            return "";\n        default:\n            // Handles INT32\x2C UINT32\x2C SINT32\x2C FIXED32\x2C SFIXED32.\n            // We do not use individual cases to save a few bytes code size.\n            return 0;\n    }\n}\n/**\n * Get information for writing a scalar value.\n *\n * Returns tuple:\n * [0]: appropriate WireType\n * [1]: name of the appropriate method of IBinaryWriter\n * [2]: whether the given value is a default value for proto3 semantics\n *\n * If argument `value` is omitted\x2C [2] is always false.\n */\nexport function scalarTypeInfo(type\x2C value) {\n    const isUndefined = value === undefined;\n    let wireType = WireType.Varint;\n    let isIntrinsicDefault = value === 0;\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- INT32\x2C UINT32\x2C SINT32 are covered by the defaults\n    switch (type) {\n        case ScalarType.STRING:\n            isIntrinsicDefault = isUndefined || !value.length;\n            wireType = WireType.LengthDelimited;\n            break;\n        case ScalarType.BOOL:\n            isIntrinsicDefault = value === false;\n            break;\n        case ScalarType.DOUBLE:\n            wireType = WireType.Bit64;\n            break;\n        case ScalarType.FLOAT:\n            wireType = WireType.Bit32;\n            break;\n        case ScalarType.INT64:\n            isIntrinsicDefault = isUndefined || value == 0;\n            break;\n        case ScalarType.UINT64:\n            isIntrinsicDefault = isUndefined || value == 0;\n            break;\n        case ScalarType.FIXED64:\n            isIntrinsicDefault = isUndefined || value == 0;\n            wireType = WireType.Bit64;\n            break;\n        case ScalarType.BYTES:\n            isIntrinsicDefault = isUndefined || !value.byteLength;\n            wireType = WireType.LengthDelimited;\n            break;\n        case ScalarType.FIXED32:\n            wireType = WireType.Bit32;\n            break;\n        case ScalarType.SFIXED32:\n            wireType = WireType.Bit32;\n            break;\n        case ScalarType.SFIXED64:\n            isIntrinsicDefault = isUndefined || value == 0;\n            wireType = WireType.Bit64;\n            break;\n        case ScalarType.SINT64:\n            isIntrinsicDefault = isUndefined || value == 0;\n            break;\n    }\n    const method = ScalarType[type].toLowerCase();\n    return [wireType\x2C method\x2C isUndefined || isIntrinsicDefault];\n}\n
code-source-info,0x13959b296a0,497,0,5056,C10O0C28O0C48O0C57O5056,,
code-creation,Script,10,105625,0x13959b2a348,107, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/field-list.js:1:1,0x13959b29de8,~
script-source,498,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/field-list.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nexport class InternalFieldList {\n    constructor(fields\x2C normalizer) {\n        this._fields = fields;\n        this._normalizer = normalizer;\n    }\n    findJsonName(jsonName) {\n        if (!this.jsonNames) {\n            const t = {};\n            for (const f of this.list()) {\n                t[f.jsonName] = t[f.name] = f;\n            }\n            this.jsonNames = t;\n        }\n        return this.jsonNames[jsonName];\n    }\n    find(fieldNo) {\n        if (!this.numbers) {\n            const t = {};\n            for (const f of this.list()) {\n                t[f.no] = f;\n            }\n            this.numbers = t;\n        }\n        return this.numbers[fieldNo];\n    }\n    list() {\n        if (!this.all) {\n            this.all = this._normalizer(this._fields);\n        }\n        return this.all;\n    }\n    byNumber() {\n        if (!this.numbersAsc) {\n            this.numbersAsc = this.list()\n                .concat()\n                .sort((a\x2C b) => a.no - b.no);\n        }\n        return this.numbersAsc;\n    }\n    byMember() {\n        if (!this.members) {\n            this.members = [];\n            const a = this.members;\n            let o;\n            for (const f of this.list()) {\n                if (f.oneof) {\n                    if (f.oneof !== o) {\n                        o = f.oneof;\n                        a.push(o);\n                    }\n                }\n                else {\n                    a.push(f);\n                }\n            }\n        }\n        return this.members;\n    }\n}\n
code-source-info,0x13959b2a348,498,0,2113,C10O0C28O0C48O0C101O612C106O2113,,
code-creation,Script,10,105750,0x13959b2ad40,92, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/field.js:1:1,0x13959b2a800,~
script-source,499,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/field.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { localOneofName } from "./names.js";\nimport { assert } from "./assert.js";\nexport class InternalOneofInfo {\n    constructor(name) {\n        this.kind = "oneof";\n        this.repeated = false;\n        this.packed = false;\n        this.opt = false;\n        this.default = undefined;\n        this.fields = [];\n        this.name = name;\n        this.localName = localOneofName(name);\n    }\n    addField(field) {\n        assert(field.oneof === this\x2C `field ${field.name} not one of ${this.name}`);\n        this.fields.push(field);\n    }\n    findField(localName) {\n        if (!this._lookup) {\n            this._lookup = Object.create(null);\n            for (let i = 0; i < this.fields.length; i++) {\n                this._lookup[this.fields[i].localName] = this.fields[i];\n            }\n        }\n        return this._lookup[localName];\n    }\n}\n
code-source-info,0x13959b2ad40,499,0,1453,C10O0C28O0C48O0C86O695C91O1453,,
code-creation,Script,10,106083,0x13959b2bf18,102, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/names.js:1:1,0x13959b2b520,~
script-source,500,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/names.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Returns the name of a protobuf element in generated code.\n *\n * Field names - including oneofs - are converted to lowerCamelCase. For\n * messages\x2C enumerations and services\x2C the package name is stripped from\n * the type name. For nested messages and enumerations\x2C the names are joined\n * with an underscore. For methods\x2C the first character is made lowercase.\n */\nexport function localName(desc) {\n    switch (desc.kind) {\n        case "field":\n            return localFieldName(desc.name\x2C desc.oneof !== undefined);\n        case "oneof":\n            return localOneofName(desc.name);\n        case "enum":\n        case "message":\n        case "service": {\n            const pkg = desc.file.proto.package;\n            const offset = pkg === undefined ? 0 : pkg.length + 1;\n            const name = desc.typeName.substring(offset).replace(/\\./g\x2C "_");\n            if (reservedIdent[name]) {\n                return name + "$";\n            }\n            return name;\n        }\n        case "enum_value": {\n            const sharedPrefix = desc.parent.sharedPrefix;\n            if (sharedPrefix === undefined) {\n                return desc.name;\n            }\n            const name = desc.name.substring(sharedPrefix.length);\n            if (reservedObjectProperties[name]) {\n                return name + "$";\n            }\n            return name;\n        }\n        case "rpc": {\n            let name = desc.name;\n            if (name.length == 0) {\n                return name;\n            }\n            name = name[0].toLowerCase() + name.substring(1);\n            if (reservedObjectProperties[name]) {\n                return name + "$";\n            }\n            return name;\n        }\n    }\n}\n/**\n * Returns the name of a field in generated code.\n */\nexport function localFieldName(protoName\x2C inOneof) {\n    let name = protoCamelCase(protoName);\n    if (inOneof) {\n        // oneof member names are not properties\x2C but values of the `case` property.\n        return name;\n    }\n    if (reservedObjectProperties[name] || reservedMessageProperties[name]) {\n        name = name + "$";\n    }\n    return name;\n}\n/**\n * Returns the name of a oneof group in generated code.\n */\nexport function localOneofName(protoName) {\n    return localFieldName(protoName\x2C false);\n}\n/**\n * Returns the JSON name for a protobuf field\x2C exactly like protoc does.\n */\nexport const fieldJsonName = protoCamelCase;\n/**\n * Finds a prefix shared by enum values\x2C for example `MY_ENUM_` for\n * `enum MyEnum {MY_ENUM_A=0; MY_ENUM_B=1;}`.\n */\nexport function findEnumSharedPrefix(enumName\x2C valueNames) {\n    const prefix = camelToSnakeCase(enumName) + "_";\n    for (const name of valueNames) {\n        if (!name.toLowerCase().startsWith(prefix)) {\n            return undefined;\n        }\n        const shortName = name.substring(prefix.length);\n        if (shortName.length == 0) {\n            return undefined;\n        }\n        if (/^\\d/.test(shortName)) {\n            // identifiers must not start with numbers\n            return undefined;\n        }\n    }\n    return prefix;\n}\n/**\n * Converts lowerCamelCase or UpperCamelCase into lower_snake_case.\n * This is used to find shared prefixes in an enum.\n */\nfunction camelToSnakeCase(camel) {\n    return (camel.substring(0\x2C 1) + camel.substring(1).replace(/[A-Z]/g\x2C (c) => "_" + c)).toLowerCase();\n}\n/**\n * Converts snake_case to protoCamelCase according to the convention\n * used by protoc to convert a field name to a JSON name.\n */\nfunction protoCamelCase(snakeCase) {\n    let capNext = false;\n    const b = [];\n    for (let i = 0; i < snakeCase.length; i++) {\n        let c = snakeCase.charAt(i);\n        switch (c) {\n            case "_":\n                capNext = true;\n                break;\n            case "0":\n            case "1":\n            case "2":\n            case "3":\n            case "4":\n            case "5":\n            case "6":\n            case "7":\n            case "8":\n            case "9":\n                b.push(c);\n                capNext = false;\n                break;\n            default:\n                if (capNext) {\n                    capNext = false;\n                    c = c.toUpperCase();\n                }\n                b.push(c);\n                break;\n        }\n    }\n    return b.join("");\n}\n// Names that cannot be used for identifiers\x2C such as class names\x2C\n// but _can_ be used for object properties.\nconst reservedIdent = {\n    // ECMAScript 2015 keywords\n    break: true\x2C\n    case: true\x2C\n    catch: true\x2C\n    class: true\x2C\n    const: true\x2C\n    continue: true\x2C\n    debugger: true\x2C\n    default: true\x2C\n    delete: true\x2C\n    do: true\x2C\n    else: true\x2C\n    export: true\x2C\n    extends: true\x2C\n    false: true\x2C\n    finally: true\x2C\n    for: true\x2C\n    function: true\x2C\n    if: true\x2C\n    import: true\x2C\n    in: true\x2C\n    instanceof: true\x2C\n    new: true\x2C\n    null: true\x2C\n    return: true\x2C\n    super: true\x2C\n    switch: true\x2C\n    this: true\x2C\n    throw: true\x2C\n    true: true\x2C\n    try: true\x2C\n    typeof: true\x2C\n    var: true\x2C\n    void: true\x2C\n    while: true\x2C\n    with: true\x2C\n    yield: true\x2C\n    // ECMAScript 2015 future reserved keywords\n    enum: true\x2C\n    implements: true\x2C\n    interface: true\x2C\n    let: true\x2C\n    package: true\x2C\n    private: true\x2C\n    protected: true\x2C\n    public: true\x2C\n    static: true\x2C\n    // Class name cannot be 'Object' when targeting ES5 with module CommonJS\n    Object: true\x2C\n    // TypeScript keywords that cannot be used for types (as opposed to variables)\n    bigint: true\x2C\n    number: true\x2C\n    boolean: true\x2C\n    string: true\x2C\n    object: true\x2C\n    // Identifiers reserved for the runtime\x2C so we can generate legible code\n    globalThis: true\x2C\n    Uint8Array: true\x2C\n    Partial: true\x2C\n};\n// Names that cannot be used for object properties because they are reserved\n// by built-in JavaScript properties.\nconst reservedObjectProperties = {\n    // names reserved by JavaScript\n    constructor: true\x2C\n    toString: true\x2C\n    toJSON: true\x2C\n    valueOf: true\x2C\n};\n// Names that cannot be used for object properties because they are reserved\n// by the runtime.\nconst reservedMessageProperties = {\n    // names reserved by the runtime\n    getType: true\x2C\n    clone: true\x2C\n    equals: true\x2C\n    fromBinary: true\x2C\n    fromJson: true\x2C\n    fromJsonString: true\x2C\n    toBinary: true\x2C\n    toJson: true\x2C\n    toJsonString: true\x2C\n    // names reserved by the runtime for the future\n    toObject: true\x2C\n};\n
code-source-info,0x13959b2bf18,500,0,6979,C10O0C49O0C69O0C76O2985C78O2985C81O5005C85O5005C87O6430C91O6430C93O6681C97O6681C101O6979,,
tick,0x1050890fc,106458,1,0x104a6bc1c,2,0x0,0x109d0ba34,0x109cf3688,0x105405ef4
code-creation,Script,10,106500,0x13959b2d398,92, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/google/varint.js:1:1,0x13959b2cb90,~
script-source,501,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/google/varint.js,// Copyright 2008 Google Inc.  All rights reserved.\n//\n// Redistribution and use in source and binary forms\x2C with or without\n// modification\x2C are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice\x2C this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice\x2C this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES\x2C INCLUDING\x2C BUT NOT\n// LIMITED TO\x2C THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT\x2C INDIRECT\x2C INCIDENTAL\x2C\n// SPECIAL\x2C EXEMPLARY\x2C OR CONSEQUENTIAL DAMAGES (INCLUDING\x2C BUT NOT\n// LIMITED TO\x2C PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE\x2C\n// DATA\x2C OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY\x2C WHETHER IN CONTRACT\x2C STRICT LIABILITY\x2C OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE\x2C EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\n// Code generated by the Protocol Buffer compiler is owned by the owner\n// of the input file used when generating it.  This code is not\n// standalone and requires a support library to be linked with it.  This\n// support library is itself covered by the above license.\n/* eslint-disable prefer-const\x2C@typescript-eslint/restrict-plus-operands */\n/**\n * Read a 64 bit varint as two JS numbers.\n *\n * Returns tuple:\n * [0]: low bits\n * [1]: high bits\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L175\n */\nexport function varint64read() {\n    let lowBits = 0;\n    let highBits = 0;\n    for (let shift = 0; shift < 28; shift += 7) {\n        let b = this.buf[this.pos++];\n        lowBits |= (b & 0x7f) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits\x2C highBits];\n        }\n    }\n    let middleByte = this.buf[this.pos++];\n    // last four bits of the first 32 bit number\n    lowBits |= (middleByte & 0x0f) << 28;\n    // 3 upper bits are part of the next 32 bit number\n    highBits = (middleByte & 0x70) >> 4;\n    if ((middleByte & 0x80) == 0) {\n        this.assertBounds();\n        return [lowBits\x2C highBits];\n    }\n    for (let shift = 3; shift <= 31; shift += 7) {\n        let b = this.buf[this.pos++];\n        highBits |= (b & 0x7f) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits\x2C highBits];\n        }\n    }\n    throw new Error("invalid varint");\n}\n/**\n * Write a 64 bit varint\x2C given as two JS numbers\x2C to the given bytes array.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/writer.js#L344\n */\nexport function varint64write(lo\x2C hi\x2C bytes) {\n    for (let i = 0; i < 28; i = i + 7) {\n        const shift = lo >>> i;\n        const hasNext = !(shift >>> 7 == 0 && hi == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xff;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    const splitBits = ((lo >>> 28) & 0x0f) | ((hi & 0x07) << 4);\n    const hasMoreBits = !(hi >> 3 == 0);\n    bytes.push((hasMoreBits ? splitBits | 0x80 : splitBits) & 0xff);\n    if (!hasMoreBits) {\n        return;\n    }\n    for (let i = 3; i < 31; i = i + 7) {\n        const shift = hi >>> i;\n        const hasNext = !(shift >>> 7 == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xff;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    bytes.push((hi >>> 31) & 0x01);\n}\n// constants for binary math\nconst TWO_PWR_32_DBL = 0x100000000;\n/**\n * Parse decimal string of 64 bit integer value as two JS numbers.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nexport function int64FromString(dec) {\n    // Check for minus sign.\n    const minus = dec[0] === "-";\n    if (minus) {\n        dec = dec.slice(1);\n    }\n    // Work 6 decimal digits at a time\x2C acting like we're converting base 1e6\n    // digits to binary. This is safe to do with floating point math because\n    // Number.isSafeInteger(ALL_32_BITS * 1e6) == true.\n    const base = 1e6;\n    let lowBits = 0;\n    let highBits = 0;\n    function add1e6digit(begin\x2C end) {\n        // Note: Number('') is 0.\n        const digit1e6 = Number(dec.slice(begin\x2C end));\n        highBits *= base;\n        lowBits = lowBits * base + digit1e6;\n        // Carry bits from lowBits to\n        if (lowBits >= TWO_PWR_32_DBL) {\n            highBits = highBits + ((lowBits / TWO_PWR_32_DBL) | 0);\n            lowBits = lowBits % TWO_PWR_32_DBL;\n        }\n    }\n    add1e6digit(-24\x2C -18);\n    add1e6digit(-18\x2C -12);\n    add1e6digit(-12\x2C -6);\n    add1e6digit(-6);\n    return minus ? negate(lowBits\x2C highBits) : newBits(lowBits\x2C highBits);\n}\n/**\n * Losslessly converts a 64-bit signed integer in 32:32 split representation\n * into a decimal string.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nexport function int64ToString(lo\x2C hi) {\n    let bits = newBits(lo\x2C hi);\n    // If we're treating the input as a signed value and the high bit is set\x2C do\n    // a manual two's complement conversion before the decimal conversion.\n    const negative = (bits.hi & 0x80000000);\n    if (negative) {\n        bits = negate(bits.lo\x2C bits.hi);\n    }\n    const result = uInt64ToString(bits.lo\x2C bits.hi);\n    return negative ? "-" + result : result;\n}\n/**\n * Losslessly converts a 64-bit unsigned integer in 32:32 split representation\n * into a decimal string.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nexport function uInt64ToString(lo\x2C hi) {\n    ({ lo\x2C hi } = toUnsigned(lo\x2C hi));\n    // Skip the expensive conversion if the number is small enough to use the\n    // built-in conversions.\n    // Number.MAX_SAFE_INTEGER = 0x001FFFFF FFFFFFFF\x2C thus any number with\n    // highBits <= 0x1FFFFF can be safely expressed with a double and retain\n    // integer precision.\n    // Proven by: Number.isSafeInteger(0x1FFFFF * 2**32 + 0xFFFFFFFF) == true.\n    if (hi <= 0x1FFFFF) {\n        return String(TWO_PWR_32_DBL * hi + lo);\n    }\n    // What this code is doing is essentially converting the input number from\n    // base-2 to base-1e7\x2C which allows us to represent the 64-bit range with\n    // only 3 (very large) digits. Those digits are then trivial to convert to\n    // a base-10 string.\n    // The magic numbers used here are -\n    // 2^24 = 16777216 = (1\x2C6777216) in base-1e7.\n    // 2^48 = 281474976710656 = (2\x2C8147497\x2C6710656) in base-1e7.\n    // Split 32:32 representation into 16:24:24 representation so our\n    // intermediate digits don't overflow.\n    const low = lo & 0xFFFFFF;\n    const mid = ((lo >>> 24) | (hi << 8)) & 0xFFFFFF;\n    const high = (hi >> 16) & 0xFFFF;\n    // Assemble our three base-1e7 digits\x2C ignoring carries. The maximum\n    // value in a digit at this step is representable as a 48-bit integer\x2C which\n    // can be stored in a 64-bit floating point number.\n    let digitA = low + (mid * 6777216) + (high * 6710656);\n    let digitB = mid + (high * 8147497);\n    let digitC = (high * 2);\n    // Apply carries from A to B and from B to C.\n    const base = 10000000;\n    if (digitA >= base) {\n        digitB += Math.floor(digitA / base);\n        digitA %= base;\n    }\n    if (digitB >= base) {\n        digitC += Math.floor(digitB / base);\n        digitB %= base;\n    }\n    // If digitC is 0\x2C then we should have returned in the trivial code path\n    // at the top for non-safe integers. Given this\x2C we can assume both digitB\n    // and digitA need leading zeros.\n    return digitC.toString() + decimalFrom1e7WithLeadingZeros(digitB) +\n        decimalFrom1e7WithLeadingZeros(digitA);\n}\nfunction toUnsigned(lo\x2C hi) {\n    return { lo: lo >>> 0\x2C hi: hi >>> 0 };\n}\nfunction newBits(lo\x2C hi) {\n    return { lo: lo | 0\x2C hi: hi | 0 };\n}\n/**\n * Returns two's compliment negation of input.\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators#Signed_32-bit_integers\n */\nfunction negate(lowBits\x2C highBits) {\n    highBits = ~highBits;\n    if (lowBits) {\n        lowBits = ~lowBits + 1;\n    }\n    else {\n        // If lowBits is 0\x2C then bitwise-not is 0xFFFFFFFF\x2C\n        // adding 1 to that\x2C results in 0x100000000\x2C which leaves\n        // the low bits 0x0 and simply adds one to the high bits.\n        highBits += 1;\n    }\n    return newBits(lowBits\x2C highBits);\n}\n/**\n * Returns decimal representation of digit1e7 with leading zeros.\n */\nconst decimalFrom1e7WithLeadingZeros = (digit1e7) => {\n    const partial = String(digit1e7);\n    return "0000000".slice(partial.length) + partial;\n};\n/**\n * Write a 32 bit varint\x2C signed or unsigned. Same as `varint64write(0\x2C value\x2C bytes)`\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/1b18833f4f2a2f681f4e4a25cdf3b0a43115ec26/js/binary/encoder.js#L144\n */\nexport function varint32write(value\x2C bytes) {\n    if (value >= 0) {\n        // write value as varint 32\n        while (value > 0x7f) {\n            bytes.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        bytes.push(value);\n    }\n    else {\n        for (let i = 0; i < 9; i++) {\n            bytes.push((value & 127) | 128);\n            value = value >> 7;\n        }\n        bytes.push(1);\n    }\n}\n/**\n * Read an unsigned 32 bit varint.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L220\n */\nexport function varint32read() {\n    let b = this.buf[this.pos++];\n    let result = b & 0x7f;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 7;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 14;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 21;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    // Extract only last 4 bits\n    b = this.buf[this.pos++];\n    result |= (b & 0x0f) << 28;\n    for (let readBytes = 5; (b & 0x80) !== 0 && readBytes < 10; readBytes++)\n        b = this.buf[this.pos++];\n    if ((b & 0x80) != 0)\n        throw new Error("invalid varint");\n    this.assertBounds();\n    // Result can have 32 bits\x2C convert it to unsigned\n    return result >>> 0;\n}\n
code-source-info,0x13959b2d398,501,0,11662,C10O0C52O0C72O0C79O4343C81O4343C83O9654C87O9654C91O11662,,
code-creation,Script,10,107000,0x13959b2e330,58, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/json-format-proto2.js:1:1,0x13959b2df58,~
script-source,502,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/json-format-proto2.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { wrapField } from "./field-wrapper.js";\nimport { assert } from "./assert.js";\nimport { makeJsonFormatCommon } from "./json-format-common.js";\n/* eslint-disable no-case-declarations\x2C @typescript-eslint/restrict-plus-operands\x2C@typescript-eslint/no-explicit-any\x2C@typescript-eslint/no-unsafe-return\x2C@typescript-eslint/no-unsafe-assignment\x2C@typescript-eslint/no-unsafe-call\x2C@typescript-eslint/no-unsafe-member-access\x2C@typescript-eslint/no-unsafe-argument */\nexport function makeJsonFormatProto2() {\n    return makeJsonFormatCommon((writeEnum\x2C writeScalar) => {\n        return function writeField(field\x2C value\x2C options) {\n            if (field.kind == "map") {\n                const jsonObj = {};\n                switch (field.V.kind) {\n                    case "scalar":\n                        for (const [entryKey\x2C entryValue] of Object.entries(value)) {\n                            const val = writeScalar(field.V.T\x2C entryValue\x2C true);\n                            assert(val !== undefined);\n                            jsonObj[entryKey.toString()] = val; // JSON standard allows only (double quoted) string as property key\n                        }\n                        break;\n                    case "message":\n                        for (const [entryKey\x2C entryValue] of Object.entries(value)) {\n                            // JSON standard allows only (double quoted) string as property key\n                            jsonObj[entryKey.toString()] = entryValue.toJson(options);\n                        }\n                        break;\n                    case "enum":\n                        const enumType = field.V.T;\n                        for (const [entryKey\x2C entryValue] of Object.entries(value)) {\n                            assert(entryValue === undefined || typeof entryValue == "number");\n                            const val = writeEnum(enumType\x2C entryValue\x2C true\x2C options.enumAsInteger);\n                            assert(val !== undefined);\n                            jsonObj[entryKey.toString()] = val; // JSON standard allows only (double quoted) string as property key\n                        }\n                        break;\n                }\n                return options.emitDefaultValues || Object.keys(jsonObj).length > 0\n                    ? jsonObj\n                    : undefined;\n            }\n            else if (field.repeated) {\n                const jsonArr = [];\n                switch (field.kind) {\n                    case "scalar":\n                        for (let i = 0; i < value.length; i++) {\n                            jsonArr.push(writeScalar(field.T\x2C value[i]\x2C true));\n                        }\n                        break;\n                    case "enum":\n                        for (let i = 0; i < value.length; i++) {\n                            jsonArr.push(writeEnum(field.T\x2C value[i]\x2C true\x2C options.enumAsInteger));\n                        }\n                        break;\n                    case "message":\n                        for (let i = 0; i < value.length; i++) {\n                            jsonArr.push(value[i].toJson(options));\n                        }\n                        break;\n                }\n                return options.emitDefaultValues || jsonArr.length > 0\n                    ? jsonArr\n                    : undefined;\n            }\n            else {\n                // In contrast to proto3\x2C we raise an error if a non-optional (proto2 required)\n                // field is missing a value.\n                if (value === undefined) {\n                    if (!field.oneof && !field.opt) {\n                        throw `required field not set`;\n                    }\n                    return undefined;\n                }\n                switch (field.kind) {\n                    case "scalar":\n                        // In contrast to proto3\x2C we do not skip intrinsic default values.\n                        // Explicit default values are not special cased either.\n                        return writeScalar(field.T\x2C value\x2C true);\n                    case "enum":\n                        // In contrast to proto3\x2C we do not skip intrinsic default values.\n                        // Explicit default values are not special cased either.\n                        return writeEnum(field.T\x2C value\x2C true\x2C options.enumAsInteger);\n                    case "message":\n                        return wrapField(field.T\x2C value).toJson(options);\n                }\n            }\n        };\n    });\n}\n
code-source-info,0x13959b2e330,502,0,5099,C10O0C28O0C48O0C57O5099,,
code-creation,Script,10,107416,0x13959b2ed38,58, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/binary-format-proto2.js:1:1,0x13959b2e868,~
script-source,503,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/binary-format-proto2.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { ScalarType } from "../field.js";\nimport { makeBinaryFormatCommon\x2C writeMapEntry\x2C writeMessageField\x2C writePacked\x2C writeScalar\x2C } from "./binary-format-common.js";\n/* eslint-disable @typescript-eslint/no-unsafe-member-access\x2C @typescript-eslint/no-unsafe-argument\x2C @typescript-eslint/no-unsafe-assignment\x2C @typescript-eslint/no-unnecessary-condition\x2C @typescript-eslint/strict-boolean-expressions\x2C no-case-declarations\x2C prefer-const */\nexport function makeBinaryFormatProto2() {\n    return Object.assign(Object.assign({}\x2C makeBinaryFormatCommon())\x2C { writeMessage(message\x2C writer\x2C options) {\n            const type = message.getType();\n            let field;\n            try {\n                for (field of type.fields.byNumber()) {\n                    let value\x2C // this will be our field value\x2C whether it is member of a oneof or not\n                    repeated = field.repeated\x2C localName = field.localName;\n                    if (field.oneof) {\n                        const oneof = message[field.oneof.localName];\n                        if (oneof.case !== localName) {\n                            continue; // field is not selected\x2C skip\n                        }\n                        value = oneof.value;\n                    }\n                    else {\n                        value = message[localName];\n                        // In contrast to proto3\x2C we raise an error if a non-optional (proto2 required)\n                        // field is missing a value.\n                        if (value === undefined && !field.oneof && !field.opt) {\n                            throw new Error(`cannot encode field ${type.typeName}.${field.name} to binary: required field not set`);\n                        }\n                    }\n                    switch (field.kind) {\n                        case "scalar":\n                        case "enum":\n                            let scalarType = field.kind == "enum" ? ScalarType.INT32 : field.T;\n                            if (repeated) {\n                                if (field.packed) {\n                                    writePacked(writer\x2C scalarType\x2C field.no\x2C value);\n                                }\n                                else {\n                                    for (const item of value) {\n                                        writeScalar(writer\x2C scalarType\x2C field.no\x2C item\x2C true);\n                                    }\n                                }\n                            }\n                            else {\n                                if (value !== undefined) {\n                                    // In contrast to proto3\x2C we do not skip intrinsic default values.\n                                    // Explicit default values are not special cased either.\n                                    writeScalar(writer\x2C scalarType\x2C field.no\x2C value\x2C true);\n                                }\n                            }\n                            break;\n                        case "message":\n                            if (repeated) {\n                                for (const item of value) {\n                                    writeMessageField(writer\x2C options\x2C field.T\x2C field.no\x2C item);\n                                }\n                            }\n                            else {\n                                writeMessageField(writer\x2C options\x2C field.T\x2C field.no\x2C value);\n                            }\n                            break;\n                        case "map":\n                            for (const [key\x2C val] of Object.entries(value)) {\n                                writeMapEntry(writer\x2C options\x2C field\x2C key\x2C val);\n                            }\n                            break;\n                    }\n                }\n            }\n            catch (e) {\n                let m = field\n                    ? `cannot encode field ${type.typeName}.${field === null || field === void 0 ? void 0 : field.name} to binary`\n                    : `cannot encode message ${type.typeName} to binary`;\n                let r = e instanceof Error ? e.message : String(e);\n                throw new Error(m + (r.length > 0 ? `: ${r}` : ""));\n            }\n            if (options.writeUnknownFields) {\n                this.writeUnknownFields(message\x2C writer);\n            }\n            return writer;\n        } });\n}\n
code-source-info,0x13959b2ed38,503,0,4944,C10O0C28O0C48O0C57O4944,,
tick,0x1053c9920,107708,0,0x0,0,0x105492b48,0x109cd3b80,0x109ce3d48,0x105467eec,0x109ce3704,0x109ce38e0,0x105492b48,0x109ce3b40,0x109cf3c90,0x105405ef4
code-creation,Script,10,107791,0x13959b2f600,58, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/reify-wkt.js:1:1,0x13959b2f360,~
script-source,504,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/reify-wkt.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { ScalarType } from "../field.js";\n/**\n * Reifies a given DescMessage into a more concrete object representing its\n * respective well-known type.  The returned object will contain properties\n * representing the WKT's defined fields.\n *\n * Useful during code generation when immediate access to a particular field\n * is needed without having to search the object's typename and DescField list.\n *\n * Returns undefined if the WKT cannot be completely constructed via the\n * DescMessage.\n */\nexport function reifyWkt(message) {\n    switch (message.typeName) {\n        case "google.protobuf.Any": {\n            const typeUrl = message.fields.find((f) => f.number == 1 &&\n                f.fieldKind == "scalar" &&\n                f.scalar === ScalarType.STRING);\n            const value = message.fields.find((f) => f.number == 2 &&\n                f.fieldKind == "scalar" &&\n                f.scalar === ScalarType.BYTES);\n            if (typeUrl && value) {\n                return {\n                    typeName: message.typeName\x2C\n                    typeUrl\x2C\n                    value\x2C\n                };\n            }\n            break;\n        }\n        case "google.protobuf.Timestamp": {\n            const seconds = message.fields.find((f) => f.number == 1 &&\n                f.fieldKind == "scalar" &&\n                f.scalar === ScalarType.INT64);\n            const nanos = message.fields.find((f) => f.number == 2 &&\n                f.fieldKind == "scalar" &&\n                f.scalar === ScalarType.INT32);\n            if (seconds && nanos) {\n                return {\n                    typeName: message.typeName\x2C\n                    seconds\x2C\n                    nanos\x2C\n                };\n            }\n            break;\n        }\n        case "google.protobuf.Duration": {\n            const seconds = message.fields.find((f) => f.number == 1 &&\n                f.fieldKind == "scalar" &&\n                f.scalar === ScalarType.INT64);\n            const nanos = message.fields.find((f) => f.number == 2 &&\n                f.fieldKind == "scalar" &&\n                f.scalar === ScalarType.INT32);\n            if (seconds && nanos) {\n                return {\n                    typeName: message.typeName\x2C\n                    seconds\x2C\n                    nanos\x2C\n                };\n            }\n            break;\n        }\n        case "google.protobuf.Struct": {\n            const fields = message.fields.find((f) => f.number == 1 && !f.repeated);\n            if ((fields === null || fields === void 0 ? void 0 : fields.fieldKind) !== "map" ||\n                fields.mapValue.kind !== "message" ||\n                fields.mapValue.message.typeName !== "google.protobuf.Value") {\n                break;\n            }\n            return { typeName: message.typeName\x2C fields };\n        }\n        case "google.protobuf.Value": {\n            const kind = message.oneofs.find((o) => o.name === "kind");\n            const nullValue = message.fields.find((f) => f.number == 1 && f.oneof === kind);\n            if ((nullValue === null || nullValue === void 0 ? void 0 : nullValue.fieldKind) !== "enum" ||\n                nullValue.enum.typeName !== "google.protobuf.NullValue") {\n                return undefined;\n            }\n            const numberValue = message.fields.find((f) => f.number == 2 &&\n                f.fieldKind == "scalar" &&\n                f.scalar === ScalarType.DOUBLE &&\n                f.oneof === kind);\n            const stringValue = message.fields.find((f) => f.number == 3 &&\n                f.fieldKind == "scalar" &&\n                f.scalar === ScalarType.STRING &&\n                f.oneof === kind);\n            const boolValue = message.fields.find((f) => f.number == 4 &&\n                f.fieldKind == "scalar" &&\n                f.scalar === ScalarType.BOOL &&\n                f.oneof === kind);\n            const structValue = message.fields.find((f) => f.number == 5 && f.oneof === kind);\n            if ((structValue === null || structValue === void 0 ? void 0 : structValue.fieldKind) !== "message" ||\n                structValue.message.typeName !== "google.protobuf.Struct") {\n                return undefined;\n            }\n            const listValue = message.fields.find((f) => f.number == 6 && f.oneof === kind);\n            if ((listValue === null || listValue === void 0 ? void 0 : listValue.fieldKind) !== "message" ||\n                listValue.message.typeName !== "google.protobuf.ListValue") {\n                return undefined;\n            }\n            if (kind && numberValue && stringValue && boolValue) {\n                return {\n                    typeName: message.typeName\x2C\n                    kind\x2C\n                    nullValue\x2C\n                    numberValue\x2C\n                    stringValue\x2C\n                    boolValue\x2C\n                    structValue\x2C\n                    listValue\x2C\n                };\n            }\n            break;\n        }\n        case "google.protobuf.ListValue": {\n            const values = message.fields.find((f) => f.number == 1 && f.repeated);\n            if ((values === null || values === void 0 ? void 0 : values.fieldKind) != "message" ||\n                values.message.typeName !== "google.protobuf.Value") {\n                break;\n            }\n            return { typeName: message.typeName\x2C values };\n        }\n        case "google.protobuf.FieldMask": {\n            const paths = message.fields.find((f) => f.number == 1 &&\n                f.fieldKind == "scalar" &&\n                f.scalar === ScalarType.STRING &&\n                f.repeated);\n            if (paths) {\n                return { typeName: message.typeName\x2C paths };\n            }\n            break;\n        }\n        case "google.protobuf.DoubleValue":\n        case "google.protobuf.FloatValue":\n        case "google.protobuf.Int64Value":\n        case "google.protobuf.UInt64Value":\n        case "google.protobuf.Int32Value":\n        case "google.protobuf.UInt32Value":\n        case "google.protobuf.BoolValue":\n        case "google.protobuf.StringValue":\n        case "google.protobuf.BytesValue": {\n            const value = message.fields.find((f) => f.number == 1 && f.name == "value");\n            if (!value) {\n                break;\n            }\n            if (value.fieldKind !== "scalar") {\n                break;\n            }\n            return { typeName: message.typeName\x2C value };\n        }\n    }\n    return undefined;\n}\n
code-source-info,0x13959b2f600,504,0,7033,C10O0C28O0C48O0C57O7033,,
code-creation,Script,10,108166,0x13959b30288,101, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/assert.js:1:1,0x13959b2fde8,~
script-source,505,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/assert.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Assert that condition is truthy or throw error (with message)\n */\nexport function assert(condition\x2C msg) {\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions -- we want the implicit conversion to boolean\n    if (!condition) {\n        throw new Error(msg);\n    }\n}\nconst FLOAT32_MAX = 3.4028234663852886e38\x2C FLOAT32_MIN = -3.4028234663852886e38\x2C UINT32_MAX = 0xffffffff\x2C INT32_MAX = 0x7fffffff\x2C INT32_MIN = -0x80000000;\n/**\n * Assert a valid signed protobuf 32-bit integer.\n */\nexport function assertInt32(arg) {\n    if (typeof arg !== "number")\n        throw new Error("invalid int 32: " + typeof arg);\n    if (!Number.isInteger(arg) || arg > INT32_MAX || arg < INT32_MIN)\n        throw new Error("invalid int 32: " + arg); // eslint-disable-line @typescript-eslint/restrict-plus-operands -- we want the implicit conversion to string\n}\n/**\n * Assert a valid unsigned protobuf 32-bit integer.\n */\nexport function assertUInt32(arg) {\n    if (typeof arg !== "number")\n        throw new Error("invalid uint 32: " + typeof arg);\n    if (!Number.isInteger(arg) || arg > UINT32_MAX || arg < 0)\n        throw new Error("invalid uint 32: " + arg); // eslint-disable-line @typescript-eslint/restrict-plus-operands -- we want the implicit conversion to string\n}\n/**\n * Assert a valid protobuf float value.\n */\nexport function assertFloat32(arg) {\n    if (typeof arg !== "number")\n        throw new Error("invalid float 32: " + typeof arg);\n    if (!Number.isFinite(arg))\n        return;\n    if (arg > FLOAT32_MAX || arg < FLOAT32_MIN)\n        throw new Error("invalid float 32: " + arg); // eslint-disable-line @typescript-eslint/restrict-plus-operands -- we want the implicit conversion to string\n}\n
code-source-info,0x13959b30288,505,0,2328,C10O0C43O0C63O0C70O923C72O923C74O960C76O960C78O997C80O997C82O1021C88O1021C90O1045C96O1045C100O2328,,
code-creation,Script,10,108333,0x13959b30b88,196, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/field-wrapper.js:1:1,0x13959b30658,~
script-source,506,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/field-wrapper.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from "../message.js";\nimport { ScalarType } from "../field.js";\n/**\n * Wrap a primitive message field value in its corresponding wrapper\n * message. This function is idempotent.\n */\nexport function wrapField(type\x2C value) {\n    if (value instanceof Message || !type.fieldWrapper) {\n        return value;\n    }\n    return type.fieldWrapper.wrapField(value);\n}\n/**\n * If the given field uses one of the well-known wrapper types\x2C return\n * the primitive type it wraps.\n */\nexport function getUnwrappedFieldType(field) {\n    if (field.fieldKind !== "message") {\n        return undefined;\n    }\n    if (field.repeated) {\n        return undefined;\n    }\n    if (field.oneof != undefined) {\n        return undefined;\n    }\n    return wktWrapperToScalarType[field.message.typeName];\n}\nconst wktWrapperToScalarType = {\n    "google.protobuf.DoubleValue": ScalarType.DOUBLE\x2C\n    "google.protobuf.FloatValue": ScalarType.FLOAT\x2C\n    "google.protobuf.Int64Value": ScalarType.INT64\x2C\n    "google.protobuf.UInt64Value": ScalarType.UINT64\x2C\n    "google.protobuf.Int32Value": ScalarType.INT32\x2C\n    "google.protobuf.UInt32Value": ScalarType.UINT32\x2C\n    "google.protobuf.BoolValue": ScalarType.BOOL\x2C\n    "google.protobuf.StringValue": ScalarType.STRING\x2C\n    "google.protobuf.BytesValue": ScalarType.BYTES\x2C\n};\n
code-source-info,0x13959b30b88,506,0,1910,C10O0C31O0C51O0C58O1431C63O1468C69O1479C77O1521C83O1532C91O1573C97O1584C105O1626C111O1637C119O1679C125O1690C133O1732C139O1743C147O1784C153O1795C161O1836C167O1847C175O1889C181O1900C191O1431C195O1910,,
code-creation,Script,10,108583,0x13959b316c0,80, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/enum.js:1:1,0x13959b31158,~
script-source,507,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/enum.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { assert } from "./assert.js";\nconst enumTypeSymbol = Symbol("@bufbuild/protobuf/enum-type");\n/**\n * Get reflection information from a generated enum.\n * If this function is called on something other than a generated\n * enum\x2C it raises an error.\n */\nexport function getEnumType(enumObject) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\x2C@typescript-eslint/no-unsafe-assignment\x2C@typescript-eslint/no-explicit-any\n    const t = enumObject[enumTypeSymbol];\n    assert(t\x2C "missing enum type on enum object");\n    return t; // eslint-disable-line @typescript-eslint/no-unsafe-return\n}\n/**\n * Sets reflection information on a generated enum.\n */\nexport function setEnumType(enumObject\x2C typeName\x2C values\x2C opt) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\x2C @typescript-eslint/no-explicit-any\n    enumObject[enumTypeSymbol] = makeEnumType(typeName\x2C values.map((v) => ({\n        no: v.no\x2C\n        name: v.name\x2C\n        localName: enumObject[v.no]\x2C\n    }))\x2C opt);\n}\n/**\n * Create a new EnumType with the given values.\n */\nexport function makeEnumType(typeName\x2C values\x2C \n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n_opt) {\n    const names = Object.create(null);\n    const numbers = Object.create(null);\n    const normalValues = [];\n    for (const value of values) {\n        // We do not surface options at this time\n        // const value: EnumValueInfo = {...v\x2C options: v.options ?? emptyReadonlyObject};\n        const n = normalizeEnumValue(value);\n        normalValues.push(n);\n        names[value.name] = n;\n        numbers[value.no] = n;\n    }\n    return {\n        typeName\x2C\n        values: normalValues\x2C\n        // We do not surface options at this time\n        // options: opt?.options ?? Object.create(null)\x2C\n        findName(name) {\n            return names[name];\n        }\x2C\n        findNumber(no) {\n            return numbers[no];\n        }\x2C\n    };\n}\n/**\n * Create a new enum object with the given values.\n * Sets reflection information.\n */\nexport function makeEnum(typeName\x2C values\x2C opt) {\n    const enumObject = {};\n    for (const value of values) {\n        const n = normalizeEnumValue(value);\n        enumObject[n.localName] = n.no;\n        enumObject[n.no] = n.localName;\n    }\n    setEnumType(enumObject\x2C typeName\x2C values\x2C opt);\n    return enumObject;\n}\nfunction normalizeEnumValue(value) {\n    if ("localName" in value) {\n        return value;\n    }\n    return Object.assign(Object.assign({}\x2C value)\x2C { localName: value.name });\n}\n
code-source-info,0x13959b316c0,507,0,3131,C10O0C37O0C57O0C64O666C71O666C75O666C79O3131,,
code-creation,Script,10,108916,0x13959b31e80,58, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/message-type.js:1:1,0x13959b31ba0,~
script-source,508,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/message-type.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message\x2C } from "../message.js";\n/**\n * Create a new message type using the given runtime.\n */\nexport function makeMessageType(runtime\x2C typeName\x2C fields\x2C opt) {\n    var _a;\n    const localName = (_a = opt === null || opt === void 0 ? void 0 : opt.localName) !== null && _a !== void 0 ? _a : typeName.substring(typeName.lastIndexOf(".") + 1);\n    const type = {\n        [localName]: function (data) {\n            runtime.util.initFields(this);\n            runtime.util.initPartial(data\x2C this);\n        }\x2C\n    }[localName];\n    Object.setPrototypeOf(type.prototype\x2C new Message());\n    Object.assign(type\x2C {\n        runtime\x2C\n        typeName\x2C\n        fields: runtime.util.newFieldList(fields)\x2C\n        fromBinary(bytes\x2C options) {\n            return new type().fromBinary(bytes\x2C options);\n        }\x2C\n        fromJson(jsonValue\x2C options) {\n            return new type().fromJson(jsonValue\x2C options);\n        }\x2C\n        fromJsonString(jsonString\x2C options) {\n            return new type().fromJsonString(jsonString\x2C options);\n        }\x2C\n        equals(a\x2C b) {\n            return runtime.util.equals(type\x2C a\x2C b);\n        }\x2C\n    });\n    return type;\n}\n
code-source-info,0x13959b31e80,508,0,1759,C10O0C28O0C48O0C57O1759,,
tick,0x1a4e72f20,109041,1,0x104a6bc1c,3,0x0,0x109d0ba34,0x109cf3688,0x105405ef4
code-creation,Script,10,109250,0x13959b33430,138, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/binary-format-common.js:1:1,0x13959b32728,~
script-source,509,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/binary-format-common.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { BinaryReader\x2C BinaryWriter\x2C WireType\x2C } from "../binary-encoding.js";\nimport { Message } from "../message.js";\nimport { ScalarType } from "../field.js";\nimport { wrapField } from "./field-wrapper.js";\nimport { scalarDefaultValue\x2C scalarTypeInfo } from "./scalars.js";\nimport { assert } from "./assert.js";\n/* eslint-disable @typescript-eslint/no-unsafe-return\x2C @typescript-eslint/no-unsafe-member-access\x2C @typescript-eslint/no-explicit-any\x2C @typescript-eslint/no-unsafe-argument\x2C @typescript-eslint/no-unsafe-assignment\x2C @typescript-eslint/no-unsafe-call\x2C @typescript-eslint/no-unnecessary-condition\x2C no-case-declarations\x2C prefer-const */\nconst unknownFieldsSymbol = Symbol("@bufbuild/protobuf/unknown-fields");\n// Default options for parsing binary data.\nconst readDefaults = {\n    readUnknownFields: true\x2C\n    readerFactory: (bytes) => new BinaryReader(bytes)\x2C\n};\n// Default options for serializing binary data.\nconst writeDefaults = {\n    writeUnknownFields: true\x2C\n    writerFactory: () => new BinaryWriter()\x2C\n};\nfunction makeReadOptions(options) {\n    return options ? Object.assign(Object.assign({}\x2C readDefaults)\x2C options) : readDefaults;\n}\nfunction makeWriteOptions(options) {\n    return options ? Object.assign(Object.assign({}\x2C writeDefaults)\x2C options) : writeDefaults;\n}\nexport function makeBinaryFormatCommon() {\n    return {\n        makeReadOptions\x2C\n        makeWriteOptions\x2C\n        listUnknownFields(message) {\n            var _a;\n            return (_a = message[unknownFieldsSymbol]) !== null && _a !== void 0 ? _a : [];\n        }\x2C\n        discardUnknownFields(message) {\n            delete message[unknownFieldsSymbol];\n        }\x2C\n        writeUnknownFields(message\x2C writer) {\n            const m = message;\n            const c = m[unknownFieldsSymbol];\n            if (c) {\n                for (const f of c) {\n                    writer.tag(f.no\x2C f.wireType).raw(f.data);\n                }\n            }\n        }\x2C\n        onUnknownField(message\x2C no\x2C wireType\x2C data) {\n            const m = message;\n            if (!Array.isArray(m[unknownFieldsSymbol])) {\n                m[unknownFieldsSymbol] = [];\n            }\n            m[unknownFieldsSymbol].push({ no\x2C wireType\x2C data });\n        }\x2C\n        readMessage(message\x2C reader\x2C length\x2C options) {\n            const type = message.getType();\n            const end = length === undefined ? reader.len : reader.pos + length;\n            while (reader.pos < end) {\n                const [fieldNo\x2C wireType] = reader.tag()\x2C field = type.fields.find(fieldNo);\n                if (!field) {\n                    const data = reader.skip(wireType);\n                    if (options.readUnknownFields) {\n                        this.onUnknownField(message\x2C fieldNo\x2C wireType\x2C data);\n                    }\n                    continue;\n                }\n                let target = message\x2C repeated = field.repeated\x2C localName = field.localName;\n                if (field.oneof) {\n                    target = target[field.oneof.localName];\n                    if (target.case != localName) {\n                        delete target.value;\n                    }\n                    target.case = localName;\n                    localName = "value";\n                }\n                switch (field.kind) {\n                    case "scalar":\n                    case "enum":\n                        const scalarType = field.kind == "enum" ? ScalarType.INT32 : field.T;\n                        if (repeated) {\n                            let arr = target[localName]; // safe to assume presence of array\x2C oneof cannot contain repeated values\n                            if (wireType == WireType.LengthDelimited &&\n                                scalarType != ScalarType.STRING &&\n                                scalarType != ScalarType.BYTES) {\n                                let e = reader.uint32() + reader.pos;\n                                while (reader.pos < e) {\n                                    arr.push(readScalar(reader\x2C scalarType));\n                                }\n                            }\n                            else {\n                                arr.push(readScalar(reader\x2C scalarType));\n                            }\n                        }\n                        else {\n                            target[localName] = readScalar(reader\x2C scalarType);\n                        }\n                        break;\n                    case "message":\n                        const messageType = field.T;\n                        if (repeated) {\n                            // safe to assume presence of array\x2C oneof cannot contain repeated values\n                            target[localName].push(messageType.fromBinary(reader.bytes()\x2C options));\n                        }\n                        else {\n                            if (target[localName] instanceof Message) {\n                                target[localName].fromBinary(reader.bytes()\x2C options);\n                            }\n                            else {\n                                target[localName] = messageType.fromBinary(reader.bytes()\x2C options);\n                                if (messageType.fieldWrapper &&\n                                    !field.oneof &&\n                                    !field.repeated) {\n                                    target[localName] = messageType.fieldWrapper.unwrapField(target[localName]);\n                                }\n                            }\n                        }\n                        break;\n                    case "map":\n                        let [mapKey\x2C mapVal] = readMapEntry(field\x2C reader\x2C options);\n                        // safe to assume presence of map object\x2C oneof cannot contain repeated values\n                        target[localName][mapKey] = mapVal;\n                        break;\n                }\n            }\n        }\x2C\n    };\n}\n// Read a map field\x2C expecting key field = 1\x2C value field = 2\nfunction readMapEntry(field\x2C reader\x2C options) {\n    const length = reader.uint32()\x2C end = reader.pos + length;\n    let key\x2C val;\n    while (reader.pos < end) {\n        let [fieldNo] = reader.tag();\n        switch (fieldNo) {\n            case 1:\n                key = readScalar(reader\x2C field.K);\n                break;\n            case 2:\n                switch (field.V.kind) {\n                    case "scalar":\n                        val = readScalar(reader\x2C field.V.T);\n                        break;\n                    case "enum":\n                        val = reader.int32();\n                        break;\n                    case "message":\n                        val = field.V.T.fromBinary(reader.bytes()\x2C options);\n                        break;\n                }\n                break;\n        }\n    }\n    if (key === undefined) {\n        let keyRaw = scalarDefaultValue(field.K);\n        key =\n            field.K == ScalarType.BOOL\n                ? keyRaw.toString()\n                : keyRaw;\n    }\n    if (typeof key != "string" && typeof key != "number") {\n        key = key.toString();\n    }\n    if (val === undefined) {\n        switch (field.V.kind) {\n            case "scalar":\n                val = scalarDefaultValue(field.V.T);\n                break;\n            case "enum":\n                val = 0;\n                break;\n            case "message":\n                val = new field.V.T();\n                break;\n        }\n    }\n    return [key\x2C val];\n}\nfunction readScalar(reader\x2C type) {\n    let [\x2C method] = scalarTypeInfo(type);\n    return reader[method]();\n}\nexport function writeMapEntry(writer\x2C options\x2C field\x2C key\x2C value) {\n    writer.tag(field.no\x2C WireType.LengthDelimited);\n    writer.fork();\n    // javascript only allows number or string for object properties\n    // we convert from our representation to the protobuf type\n    let keyValue = key;\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- we deliberately handle just the special cases for map keys\n    switch (field.K) {\n        case ScalarType.INT32:\n        case ScalarType.FIXED32:\n        case ScalarType.UINT32:\n        case ScalarType.SFIXED32:\n        case ScalarType.SINT32:\n            keyValue = Number.parseInt(key);\n            break;\n        case ScalarType.BOOL:\n            assert(key == "true" || key == "false");\n            keyValue = key == "true";\n            break;\n    }\n    // write key\x2C expecting key field number = 1\n    writeScalar(writer\x2C field.K\x2C 1\x2C keyValue\x2C true);\n    // write value\x2C expecting value field number = 2\n    switch (field.V.kind) {\n        case "scalar":\n            writeScalar(writer\x2C field.V.T\x2C 2\x2C value\x2C true);\n            break;\n        case "enum":\n            writeScalar(writer\x2C ScalarType.INT32\x2C 2\x2C value\x2C true);\n            break;\n        case "message":\n            writeMessageField(writer\x2C options\x2C field.V.T\x2C 2\x2C value);\n            break;\n    }\n    writer.join();\n}\nexport function writeMessageField(writer\x2C options\x2C type\x2C fieldNo\x2C value) {\n    if (value !== undefined) {\n        const message = wrapField(type\x2C value);\n        writer\n            .tag(fieldNo\x2C WireType.LengthDelimited)\n            .bytes(message.toBinary(options));\n    }\n}\nexport function writeScalar(writer\x2C type\x2C fieldNo\x2C value\x2C emitIntrinsicDefault) {\n    let [wireType\x2C method\x2C isIntrinsicDefault] = scalarTypeInfo(type\x2C value);\n    if (!isIntrinsicDefault || emitIntrinsicDefault) {\n        writer.tag(fieldNo\x2C wireType)[method](value);\n    }\n}\nexport function writePacked(writer\x2C type\x2C fieldNo\x2C value) {\n    if (!value.length) {\n        return;\n    }\n    writer.tag(fieldNo\x2C WireType.LengthDelimited).fork();\n    let [\x2C method] = scalarTypeInfo(type);\n    for (let i = 0; i < value.length; i++) {\n        writer[method](value[i]);\n    }\n    writer.join();\n}\n
code-source-info,0x13959b33430,509,0,10381,C10O0C61O0C81O0C88O1281C95O1281C99O1281C101O1391C106O1441C116O1391C118O1550C123O1601C133O1550C137O10381,,
code-creation,Script,10,110208,0x13959b34b48,118, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/json-format-common.js:1:1,0x13959b341b0,~
script-source,510,file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/json-format-common.js,// Copyright 2021-2022 Buf Technologies\x2C Inc.\n//\n// Licensed under the Apache License\x2C Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing\x2C software\n// distributed under the License is distributed on an "AS IS" BASIS\x2C\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND\x2C either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from "../message.js";\nimport { ScalarType } from "../field.js";\nimport { assert\x2C assertFloat32\x2C assertInt32\x2C assertUInt32 } from "./assert.js";\nimport { protoInt64 } from "../proto-int64.js";\nimport { protoBase64 } from "../proto-base64.js";\n/* eslint-disable no-case-declarations\x2C @typescript-eslint/restrict-plus-operands\x2C@typescript-eslint/no-explicit-any\x2C@typescript-eslint/no-unsafe-assignment\x2C@typescript-eslint/no-unsafe-call\x2C@typescript-eslint/no-unsafe-member-access\x2C@typescript-eslint/no-unsafe-argument */\n// Default options for parsing JSON.\nconst jsonReadDefaults = {\n    ignoreUnknownFields: false\x2C\n};\n// Default options for serializing to JSON.\nconst jsonWriteDefaults = {\n    emitDefaultValues: false\x2C\n    enumAsInteger: false\x2C\n    useProtoFieldName: false\x2C\n    prettySpaces: 0\x2C\n};\nfunction makeReadOptions(options) {\n    return options ? Object.assign(Object.assign({}\x2C jsonReadDefaults)\x2C options) : jsonReadDefaults;\n}\nfunction makeWriteOptions(options) {\n    return options ? Object.assign(Object.assign({}\x2C jsonWriteDefaults)\x2C options) : jsonWriteDefaults;\n}\nexport function makeJsonFormatCommon(makeWriteField) {\n    const writeField = makeWriteField(writeEnum\x2C writeScalar);\n    return {\n        makeReadOptions\x2C\n        makeWriteOptions\x2C\n        readMessage(type\x2C json\x2C options\x2C message) {\n            if (json == null || Array.isArray(json) || typeof json != "object") {\n                throw new Error(`cannot decode message ${type.typeName} from JSON: ${this.debug(json)}`);\n            }\n            message = message !== null && message !== void 0 ? message : new type();\n            const oneofSeen = {};\n            for (const [jsonKey\x2C jsonValue] of Object.entries(json)) {\n                const field = type.fields.findJsonName(jsonKey);\n                if (!field) {\n                    if (!options.ignoreUnknownFields) {\n                        throw new Error(`cannot decode message ${type.typeName} from JSON: key "${jsonKey}" is unknown`);\n                    }\n                    continue;\n                }\n                let localName = field.localName;\n                let target = message;\n                if (field.oneof) {\n                    if (jsonValue === null && field.kind == "scalar") {\n                        // see conformance test Required.Proto3.JsonInput.OneofFieldNull{First\x2CSecond}\n                        continue;\n                    }\n                    const seen = oneofSeen[field.oneof.localName];\n                    if (seen) {\n                        throw new Error(`cannot decode message ${type.typeName} from JSON: multiple keys for oneof "${field.oneof.name}" present: "${seen}"\x2C "${jsonKey}"`);\n                    }\n                    oneofSeen[field.oneof.localName] = jsonKey;\n                    target = target[field.oneof.localName] = { case: localName };\n                    localName = "value";\n                }\n                if (field.repeated) {\n                    if (jsonValue === null) {\n                        continue;\n                    }\n                    if (!Array.isArray(jsonValue)) {\n                        throw new Error(`cannot decode field ${type.typeName}.${field.name} from JSON: ${this.debug(jsonValue)}`);\n                    }\n                    const targetArray = target[localName];\n                    for (const jsonItem of jsonValue) {\n                        if (jsonItem === null) {\n                            throw new Error(`cannot decode field ${type.typeName}.${field.name} from JSON: ${this.debug(jsonItem)}`);\n                        }\n                        let val;\n                        // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- "map" is invalid for repeated fields\n                        switch (field.kind) {\n                            case "message":\n                                val = field.T.fromJson(jsonItem\x2C options);\n                                break;\n                            case "enum":\n                                val = readEnum(field.T\x2C jsonItem\x2C options.ignoreUnknownFields);\n                                if (val === undefined)\n                                    continue;\n                                break;\n                            case "scalar":\n                                try {\n                                    val = readScalar(field.T\x2C jsonItem);\n                                }\n                                catch (e) {\n                                    let m = `cannot decode field ${type.typeName}.${field.name} from JSON: ${this.debug(jsonItem)}`;\n                                    if (e instanceof Error && e.message.length > 0) {\n                                        m += `: ${e.message}`;\n                                    }\n                                    throw new Error(m);\n                                }\n                                break;\n                        }\n                        targetArray.push(val);\n                    }\n                }\n                else if (field.kind == "map") {\n                    if (jsonValue === null) {\n                        continue;\n                    }\n                    if (Array.isArray(jsonValue) || typeof jsonValue != "object") {\n                        throw new Error(`cannot decode field ${type.typeName}.${field.name} from JSON: ${this.debug(jsonValue)}`);\n                    }\n                    const targetMap = target[localName];\n                    for (const [jsonMapKey\x2C jsonMapValue] of Object.entries(jsonValue)) {\n                        if (jsonMapValue === null) {\n                            throw new Error(`cannot decode field ${type.typeName}.${field.name} from JSON: map value null`);\n                        }\n                        let val;\n                        switch (field.V.kind) {\n                            case "message":\n                                val = field.V.T.fromJson(jsonMapValue\x2C options);\n                                break;\n                            case "enum":\n                                val = readEnum(field.V.T\x2C jsonMapValue\x2C options.ignoreUnknownFields);\n                                if (val === undefined)\n                                    continue;\n                                break;\n                            case "scalar":\n                                try {\n                                    val = readScalar(field.V.T\x2C jsonMapValue);\n                                }\n                                catch (e) {\n                                    let m = `cannot decode map value for field ${type.typeName}.${field.name} from JSON: ${this.debug(jsonValue)}`;\n                                    if (e instanceof Error && e.message.length > 0) {\n                                        m += `: ${e.message}`;\n                                    }\n                                    throw new Error(m);\n                                }\n                                break;\n                        }\n                        try {\n                            targetMap[readScalar(field.K\x2C field.K == ScalarType.BOOL\n                                ? jsonMapKey == "true"\n                                    ? true\n                                    : jsonMapKey == "false"\n                                        ? false\n                                        : jsonMapKey\n                                : jsonMapKey).toString()] = val;\n                        }\n                        catch (e) {\n                            let m = `cannot decode map key for field ${type.typeName}.${field.name} from JSON: ${this.debug(jsonValue)}`;\n                            if (e instanceof Error && e.message.length > 0) {\n                                m += `: ${e.message}`;\n                            }\n                            throw new Error(m);\n                        }\n                    }\n                }\n                else {\n                    switch (field.kind) {\n                        case "message":\n                            const messageType = field.T;\n                            if (jsonValue === null &&\n                                messageType.typeName != "google.protobuf.Value") {\n                                if (field.oneof) {\n                                    throw new Error(`cannot decode field ${type.typeName}.${field.name} from JSON: null is invalid for oneof field "${jsonKey}"`);\n                                }\n                                continue;\n                            }\n                            if (target[localName] instanceof Message) {\n                                target[localName].fromJson(jsonValue\x2C options);\n                            }\n                            else {\n                                target[localName] = messageType.fromJson(jsonValue\x2C options);\n                                if (messageType.fieldWrapper && !field.oneof) {\n                                    target[localName] = messageType.fieldWrapper.unwrapField(target[localName]);\n                                }\n                            }\n                            break;\n                        case "enum":\n                            const enumValue = readEnum(field.T\x2C jsonValue\x2C options.ignoreUnknownFields);\n                            if (enumValue !== undefined) {\n                                target[localName] = enumValue;\n                            }\n                            break;\n                        case "scalar":\n                            try {\n                                target[localName] = readScalar(field.T\x2C jsonValue);\n                            }\n                            catch (e) {\n                                let m = `cannot decode field ${type.typeName}.${field.name} from JSON: ${this.debug(jsonValue)}`;\n                                if (e instanceof Error && e.message.length > 0) {\n                                    m += `: ${e.message}`;\n                                }\n                                throw new Error(m);\n                            }\n                            break;\n                    }\n                }\n            }\n            return message;\n        }\x2C\n        writeMessage(message\x2C options) {\n            const type = message.getType();\n            const json = {};\n            let field;\n            try {\n                for (const member of type.fields.byMember()) {\n                    let jsonValue;\n                    if (member.kind == "oneof") {\n                        const oneof = message[member.localName];\n                        if (oneof.value === undefined) {\n                            continue;\n                        }\n                        field = member.findField(oneof.case);\n                        if (!field) {\n                            throw "oneof case not found: " + oneof.case;\n                        }\n                        jsonValue = writeField(field\x2C oneof.value\x2C options);\n                    }\n                    else {\n                        field = member;\n                        jsonValue = writeField(field\x2C message[field.localName]\x2C options);\n                    }\n                    if (jsonValue !== undefined) {\n                        json[options.useProtoFieldName ? field.name : field.jsonName] =\n                            jsonValue;\n                    }\n                }\n            }\n            catch (e) {\n                const m = field\n                    ? `cannot encode field ${type.typeName}.${field.name} to JSON`\n                    : `cannot encode message ${type.typeName} to JSON`;\n                const r = e instanceof Error ? e.message : String(e);\n                throw new Error(m + (r.length > 0 ? `: ${r}` : ""));\n            }\n            return json;\n        }\x2C\n        readScalar\x2C\n        writeScalar\x2C\n        debug: debugJsonValue\x2C\n    };\n}\nfunction debugJsonValue(json) {\n    if (json === null) {\n        return "null";\n    }\n    switch (typeof json) {\n        case "object":\n            return Array.isArray(json) ? "array" : "object";\n        case "string":\n            return json.length > 100 ? "string" : `"${json.split('"').join('\\\\"')}"`;\n        default:\n            return json.toString();\n    }\n}\n// May throw an error. If the error message is non-blank\x2C it should be shown.\n// It is up to the caller to provide context.\nfunction readScalar(type\x2C json) {\n    // every valid case in the switch below returns\x2C and every fall\n    // through is regarded as a failure.\n    switch (type) {\n        // float\x2C double: JSON value will be a number or one of the special string values "NaN"\x2C "Infinity"\x2C and "-Infinity".\n        // Either numbers or strings are accepted. Exponent notation is also accepted.\n        case ScalarType.DOUBLE:\n        case ScalarType.FLOAT:\n            if (json === null)\n                return 0.0;\n            if (json === "NaN")\n                return Number.NaN;\n            if (json === "Infinity")\n                return Number.POSITIVE_INFINITY;\n            if (json === "-Infinity")\n                return Number.NEGATIVE_INFINITY;\n            if (json === "") {\n                // empty string is not a number\n                break;\n            }\n            if (typeof json == "string" && json.trim().length !== json.length) {\n                // extra whitespace\n                break;\n            }\n            if (typeof json != "string" && typeof json != "number") {\n                break;\n            }\n            const float = Number(json);\n            if (Number.isNaN(float)) {\n                // not a number\n                break;\n            }\n            if (!Number.isFinite(float)) {\n                // infinity and -infinity are handled by string representation above\x2C so this is an error\n                break;\n            }\n            if (type == ScalarType.FLOAT)\n                assertFloat32(float);\n            return float;\n        // int32\x2C fixed32\x2C uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n        case ScalarType.INT32:\n        case ScalarType.FIXED32:\n        case ScalarType.SFIXED32:\n        case ScalarType.SINT32:\n        case ScalarType.UINT32:\n            if (json === null)\n                return 0;\n            let int32;\n            if (typeof json == "number")\n                int32 = json;\n            else if (typeof json == "string" && json.length > 0) {\n                if (json.trim().length === json.length)\n                    int32 = Number(json);\n            }\n            if (int32 === undefined)\n                break;\n            if (type == ScalarType.UINT32)\n                assertUInt32(int32);\n            else\n                assertInt32(int32);\n            return int32;\n        // int64\x2C fixed64\x2C uint64: JSON value will be a decimal string. Either numbers or strings are accepted.\n        case ScalarType.INT64:\n        case ScalarType.SFIXED64:\n        case ScalarType.SINT64:\n            if (json === null)\n                return protoInt64.zero;\n            if (typeof json != "number" && typeof json != "string")\n                break;\n            return protoInt64.parse(json);\n        case ScalarType.FIXED64:\n        case ScalarType.UINT64:\n            if (json === null)\n                return protoInt64.zero;\n            if (typeof json != "number" && typeof json != "string")\n                break;\n            return protoInt64.uParse(json);\n        // bool:\n        case ScalarType.BOOL:\n            if (json === null)\n                return false;\n            if (typeof json !== "boolean")\n                break;\n            return json;\n        // string:\n        case ScalarType.STRING:\n            if (json === null)\n                return "";\n            if (typeof json !== "string") {\n                break;\n            }\n            // A string must always contain UTF-8 encoded or 7-bit ASCII.\n            // We validate with encodeURIComponent\x2C which appears to be the fastest widely available option.\n            try {\n                encodeURIComponent(json);\n            }\n            catch (e) {\n                throw new Error("invalid UTF8");\n            }\n            return json;\n        // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n        // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n        case ScalarType.BYTES:\n            if (json === null || json === "")\n                return new Uint8Array(0);\n            if (typeof json !== "string")\n                break;\n            return protoBase64.dec(json);\n    }\n    throw new Error();\n}\nfunction readEnum(type\x2C json\x2C ignoreUnknownFields) {\n    if (json === null) {\n        // proto3 requires 0 to be default value for all enums\n        return 0;\n    }\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n    switch (typeof json) {\n        case "number":\n            if (Number.isInteger(json)) {\n                return json;\n            }\n            break;\n        case "string":\n            const value = type.findName(json);\n            if (value || ignoreUnknownFields) {\n                return value === null || value === void 0 ? void 0 : value.no;\n            }\n            break;\n    }\n    throw new Error(`cannot decode enum ${type.typeName} from JSON: ${debugJsonValue(json)}`);\n}\nfunction writeEnum(type\x2C value\x2C emitIntrinsicDefault\x2C enumAsInteger) {\n    var _a;\n    if (value === undefined) {\n        return value;\n    }\n    if (value === 0 && !emitIntrinsicDefault) {\n        // proto3 requires 0 to be default value for all enums\n        return undefined;\n    }\n    if (enumAsInteger) {\n        return value;\n    }\n    if (type.typeName == "google.protobuf.NullValue") {\n        return null;\n    }\n    const val = type.findNumber(value);\n    return (_a = val === null || val === void 0 ? void 0 : val.name) !== null && _a !== void 0 ? _a : value; // if we don't know the enum value\x2C just return the number\n}\nfunction writeScalar(type\x2C value\x2C emitIntrinsicDefault) {\n    if (value === undefined) {\n        return undefined;\n    }\n    switch (type) {\n        // int32\x2C fixed32\x2C uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n        case ScalarType.INT32:\n        case ScalarType.SFIXED32:\n        case ScalarType.SINT32:\n        case ScalarType.FIXED32:\n        case ScalarType.UINT32:\n            assert(typeof value == "number");\n            return value != 0 || emitIntrinsicDefault ? value : undefined;\n        // float\x2C double: JSON value will be a number or one of the special string values "NaN"\x2C "Infinity"\x2C and "-Infinity".\n        // Either numbers or strings are accepted. Exponent notation is also accepted.\n        case ScalarType.FLOAT:\n        // assertFloat32(value);\n        case ScalarType.DOUBLE: // eslint-disable-line no-fallthrough\n            assert(typeof value == "number");\n            if (Number.isNaN(value))\n                return "NaN";\n            if (value === Number.POSITIVE_INFINITY)\n                return "Infinity";\n            if (value === Number.NEGATIVE_INFINITY)\n                return "-Infinity";\n            return value !== 0 || emitIntrinsicDefault ? value : undefined;\n        // string:\n        case ScalarType.STRING:\n            assert(typeof value == "string");\n            return value.length > 0 || emitIntrinsicDefault ? value : undefined;\n        // bool:\n        case ScalarType.BOOL:\n            assert(typeof value == "boolean");\n            return value || emitIntrinsicDefault ? value : undefined;\n        // JSON value will be a decimal string. Either numbers or strings are accepted.\n        case ScalarType.UINT64:\n        case ScalarType.FIXED64:\n        case ScalarType.INT64:\n        case ScalarType.SFIXED64:\n        case ScalarType.SINT64:\n            assert(typeof value == "bigint" ||\n                typeof value == "string" ||\n                typeof value == "number");\n            // We use implicit conversion with `value != 0` to catch both 0n and "0"\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            return emitIntrinsicDefault || value != 0\n                ? value.toString(10)\n                : undefined;\n        // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n        // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n        case ScalarType.BYTES:\n            assert(value instanceof Uint8Array);\n            return emitIntrinsicDefault || value.byteLength > 0\n                ? protoBase64.enc(value)\n                : undefined;\n    }\n}\n
code-source-info,0x13959b34b48,510,0,21360,C10O0C76O0C96O0C103O1203C107O1203C109O1310C113O1310C117O21360,,
tick,0x1a4dd99d0,111000,1,0x104a6bc1c,3,0x0,0x109d0ba34,0x109cf3688,0x105405ef4
code-creation,LazyCompile,13,111000,0x109d0dde0,1452,onParseComplete node:internal/url:544:25,0x3b46b20262a0,*
code-source-info,0x109d0dde0,74,14715,15384,C0O14715C56O14833C88O14856C104O14878C116O14914C120O14940C148O15013C164O14878C180O14905C212O14978C248O15047C284O15097C292O15105C320O29414I0C416O15066C444O15128C480O15152C516O15175C548O15269C588O15267C660O15324C688O29414I0C740O29435I0C764O29449I0C780O15383C824O29493I0C828O14715C876O29414I0,F0O15338,S0x3b46b20272d8
feedback-vector,111041,0x117768a0bda8,41,0x109d0dde0,TieringState::kInProgress,0,2279,0,0x117768a0bda9: [FeedbackVector] in OldSpace\n - map: 0x0152b3601b89 <Map>\n - length: 41\n - shared function info: 0x3b46b20262a1 <SharedFunctionInfo onParseComplete>\n - no optimized code\n - tiering state: TieringState::kInProgress\n - maybe has optimized code: 0\n - invocation count: 2279\n - profiler ticks: 0\n - closure feedback cell array: 0x152b36032f1: [ClosureFeedbackCellArray] in ReadOnlySpace\n - map: 0x0152b3601f39 <Map>\n - length: 0\n\n - slot #0 LoadKeyed MONOMORPHIC {\n     [0]: 0x1e27ac666c49 <Symbol: context>\n     [1]: 0x1f083e6cbbd9 <Other heap object (WEAK_FIXED_ARRAY_TYPE)>\n  }\n - slot #2 SetNamedStrict MONOMORPHIC {\n     [2]: [weak] 0x11d49ccbf561 <Map(HOLEY_ELEMENTS)>\n     [3]: 3342336\n  }\n - slot #4 SetNamedStrict MONOMORPHIC {\n     [4]: [weak] 0x11d49ccbf561 <Map(HOLEY_ELEMENTS)>\n     [5]: 4653120\n  }\n - slot #6 BinaryOp BinaryOp:SignedSmall {\n     [6]: 1\n  }\n - slot #7 CompareOp CompareOp:SignedSmall {\n     [7]: 1\n  }\n - slot #8 SetNamedStrict MONOMORPHIC {\n     [8]: [weak] 0x11d49ccbf561 <Map(HOLEY_ELEMENTS)>\n     [9]: 5701761\n  }\n - slot #10 BinaryOp BinaryOp:SignedSmall {\n     [10]: 1\n  }\n - slot #11 CompareOp CompareOp:SignedSmall {\n     [11]: 1\n  }\n - slot #12 SetNamedStrict MONOMORPHIC {\n     [12]: [weak] 0x11d49ccbf561 <Map(HOLEY_ELEMENTS)>\n     [13]: 6750401\n  }\n - slot #14 SetNamedStrict MONOMORPHIC {\n     [14]: [weak] 0x11d49ccbf561 <Map(HOLEY_ELEMENTS)>\n     [15]: 8847681\n  }\n - slot #16 BinaryOp BinaryOp:SignedSmall {\n     [16]: 1\n  }\n - slot #17 CompareOp CompareOp:SignedSmall {\n     [17]: 1\n  }\n - slot #18 Literal  {\n     [18]: 0\n  }\n - slot #19 SetNamedStrict MONOMORPHIC {\n     [19]: [weak] 0x11d49ccbf561 <Map(HOLEY_ELEMENTS)>\n     [20]: 9896320\n  }\n - slot #21 SetNamedStrict MONOMORPHIC {\n     [21]: [weak] 0x11d49ccbf561 <Map(HOLEY_ELEMENTS)>\n     [22]: 10944961\n  }\n - slot #23 SetNamedStrict MONOMORPHIC {\n     [23]: [weak] 0x11d49ccbf561 <Map(HOLEY_ELEMENTS)>\n     [24]: 11993601\n  }\n - slot #25 SetNamedStrict MONOMORPHIC {\n     [25]: [weak] 0x11d49ccbf561 <Map(HOLEY_ELEMENTS)>\n     [26]: 7799040\n  }\n - slot #27 LoadKeyed MONOMORPHIC {\n     [27]: 0x1e27ac666ca9 <Symbol: query>\n     [28]: 0x1f083e6cbbf9 <Other heap object (WEAK_FIXED_ARRAY_TYPE)>\n  }\n - slot #29 Call MONOMORPHIC {\n     [29]: [weak] 0x31015f6dafc1 <JSFunction URLSearchParams (sfi = 0x3b46b2025e41)>\n     [30]: 9112\n  }\n - slot #31 StoreKeyedStrict MONOMORPHIC {\n     [31]: 0x1e27ac666ca9 <Symbol: query>\n     [32]: 0x1f083e6cbc19 <Other heap object (WEAK_FIXED_ARRAY_TYPE)>\n  }\n - slot #33 LoadKeyed MONOMORPHIC {\n     [33]: 0x1e27ac666ca9 <Symbol: query>\n     [34]: 0x1f083e6cbc39 <Other heap object (WEAK_FIXED_ARRAY_TYPE)>\n  }\n - slot #35 StoreKeyedStrict MONOMORPHIC {\n     [35]: 0x1e27ac666c49 <Symbol: context>\n     [36]: 0x1f083e6cbc59 <Other heap object (WEAK_FIXED_ARRAY_TYPE)>\n  }\n - slot #37 LoadKeyed MONOMORPHIC {\n     [37]: 0x1e27ac666ca9 <Symbol: query>\n     [38]: 0x1f083e6cbc79 <Other heap object (WEAK_FIXED_ARRAY_TYPE)>\n  }\n - slot #39 Call MONOMORPHIC {\n     [39]: [weak] 0x31015f6dce41 <JSFunction initSearchParams (sfi = 0x3b46b20272d9)>\n     [40]: 9112\n  }\n
tick,0x1053d4b18,111500,0,0x0,0,0x10548e024,0x109ce3900,0x105492b48,0x109ce3b40,0x109d0dc5c,0x105405ef4
code-creation,LazyCompile,13,111583,0x109d0e420,2132, node:internal/url:699:12,0x3b46b2026798,*
code-source-info,0x109d0exa0ae21c1220S0xa0ae21c11d0S0x3b46b20266a8
feedback-vector,111583,0x117768a23410,61,0x109d0e420,TieringState::kInProgress,0,1983,0,0x117768a23411: [FeedbackVector] in OldSpace\n - map: 0x0152b3601b89 <Map>\n - length: 61\n - shared function info: 0x3b46b2026799 <SharedFunctionInfo>\n - no optimized code\n - tiering state: TieringState::kInProgress\n - maybe has optimized code: 0\n - invocation count: 1983\n - profiler ticks: 0\n - closure feedback cell array: 0x152b36032f1: [ClosureFeedbackCellArray] in ReadOnlySpace\n - map: 0x0152b3601f39 <Map>\n - length: 0\n\n - slot #0 Call MONOMORPHIC {\n     [0]: [weak] 0x24471db11f99 <JSFunction (sfi = 0xa0ae21c1221)>\n     [1]: 7928\n  }\n - slot #2 Literal  {\n     [2]: 0x117768a23ad1 <AllocationSite>\n  }\n - slot #3 LoadKeyed MONOMORPHIC {\n     [3]: 0x1e27ac666c49 <Symbol: context>\n     [4]: 0x1f083e6cc9c9 <Other heap object (WEAK_FIXED_ARRAY_TYPE)>\n  }\n - slot #5 LoadProperty MONOMORPHIC {\n     [5]: [weak] 0x11d49ccbf561 <Map(HOLEY_ELEMENTS)>\n     [6]: 2180\n  }\n - slot #7 LoadProperty MONOMORPHIC {\n     [7]: [weak] 0x11d49ccbf561 <Map(HOLEY_ELEMENTS)>\n     [8]: 3716\n  }\n - slot #9 BinaryOp BinaryOp:String {\n     [9]: 16\n  }\n - slot #10 LoadProperty MONOMORPHIC {\n     [10]: [weak] 0x11d49ccbf561 <Map(HOLEY_ELEMENTS)>\n     [11]: 2692\n  }\n - slot #12 CompareOp CompareOp:InternalizedString {\n     [12]: 16\n  }\n - slot #13 LoadProperty MONOMORPHIC {\n     [13]: [weak] 0x11d49ccbf561 <Map(HOLEY_ELEMENTS)>\n     [14]: 3204\n  }\n - slot #15 CompareOp CompareOp:InternalizedString {\n     [15]: 16\n  }\n - slot #16 LoadProperty MONOMORPHIC {\n     [16]: [weak] 0x11d49ccbf831 <Map(HOLEY_ELEMENTS)>\n     [17]: 3204\n  }\n - slot #18 BinaryOp BinaryOp:None {\n     [18]: 0\n  }\n - slot #19 BinaryOp BinaryOp:None {\n     [19]: 0\n  }\n - slot #20 BinaryOp BinaryOp:None {\n     [20]: 0\n  }\n - slot #21 BinaryOp BinaryOp:None {\n     [21]: 0\n  }\n - slot #22 BinaryOp BinaryOp:String {\n     [22]: 16\n  }\n - slot #23 LoadProperty MONOMORPHIC {\n     [23]: [weak] 0x11d49ccbf831 <Map(HOLEY_ELEMENTS)>\n     [24]: 2180\n  }\n - slot #25 Call UNINITIALIZED {\n     [25]: 0x0152b36068a9 <Symbol: (uninitialized_symbol)>\n     [26]: 0\n  }\n - slot #27 LoadProperty MONOMORPHIC {\n     [27]: [weak] 0x11d49ccbf561 <Map(HOLEY_ELEMENTS)>\n     [28]: 4228\n  }\n - slot #29 BinaryOp BinaryOp:None {\n     [29]: 0\n  }\n - slot #30 BinaryOp BinaryOp:None {\n     [30]: 0\n  }\n - slot #31 LoadKeyed MONOMORPHIC {\n     [31]: 0x1e27ac666c61 <Symbol: cannot-be-base>\n     [32]: 0x1f083e6cc9e9 <Other heap object (WEAK_FIXED_ARRAY_TYPE)>\n  }\n - slot #33 BinaryOp BinaryOp:String {\n     [33]: 16\n  }\n - slot #34 LoadProperty MONOMORPHIC {\n     [34]: [weak] 0x11d49ccbf561 <Map(HOLEY_ELEMENTS)>\n     [35]: 4740\n  }\n - slot #36 LoadKeyed MONOMORPHIC {\n     [36]: [weak] 0x11d49cc84851 <Map(PACKED_ELEMENTS)>\n     [37]: 2304\n  }\n - slot #38 LoadProperty UNINITIALIZED {\n     [38]: 0x0152b36068a9 <Symbol: (uninitialized_symbol)>\n     [39]: 0x0152b36068a9 <Symbol: (uninitialized_symbol)>\n  }\n - slot #40 CompareOp CompareOp:None {\n     [40]: 0\n  }\n - slot #41 LoadKeyed UNINITIALIZED {\n     [41]: 0x0152b36068a9 <Symbol: (uninitialized_symbol)>\n     [42]: 0x0152b36068a9 <Symbol: (uninitialized_symbol)>\n  }\n - slot #43 CompareOp CompareOp:None {\n     [43]: 0\n  }\n - slot #44 BinaryOp BinaryOp:None {\n     [44]: 0\n  }\n - slot #45 LoadProperty MONOMORPHIC {\n     [45]: [weak] 0x11d49cc84851 <Map(PACKED_ELEMENTS)>\n     [46]: 1668\n  }\n - slot #47 BinaryOp BinaryOp:String {\n     [47]: 16\n  }\n - slot #48 BinaryOp BinaryOp:String {\n     [48]: 16\n  }\n - slot #49 Call MONOMORPHIC {\n     [49]: [weak] 0x31015f6d9201 <JSBoundFunction (BoundTargetFunction 0xc1101d94bb1)>\n     [50]: 7916\n  }\n - slot #51 LoadProperty MONOMORPHIC {\n     [51]: [weak] 0x11d49ccbf831 <Map(HOLEY_ELEMENTS)>\n     [52]: 2692\n  }\n - slot #53 LoadProperty MONOMORPHIC {\n     [53]: [weak] 0x11d49ccbf561 <Map(HOLEY_ELEMENTS)>\n     [54]: 5252\n  }\n - slot #55 BinaryOp BinaryOp:None {\n     [55]: 0\n  }\n - slot #56 BinaryOp BinaryOp:None {\n     [56]: 0\n  }\n - slot #57 LoadProperty POLYMORPHIC {\n     [57]: 0x1f083e6cca09 <Other heap object (WEAK_FIXED_ARRAY_TYPE)>\n     [58]: 0x0152b36068a9 <Symbol: (uninitialized_symbol)>\n  }\n - slot #59 BinaryOp BinaryOp:None {\n     [59]: 0\n  }\n - slot #60 BinaryOp BinaryOp:None {\n     [60]: 0\n  }\n
code-creation,LazyCompile,10,111958,0x3685f020aa70,348,makeInt64Support file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/proto-int64.js:16:26,0xf2c00797c00,~
code-source-info,0x3685f020aa70,468,762,4145,C0O762C14O782C18O799C27O795C35O782C40O782C42O906C46O917C51O924C57O959C68O1007C79O1056C90O1104C98O1117C103O1159C106O1193C110O1201C116O1205C119O1232C123O1240C128O1244C135O1263C140O1277C158O1307C165O1307C169O1307C171O1345C178O1345C182O1345C184O1383C191O1383C195O1383C197O1403C204O1403C208O1403C210O1443C215O1470C221O1470C229O1522C237O1794C245O2070C253O2306C261O2544C269O2717C279O2890C280O2927C284O2927C286O3030C290O3030C292O3105C297O3167C305O3365C313O3565C321O3778C329O3993C337O4068C347O4143,,
code-creation,LazyCompile,10,112000,0x3685f020af20,5,get node:internal/bootstrap/node:405:8,0x3d9b80193288,~
code-source-info,0x3685f020af20,16,12989,13022,C0O13000C4O13016,,
code-creation,Function,11,112083,0x109d0ed40,1912, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/proto-base64.js:1:1,0xf2c00796c08,^
code-source-info,0x109d0ed40,467,0,5077,,,
code-creation,Function,11,112125,0x109d0f520,5064,getEncodingOps node:buffer:684:24,0xa0ae21f4bb0,^
code-source-info,0x109d0f520,30,20070,21871,,,
code-creation,LazyCompile,10,112208,0x3685f020b660,16,makeJsonFormatProto3 file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/json-format-proto3.js:18:37,0x13959b27208,~
code-source-info,0x3685f020b660,494,1102,4594,C0O1111C11O1118C15O4592,,
code-creation,LazyCompile,10,112250,0x3685f020b900,89,makeJsonFormatCommon file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/json-format-common.js:37:37,0x13959b34768,~
code-source-info,0x3685f020b900,510,1739,12522,C0O1739C8O1781C18O1781C23O1781C25O1825C34O1842C42O1867C46O1893C54O10852C66O12450C74O12470C82O12498C88O12520,,
code-creation,LazyCompile,10,112291,0x3685f020bb20,18, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/json-format-proto3.js:19:33,0x3685f020b5b8,~
code-source-info,0x3685f020bb20,494,1139,4590,C0O1139C13O1177C17O4584,,
code-creation,LazyCompile,10,112333,0x3685f020bdd8,57,makeBinaryFormatProto3 file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/binary-format-proto3.js:17:39,0x13959b28bb0,~
code-source-info,0x3685f020bdd8,496,1086,3723,C0O1095C4O1109C9O1116C13O1123C20O1134C26O1134C30O1123C42O1163C50O1109C56O3721,,
code-creation,LazyCompile,10,112333,0x3685f020c1b0,60,makeBinaryFormatCommon file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/binary-format-common.js:38:39,0x13959b32ec8,~
code-source-info,0x3685f020c1b0,509,1933,6498,C0O1942C7O1959C13O1984C17O2010C25O2170C33O2270C41O2556C49O2834C59O6496,,
code-creation,LazyCompile,10,112375,0x3685f020c550,41,makeUtilCommon file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/util-common.js:19:31,0x13959b27d10,~
code-source-info,0x3685f020c550,495,1039,8538,C0O1048C5O1065C14O1086C22O4210C30O7380C40O8536,,
code-creation,LazyCompile,10,112416,0x3685f020c800,67,makeProtoRuntime file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/proto-runtime.js:16:33,0x13959b269d8,~
code-source-info,0x3685f020c800,493,755,1047,C0O787C7O804C13O820C19O834C25O847C29O861C37O986C46O1004C55O1026C66O1045,,
code-creation,LazyCompile,10,112416,0x3685f020c9c0,16,makeJsonFormatProto2 file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/json-format-proto2.js:18:37,0x13959b2e250,~
code-source-info,0x3685f020c9c0,502,1102,5098,C0O1111C11O1118C15O5096,,
code-creation,LazyCompile,10,112458,0x3685f020cb78,18, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/json-format-proto2.js:19:33,0x3685f020c918,~
code-source-info,0x3685f020cb78,502,1139,5094,C0O1139C13O1177C17O5088,,
code-creation,LazyCompile,10,112500,0x3685f020cd30,57,makeBinaryFormatProto2 file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/binary-format-proto2.js:17:39,0x13959b2ec58,~
code-source-info,0x3685f020cd30,503,1086,4943,C0O1095C4O1109C9O1116C13O1123C20O1134C26O1134C30O1123C42O1163C50O1109C56O4941,,
code-creation,LazyCompile,10,112541,0x3685f020cf18,20,newFieldList file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/proto2.js:24:165,0xf2c00798990,~
code-source-info,0x3685f020cf18,469,1303,1392,C0O1322C14O1329C19O1386,,
code-creation,LazyCompile,10,112583,0x3685f020d048,14,InternalFieldList file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/field-list.js:15:16,0x13959b29f18,~
code-source-info,0x3685f020d048,498,653,751,C0O684C2O697C6O715C8O732C13O750,,
code-creation,LazyCompile,10,112625,0x3685f020d610,56,setEnumType file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/enum.js:30:28,0x13959b314d0,~
code-source-info,0x3685f020d610,507,1309,1628,C0O1309C9O1462C16O1473C19O1491C23O1521C33O1521C45O1491C50O1489C55O1627,,
code-creation,LazyCompile,10,112666,0x3685f020d7b8,38, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/enum.js:32:68,0x3685f020d558,~
code-source-info,0x3685f020d7b8,507,1525,1618,C0O1533C5O1549C13O1569C24O1607C28O1604C37O1618,,
code-creation,LazyCompile,10,112708,0x3685f020db80,255,makeEnumType file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/enum.js:41:29,0x13959b31520,~
code-source-info,0x3685f020db80,507,1713,2542,C0O1713C11O1821C15O1828C22O1828C27O1821C29O1862C33O1869C40O1869C45O1862C47O1908C50O1936C74O1927C102O1927C105O2105C110O2105C115O2153C120O2153C125O2170C128O2182C135O2188C139O2201C142O2215C149O2219C156O1916C219O2234C226O2251C232O2277C236O2406C244O2474C254O2540,,
code-creation,LazyCompile,10,112708,0x3685f020de48,60,normalizeEnumValue file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/enum.js:82:28,0x13959b315f0,~
code-source-info,0x3685f020de48,507,2980,3130,C0O2994C5O3010C10O3030C12O3043C13O3054C17O3068C22O3075C26O3082C33O3082C45O3120C53O3068C59O3128,,
tick,0x1a4d3a21c,112750,0,0x0,3,0x0,0x3685f020dbee,0x3685f020d63d,0xf2c007b85b7,0x1054080d0,0x104a6d958,0x117768a12ed4,0x105405ef4
code-creation,LazyCompile,10,112875,0x3685f020e930,20,newFieldList file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/proto3.js:26:165,0xf2c00796198,~
code-source-info,0x3685f020e930,466,1403,1492,C0O1422C14O1429C19O1486,,
code-creation,LazyCompile,10,113000,0x3685f020ec30,25,getEnumType file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/enum.js:21:28,0x13959b31480,~
code-source-info,0x3685f020ec30,507,889,1221,C0O1068C2O1079C4O1078C8O1100C17O1100C22O1151C24O1160,,
code-creation,LazyCompile,10,113000,0x3685f020ed30,18,assert file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/assert.js:17:23,0x13959b30098,~
code-source-info,0x3685f020ed30,505,700,902,C0O847C4O873C10O879C15O873C17O901,,
code-creation,LazyCompile,10,113083,0x3685f020f038,24,makeMessageType file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/proto-runtime.js:22:24,0x3685f020c680,~
code-source-info,0x3685f020f038,493,876,976,C0O914C18O921C23O966,,
code-creation,LazyCompile,10,113125,0x3685f020f428,218,makeMessageType file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/message-type.js:18:32,0x13959b31d88,~
code-source-info,0x3685f020f428,508,740,1758,C0O740C12O809C23O861C38O914C43O933C51O933C56O950C60O914C66O973C73O984C75O996C86O1123C89O973C91O1140C95O1147C103O1167C108O1182C114O1178C120O1147C126O1198C130O1205C138O1212C145O1228C151O1245C158O1279C163O1284C168O1284C177O1314C185O1420C193O1530C201O1654C209O1205C215O1744C217O1756,,
code-creation,LazyCompile,10,113166,0x3685f020f6e0,2,Message file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/message.js:21:8,0xf2c0079d9e8,~
code-source-info,0x3685f020f6e0,473,827,827,C1O827,,
code-creation,LazyCompile,10,113208,0x3685f020f7f8,181,makeEnum file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/enum.js:72:25,0x13959b315a0,~
code-source-info,0x3685f020f7f8,507,2658,2952,C0O2707C2O2735C26O2726C54O2726C57O2763C60O2763C65O2811C70O2826C74O2822C78O2851C83O2859C87O2855C94O2715C157O2880C173O2880C178O2932C180O2950,,
code-creation,LazyCompile,10,113291,0x3685f020fa38,72,uDec file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/proto-int64.js:65:17,0x3685f020a4e0,~
code-source-info,0x3685f020fa38,468,2721,2878,C0O2748C7O2751C19O2751C24O2790C31O2793C44O2793C49O2832C56O2842C65O2842C71O2864,,
code-creation,LazyCompile,10,113333,0x3685f020fc18,125,getStdout node:internal/bootstrap/switches/is_main_thread:146:19,0x1e27ac64a270,~
script-source,128,node:internal/bootstrap/switches/is_main_thread,'use strict';\n\nconst { ObjectDefineProperty } = primordials;\nconst rawMethods = internalBinding('process_methods');\nconst {\n  addSerializeCallback\x2C\n  isBuildingSnapshot\n} = require('v8').startupSnapshot;\n// TODO(joyeecheung): deprecate and remove these underscore methods\nprocess._debugProcess = rawMethods._debugProcess;\nprocess._debugEnd = rawMethods._debugEnd;\n\n// See the discussion in https://github.com/nodejs/node/issues/19009 and\n// https://github.com/nodejs/node/pull/34010 for why these are no-ops.\n// Five word summary: they were broken beyond repair.\nprocess._startProfilerIdleNotifier = () => {};\nprocess._stopProfilerIdleNotifier = () => {};\n\nfunction defineStream(name\x2C getter) {\n  ObjectDefineProperty(process\x2C name\x2C {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    get: getter\n  });\n}\n\ndefineStream('stdout'\x2C getStdout);\ndefineStream('stdin'\x2C getStdin);\ndefineStream('stderr'\x2C getStderr);\n\n// Worker threads don't receive signals.\nconst {\n  startListeningIfSignal\x2C\n  stopListeningIfSignal\n} = require('internal/process/signal');\nprocess.on('newListener'\x2C startListeningIfSignal);\nprocess.on('removeListener'\x2C stopListeningIfSignal);\n\n// ---- keep the attachment of the wrappers above so that it's easier to ----\n// ----              compare the setups side-by-side                    -----\n\nconst { guessHandleType } = internalBinding('util');\n\nfunction createWritableStdioStream(fd) {\n  let stream;\n  // Note stream._type is used for test-module-load-list.js\n  switch (guessHandleType(fd)) {\n    case 'TTY': {\n      const tty = require('tty');\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty';\n      break;\n    }\n\n    case 'FILE': {\n      const SyncWriteStream = require('internal/fs/sync_write_stream');\n      stream = new SyncWriteStream(fd\x2C { autoClose: false });\n      stream._type = 'fs';\n      break;\n    }\n\n    case 'PIPE':\n    case 'TCP': {\n      const net = require('net');\n\n      // If fd is already being used for the IPC channel\x2C libuv will return\n      // an error when trying to use it again. In that case\x2C create the socket\n      // using the existing handle instead of the fd.\n      if (process.channel && process.channel.fd === fd) {\n        const { kChannelHandle } = require('internal/child_process');\n        stream = new net.Socket({\n          handle: process[kChannelHandle]\x2C\n          readable: false\x2C\n          writable: true\n        });\n      } else {\n        stream = new net.Socket({\n          fd\x2C\n          readable: false\x2C\n          writable: true\n        });\n      }\n\n      stream._type = 'pipe';\n      break;\n    }\n\n    default: {\n      // Provide a dummy black-hole output for e.g. non-console\n      // Windows applications.\n      const { Writable } = require('stream');\n      stream = new Writable({\n        write(buf\x2C enc\x2C cb) {\n          cb();\n        }\n      });\n    }\n  }\n\n  // For supporting legacy API we put the FD here.\n  stream.fd = fd;\n\n  stream._isStdio = true;\n\n  return stream;\n}\n\nfunction dummyDestroy(err\x2C cb) {\n  cb(err);\n  this._undestroy();\n\n  // We need to emit 'close' anyway so that the closing\n  // of the stream is observable. We just make sure we\n  // are not going to do it twice.\n  // The 'close' event is needed so that finished and\n  // pipeline work correctly.\n  if (!this._writableState.emitClose) {\n    process.nextTick(() => {\n      this.emit('close');\n    });\n  }\n}\n\nlet stdin;\nlet stdout;\nlet stderr;\n\nlet stdoutDestroy;\nlet stderrDestroy;\n\nfunction refreshStdoutOnSigWinch() {\n  stdout._refreshSize();\n}\n\nfunction refreshStderrOnSigWinch() {\n  stderr._refreshSize();\n}\n\nfunction addCleanup(fn) {\n  if (isBuildingSnapshot()) {\n    addSerializeCallback(fn);\n  }\n}\n\nfunction getStdout() {\n  if (stdout) return stdout;\n  stdout = createWritableStdioStream(1);\n  stdout.destroySoon = stdout.destroy;\n  // Override _destroy so that the fd is never actually closed.\n  stdoutDestroy = stdout._destroy;\n  stdout._destroy = dummyDestroy;\n  if (stdout.isTTY) {\n    process.on('SIGWINCH'\x2C refreshStdoutOnSigWinch);\n  }\n\n  addCleanup(function cleanupStdout() {\n    stdout._destroy = stdoutDestroy;\n    stdout.destroy();\n    process.removeListener('SIGWINCH'\x2C refreshStdoutOnSigWinch);\n    stdout = undefined;\n  });\n  // No need to add deserialize callback because stdout = undefined above\n  // causes the stream to be lazily initialized again later.\n  return stdout;\n}\n\nfunction getStderr() {\n  if (stderr) return stderr;\n  stderr = createWritableStdioStream(2);\n  stderr.destroySoon = stderr.destroy;\n  stderrDestroy = stderr._destroy;\n  // Override _destroy so that the fd is never actually closed.\n  stderr._destroy = dummyDestroy;\n  if (stderr.isTTY) {\n    process.on('SIGWINCH'\x2C refreshStderrOnSigWinch);\n  }\n  addCleanup(function cleanupStderr() {\n    stderr._destroy = stderrDestroy;\n    stderr.destroy();\n    process.removeListener('SIGWINCH'\x2C refreshStderrOnSigWinch);\n    stderr = undefined;\n  });\n  // No need to add deserialize callback because stderr = undefined above\n  // causes the stream to be lazily initialized again later.\n  return stderr;\n}\n\nfunction getStdin() {\n  if (stdin) return stdin;\n  const fd = 0;\n\n  switch (guessHandleType(fd)) {\n    case 'TTY': {\n      const tty = require('tty');\n      stdin = new tty.ReadStream(fd);\n      break;\n    }\n\n    case 'FILE': {\n      const fs = require('fs');\n      stdin = new fs.ReadStream(null\x2C { fd: fd\x2C autoClose: false });\n      break;\n    }\n\n    case 'PIPE':\n    case 'TCP': {\n      const net = require('net');\n\n      // It could be that process has been started with an IPC channel\n      // sitting on fd=0\x2C in such case the pipe for this fd is already\n      // present and creating a new one will lead to the assertion failure\n      // in libuv.\n      if (process.channel && process.channel.fd === fd) {\n        stdin = new net.Socket({\n          handle: process.channel\x2C\n          readable: true\x2C\n          writable: false\x2C\n          manualStart: true\n        });\n      } else {\n        stdin = new net.Socket({\n          fd: fd\x2C\n          readable: true\x2C\n          writable: false\x2C\n          manualStart: true\n        });\n      }\n      // Make sure the stdin can't be `.end()`-ed\n      stdin._writableState.ended = true;\n      break;\n    }\n\n    default: {\n      // Provide a dummy contentless input for e.g. non-console\n      // Windows applications.\n      const { Readable } = require('stream');\n      stdin = new Readable({ read() {} });\n      stdin.push(null);\n    }\n  }\n\n  // For supporting legacy API we put the FD here.\n  stdin.fd = fd;\n\n  // `stdin` starts out life in a paused state\x2C but node doesn't\n  // know yet. Explicitly to readStop() it to put it in the\n  // not-reading state.\n  if (stdin._handle && stdin._handle.readStop) {\n    stdin._handle.reading = false;\n    stdin._readableState.reading = false;\n    stdin._handle.readStop();\n  }\n\n  // If the user calls stdin.pause()\x2C then we need to stop reading\n  // once the stream implementation does so (one nextTick later)\x2C\n  // so that the process can close down.\n  stdin.on('pause'\x2C () => {\n    process.nextTick(onpause);\n  });\n\n  function onpause() {\n    if (!stdin._handle)\n      return;\n    if (stdin._handle.reading && !stdin.readableFlowing) {\n      stdin._readableState.reading = false;\n      stdin._handle.reading = false;\n      stdin._handle.readStop();\n    }\n  }\n\n  addCleanup(function cleanupStdin() {\n    stdin.destroy();\n    stdin = undefined;\n  });\n  // No need to add deserialize callback because stdin = undefined above\n  // causes the stream to be lazily initialized again later.\n  return stdin;\n}\n\n// Used by internal tests.\nrawMethods.resetStdioForTesting = function() {\n  stdin = undefined;\n  stdout = undefined;\n  stderr = undefined;\n};\n
code-source-info,0x3685f020fc18,128,3709,4383,C0O3716C6O3728C10O3742C11O3745C17O3754C24O3752C30O3786C37O3807C40O3814C44O3805C48O3889C53O3912C60O3903C66O3924C73O3940C77O3958C82O3969C88O3982C91O3990C102O3990C108O4038C116O4038C120O4367C124O4381,,
code-creation,LazyCompile,10,113625,0x3685f02109a0,280,createWritableStdioStream node:internal/bootstrap/switches/is_main_thread:45:35,0x1e27ac64a0b0,~
code-source-info,0x3685f02109a0,128,1420,2985,C0O1433C2O1503C7O1511C42O1570C48O1570C53O1609C60O1601C66O1632C68O1645C72O1660C74O1723C80O1723C85O1800C95O1780C101O1833C103O1846C107O1860C109O1927C115O1927C120O2159C123O2171C132O2190C137O2198C144O2201C149O2246C155O2246C160O2227C165O2306C180O2340C189O2298C197O2462C209O2481C215O2454C221O2564C223O2577C227O2593C229O2744C235O2744C240O2731C245O2769C250O2801C260O2778C266O2923C268O2933C272O2942C273O2958C277O2969C279O2983,,
code-creation,Eval,10,113750,0x3685f0211098,5, node:tty:1:1,0x3685f0210e90,~
script-source,511,node:tty,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  Array\x2C\n  NumberIsInteger\x2C\n  ObjectSetPrototypeOf\x2C\n} = primordials;\n\nconst net = require('net');\nconst { TTY\x2C isTTY } = internalBinding('tty_wrap');\nconst errors = require('internal/errors');\nconst { ERR_INVALID_FD\x2C ERR_TTY_INIT_FAILED } = errors.codes;\nconst {\n  getColorDepth\x2C\n  hasColors\n} = require('internal/tty');\n\n// Lazy loaded for startup performance.\nlet readline;\n\nfunction isatty(fd) {\n  return NumberIsInteger(fd) && fd >= 0 && fd <= 2147483647 &&\n         isTTY(fd);\n}\n\nfunction ReadStream(fd\x2C options) {\n  if (!(this instanceof ReadStream))\n    return new ReadStream(fd\x2C options);\n  if (fd >> 0 !== fd || fd < 0)\n    throw new ERR_INVALID_FD(fd);\n\n  const ctx = {};\n  const tty = new TTY(fd\x2C ctx);\n  if (ctx.code !== undefined) {\n    throw new ERR_TTY_INIT_FAILED(ctx);\n  }\n\n  net.Socket.call(this\x2C {\n    readableHighWaterMark: 0\x2C\n    handle: tty\x2C\n    manualStart: true\x2C\n    ...options\n  });\n\n  this.isRaw = false;\n  this.isTTY = true;\n}\n\nObjectSetPrototypeOf(ReadStream.prototype\x2C net.Socket.prototype);\nObjectSetPrototypeOf(ReadStream\x2C net.Socket);\n\nReadStream.prototype.setRawMode = function(flag) {\n  flag = !!flag;\n  const err = this._handle.setRawMode(flag);\n  if (err) {\n    this.emit('error'\x2C errors.errnoException(err\x2C 'setRawMode'));\n    return this;\n  }\n  this.isRaw = flag;\n  return this;\n};\n\nfunction WriteStream(fd) {\n  if (!(this instanceof WriteStream))\n    return new WriteStream(fd);\n  if (fd >> 0 !== fd || fd < 0)\n    throw new ERR_INVALID_FD(fd);\n\n  const ctx = {};\n  const tty = new TTY(fd\x2C ctx);\n  if (ctx.code !== undefined) {\n    throw new ERR_TTY_INIT_FAILED(ctx);\n  }\n\n  net.Socket.call(this\x2C {\n    readableHighWaterMark: 0\x2C\n    handle: tty\x2C\n    manualStart: true\n  });\n\n  // Prevents interleaved or dropped stdout/stderr output for terminals.\n  // As noted in the following reference\x2C local TTYs tend to be quite fast and\n  // this behavior has become expected due historical functionality on OS X\x2C\n  // even though it was originally intended to change in v1.0.2 (Libuv 1.2.1).\n  // Ref: https://github.com/nodejs/node/pull/1771#issuecomment-119351671\n  this._handle.setBlocking(true);\n\n  const winSize = new Array(2);\n  const err = this._handle.getWindowSize(winSize);\n  if (!err) {\n    this.columns = winSize[0];\n    this.rows = winSize[1];\n  }\n}\n\nObjectSetPrototypeOf(WriteStream.prototype\x2C net.Socket.prototype);\nObjectSetPrototypeOf(WriteStream\x2C net.Socket);\n\nWriteStream.prototype.isTTY = true;\n\nWriteStream.prototype.getColorDepth = getColorDepth;\n\nWriteStream.prototype.hasColors = hasColors;\n\nWriteStream.prototype._refreshSize = function() {\n  const oldCols = this.columns;\n  const oldRows = this.rows;\n  const winSize = new Array(2);\n  const err = this._handle.getWindowSize(winSize);\n  if (err) {\n    this.emit('error'\x2C errors.errnoException(err\x2C 'getWindowSize'));\n    return;\n  }\n  const { 0: newCols\x2C 1: newRows } = winSize;\n  if (oldCols !== newCols || oldRows !== newRows) {\n    this.columns = newCols;\n    this.rows = newRows;\n    this.emit('resize');\n  }\n};\n\n// Backwards-compat\nWriteStream.prototype.cursorTo = function(x\x2C y\x2C callback) {\n  if (readline === undefined) readline = require('readline');\n  return readline.cursorTo(this\x2C x\x2C y\x2C callback);\n};\nWriteStream.prototype.moveCursor = function(dx\x2C dy\x2C callback) {\n  if (readline === undefined) readline = require('readline');\n  return readline.moveCursor(this\x2C dx\x2C dy\x2C callback);\n};\nWriteStream.prototype.clearLine = function(dir\x2C callback) {\n  if (readline === undefined) readline = require('readline');\n  return readline.clearLine(this\x2C dir\x2C callback);\n};\nWriteStream.prototype.clearScreenDown = function(callback) {\n  if (readline === undefined) readline = require('readline');\n  return readline.clearScreenDown(this\x2C callback);\n};\nWriteStream.prototype.getWindowSize = function() {\n  return [this.columns\x2C this.rows];\n};\n\nmodule.exports = { isatty\x2C ReadStream\x2C WriteStream };\n
code-source-info,0x3685f0211098,511,0,5054,C0O0C4O5054,,
code-creation,Function,10,113958,0x3685f0211770,426, node:tty:1:1,0x3685f0211010,~
code-source-info,0x3685f
tick,0x10513d638,114041,1,0x104a8d6ec,6,0x0,0x109cc9ca0,0x109cc956c,0x3685f02109d0,0x3685f020fc29,0x117768a1dfb6,0x1054080d0,0x104a6d958,0x117768a12ed4,0x105405ef4
code-creation,Eval,10,114083,0x3685f02127b8,5, node:internal/tty:1:1,0x3685f0212560,~
script-source,512,node:internal/tty,// MIT License\n\n// Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a copy\n// of this software and associated documentation files (the "Software")\x2C to deal\n// in the Software without restriction\x2C including without limitation the rights\n// to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C distribute\x2C sublicense\x2C and/or sell\n// copies of the Software\x2C and to permit persons to whom the Software is\n// furnished to do so\x2C subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS OR\n// IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY\x2C\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C DAMAGES OR OTHER\n// LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR OTHERWISE\x2C ARISING FROM\x2C\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypeSome\x2C\n  RegExpPrototypeExec\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeToLowerCase\x2C\n} = primordials;\n\nconst { validateInteger } = require('internal/validators');\n\nlet OSRelease;\n\nconst COLORS_2 = 1;\nconst COLORS_16 = 4;\nconst COLORS_256 = 8;\nconst COLORS_16m = 24;\n\n// Some entries were taken from `dircolors`\n// (https://linux.die.net/man/1/dircolors). The corresponding terminals might\n// support more than 16 colors\x2C but this was not tested for.\n//\n// Copyright (C) 1996-2016 Free Software Foundation\x2C Inc. Copying and\n// distribution of this file\x2C with or without modification\x2C are permitted\n// provided the copyright notice and this notice are preserved.\nconst TERM_ENVS = {\n  'eterm': COLORS_16\x2C\n  'cons25': COLORS_16\x2C\n  'console': COLORS_16\x2C\n  'cygwin': COLORS_16\x2C\n  'dtterm': COLORS_16\x2C\n  'gnome': COLORS_16\x2C\n  'hurd': COLORS_16\x2C\n  'jfbterm': COLORS_16\x2C\n  'konsole': COLORS_16\x2C\n  'kterm': COLORS_16\x2C\n  'mlterm': COLORS_16\x2C\n  'mosh': COLORS_16m\x2C\n  'putty': COLORS_16\x2C\n  'st': COLORS_16\x2C\n  // https://github.com/da-x/rxvt-unicode/tree/v9.22-with-24bit-color\n  'rxvt-unicode-24bit': COLORS_16m\x2C\n  // https://gist.github.com/XVilka/8346728#gistcomment-2823421\n  'terminator': COLORS_16m\n};\n\nconst TERM_ENVS_REG_EXP = [\n  /ansi/\x2C\n  /color/\x2C\n  /linux/\x2C\n  /^con[0-9]*x[0-9]/\x2C\n  /^rxvt/\x2C\n  /^screen/\x2C\n  /^xterm/\x2C\n  /^vt100/\x2C\n];\n\nlet warned = false;\nfunction warnOnDeactivatedColors(env) {\n  if (warned)\n    return;\n  let name = '';\n  if (env.NODE_DISABLE_COLORS !== undefined)\n    name = 'NODE_DISABLE_COLORS';\n  if (env.NO_COLOR !== undefined) {\n    if (name !== '') {\n      name += "' and '";\n    }\n    name += 'NO_COLOR';\n  }\n\n  if (name !== '') {\n    process.emitWarning(\n      `The '${name}' env is ignored due to the 'FORCE_COLOR' env being set.`\x2C\n      'Warning'\n    );\n    warned = true;\n  }\n}\n\n// The `getColorDepth` API got inspired by multiple sources such as\n// https://github.com/chalk/supports-color\x2C\n// https://github.com/isaacs/color-support.\nfunction getColorDepth(env = process.env) {\n  // Use level 0-3 to support the same levels as `chalk` does. This is done for\n  // consistency throughout the ecosystem.\n  if (env.FORCE_COLOR !== undefined) {\n    switch (env.FORCE_COLOR) {\n      case '':\n      case '1':\n      case 'true':\n        warnOnDeactivatedColors(env);\n        return COLORS_16;\n      case '2':\n        warnOnDeactivatedColors(env);\n        return COLORS_256;\n      case '3':\n        warnOnDeactivatedColors(env);\n        return COLORS_16m;\n      default:\n        return COLORS_2;\n    }\n  }\n\n  if (env.NODE_DISABLE_COLORS !== undefined ||\n      // See https://no-color.org/\n      env.NO_COLOR !== undefined ||\n      // The "dumb" special terminal\x2C as defined by terminfo\x2C doesn't support\n      // ANSI color control codes.\n      // See https://invisible-island.net/ncurses/terminfo.ti.html#toc-_Specials\n      env.TERM === 'dumb') {\n    return COLORS_2;\n  }\n\n  if (process.platform === 'win32') {\n    // Lazy load for startup performance.\n    if (OSRelease === undefined) {\n      const { release } = require('os');\n      OSRelease = StringPrototypeSplit(release()\x2C '.');\n    }\n    // Windows 10 build 10586 is the first Windows release that supports 256\n    // colors. Windows 10 build 14931 is the first release that supports\n    // 16m/TrueColor.\n    if (+OSRelease[0] >= 10) {\n      const build = +OSRelease[2];\n      if (build >= 14931)\n        return COLORS_16m;\n      if (build >= 10586)\n        return COLORS_256;\n    }\n\n    return COLORS_16;\n  }\n\n  if (env.TMUX) {\n    return COLORS_256;\n  }\n\n  if (env.CI) {\n    if ([\n      'APPVEYOR'\x2C\n      'BUILDKITE'\x2C\n      'CIRCLECI'\x2C\n      'DRONE'\x2C\n      'GITHUB_ACTIONS'\x2C\n      'GITLAB_CI'\x2C\n      'TRAVIS'\x2C\n    ].some((sign) => sign in env) || env.CI_NAME === 'codeship') {\n      return COLORS_256;\n    }\n    return COLORS_2;\n  }\n\n  if ('TEAMCITY_VERSION' in env) {\n    return RegExpPrototypeExec(/^(9\\.(0*[1-9]\\d*)\\.|\\d{2\x2C}\\.)/\x2C env.TEAMCITY_VERSION) !== null ?\n      COLORS_16 : COLORS_2;\n  }\n\n  switch (env.TERM_PROGRAM) {\n    case 'iTerm.app':\n      if (!env.TERM_PROGRAM_VERSION ||\n        RegExpPrototypeExec(/^[0-2]\\./\x2C env.TERM_PROGRAM_VERSION) !== null\n      ) {\n        return COLORS_256;\n      }\n      return COLORS_16m;\n    case 'HyperTerm':\n    case 'MacTerm':\n      return COLORS_16m;\n    case 'Apple_Terminal':\n      return COLORS_256;\n  }\n\n  if (env.COLORTERM === 'truecolor' || env.COLORTERM === '24bit') {\n    return COLORS_16m;\n  }\n\n  if (env.TERM) {\n    if (RegExpPrototypeExec(/^xterm-256/\x2C env.TERM) !== null) {\n      return COLORS_256;\n    }\n\n    const termEnv = StringPrototypeToLowerCase(env.TERM);\n\n    if (TERM_ENVS[termEnv]) {\n      return TERM_ENVS[termEnv];\n    }\n    if (ArrayPrototypeSome(TERM_ENVS_REG_EXP\x2C\n                           (term) => RegExpPrototypeExec(term\x2C termEnv) !== null)) {\n      return COLORS_16;\n    }\n  }\n  // Move 16 color COLORTERM below 16m and 256\n  if (env.COLORTERM) {\n    return COLORS_16;\n  }\n  return COLORS_2;\n}\n\nfunction hasColors(count\x2C env) {\n  if (env === undefined &&\n      (count === undefined || (typeof count === 'object' && count !== null))) {\n    env = count;\n    count = 16;\n  } else {\n    validateInteger(count\x2C 'count'\x2C 2);\n  }\n\n  return count <= 2 ** getColorDepth(env);\n}\n\nmodule.exports = {\n  getColorDepth\x2C\n  hasColors\n};\n
code-source-info,0x3685f02127b8,512,0,6482,C0O0C4O6482,,
code-creation,Function,10,114333,0x3685f0212c18,358, node:internal/tty:1:1,0x3685f0212730,~
code-source-info,0x3685f0212c18,512,0,6482,C0O0C69O1186C75O1208C81O1231C87O1255C93O1329C99O1329C104O1309C110O1366C111O1366C113O1395C115O1395C117O1416C119O1416C121O1438C123O1438C125O1460C127O1460C129O1877C136O1890C142O1913C148O1937C154O1960C160O1983C166O2005C172O2026C178O2050C184O2074C190O2096C196O2119C202O2140C208O2163C214O2182C220O2287C226O2379C232O1877C234O2420C328O2420C330O2541C331O2541C333O6431C340O6452C346O6469C352O6446C357O6481,,
code-creation,LazyCompile,10,114458,0x3685f02139b0,192,WriteStream node:tty:84:21,0x3685f0211168,~
code-source-info,0x3685f02139b0,511,2498,3449,C0O2507C2O2518C7O2547C12O2554C17O2574C18O2577C20O2584C26O2589C32O2602C37O2611C44O2617C49O2611C50O2656C52O2674C65O2674C71O2702C77O2728C84O2734C89O2728C90O2771C95O2775C100O2782C112O2837C116O2782C122O3260C127O3268C134O3268C139O3306C149O3306C155O3339C160O3347C165O3347C171O3373C173O3389C174O3411C177O3402C181O3420C183O3439C186O3430C191O3448,,
code-creation,LazyCompile,10,114583,0x3685f0214630,919,Socket node:net:329:16,0x1e372ce361b8,~
code-source-info,0x3685f
code-creation,LazyCompile,10,114666,0x3685f0214d80,169,Duplex node:internal/streams/duplex:54:16,0x25eb221c78d8,~
script-source,57,node:internal/streams/duplex,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototype inheritance\x2C this class\n// prototypically inherits from Readable\x2C and then parasitically from\n// Writable.\n\n'use strict';\n\nconst {\n  ObjectDefineProperties\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectKeys\x2C\n  ObjectSetPrototypeOf\x2C\n} = primordials;\n\nmodule.exports = Duplex;\n\nconst Readable = require('internal/streams/readable');\nconst Writable = require('internal/streams/writable');\n\nObjectSetPrototypeOf(Duplex.prototype\x2C Readable.prototype);\nObjectSetPrototypeOf(Duplex\x2C Readable);\n\n{\n  const keys = ObjectKeys(Writable.prototype);\n  // Allow the keys array to be GC'ed.\n  for (let i = 0; i < keys.length; i++) {\n    const method = keys[i];\n    if (!Duplex.prototype[method])\n      Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex))\n    return new Duplex(options);\n\n  Readable.call(this\x2C options);\n  Writable.call(this\x2C options);\n\n  if (options) {\n    this.allowHalfOpen = options.allowHalfOpen !== false;\n\n    if (options.readable === false) {\n      this._readableState.readable = false;\n      this._readableState.ended = true;\n      this._readableState.endEmitted = true;\n    }\n\n    if (options.writable === false) {\n      this._writableState.writable = false;\n      this._writableState.ending = true;\n      this._writableState.ended = true;\n      this._writableState.finished = true;\n    }\n  } else {\n    this.allowHalfOpen = true;\n  }\n}\n\nObjectDefineProperties(Duplex.prototype\x2C {\n  writable:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writable') }\x2C\n  writableHighWaterMark:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableHighWaterMark') }\x2C\n  writableObjectMode:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableObjectMode') }\x2C\n  writableBuffer:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableBuffer') }\x2C\n  writableLength:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableLength') }\x2C\n  writableFinished:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableFinished') }\x2C\n  writableCorked:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableCorked') }\x2C\n  writableEnded:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableEnded') }\x2C\n  writableNeedDrain:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableNeedDrain') }\x2C\n\n  destroyed: {\n    __proto__: null\x2C\n    get() {\n      if (this._readableState === undefined ||\n        this._writableState === undefined) {\n        return false;\n      }\n      return this._readableState.destroyed && this._writableState.destroyed;\n    }\x2C\n    set(value) {\n      // Backward compatibility\x2C the user is explicitly\n      // managing destroyed.\n      if (this._readableState && this._writableState) {\n        this._readableState.destroyed = value;\n        this._writableState.destroyed = value;\n      }\n    }\n  }\n});\n\nlet webStreamsAdapters;\n\n// Lazy to avoid circular references\nfunction lazyWebStreams() {\n  if (webStreamsAdapters === undefined)\n    webStreamsAdapters = require('internal/webstreams/adapters');\n  return webStreamsAdapters;\n}\n\nDuplex.fromWeb = function(pair\x2C options) {\n  return lazyWebStreams().newStreamDuplexFromReadableWritablePair(\n    pair\x2C\n    options);\n};\n\nDuplex.toWeb = function(duplex) {\n  return lazyWebStreams().newReadableWritablePairFromDuplex(duplex);\n};\n\nlet duplexify;\n\nDuplex.from = function(body) {\n  if (!duplexify) {\n    duplexify = require('internal/streams/duplexify');\n  }\n  return duplexify(body\x2C 'body');\n};\n
code-source-info,0x3685f0214d80,57,2011,2663,C0O2025C2O2036C7O2060C12O2067C17O2087C18O2091C23O2100C28O2100C34O2123C39O2132C44O2132C50O2156C54O2204C60O2218C64O2194C68O2246C74O2255C79O2279C85O2303C89O2323C95O2344C99O2363C105O2389C109O2420C115O2429C120O2453C126O2477C130O2497C136O2519C140O2538C146O2559C150O2578C156O2602C162O2631C163O2650C168O2662,,
code-creation,LazyCompile,10,114916,0x3685f0215520,220,Readable node:internal/streams/readable:186:18,0x25eb221d27d0,~
script-source,58,node:internal/streams/readable,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypeIndexOf\x2C\n  NumberIsInteger\x2C\n  NumberIsNaN\x2C\n  NumberParseInt\x2C\n  ObjectDefineProperties\x2C\n  ObjectKeys\x2C\n  ObjectSetPrototypeOf\x2C\n  Promise\x2C\n  SafeSet\x2C\n  SymbolAsyncIterator\x2C\n  Symbol\n} = primordials;\n\nmodule.exports = Readable;\nReadable.ReadableState = ReadableState;\n\nconst EE = require('events');\nconst { Stream\x2C prependListener } = require('internal/streams/legacy');\nconst { Buffer } = require('buffer');\n\nconst {\n  addAbortSignal\x2C\n} = require('internal/streams/add-abort-signal');\nconst eos = require('internal/streams/end-of-stream');\n\nlet debug = require('internal/util/debuglog').debuglog('stream'\x2C (fn) => {\n  debug = fn;\n});\nconst BufferList = require('internal/streams/buffer_list');\nconst destroyImpl = require('internal/streams/destroy');\nconst {\n  getHighWaterMark\x2C\n  getDefaultHighWaterMark\n} = require('internal/streams/state');\n\nconst {\n  aggregateTwoErrors\x2C\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\n    ERR_OUT_OF_RANGE\x2C\n    ERR_STREAM_PUSH_AFTER_EOF\x2C\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT\x2C\n  }\n} = require('internal/errors');\nconst { validateObject } = require('internal/validators');\n\nconst kPaused = Symbol('kPaused');\n\nconst { StringDecoder } = require('string_decoder');\nconst from = require('internal/streams/from');\n\nObjectSetPrototypeOf(Readable.prototype\x2C Stream.prototype);\nObjectSetPrototypeOf(Readable\x2C Stream);\nconst nop = () => {};\n\nconst { errorOrDestroy } = destroyImpl;\n\nfunction ReadableState(options\x2C stream\x2C isDuplex) {\n  // Duplex streams are both readable and writable\x2C but share\n  // the same options object.\n  // However\x2C some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean')\n    isDuplex = stream instanceof Stream.Duplex;\n\n  // Object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away.\n  this.objectMode = !!(options && options.objectMode);\n\n  if (isDuplex)\n    this.objectMode = this.objectMode ||\n      !!(options && options.readableObjectMode);\n\n  // The point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value\x2C means "don't call _read preemptively ever"\n  this.highWaterMark = options ?\n    getHighWaterMark(this\x2C options\x2C 'readableHighWaterMark'\x2C isDuplex) :\n    getDefaultHighWaterMark(false);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift().\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = [];\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // Stream is still being constructed and cannot be\n  // destroyed until construction finished or failed.\n  // Async construction is opt in\x2C therefore we start as\n  // constructed.\n  this.constructed = true;\n\n  // A flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately\x2C or on a later tick.  We set this to true at first\x2C because\n  // any actions that shouldn't happen until "later" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // Whenever we return null\x2C then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this[kPaused] = null;\n\n  // True if the error was already emitted and should not be thrown again.\n  this.errorEmitted = false;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = !options || options.emitClose !== false;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish').\n  this.autoDestroy = !options || options.autoDestroy !== false;\n\n  // Has it been destroyed.\n  this.destroyed = false;\n\n  // Indicates whether the stream has errored. When true no further\n  // _read calls\x2C 'data' or 'readable' events should occur. This is needed\n  // since when autoDestroy is disabled we need a way to tell whether the\n  // stream has failed.\n  this.errored = null;\n\n  // Indicates whether the stream has finished destroying.\n  this.closed = false;\n\n  // True if close has been emitted or would have been emitted\n  // depending on emitClose.\n  this.closeEmitted = false;\n\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8'\x2C though.\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8';\n\n  // Ref the piped dest which we need a drain event on it\n  // type: null | Writable | Set<Writable>.\n  this.awaitDrainWriters = null;\n  this.multiAwaitDrain = false;\n\n  // If true\x2C a maybeReadMore has been scheduled.\n  this.readingMore = false;\n\n  this.dataEmitted = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options && options.encoding) {\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\n\nfunction Readable(options) {\n  if (!(this instanceof Readable))\n    return new Readable(options);\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor\x2C at least with V8 6.5.\n  const isDuplex = this instanceof Stream.Duplex;\n\n  this._readableState = new ReadableState(options\x2C this\x2C isDuplex);\n\n  if (options) {\n    if (typeof options.read === 'function')\n      this._read = options.read;\n\n    if (typeof options.destroy === 'function')\n      this._destroy = options.destroy;\n\n    if (typeof options.construct === 'function')\n      this._construct = options.construct;\n\n    if (options.signal && !isDuplex)\n      addAbortSignal(options.signal\x2C this);\n  }\n\n  Stream.call(this\x2C options);\n\n  destroyImpl.construct(this\x2C () => {\n    if (this._readableState.needReadable) {\n      maybeReadMore(this\x2C this._readableState);\n    }\n  });\n}\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function(err\x2C cb) {\n  cb(err);\n};\n\nReadable.prototype[EE.captureRejectionSymbol] = function(err) {\n  this.destroy(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet\x2C\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function(chunk\x2C encoding) {\n  return readableAddChunk(this\x2C chunk\x2C encoding\x2C false);\n};\n\n// Unshift should *always* be something directly out of read().\nReadable.prototype.unshift = function(chunk\x2C encoding) {\n  return readableAddChunk(this\x2C chunk\x2C encoding\x2C true);\n};\n\nfunction readableAddChunk(stream\x2C chunk\x2C encoding\x2C addToFront) {\n  debug('readableAddChunk'\x2C chunk);\n  const state = stream._readableState;\n\n  let err;\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (state.encoding !== encoding) {\n        if (addToFront && state.encoding) {\n          // When unshifting\x2C if state.encoding is set\x2C we have to save\n          // the string in the BufferList with the state encoding.\n          chunk = Buffer.from(chunk\x2C encoding).toString(state.encoding);\n        } else {\n          chunk = Buffer.from(chunk\x2C encoding);\n          encoding = '';\n        }\n      }\n    } else if (chunk instanceof Buffer) {\n      encoding = '';\n    } else if (Stream._isUint8Array(chunk)) {\n      chunk = Stream._uint8ArrayToBuffer(chunk);\n      encoding = '';\n    } else if (chunk != null) {\n      err = new ERR_INVALID_ARG_TYPE(\n        'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk);\n    }\n  }\n\n  if (err) {\n    errorOrDestroy(stream\x2C err);\n  } else if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream\x2C state);\n  } else if (state.objectMode || (chunk && chunk.length > 0)) {\n    if (addToFront) {\n      if (state.endEmitted)\n        errorOrDestroy(stream\x2C new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());\n      else if (state.destroyed || state.errored)\n        return false;\n      else\n        addChunk(stream\x2C state\x2C chunk\x2C true);\n    } else if (state.ended) {\n      errorOrDestroy(stream\x2C new ERR_STREAM_PUSH_AFTER_EOF());\n    } else if (state.destroyed || state.errored) {\n      return false;\n    } else {\n      state.reading = false;\n      if (state.decoder && !encoding) {\n        chunk = state.decoder.write(chunk);\n        if (state.objectMode || chunk.length !== 0)\n          addChunk(stream\x2C state\x2C chunk\x2C false);\n        else\n          maybeReadMore(stream\x2C state);\n      } else {\n        addChunk(stream\x2C state\x2C chunk\x2C false);\n      }\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n    maybeReadMore(stream\x2C state);\n  }\n\n  // We can push more data if we are below the highWaterMark.\n  // Also\x2C if we have no data yet\x2C we can stand some more bytes.\n  // This is to work around cases where hwm=0\x2C such as the repl.\n  return !state.ended &&\n    (state.length < state.highWaterMark || state.length === 0);\n}\n\nfunction addChunk(stream\x2C state\x2C chunk\x2C addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync &&\n      stream.listenerCount('data') > 0) {\n    // Use the guard to avoid creating `Set()` repeatedly\n    // when we have multiple pipes.\n    if (state.multiAwaitDrain) {\n      state.awaitDrainWriters.clear();\n    } else {\n      state.awaitDrainWriters = null;\n    }\n\n    state.dataEmitted = true;\n    stream.emit('data'\x2C chunk);\n  } else {\n    // Update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront)\n      state.buffer.unshift(chunk);\n    else\n      state.buffer.push(chunk);\n\n    if (state.needReadable)\n      emitReadable(stream);\n  }\n  maybeReadMore(stream\x2C state);\n}\n\nReadable.prototype.isPaused = function() {\n  const state = this._readableState;\n  return state[kPaused] === true || state.flowing === false;\n};\n\n// Backwards compatibility.\nReadable.prototype.setEncoding = function(enc) {\n  const decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder;\n  // If setEncoding(null)\x2C decoder.encoding equals utf8.\n  this._readableState.encoding = this._readableState.decoder.encoding;\n\n  const buffer = this._readableState.buffer;\n  // Iterate over current buffer to convert already stored Buffers:\n  let content = '';\n  for (const data of buffer) {\n    content += decoder.write(data);\n  }\n  buffer.clear();\n  if (content !== '')\n    buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n};\n\n// Don't raise the hwm > 1GB.\nconst MAX_HWM = 0x40000000;\nfunction computeNewHighWaterMark(n) {\n  if (n > MAX_HWM) {\n    throw new ERR_OUT_OF_RANGE('size'\x2C '<= 1GiB'\x2C n);\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts.\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable\x2C so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n\x2C state) {\n  if (n <= 0 || (state.length === 0 && state.ended))\n    return 0;\n  if (state.objectMode)\n    return 1;\n  if (NumberIsNaN(n)) {\n    // Only flow one buffer at a time.\n    if (state.flowing && state.length)\n      return state.buffer.first().length;\n    return state.length;\n  }\n  if (n <= state.length)\n    return n;\n  return state.ended ? state.length : 0;\n}\n\n// You can override either this method\x2C or the async _read(n) below.\nReadable.prototype.read = function(n) {\n  debug('read'\x2C n);\n  // Same as parseInt(undefined\x2C 10)\x2C however V8 7.3 performance regressed\n  // in this scenario\x2C so we are doing it manually.\n  if (n === undefined) {\n    n = NaN;\n  } else if (!NumberIsInteger(n)) {\n    n = NumberParseInt(n\x2C 10);\n  }\n  const state = this._readableState;\n  const nOrig = n;\n\n  // If we're asking for more than the current hwm\x2C then raise the hwm.\n  if (n > state.highWaterMark)\n    state.highWaterMark = computeNewHighWaterMark(n);\n\n  if (n !== 0)\n    state.emittedReadable = false;\n\n  // If we're doing read(0) to trigger a readable event\x2C but we\n  // already have a bunch of data in the buffer\x2C then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 &&\n      state.needReadable &&\n      ((state.highWaterMark !== 0 ?\n        state.length >= state.highWaterMark :\n        state.length > 0) ||\n       state.ended)) {\n    debug('read: emitReadable'\x2C state.length\x2C state.ended);\n    if (state.length === 0 && state.ended)\n      endReadable(this);\n    else\n      emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n\x2C state);\n\n  // If we've ended\x2C and we're now clear\x2C then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0)\n      endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases\x2C such as passthrough streams\x2C _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer\x2C providing enough data when\n  // before there was *not* enough.\n  //\n  // So\x2C the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read\x2C then call _read.\n  // Note that this may be asynchronous\x2C or synchronous.  Yes\x2C it is\n  // deeply ugly to write APIs this way\x2C but that still doesn't mean\n  // that the Readable class should behave improperly\x2C as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie\x2C if the read call\n  // has returned yet)\x2C so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event\x2C then we need to do some reading.\n  let doRead = state.needReadable;\n  debug('need readable'\x2C doRead);\n\n  // If we currently have less than the highWaterMark\x2C then also read some.\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark'\x2C doRead);\n  }\n\n  // However\x2C if we've ended\x2C then there's no point\x2C if we're already\n  // reading\x2C then it's unnecessary\x2C if we're constructing we have to wait\x2C\n  // and if we're destroyed or errored\x2C then it's not allowed\x2C\n  if (state.ended || state.reading || state.destroyed || state.errored ||\n      !state.constructed) {\n    doRead = false;\n    debug('reading\x2C ended or constructing'\x2C doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // If the length is currently zero\x2C then we *need* a readable event.\n    if (state.length === 0)\n      state.needReadable = true;\n\n    // Call internal read method\n    try {\n      this._read(state.highWaterMark);\n    } catch (err) {\n      errorOrDestroy(this\x2C err);\n    }\n\n    state.sync = false;\n    // If _read pushed data synchronously\x2C then `reading` will be false\x2C\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading)\n      n = howMuchToRead(nOrig\x2C state);\n  }\n\n  let ret;\n  if (n > 0)\n    ret = fromList(n\x2C state);\n  else\n    ret = null;\n\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    if (state.multiAwaitDrain) {\n      state.awaitDrainWriters.clear();\n    } else {\n      state.awaitDrainWriters = null;\n    }\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer\x2C then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended)\n      state.needReadable = true;\n\n    // If we tried to read() past the EOF\x2C then emit end on the next tick.\n    if (nOrig !== n && state.ended)\n      endReadable(this);\n  }\n\n  if (ret !== null && !state.errorEmitted && !state.closeEmitted) {\n    state.dataEmitted = true;\n    this.emit('data'\x2C ret);\n  }\n\n  return ret;\n};\n\nfunction onEofChunk(stream\x2C state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n  if (state.decoder) {\n    const chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  if (state.sync) {\n    // If we are sync\x2C wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call.\n    emitReadable(stream);\n  } else {\n    // Emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n    state.emittedReadable = true;\n    // We have to emit readable now that we are EOF. Modules\n    // in the ecosystem (e.g. dicer) rely on this event being sync.\n    emitReadable_(stream);\n  }\n}\n\n// Don't emit readable right away in sync mode\x2C because this can trigger\n// another read() call => stack overflow.  This way\x2C it might trigger\n// a nextTick recursion warning\x2C but that's not so bad.\nfunction emitReadable(stream) {\n  const state = stream._readableState;\n  debug('emitReadable'\x2C state.needReadable\x2C state.emittedReadable);\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable'\x2C state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_\x2C stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  const state = stream._readableState;\n  debug('emitReadable_'\x2C state.destroyed\x2C state.length\x2C state.ended);\n  if (!state.destroyed && !state.errored && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  }\n\n  // The stream needs another readable event if:\n  // 1. It is not flowing\x2C as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark\x2C so we can schedule\n  //    another readable later.\n  state.needReadable =\n    !state.flowing &&\n    !state.ended &&\n    state.length <= state.highWaterMark;\n  flow(stream);\n}\n\n\n// At this point\x2C the user has presumably seen the 'readable' event\x2C\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call\x2C in which case reading = true if\n// it's in progress.\n// However\x2C if we're not ended\x2C or reading\x2C and the length < hwm\x2C\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream\x2C state) {\n  if (!state.readingMore && state.constructed) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_\x2C stream\x2C state);\n  }\n}\n\nfunction maybeReadMore_(stream\x2C state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer\x2C and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data\x2C the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the stream has called the implementation defined _read()\n  //   method\x2C but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended &&\n         (state.length < state.highWaterMark ||\n          (state.flowing && state.length === 0))) {\n    const len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // Didn't get any data\x2C stop spinning.\n      break;\n  }\n  state.readingMore = false;\n}\n\n// Abstract method.  to be overridden in specific implementation classes.\n// call cb(er\x2C data) where data is <= n in length.\n// for virtual (non-string\x2C non-buffer) streams\x2C "length" is somewhat\n// arbitrary\x2C and perhaps not very meaningful.\nReadable.prototype._read = function(n) {\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_read()');\n};\n\nReadable.prototype.pipe = function(dest\x2C pipeOpts) {\n  const src = this;\n  const state = this._readableState;\n\n  if (state.pipes.length === 1) {\n    if (!state.multiAwaitDrain) {\n      state.multiAwaitDrain = true;\n      state.awaitDrainWriters = new SafeSet(\n        state.awaitDrainWriters ? [state.awaitDrainWriters] : []\n      );\n    }\n  }\n\n  state.pipes.push(dest);\n  debug('pipe count=%d opts=%j'\x2C state.pipes.length\x2C pipeOpts);\n\n  const doEnd = (!pipeOpts || pipeOpts.end !== false) &&\n              dest !== process.stdout &&\n              dest !== process.stderr;\n\n  const endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted)\n    process.nextTick(endFn);\n  else\n    src.once('end'\x2C endFn);\n\n  dest.on('unpipe'\x2C onunpipe);\n  function onunpipe(readable\x2C unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  let ondrain;\n\n  let cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // Cleanup event handlers once the pipe is broken.\n    dest.removeListener('close'\x2C onclose);\n    dest.removeListener('finish'\x2C onfinish);\n    if (ondrain) {\n      dest.removeListener('drain'\x2C ondrain);\n    }\n    dest.removeListener('error'\x2C onerror);\n    dest.removeListener('unpipe'\x2C onunpipe);\n    src.removeListener('end'\x2C onend);\n    src.removeListener('end'\x2C unpipe);\n    src.removeListener('data'\x2C ondata);\n\n    cleanedUp = true;\n\n    // If the reader is waiting for a drain event from this\n    // specific writer\x2C then it would cause it to never start\n    // flowing again.\n    // So\x2C if this is awaiting a drain\x2C then we just call it now.\n    // If we don't know\x2C then assume that we are waiting for one.\n    if (ondrain && state.awaitDrainWriters &&\n        (!dest._writableState || dest._writableState.needDrain))\n      ondrain();\n  }\n\n  function pause() {\n    // If the user unpiped during `dest.write()`\x2C it is possible\n    // to get stuck in a permanently paused state if that write\n    // also returned false.\n    // => Check whether `dest` is still a piping destination.\n    if (!cleanedUp) {\n      if (state.pipes.length === 1 && state.pipes[0] === dest) {\n        debug('false write response\x2C pause'\x2C 0);\n        state.awaitDrainWriters = dest;\n        state.multiAwaitDrain = false;\n      } else if (state.pipes.length > 1 && state.pipes.includes(dest)) {\n        debug('false write response\x2C pause'\x2C state.awaitDrainWriters.size);\n        state.awaitDrainWriters.add(dest);\n      }\n      src.pause();\n    }\n    if (!ondrain) {\n      // When the dest drains\x2C it reduces the awaitDrain counter\n      // on the source.  This would be more elegant with a .once()\n      // handler in flow()\x2C but adding and removing repeatedly is\n      // too slow.\n      ondrain = pipeOnDrain(src\x2C dest);\n      dest.on('drain'\x2C ondrain);\n    }\n  }\n\n  src.on('data'\x2C ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    const ret = dest.write(chunk);\n    debug('dest.write'\x2C ret);\n    if (ret === false) {\n      pause();\n    }\n  }\n\n  // If the dest has an error\x2C then stop piping into it.\n  // However\x2C don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror'\x2C er);\n    unpipe();\n    dest.removeListener('error'\x2C onerror);\n    if (dest.listenerCount('error') === 0) {\n      const s = dest._writableState || dest._readableState;\n      if (s && !s.errorEmitted) {\n        // User incorrectly emitted 'error' directly on the stream.\n        errorOrDestroy(dest\x2C er);\n      } else {\n        dest.emit('error'\x2C er);\n      }\n    }\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest\x2C 'error'\x2C onerror);\n\n  // Both close and finish should trigger unpipe\x2C but only once.\n  function onclose() {\n    dest.removeListener('finish'\x2C onfinish);\n    unpipe();\n  }\n  dest.once('close'\x2C onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close'\x2C onclose);\n    unpipe();\n  }\n  dest.once('finish'\x2C onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // Tell the dest that it's being piped to.\n  dest.emit('pipe'\x2C src);\n\n  // Start the flow if it hasn't been started already.\n\n  if (dest.writableNeedDrain === true) {\n    if (state.flowing) {\n      pause();\n    }\n  } else if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src\x2C dest) {\n  return function pipeOnDrainFunctionResult() {\n    const state = src._readableState;\n\n    // `ondrain` will call directly\x2C\n    // `this` maybe not a reference to dest\x2C\n    // so we use the real dest here.\n    if (state.awaitDrainWriters === dest) {\n      debug('pipeOnDrain'\x2C 1);\n      state.awaitDrainWriters = null;\n    } else if (state.multiAwaitDrain) {\n      debug('pipeOnDrain'\x2C state.awaitDrainWriters.size);\n      state.awaitDrainWriters.delete(dest);\n    }\n\n    if ((!state.awaitDrainWriters || state.awaitDrainWriters.size === 0) &&\n      src.listenerCount('data')) {\n      src.resume();\n    }\n  };\n}\n\n\nReadable.prototype.unpipe = function(dest) {\n  const state = this._readableState;\n  const unpipeInfo = { hasUnpiped: false };\n\n  // If we're not piping anywhere\x2C then do nothing.\n  if (state.pipes.length === 0)\n    return this;\n\n  if (!dest) {\n    // remove all.\n    const dests = state.pipes;\n    state.pipes = [];\n    this.pause();\n\n    for (let i = 0; i < dests.length; i++)\n      dests[i].emit('unpipe'\x2C this\x2C { hasUnpiped: false });\n    return this;\n  }\n\n  // Try to find the right one.\n  const index = ArrayPrototypeIndexOf(state.pipes\x2C dest);\n  if (index === -1)\n    return this;\n\n  state.pipes.splice(index\x2C 1);\n  if (state.pipes.length === 0)\n    this.pause();\n\n  dest.emit('unpipe'\x2C this\x2C unpipeInfo);\n\n  return this;\n};\n\n// Set up data events if they are asked for\n// Ensure readable listeners eventually get something.\nReadable.prototype.on = function(ev\x2C fn) {\n  const res = Stream.prototype.on.call(this\x2C ev\x2C fn);\n  const state = this._readableState;\n\n  if (ev === 'data') {\n    // Update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0;\n\n    // Try start flowing on next tick if stream isn't explicitly paused.\n    if (state.flowing !== false)\n      this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable'\x2C state.length\x2C state.reading);\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick\x2C this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nReadable.prototype.removeListener = function(ev\x2C fn) {\n  const res = Stream.prototype.removeListener.call(this\x2C\n                                                   ev\x2C fn);\n\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable'\x2C fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening\x2C this);\n  }\n\n  return res;\n};\nReadable.prototype.off = Readable.prototype.removeListener;\n\nReadable.prototype.removeAllListeners = function(ev) {\n  const res = Stream.prototype.removeAllListeners.apply(this\x2C\n                                                        arguments);\n\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable'\x2C fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening\x2C this);\n  }\n\n  return res;\n};\n\nfunction updateReadableListening(self) {\n  const state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n\n  if (state.resumeScheduled && state[kPaused] === false) {\n    // Flowing needs to be set to true now\x2C otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true;\n\n    // Crude way to check if we should resume.\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  } else if (!state.readableListening) {\n    state.flowing = null;\n  }\n}\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them\x2C then switch into old mode.\nReadable.prototype.resume = function() {\n  const state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    // We flow only if there is no one listening\n    // for readable\x2C but we still have to call\n    // resume().\n    state.flowing = !state.readableListening;\n    resume(this\x2C state);\n  }\n  state[kPaused] = false;\n  return this;\n};\n\nfunction resume(stream\x2C state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_\x2C stream\x2C state);\n  }\n}\n\nfunction resume_(stream\x2C state) {\n  debug('resume'\x2C state.reading);\n  if (!state.reading) {\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading)\n    stream.read(0);\n}\n\nReadable.prototype.pause = function() {\n  debug('call pause flowing=%j'\x2C this._readableState.flowing);\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  this._readableState[kPaused] = true;\n  return this;\n};\n\nfunction flow(stream) {\n  const state = stream._readableState;\n  debug('flow'\x2C state.flowing);\n  while (state.flowing && stream.read() !== null);\n}\n\n// Wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function(stream) {\n  let paused = false;\n\n  // TODO (ronag): Should this.destroy(err) emit\n  // 'error' on the wrapped stream? Would require\n  // a static factory method\x2C e.g. Readable.wrap(stream).\n\n  stream.on('data'\x2C (chunk) => {\n    if (!this.push(chunk) && stream.pause) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  stream.on('end'\x2C () => {\n    this.push(null);\n  });\n\n  stream.on('error'\x2C (err) => {\n    errorOrDestroy(this\x2C err);\n  });\n\n  stream.on('close'\x2C () => {\n    this.destroy();\n  });\n\n  stream.on('destroy'\x2C () => {\n    this.destroy();\n  });\n\n  this._read = () => {\n    if (paused && stream.resume) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  // Proxy all the other methods. Important when wrapping filters and duplexes.\n  const streamKeys = ObjectKeys(stream);\n  for (let j = 1; j < streamKeys.length; j++) {\n    const i = streamKeys[j];\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = stream[i].bind(stream);\n    }\n  }\n\n  return this;\n};\n\nReadable.prototype[SymbolAsyncIterator] = function() {\n  return streamToAsyncIterator(this);\n};\n\nReadable.prototype.iterator = function(options) {\n  if (options !== undefined) {\n    validateObject(options\x2C 'options');\n  }\n  return streamToAsyncIterator(this\x2C options);\n};\n\nfunction streamToAsyncIterator(stream\x2C options) {\n  if (typeof stream.read !== 'function') {\n    stream = Readable.wrap(stream\x2C { objectMode: true });\n  }\n\n  const iter = createAsyncIterator(stream\x2C options);\n  iter.stream = stream;\n  return iter;\n}\n\nasync function* createAsyncIterator(stream\x2C options) {\n  let callback = nop;\n\n  function next(resolve) {\n    if (this === stream) {\n      callback();\n      callback = nop;\n    } else {\n      callback = resolve;\n    }\n  }\n\n  stream.on('readable'\x2C next);\n\n  let error;\n  const cleanup = eos(stream\x2C { writable: false }\x2C (err) => {\n    error = err ? aggregateTwoErrors(error\x2C err) : null;\n    callback();\n    callback = nop;\n  });\n\n  try {\n    while (true) {\n      const chunk = stream.destroyed ? null : stream.read();\n      if (chunk !== null) {\n        yield chunk;\n      } else if (error) {\n        throw error;\n      } else if (error === null) {\n        return;\n      } else {\n        await new Promise(next);\n      }\n    }\n  } catch (err) {\n    error = aggregateTwoErrors(error\x2C err);\n    throw error;\n  } finally {\n    if (\n      (error || options?.destroyOnReturn !== false) &&\n      (error === undefined || stream._readableState.autoDestroy)\n    ) {\n      destroyImpl.destroyer(stream\x2C null);\n    } else {\n      stream.off('readable'\x2C next);\n      cleanup();\n    }\n  }\n}\n\n// Making it explicit these properties are not enumerable\n// because otherwise some prototype manipulation in\n// userland will fail.\nObjectDefineProperties(Readable.prototype\x2C {\n  readable: {\n    __proto__: null\x2C\n    get() {\n      const r = this._readableState;\n      // r.readable === false means that this is part of a Duplex stream\n      // where the readable side was disabled upon construction.\n      // Compat. The user might manually disable readable side through\n      // deprecated setter.\n      return !!r && r.readable !== false && !r.destroyed && !r.errorEmitted &&\n        !r.endEmitted;\n    }\x2C\n    set(val) {\n      // Backwards compat.\n      if (this._readableState) {\n        this._readableState.readable = !!val;\n      }\n    }\n  }\x2C\n\n  readableDidRead: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get: function() {\n      return this._readableState.dataEmitted;\n    }\n  }\x2C\n\n  readableAborted: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get: function() {\n      return !!(\n        this._readableState.readable !== false &&\n        (this._readableState.destroyed || this._readableState.errored) &&\n        !this._readableState.endEmitted\n      );\n    }\n  }\x2C\n\n  readableHighWaterMark: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get: function() {\n      return this._readableState.highWaterMark;\n    }\n  }\x2C\n\n  readableBuffer: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get: function() {\n      return this._readableState && this._readableState.buffer;\n    }\n  }\x2C\n\n  readableFlowing: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get: function() {\n      return this._readableState.flowing;\n    }\x2C\n    set: function(state) {\n      if (this._readableState) {\n        this._readableState.flowing = state;\n      }\n    }\n  }\x2C\n\n  readableLength: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return this._readableState.length;\n    }\n  }\x2C\n\n  readableObjectMode: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return this._readableState ? this._readableState.objectMode : false;\n    }\n  }\x2C\n\n  readableEncoding: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return this._readableState ? this._readableState.encoding : null;\n    }\n  }\x2C\n\n  errored: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return this._readableState ? this._readableState.errored : null;\n    }\n  }\x2C\n\n  closed: {\n    __proto__: null\x2C\n    get() {\n      return this._readableState ? this._readableState.closed : false;\n    }\n  }\x2C\n\n  destroyed: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return this._readableState ? this._readableState.destroyed : false;\n    }\x2C\n    set(value) {\n      // We ignore the value if the stream\n      // has not been initialized yet.\n      if (!this._readableState) {\n        return;\n      }\n\n      // Backward compatibility\x2C the user is explicitly\n      // managing destroyed.\n      this._readableState.destroyed = value;\n    }\n  }\x2C\n\n  readableEnded: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return this._readableState ? this._readableState.endEmitted : false;\n    }\n  }\x2C\n\n});\n\nObjectDefineProperties(ReadableState.prototype\x2C {\n  // Legacy getter for `pipesCount`.\n  pipesCount: {\n    __proto__: null\x2C\n    get() {\n      return this.pipes.length;\n    }\n  }\x2C\n\n  // Legacy property for `paused`.\n  paused: {\n    __proto__: null\x2C\n    get() {\n      return this[kPaused] !== false;\n    }\x2C\n    set(value) {\n      this[kPaused] = !!value;\n    }\n  }\n});\n\n// Exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable\x2C so please take care when making\n// changes to the function body.\nfunction fromList(n\x2C state) {\n  // nothing buffered.\n  if (state.length === 0)\n    return null;\n\n  let ret;\n  if (state.objectMode)\n    ret = state.buffer.shift();\n  else if (!n || n >= state.length) {\n    // Read it all\x2C truncate the list.\n    if (state.decoder)\n      ret = state.buffer.join('');\n    else if (state.buffer.length === 1)\n      ret = state.buffer.first();\n    else\n      ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list.\n    ret = state.buffer.consume(n\x2C state.decoder);\n  }\n\n  return ret;\n}\n\nfunction endReadable(stream) {\n  const state = stream._readableState;\n\n  debug('endReadable'\x2C state.endEmitted);\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT\x2C state\x2C stream);\n  }\n}\n\nfunction endReadableNT(state\x2C stream) {\n  debug('endReadableNT'\x2C state.endEmitted\x2C state.length);\n\n  // Check that we didn't get one last unshift.\n  if (!state.errored && !state.closeEmitted &&\n      !state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.emit('end');\n\n    if (stream.writable && stream.allowHalfOpen === false) {\n      process.nextTick(endWritableNT\x2C stream);\n    } else if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well.\n      const wState = stream._writableState;\n      const autoDestroy = !wState || (\n        wState.autoDestroy &&\n        // We don't expect the writable to ever 'finish'\n        // if writable is explicitly set to false.\n        (wState.finished || wState.writable === false)\n      );\n\n      if (autoDestroy) {\n        stream.destroy();\n      }\n    }\n  }\n}\n\nfunction endWritableNT(stream) {\n  const writable = stream.writable && !stream.writableEnded &&\n    !stream.destroyed;\n  if (writable) {\n    stream.end();\n  }\n}\n\nReadable.from = function(iterable\x2C opts) {\n  return from(Readable\x2C iterable\x2C opts);\n};\n\nlet webStreamsAdapters;\n\n// Lazy to avoid circular references\nfunction lazyWebStreams() {\n  if (webStreamsAdapters === undefined)\n    webStreamsAdapters = require('internal/webstreams/adapters');\n  return webStreamsAdapters;\n}\n\nReadable.fromWeb = function(readableStream\x2C options) {\n  return lazyWebStreams().newStreamReadableFromReadableStream(\n    readableStream\x2C\n    options);\n};\n\nReadable.toWeb = function(streamReadable\x2C options) {\n  return lazyWebStreams().newReadableStreamFromStreamReadable(\n    streamReadable\x2C\n    options);\n};\n\nReadable.wrap = function(src\x2C options) {\n  return new Readable({\n    objectMode: src.readableObjectMode ?? src.objectMode ?? true\x2C\n    ...options\x2C\n    destroy(err\x2C callback) {\n      destroyImpl.destroyer(src\x2C err);\n      callback(err);\n    }\n  }).wrap(src);\n};\n
code-source-info,0x3685f0215520,58,6353,7224,C0O6353C9O6367C16O6378C21O6404C28O6411C33O6433C34O6588C41O6604C44O6611C48O6593C52O6622C71O6644C76O6642C80O6691C84O6729C92O6756C95O6777C99O6767C103O6807C111O6837C114O6861C118O6851C122O6894C130O6926C133O6952C137O6942C141O6980C149O6991C151O7007C158O7030C166O7007C171O7052C178O7059C186O7059C192O7083C199O7095C212O7095C219O7223,,
code-creation,LazyCompile,10,116375,0x3685f0218400,18,Stream node:internal/streams/legacy:10:16,0x25eb221d5210,~
script-source,59,node:internal/streams/legacy,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ObjectSetPrototypeOf\x2C\n} = primordials;\n\nconst EE = require('events');\n\nfunction Stream(opts) {\n  EE.call(this\x2C opts);\n}\nObjectSetPrototypeOf(Stream.prototype\x2C EE.prototype);\nObjectSetPrototypeOf(Stream\x2C EE);\n\nStream.prototype.pipe = function(dest\x2C options) {\n  const source = this;\n\n  function ondata(chunk) {\n    if (dest.writable && dest.write(chunk) === false && source.pause) {\n      source.pause();\n    }\n  }\n\n  source.on('data'\x2C ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain'\x2C ondrain);\n\n  // If the 'end' option is not supplied\x2C dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end'\x2C onend);\n    source.on('close'\x2C onclose);\n  }\n\n  let didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // Don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this\x2C 'error') === 0) {\n      this.emit('error'\x2C er);\n    }\n  }\n\n  prependListener(source\x2C 'error'\x2C onerror);\n  prependListener(dest\x2C 'error'\x2C onerror);\n\n  // Remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data'\x2C ondata);\n    dest.removeListener('drain'\x2C ondrain);\n\n    source.removeListener('end'\x2C onend);\n    source.removeListener('close'\x2C onclose);\n\n    source.removeListener('error'\x2C onerror);\n    dest.removeListener('error'\x2C onerror);\n\n    source.removeListener('end'\x2C cleanup);\n    source.removeListener('close'\x2C cleanup);\n\n    dest.removeListener('close'\x2C cleanup);\n  }\n\n  source.on('end'\x2C cleanup);\n  source.on('close'\x2C cleanup);\n\n  dest.on('close'\x2C cleanup);\n  dest.emit('pipe'\x2C source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n\nfunction prependListener(emitter\x2C event\x2C fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function')\n    return emitter.prependListener(event\x2C fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event])\n    emitter.on(event\x2C fn);\n  else if (ArrayIsArray(emitter._events[event]))\n    emitter._events[event].unshift(fn);\n  else\n    emitter._events[event] = [fn\x2C emitter._events[event]];\n}\n\nmodule.exports = { Stream\x2C prependListener };\n
code-source-info,0x3685f0218400,59,127,160,C0O138C5O141C10O141C17O159,,
tick,0x1a4d5c93c,116541,0,0x0,3,0x0,0x3685f02109dc,0x3685f020fc29,0x117768a1dfb6,0x1054080d0,0x104a6d958,0x117768a12ed4,0x105405ef4
tick,0x1a4e72ea0,116541,0,0x0,3,0x0,0x3685f02109dc,0x3685f020fc29,0x117768a1dfb6,0x1054080d0,0x104a6d958,0x117768a12ed4,0x105405ef4
code-creation,LazyCompile,10,117416,0x3685f0218f50,354,ReadableState node:internal/streams/readable:83:23,0x25eb221d2780,~
code-source-info,0x3685f0218f
code-creation,LazyCompile,10,117500,0x3685f0219368,98,getHighWaterMark node:internal/streams/state:19:26,0x25eb221d7bb0,~
script-source,62,node:internal/streams/state,'use strict';\n\nconst {\n  MathFloor\x2C\n  NumberIsInteger\x2C\n} = primordials;\n\nconst { ERR_INVALID_ARG_VALUE } = require('internal/errors').codes;\n\nfunction highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark :\n    isDuplex ? options[duplexKey] : null;\n}\n\nfunction getDefaultHighWaterMark(objectMode) {\n  return objectMode ? 16 : 16 * 1024;\n}\n\nfunction getHighWaterMark(state\x2C options\x2C duplexKey\x2C isDuplex) {\n  const hwm = highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey);\n  if (hwm != null) {\n    if (!NumberIsInteger(hwm) || hwm < 0) {\n      const name = isDuplex ? `options.${duplexKey}` : 'options.highWaterMark';\n      throw new ERR_INVALID_ARG_VALUE(name\x2C hwm);\n    }\n    return MathFloor(hwm);\n  }\n\n  // Default value\n  return getDefaultHighWaterMark(state.objectMode);\n}\n\nmodule.exports = {\n  getHighWaterMark\x2C\n  getDefaultHighWaterMark\n};\n
code-source-info,0x3685f0219368,62,424,832,C0O478C12O478C18O529C21O552C26O557C33O585C38O611C47O633C56O678C69O684C74O678C75O732C80O739C84O754C85O781C88O818C93O788C97O830,,
code-creation,LazyCompile,10,117541,0x3685f0219608,26,highWaterMarkFrom node:internal/streams/state:10:27,0x25eb221d7a78,~
code-source-info,0x3685f0219608,62,168,309,C0O218C7O250C15O270C19O288C25O307,,
code-creation,LazyCompile,10,117583,0x3685f0219710,17,BufferList node:internal/streams/buffer_list:14:14,0x25eb221d6fc0,~
script-source,61,node:internal/streams/buffer_list,'use strict';\n\nconst {\n  StringPrototypeSlice\x2C\n  SymbolIterator\x2C\n  TypedArrayPrototypeSet\x2C\n  Uint8Array\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\nconst { inspect } = require('internal/util/inspect');\n\nmodule.exports = class BufferList {\n  constructor() {\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  push(v) {\n    const entry = { data: v\x2C next: null };\n    if (this.length > 0)\n      this.tail.next = entry;\n    else\n      this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  }\n\n  unshift(v) {\n    const entry = { data: v\x2C next: this.head };\n    if (this.length === 0)\n      this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  }\n\n  shift() {\n    if (this.length === 0)\n      return;\n    const ret = this.head.data;\n    if (this.length === 1)\n      this.head = this.tail = null;\n    else\n      this.head = this.head.next;\n    --this.length;\n    return ret;\n  }\n\n  clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  }\n\n  join(s) {\n    if (this.length === 0)\n      return '';\n    let p = this.head;\n    let ret = '' + p.data;\n    while ((p = p.next) !== null)\n      ret += s + p.data;\n    return ret;\n  }\n\n  concat(n) {\n    if (this.length === 0)\n      return Buffer.alloc(0);\n    const ret = Buffer.allocUnsafe(n >>> 0);\n    let p = this.head;\n    let i = 0;\n    while (p) {\n      TypedArrayPrototypeSet(ret\x2C p.data\x2C i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  }\n\n  // Consumes a specified amount of bytes or characters from the buffered data.\n  consume(n\x2C hasStrings) {\n    const data = this.head.data;\n    if (n < data.length) {\n      // `slice` is the same for buffers and strings.\n      const slice = data.slice(0\x2C n);\n      this.head.data = data.slice(n);\n      return slice;\n    }\n    if (n === data.length) {\n      // First chunk is a perfect match.\n      return this.shift();\n    }\n    // Result spans more than one buffer.\n    return hasStrings ? this._getString(n) : this._getBuffer(n);\n  }\n\n  first() {\n    return this.head.data;\n  }\n\n  *[SymbolIterator]() {\n    for (let p = this.head; p; p = p.next) {\n      yield p.data;\n    }\n  }\n\n  // Consumes a specified amount of characters from the buffered data.\n  _getString(n) {\n    let ret = '';\n    let p = this.head;\n    let c = 0;\n    do {\n      const str = p.data;\n      if (n > str.length) {\n        ret += str;\n        n -= str.length;\n      } else {\n        if (n === str.length) {\n          ret += str;\n          ++c;\n          if (p.next)\n            this.head = p.next;\n          else\n            this.head = this.tail = null;\n        } else {\n          ret += StringPrototypeSlice(str\x2C 0\x2C n);\n          this.head = p;\n          p.data = StringPrototypeSlice(str\x2C n);\n        }\n        break;\n      }\n      ++c;\n    } while ((p = p.next) !== null);\n    this.length -= c;\n    return ret;\n  }\n\n  // Consumes a specified amount of bytes from the buffered data.\n  _getBuffer(n) {\n    const ret = Buffer.allocUnsafe(n);\n    const retLen = n;\n    let p = this.head;\n    let c = 0;\n    do {\n      const buf = p.data;\n      if (n > buf.length) {\n        TypedArrayPrototypeSet(ret\x2C buf\x2C retLen - n);\n        n -= buf.length;\n      } else {\n        if (n === buf.length) {\n          TypedArrayPrototypeSet(ret\x2C buf\x2C retLen - n);\n          ++c;\n          if (p.next)\n            this.head = p.next;\n          else\n            this.head = this.tail = null;\n        } else {\n          TypedArrayPrototypeSet(ret\x2C\n                                 new Uint8Array(buf.buffer\x2C buf.byteOffset\x2C n)\x2C\n                                 retLen - n);\n          this.head = p;\n          p.data = buf.slice(n);\n        }\n        break;\n      }\n      ++c;\n    } while ((p = p.next) !== null);\n    this.length -= c;\n    return ret;\n  }\n\n  // Make sure the linked list only shows the minimal necessary information.\n  [inspect.custom](_\x2C options) {\n    return inspect(this\x2C {\n      ...options\x2C\n      // Only inspect one level.\n      depth: 0\x2C\n      // It should not recurse.\n      customInspect: false\n    });\n  }\n};\n
code-source-info,0x3685f0219710,61,265,338,C0O274C1O284C5O296C6O306C10O318C11O330C16O337,,
code-creation,LazyCompile,10,117791,0x3685f0219ea8,98,construct node:internal/streams/destroy:219:19,0x25eb221c6138,~
script-source,56,node:internal/streams/destroy,'use strict';\n\nconst {\n  aggregateTwoErrors\x2C\n  codes: {\n    ERR_MULTIPLE_CALLBACK\x2C\n  }\x2C\n  AbortError\x2C\n} = require('internal/errors');\nconst {\n  Symbol\x2C\n} = primordials;\nconst {\n  kDestroyed\x2C\n  isDestroyed\x2C\n  isFinished\x2C\n  isServerRequest\n} = require('internal/streams/utils');\n\nconst kDestroy = Symbol('kDestroy');\nconst kConstruct = Symbol('kConstruct');\n\nfunction checkError(err\x2C w\x2C r) {\n  if (err) {\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    err.stack; // eslint-disable-line no-unused-expressions\n\n    if (w && !w.errored) {\n      w.errored = err;\n    }\n    if (r && !r.errored) {\n      r.errored = err;\n    }\n  }\n}\n\n// Backwards compat. cb() is undocumented and unused in core but\n// unfortunately might be used by modules.\nfunction destroy(err\x2C cb) {\n  const r = this._readableState;\n  const w = this._writableState;\n  // With duplex streams we use the writable side for state.\n  const s = w || r;\n\n  if ((w && w.destroyed) || (r && r.destroyed)) {\n    if (typeof cb === 'function') {\n      cb();\n    }\n\n    return this;\n  }\n\n\n  // We set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n  checkError(err\x2C w\x2C r);\n\n  if (w) {\n    w.destroyed = true;\n  }\n  if (r) {\n    r.destroyed = true;\n  }\n\n  // If still constructing then defer calling _destroy.\n  if (!s.constructed) {\n    this.once(kDestroy\x2C function(er) {\n      _destroy(this\x2C aggregateTwoErrors(er\x2C err)\x2C cb);\n    });\n  } else {\n    _destroy(this\x2C err\x2C cb);\n  }\n\n  return this;\n}\n\nfunction _destroy(self\x2C err\x2C cb) {\n  let called = false;\n\n  function onDestroy(err) {\n    if (called) {\n      return;\n    }\n    called = true;\n\n    const r = self._readableState;\n    const w = self._writableState;\n\n    checkError(err\x2C w\x2C r);\n\n    if (w) {\n      w.closed = true;\n    }\n    if (r) {\n      r.closed = true;\n    }\n\n    if (typeof cb === 'function') {\n      cb(err);\n    }\n\n    if (err) {\n      process.nextTick(emitErrorCloseNT\x2C self\x2C err);\n    } else {\n      process.nextTick(emitCloseNT\x2C self);\n    }\n  }\n  try {\n    self._destroy(err || null\x2C onDestroy);\n  } catch (err) {\n    onDestroy(err);\n  }\n}\n\nfunction emitErrorCloseNT(self\x2C err) {\n  emitErrorNT(self\x2C err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  const r = self._readableState;\n  const w = self._writableState;\n\n  if (w) {\n    w.closeEmitted = true;\n  }\n  if (r) {\n    r.closeEmitted = true;\n  }\n\n  if ((w && w.emitClose) || (r && r.emitClose)) {\n    self.emit('close');\n  }\n}\n\nfunction emitErrorNT(self\x2C err) {\n  const r = self._readableState;\n  const w = self._writableState;\n\n  if ((w && w.errorEmitted) || (r && r.errorEmitted)) {\n    return;\n  }\n\n  if (w) {\n    w.errorEmitted = true;\n  }\n  if (r) {\n    r.errorEmitted = true;\n  }\n\n  self.emit('error'\x2C err);\n}\n\nfunction undestroy() {\n  const r = this._readableState;\n  const w = this._writableState;\n\n  if (r) {\n    r.constructed = true;\n    r.closed = false;\n    r.closeEmitted = false;\n    r.destroyed = false;\n    r.errored = null;\n    r.errorEmitted = false;\n    r.reading = false;\n    r.ended = r.readable === false;\n    r.endEmitted = r.readable === false;\n  }\n\n  if (w) {\n    w.constructed = true;\n    w.destroyed = false;\n    w.closed = false;\n    w.closeEmitted = false;\n    w.errored = null;\n    w.errorEmitted = false;\n    w.finalCalled = false;\n    w.prefinished = false;\n    w.ended = w.writable === false;\n    w.ending = w.writable === false;\n    w.finished = w.writable === false;\n  }\n}\n\nfunction errorOrDestroy(stream\x2C err\x2C sync) {\n  // We have tests that rely on errors being emitted\n  // in the same tick\x2C so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  const r = stream._readableState;\n  const w = stream._writableState;\n\n  if ((w && w.destroyed) || (r && r.destroyed)) {\n    return this;\n  }\n\n  if ((r && r.autoDestroy) || (w && w.autoDestroy))\n    stream.destroy(err);\n  else if (err) {\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    err.stack; // eslint-disable-line no-unused-expressions\n\n    if (w && !w.errored) {\n      w.errored = err;\n    }\n    if (r && !r.errored) {\n      r.errored = err;\n    }\n    if (sync) {\n      process.nextTick(emitErrorNT\x2C stream\x2C err);\n    } else {\n      emitErrorNT(stream\x2C err);\n    }\n  }\n}\n\nfunction construct(stream\x2C cb) {\n  if (typeof stream._construct !== 'function') {\n    return;\n  }\n\n  const r = stream._readableState;\n  const w = stream._writableState;\n\n  if (r) {\n    r.constructed = false;\n  }\n  if (w) {\n    w.constructed = false;\n  }\n\n  stream.once(kConstruct\x2C cb);\n\n  if (stream.listenerCount(kConstruct) > 1) {\n    // Duplex\n    return;\n  }\n\n  process.nextTick(constructNT\x2C stream);\n}\n\nfunction constructNT(stream) {\n  let called = false;\n\n  function onConstruct(err) {\n    if (called) {\n      errorOrDestroy(stream\x2C err ?? new ERR_MULTIPLE_CALLBACK());\n      return;\n    }\n    called = true;\n\n    const r = stream._readableState;\n    const w = stream._writableState;\n    const s = w || r;\n\n    if (r) {\n      r.constructed = true;\n    }\n    if (w) {\n      w.constructed = true;\n    }\n\n    if (s.destroyed) {\n      stream.emit(kDestroy\x2C err);\n    } else if (err) {\n      errorOrDestroy(stream\x2C err\x2C true);\n    } else {\n      process.nextTick(emitConstructNT\x2C stream);\n    }\n  }\n\n  try {\n    stream._construct(onConstruct);\n  } catch (err) {\n    onConstruct(err);\n  }\n}\n\nfunction emitConstructNT(stream) {\n  stream.emit(kConstruct);\n}\n\nfunction isRequest(stream) {\n  return stream && stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction emitCloseLegacy(stream) {\n  stream.emit('close');\n}\n\nfunction emitErrorCloseLegacy(stream\x2C err) {\n  stream.emit('error'\x2C err);\n  process.nextTick(emitCloseLegacy\x2C stream);\n}\n\n// Normalize destroy for legacy.\nfunction destroyer(stream\x2C err) {\n  if (!stream || isDestroyed(stream)) {\n    return;\n  }\n\n  if (!err && !isFinished(stream)) {\n    err = new AbortError();\n  }\n\n  // TODO: Remove isRequest branches.\n  if (isServerRequest(stream)) {\n    stream.socket = null;\n    stream.destroy(err);\n  } else if (isRequest(stream)) {\n    stream.abort();\n  } else if (isRequest(stream.req)) {\n    stream.req.abort();\n  } else if (typeof stream.destroy === 'function') {\n    stream.destroy(err);\n  } else if (typeof stream.close === 'function') {\n    // TODO: Don't lose err?\n    stream.close();\n  } else if (err) {\n    process.nextTick(emitErrorCloseLegacy\x2C stream\x2C err);\n  } else {\n    process.nextTick(emitCloseLegacy\x2C stream);\n  }\n\n  if (!stream.destroyed) {\n    stream[kDestroyed] = true;\n  }\n}\n\nmodule.exports = {\n  construct\x2C\n  destroyer\x2C\n  destroy\x2C\n  undestroy\x2C\n  errorOrDestroy\n};\n
code-source-info,0x3685f0219ea8,56,4490,4878,C0O4525C8O4558C9O4565C10O4590C15O4625C20O4644C24O4657C25O4671C29O4686C33O4699C34O4713C38O4736C45O4741C48O4736C54O4772C61O4786C64O4772C72O4798C77O4823C78O4830C79O4838C82O4846C90O4846C97O4877,,
tick,0x104a21834,118083,0,0x0,3,0x0,0x3685f02155f4,0x3685f0214d9c,0x3685f02147a5,0x3685f0213a24,0x3685f02109dc,0x3685f020fc29,0x117768a1dfb6,0x1054080d0,0x104a6d958,0x117768a12ed4,0x105405ef4
code-creation,LazyCompile,10,118125,0x3685f021abd0,266,Writable node:internal/streams/writable:220:18,0x25eb221e1180,~
script-source,65,node:internal/streams/writable,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk\x2C encoding\x2C cb)\x2C and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nconst {\n  ArrayPrototypeSlice\x2C\n  Error\x2C\n  FunctionPrototypeSymbolHasInstance\x2C\n  ObjectDefineProperty\x2C\n  ObjectDefineProperties\x2C\n  ObjectSetPrototypeOf\x2C\n  StringPrototypeToLowerCase\x2C\n  Symbol\x2C\n  SymbolHasInstance\x2C\n} = primordials;\n\nmodule.exports = Writable;\nWritable.WritableState = WritableState;\n\nconst EE = require('events');\nconst Stream = require('internal/streams/legacy').Stream;\nconst { Buffer } = require('buffer');\nconst destroyImpl = require('internal/streams/destroy');\n\nconst {\n  addAbortSignal\x2C\n} = require('internal/streams/add-abort-signal');\n\nconst {\n  getHighWaterMark\x2C\n  getDefaultHighWaterMark\n} = require('internal/streams/state');\nconst {\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\n  ERR_MULTIPLE_CALLBACK\x2C\n  ERR_STREAM_CANNOT_PIPE\x2C\n  ERR_STREAM_DESTROYED\x2C\n  ERR_STREAM_ALREADY_FINISHED\x2C\n  ERR_STREAM_NULL_VALUES\x2C\n  ERR_STREAM_WRITE_AFTER_END\x2C\n  ERR_UNKNOWN_ENCODING\n} = require('internal/errors').codes;\n\nconst { errorOrDestroy } = destroyImpl;\n\nObjectSetPrototypeOf(Writable.prototype\x2C Stream.prototype);\nObjectSetPrototypeOf(Writable\x2C Stream);\n\nfunction nop() {}\n\nconst kOnFinished = Symbol('kOnFinished');\n\nfunction WritableState(options\x2C stream\x2C isDuplex) {\n  // Duplex streams are both readable and writable\x2C but share\n  // the same options object.\n  // However\x2C some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream\x2C\n  // e.g. options.readableObjectMode vs. options.writableObjectMode\x2C etc.\n  if (typeof isDuplex !== 'boolean')\n    isDuplex = stream instanceof Stream.Duplex;\n\n  // Object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!(options && options.objectMode);\n\n  if (isDuplex)\n    this.objectMode = this.objectMode ||\n      !!(options && options.writableObjectMode);\n\n  // The point at which write() starts returning false\n  // Note: 0 is a valid value\x2C means that we always return false if\n  // the entire buffer is not flushed immediately on write().\n  this.highWaterMark = options ?\n    getHighWaterMark(this\x2C options\x2C 'writableHighWaterMark'\x2C isDuplex) :\n    getDefaultHighWaterMark(false);\n\n  // if _final has been called.\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // At the start of calling end()\n  this.ending = false;\n  // When end() has been called\x2C and returned.\n  this.ended = false;\n  // When 'finish' is emitted.\n  this.finished = false;\n\n  // Has it been destroyed\n  this.destroyed = false;\n\n  // Should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  const noDecode = !!(options && options.decodeStrings === false);\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8'\x2C though.\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8';\n\n  // Not an actual buffer we keep track of\x2C but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // A flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // When true all writes will be buffered until .uncork() call.\n  this.corked = 0;\n\n  // A flag to be able to tell if the onwrite cb is called immediately\x2C\n  // or on a later tick.  We set this to true at first\x2C because any\n  // actions that shouldn't happen until "later" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // A flag to know if we're processing previously buffered items\x2C which\n  // may call the _write() callback in the same tick\x2C so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // The callback that's passed to _write(chunk\x2C cb).\n  this.onwrite = onwrite.bind(undefined\x2C stream);\n\n  // The callback that the user supplies to write(chunk\x2C encoding\x2C cb).\n  this.writecb = null;\n\n  // The amount that is being written when _write is called.\n  this.writelen = 0;\n\n  // Storage for data passed to the afterWrite() callback in case of\n  // synchronous _write() completion.\n  this.afterWriteTickInfo = null;\n\n  resetBuffer(this);\n\n  // Number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted.\n  this.pendingcb = 0;\n\n  // Stream is still being constructed and cannot be\n  // destroyed until construction finished or failed.\n  // Async construction is opt in\x2C therefore we start as\n  // constructed.\n  this.constructed = true;\n\n  // Emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams.\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again.\n  this.errorEmitted = false;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = !options || options.emitClose !== false;\n\n  // Should .destroy() be called after 'finish' (and potentially 'end').\n  this.autoDestroy = !options || options.autoDestroy !== false;\n\n  // Indicates whether the stream has errored. When true all write() calls\n  // should return false. This is needed since when autoDestroy\n  // is disabled we need a way to tell whether the stream has failed.\n  this.errored = null;\n\n  // Indicates whether the stream has finished destroying.\n  this.closed = false;\n\n  // True if close has been emitted or would have been emitted\n  // depending on emitClose.\n  this.closeEmitted = false;\n\n  this[kOnFinished] = [];\n}\n\nfunction resetBuffer(state) {\n  state.buffered = [];\n  state.bufferedIndex = 0;\n  state.allBuffers = true;\n  state.allNoop = true;\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  return ArrayPrototypeSlice(this.buffered\x2C this.bufferedIndex);\n};\n\nObjectDefineProperty(WritableState.prototype\x2C 'bufferedRequestCount'\x2C {\n  __proto__: null\x2C\n  get() {\n    return this.buffered.length - this.bufferedIndex;\n  }\n});\n\nfunction Writable(options) {\n  // Writable ctor is applied to Duplexes\x2C too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false\x2C as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation\x2C which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor\x2C at least with V8 6.5.\n  const isDuplex = (this instanceof Stream.Duplex);\n\n  if (!isDuplex && !FunctionPrototypeSymbolHasInstance(Writable\x2C this))\n    return new Writable(options);\n\n  this._writableState = new WritableState(options\x2C this\x2C isDuplex);\n\n  if (options) {\n    if (typeof options.write === 'function')\n      this._write = options.write;\n\n    if (typeof options.writev === 'function')\n      this._writev = options.writev;\n\n    if (typeof options.destroy === 'function')\n      this._destroy = options.destroy;\n\n    if (typeof options.final === 'function')\n      this._final = options.final;\n\n    if (typeof options.construct === 'function')\n      this._construct = options.construct;\n\n    if (options.signal)\n      addAbortSignal(options.signal\x2C this);\n  }\n\n  Stream.call(this\x2C options);\n\n  destroyImpl.construct(this\x2C () => {\n    const state = this._writableState;\n\n    if (!state.writing) {\n      clearBuffer(this\x2C state);\n    }\n\n    finishMaybe(this\x2C state);\n  });\n}\n\nObjectDefineProperty(Writable\x2C SymbolHasInstance\x2C {\n  __proto__: null\x2C\n  value: function(object) {\n    if (FunctionPrototypeSymbolHasInstance(this\x2C object)) return true;\n    if (this !== Writable) return false;\n\n    return object && object._writableState instanceof WritableState;\n  }\x2C\n});\n\n// Otherwise people can pipe Writable streams\x2C which is just wrong.\nWritable.prototype.pipe = function() {\n  errorOrDestroy(this\x2C new ERR_STREAM_CANNOT_PIPE());\n};\n\nfunction _write(stream\x2C chunk\x2C encoding\x2C cb) {\n  const state = stream._writableState;\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = state.defaultEncoding;\n  } else {\n    if (!encoding)\n      encoding = state.defaultEncoding;\n    else if (encoding !== 'buffer' && !Buffer.isEncoding(encoding))\n      throw new ERR_UNKNOWN_ENCODING(encoding);\n    if (typeof cb !== 'function')\n      cb = nop;\n  }\n\n  if (chunk === null) {\n    throw new ERR_STREAM_NULL_VALUES();\n  } else if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      if (state.decodeStrings !== false) {\n        chunk = Buffer.from(chunk\x2C encoding);\n        encoding = 'buffer';\n      }\n    } else if (chunk instanceof Buffer) {\n      encoding = 'buffer';\n    } else if (Stream._isUint8Array(chunk)) {\n      chunk = Stream._uint8ArrayToBuffer(chunk);\n      encoding = 'buffer';\n    } else {\n      throw new ERR_INVALID_ARG_TYPE(\n        'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk);\n    }\n  }\n\n  let err;\n  if (state.ending) {\n    err = new ERR_STREAM_WRITE_AFTER_END();\n  } else if (state.destroyed) {\n    err = new ERR_STREAM_DESTROYED('write');\n  }\n\n  if (err) {\n    process.nextTick(cb\x2C err);\n    errorOrDestroy(stream\x2C err\x2C true);\n    return err;\n  }\n  state.pendingcb++;\n  return writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C cb);\n}\n\nWritable.prototype.write = function(chunk\x2C encoding\x2C cb) {\n  return _write(this\x2C chunk\x2C encoding\x2C cb) === true;\n};\n\nWritable.prototype.cork = function() {\n  this._writableState.corked++;\n};\n\nWritable.prototype.uncork = function() {\n  const state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing)\n      clearBuffer(this\x2C state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string')\n    encoding = StringPrototypeToLowerCase(encoding);\n  if (!Buffer.isEncoding(encoding))\n    throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\n// If we're already writing something\x2C then just put this\n// in the queue\x2C and wait our turn.  Otherwise\x2C call _write\n// If we return false\x2C then we need a drain event\x2C so set that flag.\nfunction writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C callback) {\n  const len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  // stream._write resets state.length\n  const ret = state.length < state.highWaterMark;\n  // We must ensure that previous needDrain will not be reset to false.\n  if (!ret)\n    state.needDrain = true;\n\n  if (state.writing || state.corked || state.errored || !state.constructed) {\n    state.buffered.push({ chunk\x2C encoding\x2C callback });\n    if (state.allBuffers && encoding !== 'buffer') {\n      state.allBuffers = false;\n    }\n    if (state.allNoop && callback !== nop) {\n      state.allNoop = false;\n    }\n  } else {\n    state.writelen = len;\n    state.writecb = callback;\n    state.writing = true;\n    state.sync = true;\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\n    state.sync = false;\n  }\n\n  // Return false if errored or destroyed in order to break\n  // any synchronous while(stream.write(data)) loops.\n  return ret && !state.errored && !state.destroyed;\n}\n\nfunction doWrite(stream\x2C state\x2C writev\x2C len\x2C chunk\x2C encoding\x2C cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed)\n    state.onwrite(new ERR_STREAM_DESTROYED('write'));\n  else if (writev)\n    stream._writev(chunk\x2C state.onwrite);\n  else\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream\x2C state\x2C er\x2C cb) {\n  --state.pendingcb;\n\n  cb(er);\n  // Ensure callbacks are invoked even when autoDestroy is\n  // not enabled. Passing `er` here doesn't make sense since\n  // it's related to one specific write\x2C not to the buffered\n  // writes.\n  errorBuffer(state);\n  // This can emit error\x2C but error must always follow cb.\n  errorOrDestroy(stream\x2C er);\n}\n\nfunction onwrite(stream\x2C er) {\n  const state = stream._writableState;\n  const sync = state.sync;\n  const cb = state.writecb;\n\n  if (typeof cb !== 'function') {\n    errorOrDestroy(stream\x2C new ERR_MULTIPLE_CALLBACK());\n    return;\n  }\n\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n\n  if (er) {\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    er.stack; // eslint-disable-line no-unused-expressions\n\n    if (!state.errored) {\n      state.errored = er;\n    }\n\n    // In case of duplex streams we need to notify the readable side of the\n    // error.\n    if (stream._readableState && !stream._readableState.errored) {\n      stream._readableState.errored = er;\n    }\n\n    if (sync) {\n      process.nextTick(onwriteError\x2C stream\x2C state\x2C er\x2C cb);\n    } else {\n      onwriteError(stream\x2C state\x2C er\x2C cb);\n    }\n  } else {\n    if (state.buffered.length > state.bufferedIndex) {\n      clearBuffer(stream\x2C state);\n    }\n\n    if (sync) {\n      // It is a common case that the callback passed to .write() is always\n      // the same. In that case\x2C we do not schedule a new nextTick()\x2C but\n      // rather just increase a counter\x2C to improve performance and avoid\n      // memory allocations.\n      if (state.afterWriteTickInfo !== null &&\n          state.afterWriteTickInfo.cb === cb) {\n        state.afterWriteTickInfo.count++;\n      } else {\n        state.afterWriteTickInfo = { count: 1\x2C cb\x2C stream\x2C state };\n        process.nextTick(afterWriteTick\x2C state.afterWriteTickInfo);\n      }\n    } else {\n      afterWrite(stream\x2C state\x2C 1\x2C cb);\n    }\n  }\n}\n\nfunction afterWriteTick({ stream\x2C state\x2C count\x2C cb }) {\n  state.afterWriteTickInfo = null;\n  return afterWrite(stream\x2C state\x2C count\x2C cb);\n}\n\nfunction afterWrite(stream\x2C state\x2C count\x2C cb) {\n  const needDrain = !state.ending && !stream.destroyed && state.length === 0 &&\n    state.needDrain;\n  if (needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n\n  while (count-- > 0) {\n    state.pendingcb--;\n    cb();\n  }\n\n  if (state.destroyed) {\n    errorBuffer(state);\n  }\n\n  finishMaybe(stream\x2C state);\n}\n\n// If there's something in the buffer waiting\x2C then invoke callbacks.\nfunction errorBuffer(state) {\n  if (state.writing) {\n    return;\n  }\n\n  for (let n = state.bufferedIndex; n < state.buffered.length; ++n) {\n    const { chunk\x2C callback } = state.buffered[n];\n    const len = state.objectMode ? 1 : chunk.length;\n    state.length -= len;\n    callback(state.errored ?? new ERR_STREAM_DESTROYED('write'));\n  }\n\n  const onfinishCallbacks = state[kOnFinished].splice(0);\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\n    onfinishCallbacks[i](state.errored ?? new ERR_STREAM_DESTROYED('end'));\n  }\n\n  resetBuffer(state);\n}\n\n// If there's something in the buffer waiting\x2C then process it.\nfunction clearBuffer(stream\x2C state) {\n  if (state.corked ||\n      state.bufferProcessing ||\n      state.destroyed ||\n      !state.constructed) {\n    return;\n  }\n\n  const { buffered\x2C bufferedIndex\x2C objectMode } = state;\n  const bufferedLength = buffered.length - bufferedIndex;\n\n  if (!bufferedLength) {\n    return;\n  }\n\n  let i = bufferedIndex;\n\n  state.bufferProcessing = true;\n  if (bufferedLength > 1 && stream._writev) {\n    state.pendingcb -= bufferedLength - 1;\n\n    const callback = state.allNoop ? nop : (err) => {\n      for (let n = i; n < buffered.length; ++n) {\n        buffered[n].callback(err);\n      }\n    };\n    // Make a copy of `buffered` if it's going to be used by `callback` above\x2C\n    // since `doWrite` will mutate the array.\n    const chunks = state.allNoop && i === 0 ?\n      buffered : ArrayPrototypeSlice(buffered\x2C i);\n    chunks.allBuffers = state.allBuffers;\n\n    doWrite(stream\x2C state\x2C true\x2C state.length\x2C chunks\x2C ''\x2C callback);\n\n    resetBuffer(state);\n  } else {\n    do {\n      const { chunk\x2C encoding\x2C callback } = buffered[i];\n      buffered[i++] = null;\n      const len = objectMode ? 1 : chunk.length;\n      doWrite(stream\x2C state\x2C false\x2C len\x2C chunk\x2C encoding\x2C callback);\n    } while (i < buffered.length && !state.writing);\n\n    if (i === buffered.length) {\n      resetBuffer(state);\n    } else if (i > 256) {\n      buffered.splice(0\x2C i);\n      state.bufferedIndex = 0;\n    } else {\n      state.bufferedIndex = i;\n    }\n  }\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function(chunk\x2C encoding\x2C cb) {\n  if (this._writev) {\n    this._writev([{ chunk\x2C encoding }]\x2C cb);\n  } else {\n    throw new ERR_METHOD_NOT_IMPLEMENTED('_write()');\n  }\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function(chunk\x2C encoding\x2C cb) {\n  const state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  let err;\n\n  if (chunk !== null && chunk !== undefined) {\n    const ret = _write(this\x2C chunk\x2C encoding);\n    if (ret instanceof Error) {\n      err = ret;\n    }\n  }\n\n  // .end() fully uncorks.\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  if (err) {\n    // Do nothing...\n  } else if (!state.errored && !state.ending) {\n    // This is forgiving in terms of unnecessary calls to end() and can hide\n    // logic errors. However\x2C usually such errors are harmless and causing a\n    // hard error can be disproportionately destructive. It is not always\n    // trivial for the user to determine whether end() needs to be called\n    // or not.\n\n    state.ending = true;\n    finishMaybe(this\x2C state\x2C true);\n    state.ended = true;\n  } else if (state.finished) {\n    err = new ERR_STREAM_ALREADY_FINISHED('end');\n  } else if (state.destroyed) {\n    err = new ERR_STREAM_DESTROYED('end');\n  }\n\n  if (typeof cb === 'function') {\n    if (err || state.finished) {\n      process.nextTick(cb\x2C err);\n    } else {\n      state[kOnFinished].push(cb);\n    }\n  }\n\n  return this;\n};\n\nfunction needFinish(state) {\n  return (state.ending &&\n          !state.destroyed &&\n          state.constructed &&\n          state.length === 0 &&\n          !state.errored &&\n          state.buffered.length === 0 &&\n          !state.finished &&\n          !state.writing &&\n          !state.errorEmitted &&\n          !state.closeEmitted);\n}\n\nfunction callFinal(stream\x2C state) {\n  let called = false;\n\n  function onFinish(err) {\n    if (called) {\n      errorOrDestroy(stream\x2C err ?? ERR_MULTIPLE_CALLBACK());\n      return;\n    }\n    called = true;\n\n    state.pendingcb--;\n    if (err) {\n      const onfinishCallbacks = state[kOnFinished].splice(0);\n      for (let i = 0; i < onfinishCallbacks.length; i++) {\n        onfinishCallbacks[i](err);\n      }\n      errorOrDestroy(stream\x2C err\x2C state.sync);\n    } else if (needFinish(state)) {\n      state.prefinished = true;\n      stream.emit('prefinish');\n      // Backwards compat. Don't check state.sync here.\n      // Some streams assume 'finish' will be emitted\n      // asynchronously relative to _final callback.\n      state.pendingcb++;\n      process.nextTick(finish\x2C stream\x2C state);\n    }\n  }\n\n  state.sync = true;\n  state.pendingcb++;\n\n  try {\n    stream._final(onFinish);\n  } catch (err) {\n    onFinish(err);\n  }\n\n  state.sync = false;\n}\n\nfunction prefinish(stream\x2C state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.finalCalled = true;\n      callFinal(stream\x2C state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream\x2C state\x2C sync) {\n  if (needFinish(state)) {\n    prefinish(stream\x2C state);\n    if (state.pendingcb === 0) {\n      if (sync) {\n        state.pendingcb++;\n        process.nextTick((stream\x2C state) => {\n          if (needFinish(state)) {\n            finish(stream\x2C state);\n          } else {\n            state.pendingcb--;\n          }\n        }\x2C stream\x2C state);\n      } else if (needFinish(state)) {\n        state.pendingcb++;\n        finish(stream\x2C state);\n      }\n    }\n  }\n}\n\nfunction finish(stream\x2C state) {\n  state.pendingcb--;\n  state.finished = true;\n\n  const onfinishCallbacks = state[kOnFinished].splice(0);\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\n    onfinishCallbacks[i]();\n  }\n\n  stream.emit('finish');\n\n  if (state.autoDestroy) {\n    // In case of duplex streams we need a way to detect\n    // if the readable side is ready for autoDestroy as well.\n    const rState = stream._readableState;\n    const autoDestroy = !rState || (\n      rState.autoDestroy &&\n      // We don't expect the readable to ever 'end'\n      // if readable is explicitly set to false.\n      (rState.endEmitted || rState.readable === false)\n    );\n    if (autoDestroy) {\n      stream.destroy();\n    }\n  }\n}\n\nObjectDefineProperties(Writable.prototype\x2C {\n\n  closed: {\n    __proto__: null\x2C\n    get() {\n      return this._writableState ? this._writableState.closed : false;\n    }\n  }\x2C\n\n  destroyed: {\n    __proto__: null\x2C\n    get() {\n      return this._writableState ? this._writableState.destroyed : false;\n    }\x2C\n    set(value) {\n      // Backward compatibility\x2C the user is explicitly managing destroyed.\n      if (this._writableState) {\n        this._writableState.destroyed = value;\n      }\n    }\n  }\x2C\n\n  writable: {\n    __proto__: null\x2C\n    get() {\n      const w = this._writableState;\n      // w.writable === false means that this is part of a Duplex stream\n      // where the writable side was disabled upon construction.\n      // Compat. The user might manually disable writable side through\n      // deprecated setter.\n      return !!w && w.writable !== false && !w.destroyed && !w.errored &&\n        !w.ending && !w.ended;\n    }\x2C\n    set(val) {\n      // Backwards compatible.\n      if (this._writableState) {\n        this._writableState.writable = !!val;\n      }\n    }\n  }\x2C\n\n  writableFinished: {\n    __proto__: null\x2C\n    get() {\n      return this._writableState ? this._writableState.finished : false;\n    }\n  }\x2C\n\n  writableObjectMode: {\n    __proto__: null\x2C\n    get() {\n      return this._writableState ? this._writableState.objectMode : false;\n    }\n  }\x2C\n\n  writableBuffer: {\n    __proto__: null\x2C\n    get() {\n      return this._writableState && this._writableState.getBuffer();\n    }\n  }\x2C\n\n  writableEnded: {\n    __proto__: null\x2C\n    get() {\n      return this._writableState ? this._writableState.ending : false;\n    }\n  }\x2C\n\n  writableNeedDrain: {\n    __proto__: null\x2C\n    get() {\n      const wState = this._writableState;\n      if (!wState) return false;\n      return !wState.destroyed && !wState.ending && wState.needDrain;\n    }\n  }\x2C\n\n  writableHighWaterMark: {\n    __proto__: null\x2C\n    get() {\n      return this._writableState && this._writableState.highWaterMark;\n    }\n  }\x2C\n\n  writableCorked: {\n    __proto__: null\x2C\n    get() {\n      return this._writableState ? this._writableState.corked : 0;\n    }\n  }\x2C\n\n  writableLength: {\n    __proto__: null\x2C\n    get() {\n      return this._writableState && this._writableState.length;\n    }\n  }\x2C\n\n  errored: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return this._writableState ? this._writableState.errored : null;\n    }\n  }\x2C\n\n  writableAborted: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get: function() {\n      return !!(\n        this._writableState.writable !== false &&\n        (this._writableState.destroyed || this._writableState.errored) &&\n        !this._writableState.finished\n      );\n    }\n  }\x2C\n});\n\nconst destroy = destroyImpl.destroy;\nWritable.prototype.destroy = function(err\x2C cb) {\n  const state = this._writableState;\n\n  // Invoke pending callbacks.\n  if (!state.destroyed &&\n    (state.bufferedIndex < state.buffered.length ||\n      state[kOnFinished].length)) {\n    process.nextTick(errorBuffer\x2C state);\n  }\n\n  destroy.call(this\x2C err\x2C cb);\n  return this;\n};\n\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function(err\x2C cb) {\n  cb(err);\n};\n\nWritable.prototype[EE.captureRejectionSymbol] = function(err) {\n  this.destroy(err);\n};\n\nlet webStreamsAdapters;\n\n// Lazy to avoid circular references\nfunction lazyWebStreams() {\n  if (webStreamsAdapters === undefined)\n    webStreamsAdapters = require('internal/webstreams/adapters');\n  return webStreamsAdapters;\n}\n\nWritable.fromWeb = function(writableStream\x2C options) {\n  return lazyWebStreams().newStreamWritableFromWritableStream(\n    writableStream\x2C\n    options);\n};\n\nWritable.toWeb = function(streamWritable) {\n  return lazyWebStreams().newWritableStreamFromStreamWritable(streamWritable);\n};\n
code-source-info,0x3685f021abd0,65,7418,8929,C0O7418C9O7992C16O8009C19O8016C23O7998C27O8028C33O8046C44O8046C51O8102C58O8109C63O8131C64O8135C83O8157C88O8155C92O8204C96O8242C104O8270C107O8292C111O8282C115O8323C123O8352C126O8375C130O8365C134O8407C142O8437C145O8461C149O8451C153O8494C161O8522C164O8544C168O8534C172O8575C180O8607C183O8633C187O8623C191O8661C197O8675C204O8698C212O8675C217O8720C224O8727C232O8727C238O8751C245O8763C258O8763C265O8928,,
tick,0x1a4dd99a4,119083,0,0x0,3,0x0,0x3685f0214dac,0x3685f02147a5,0x3685f0213a24,0x3685f02109dc,0x3685f020fc29,0x117768a1dfb6,0x1054080d0,0x104a6d958,0x117768a12ed4,0x105405ef4
code-creation,LazyCompile,10,119125,0x3685f021cdb8,341,WritableState node:internal/streams/writable:77:23,0x25eb221e1040,~
code-source-info,0x3685f021cdb
code-creation,LazyCompile,10,119166,0x3685f021d128,13,getDefaultHighWaterMark node:internal/streams/state:15:33,0x25eb221d7b60,~
code-source-info,0x3685f021d128,62,343,397,C0O360C12O395,,
code-creation,LazyCompile,10,119208,0x3685f021d278,23,resetBuffer node:internal/streams/writable:202:21,0x25eb221e1090,~
code-source-info,0x3685f021d278,65,6995,7107,C0O7007C2O7022C6O7030C7O7050C11O7057C12O7074C16O7084C17O7098C22O7106,,
code-creation,LazyCompile,10,119250,0x3685f021d3a0,14,set node:net:1908:6,0x1e372ce38180,~
code-source-info,0x3685f021d3a0,441,51670,51703,C0O51676C2O51688C7O51697C13O51701,,
code-creation,LazyCompile,10,119250,0x3685f021d488,8,get node:net:1907:6,0x1e372ce38130,~
code-source-info,0x3685f021d488,441,51635,51663,C0O51640C2O51652C4O51651C7O51661,,
code-creation,LazyCompile,10,119291,0x3685f021d570,32,getNewAsyncId node:net:182:23,0x1e372ce35f88,~
code-source-info,0x3685f021d570,441,4884,5000,C0O4897C4O4930C14O4963C17O4963C22O4985C27O4985C31O4998,,
code-creation,LazyCompile,10,119333,0x3685f021d738,196,Readable.on node:internal/streams/readable:886:33,0x25eb221d3148,~
code-source-info,0x3685f021d738,58,28013,28912,C0O28038C5O28045C10O28055C15O28058C29O28058C35O28099C40O28118C42O28125C47O28307C55O28307C62O28333C65O28300C69O28426C75O28434C80O28456C85O28456C91O28475C93O28482C98O28515C104O28536C110O28563C112O28608C118O28587C122O28622C123O28636C127O28651C128O28673C132O28688C140O28715C145O28729C150O28688C155O28755C161O28773C164O28773C170O28817C176O28836C179O28844C187O28844C193O28899C195O28910,,
code-creation,LazyCompile,10,119375,0x3685f021d9b0,135,initSocketHandle node:net:285:26,0x1e372ce36118,~
code-source-info,0x3685f021d9b0,441,7350,7928,C0O7366C5O7366C9O7382C10O7397C14O7483C20O7503C27O7511C32O7525C36O7542C43O7559C45O7557C49O7577C51O7582C57O7620C62O7601C66O7599C70O7649C72O7654C74O7653C78O7668C80O7704C82O7709C84O7708C88O7728C90O7769C94O7787C99O7792C105O7825C106O7832C107O7841C109O7846C114O7855C118O7885C123O7893C128O7893C134O7927,,
code-creation,LazyCompile,10,119416,0x3685f021dbe8,160,undestroy node:internal/streams/destroy:154:19,0x25eb221c6098,~
code-source-info,0x3685f021dbe8,56,2853,3525,C0O2875C5O2908C10O2927C14O2940C15O2954C19O2966C20O2975C24O2988C25O3003C29O3016C30O3028C34O3041C35O3051C39O3063C40O3078C44O3091C45O3101C49O3126C55O3135C58O3122C62O3167C68O3176C71O3163C75O3194C79O3207C80O3221C84O3233C85O3245C89O3258C90O3267C94O3280C95O3295C99O3308C100O3318C104O3330C105O3345C109O3358C110O3372C114O3385C115O3399C119O3424C125O3433C128O3420C132O3461C138O3470C141O3457C145O3500C151O3509C154O3496C159O3524,,
code-creation,LazyCompile,10,119500,0x3685f021e2a0,21,addCleanup node:internal/bootstrap/switches/is_main_thread:140:20,0x1e27ac64a220,~
code-source-info,0x3685f021e2a0,128,3617,3689,C0O3626C5O3630C10O3658C15O3658C20O3688,,
code-creation,LazyCompile,10,119500,0x3685f021e378,26,Writable.write node:internal/streams/writable:336:36,0x25eb221e1330,~
code-source-info,0x3685f021e378,65,10768,10846,C0O10794C15O10801C22O10835C25O10844,,
code-creation,LazyCompile,10,119541,0x3685f021e568,338,_write node:internal/streams/writable:286:16,0x25eb221e12e0,~
code-source-info,0x3685f021e
code-creation,LazyCompile,10,119625,0x3685f021e938,217,writeOrBuffer node:internal/streams/writable:368:23,0x25eb221e1518,~
code-source-info,0x3685f021e938,65,11687,12678,C0O11752C10O11775C15O11786C22O11802C25O11799C29O11867C34O11882C38O11874C42O11971C44O11985C45O12001C49O12022C55O12039C61O12055C67O12073C73O12098C78O12107C90O12114C96O12121C102O12131C106O12107C111O12158C119O12181C124O12203C125O12220C129O12249C137O12269C142O12286C143O12300C149O12330C151O12345C155O12356C157O12370C161O12386C162O12400C166O12412C167O12423C171O12442C176O12472C190O12442C195O12486C196O12497C200O12627C204O12648C211O12666C216O12676,,
code-creation,LazyCompile,10,119625,0x3685f021eb70,26,Socket._write node:net:928:35,0x1e372ce379a8,~
code-source-info,0x3685f021eb70,441,24193,24266,C0O24223C19O24223C25O24265,,
code-creation,LazyCompile,10,119666,0x3685f021ed70,186,Socket._writeGeneric node:net:891:42,0x1e372ce37868,~
code-source-info,0x3685f021ed70,441,23303,24056,C0O23303C21O23505C27O23523C29O23541C33O23553C35O23575C39O23596C52O23596C58O23699C59O23706C60O23713C61O23731C65O23741C67O23763C71O23782C77O23797C84O23804C87O23800C93O23797C97O23830C98O23843C99O23856C104O23856C108O23878C110O23885C114O23901C130O23907C138O23949C157O23955C163O24005C169O24016C173O24021C176O24048C180O24042C185O24055,,
code-creation,LazyCompile,10,119708,0x3685f021efd8,45,_unrefTimer node:net:477:52,0x1e372ce36a28,~
code-source-info,0x3685f021efd8,441,13254,13364,C0O13274C5O13282C9O13313C11O13319C13O13318C18O13336C20O13338C22O13337C26O13348C31O13348C35O13298C40O13261C44O13363,,
code-creation,LazyCompile,10,119708,0x3685f021f0f8,55,writeGeneric node:internal/stream_base_commons:147:22,0x25eb221f9178,~
script-source,84,node:internal/stream_base_commons,'use strict';\n\nconst {\n  Array\x2C\n  Symbol\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\nconst { FastBuffer } = require('internal/buffer');\nconst {\n  WriteWrap\x2C\n  kReadBytesOrError\x2C\n  kArrayBufferOffset\x2C\n  kBytesWritten\x2C\n  kLastWriteWasAsync\x2C\n  streamBaseState\n} = internalBinding('stream_wrap');\nconst { UV_EOF } = internalBinding('uv');\nconst {\n  errnoException\n} = require('internal/errors');\nconst { owner_symbol } = require('internal/async_hooks').symbols;\nconst {\n  kTimeout\x2C\n  setUnrefTimeout\x2C\n  getTimerDuration\n} = require('internal/timers');\nconst { isUint8Array } = require('internal/util/types');\nconst { clearTimeout } = require('timers');\nconst { validateFunction } = require('internal/validators');\n\nconst kMaybeDestroy = Symbol('kMaybeDestroy');\nconst kUpdateTimer = Symbol('kUpdateTimer');\nconst kAfterAsyncWrite = Symbol('kAfterAsyncWrite');\nconst kHandle = Symbol('kHandle');\nconst kSession = Symbol('kSession');\n\nlet debug = require('internal/util/debuglog').debuglog('stream'\x2C (fn) => {\n  debug = fn;\n});\nconst kBuffer = Symbol('kBuffer');\nconst kBufferGen = Symbol('kBufferGen');\nconst kBufferCb = Symbol('kBufferCb');\n\nfunction handleWriteReq(req\x2C data\x2C encoding) {\n  const { handle } = req;\n\n  switch (encoding) {\n    case 'buffer':\n    {\n      const ret = handle.writeBuffer(req\x2C data);\n      if (streamBaseState[kLastWriteWasAsync])\n        req.buffer = data;\n      return ret;\n    }\n    case 'latin1':\n    case 'binary':\n      return handle.writeLatin1String(req\x2C data);\n    case 'utf8':\n    case 'utf-8':\n      return handle.writeUtf8String(req\x2C data);\n    case 'ascii':\n      return handle.writeAsciiString(req\x2C data);\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return handle.writeUcs2String(req\x2C data);\n    default:\n    {\n      const buffer = Buffer.from(data\x2C encoding);\n      const ret = handle.writeBuffer(req\x2C buffer);\n      if (streamBaseState[kLastWriteWasAsync])\n        req.buffer = buffer;\n      return ret;\n    }\n  }\n}\n\nfunction onWriteComplete(status) {\n  debug('onWriteComplete'\x2C status\x2C this.error);\n\n  const stream = this.handle[owner_symbol];\n\n  if (stream.destroyed) {\n    if (typeof this.callback === 'function')\n      this.callback(null);\n    return;\n  }\n\n  // TODO (ronag): This should be moved before if(stream.destroyed)\n  // in order to avoid swallowing error.\n  if (status < 0) {\n    const ex = errnoException(status\x2C 'write'\x2C this.error);\n    if (typeof this.callback === 'function')\n      this.callback(ex);\n    else\n      stream.destroy(ex);\n    return;\n  }\n\n  stream[kUpdateTimer]();\n  stream[kAfterAsyncWrite](this);\n\n  if (typeof this.callback === 'function')\n    this.callback(null);\n}\n\nfunction createWriteWrap(handle\x2C callback) {\n  const req = new WriteWrap();\n\n  req.handle = handle;\n  req.oncomplete = onWriteComplete;\n  req.async = false;\n  req.bytes = 0;\n  req.buffer = null;\n  req.callback = callback;\n\n  return req;\n}\n\nfunction writevGeneric(self\x2C data\x2C cb) {\n  const req = createWriteWrap(self[kHandle]\x2C cb);\n  const allBuffers = data.allBuffers;\n  let chunks;\n  if (allBuffers) {\n    chunks = data;\n    for (let i = 0; i < data.length; i++)\n      data[i] = data[i].chunk;\n  } else {\n    chunks = new Array(data.length << 1);\n    for (let i = 0; i < data.length; i++) {\n      const entry = data[i];\n      chunks[i * 2] = entry.chunk;\n      chunks[i * 2 + 1] = entry.encoding;\n    }\n  }\n  const err = req.handle.writev(req\x2C chunks\x2C allBuffers);\n\n  // Retain chunks\n  if (err === 0) req._chunks = chunks;\n\n  afterWriteDispatched(req\x2C err\x2C cb);\n  return req;\n}\n\nfunction writeGeneric(self\x2C data\x2C encoding\x2C cb) {\n  const req = createWriteWrap(self[kHandle]\x2C cb);\n  const err = handleWriteReq(req\x2C data\x2C encoding);\n\n  afterWriteDispatched(req\x2C err\x2C cb);\n  return req;\n}\n\nfunction afterWriteDispatched(req\x2C err\x2C cb) {\n  req.bytes = streamBaseState[kBytesWritten];\n  req.async = !!streamBaseState[kLastWriteWasAsync];\n\n  if (err !== 0)\n    return cb(errnoException(err\x2C 'write'\x2C req.error));\n\n  if (!req.async && typeof req.callback === 'function') {\n    req.callback();\n  }\n}\n\nfunction onStreamRead(arrayBuffer) {\n  const nread = streamBaseState[kReadBytesOrError];\n\n  const handle = this;\n  const stream = this[owner_symbol];\n\n  stream[kUpdateTimer]();\n\n  if (nread > 0 && !stream.destroyed) {\n    let ret;\n    let result;\n    const userBuf = stream[kBuffer];\n    if (userBuf) {\n      result = (stream[kBufferCb](nread\x2C userBuf) !== false);\n      const bufGen = stream[kBufferGen];\n      if (bufGen !== null) {\n        const nextBuf = bufGen();\n        if (isUint8Array(nextBuf))\n          stream[kBuffer] = ret = nextBuf;\n      }\n    } else {\n      const offset = streamBaseState[kArrayBufferOffset];\n      const buf = new FastBuffer(arrayBuffer\x2C offset\x2C nread);\n      result = stream.push(buf);\n    }\n    if (!result) {\n      handle.reading = false;\n      if (!stream.destroyed) {\n        const err = handle.readStop();\n        if (err)\n          stream.destroy(errnoException(err\x2C 'read'));\n      }\n    }\n\n    return ret;\n  }\n\n  if (nread === 0) {\n    return;\n  }\n\n  // After seeing EOF\x2C most streams will be closed permanently\x2C\n  // and will not deliver any more read events after this point.\n  // (equivalently\x2C it should have called readStop on itself already).\n  // Some streams may be reset and explicitly started again with a call\n  // to readStart\x2C such as TTY.\n\n  if (nread !== UV_EOF) {\n    // CallJSOnreadMethod expects the return value to be a buffer.\n    // Ref: https://github.com/nodejs/node/pull/34375\n    stream.destroy(errnoException(nread\x2C 'read'));\n    return;\n  }\n\n  // Defer this until we actually emit end\n  if (stream._readableState.endEmitted) {\n    if (stream[kMaybeDestroy])\n      stream[kMaybeDestroy]();\n  } else {\n    if (stream[kMaybeDestroy])\n      stream.on('end'\x2C stream[kMaybeDestroy]);\n\n    // Push a null to signal the end of data.\n    // Do it before `maybeDestroy` for correct order of events:\n    // `end` -> `close`\n    stream.push(null);\n    stream.read(0);\n  }\n}\n\nfunction setStreamTimeout(msecs\x2C callback) {\n  if (this.destroyed)\n    return this;\n\n  this.timeout = msecs;\n\n  // Type checking identical to timers.enroll()\n  msecs = getTimerDuration(msecs\x2C 'msecs');\n\n  // Attempt to clear an existing timer in both cases -\n  //  even if it will be rescheduled we don't want to leak an existing timer.\n  clearTimeout(this[kTimeout]);\n\n  if (msecs === 0) {\n    if (callback !== undefined) {\n      validateFunction(callback\x2C 'callback');\n      this.removeListener('timeout'\x2C callback);\n    }\n  } else {\n    this[kTimeout] = setUnrefTimeout(this._onTimeout.bind(this)\x2C msecs);\n    if (this[kSession]) this[kSession][kUpdateTimer]();\n\n    if (callback !== undefined) {\n      validateFunction(callback\x2C 'callback');\n      this.once('timeout'\x2C callback);\n    }\n  }\n  return this;\n}\n\nmodule.exports = {\n  writevGeneric\x2C\n  writeGeneric\x2C\n  onStreamRead\x2C\n  kAfterAsyncWrite\x2C\n  kMaybeDestroy\x2C\n  kUpdateTimer\x2C\n  kHandle\x2C\n  kSession\x2C\n  setStreamTimeout\x2C\n  kBuffer\x2C\n  kBufferCb\x2C\n  kBufferGen\n};\n
code-source-info,0x3685f021f0f8,84,3597,3781,C0O3640C5O3661C7O3660C11O3640C17O3690C29O3690C35O3730C47O3730C52O3768C54O3779,,
code-creation,LazyCompile,10,120000,0x3685f021fb20,47,createWriteWrap node:internal/stream_base_commons:109:25,0x25eb221f90d8,~
code-source-info,0x3685f021fb20,84,2719,2933,C0O2754C5O2754C11O2774C13O2785C17O2797C19O2812C23O2833C24O2843C28O2854C29O2864C33O2871C34O2882C38O2892C40O2905C44O2920C46O2931,,
code-creation,LazyCompile,10,120041,0x3685f021fd28,215,handleWriteReq node:internal/stream_base_commons:45:24,0x25eb221f9038,~
code-source-info,0x3685f021fd28,84,1174,2006,C0O1208C5O1227C80O1297C85O1297C92O1327C99O1347C101O1346C106O1376C108O1387C112O1401C114O1412C115O1477C120O1477C126O1506C127O1562C132O1562C138O1589C139O1628C144O1628C150O1656C151O1753C156O1753C162O1780C163O1821C168O1828C173O1828C180O1875C185O1875C192O1907C199O1927C201O1926C206O1956C208O1967C212O1983C214O1994,,
code-creation,LazyCompile,10,120083,0x3685f021ff70,92,afterWriteDispatched node:internal/stream_base_commons:155:30,0x25eb221f91c8,~
code-source-info,0x3685f021ff70,84,3812,4086,C0O3831C2O3843C7O3859C9O3858C12O3841C16O3877C18O3891C23O3907C25O3906C30O3887C34O3931C35O3939C40O3950C42O3960C48O3993C56O3960C62O3957C66O4001C67O4014C73O4034C81O4069C86O4069C91O4085,,
code-creation,LazyCompile,10,120125,0x3685f02201c8,323,onwrite node:internal/streams/writable:428:17,0x25eb221e1608,~
code-source-info,0x3685f02201c8,65,13463,15086,C0O13501C5O13538C10O13563C15O13575C19O13611C26O13638C29O13634C35O13611C40O13668C41O13675C42O13683C43O13697C47O13708C48O13722C52O13732C57O13754C64O13745C68O13766C69O13781C73O13789C77O13893C81O13961C87O13978C89O13992C93O14110C99O14136C104O14151C110O14175C117O14198C121O14215C125O14233C128O14241C148O14241C155O14307C170O14307C177O14375C182O14384C187O14399C191O14391C196O14422C199O14422C204O14461C208O14742C214O14789C219O14808C226O14811C231O14835C242O14859C248O14886C255O14925C261O14929C267O14937C273O14911C277O14954C280O14962C288O14993C293O14962C301O15041C316O15041C322O15085,,
code-creation,LazyCompile,10,120208,0x3685f0220c48,372,nextTick node:internal/process/task_queues:103:18,0x111f698cfce8,~
script-source,38,node:internal/process/task_queues,'use strict';\n\nconst {\n  Array\x2C\n  FunctionPrototypeBind\x2C\n} = primordials;\n\nconst {\n  // For easy access to the nextTick state in the C++ land\x2C\n  // and to avoid unnecessary calls into JS land.\n  tickInfo\x2C\n  // Used to run V8's micro task queue.\n  runMicrotasks\x2C\n  setTickCallback\x2C\n  enqueueMicrotask\n} = internalBinding('task_queue');\n\nconst {\n  setHasRejectionToWarn\x2C\n  hasRejectionToWarn\x2C\n  listenForRejections\x2C\n  processPromiseRejections\n} = require('internal/process/promises');\n\nconst {\n  getDefaultTriggerAsyncId\x2C\n  newAsyncId\x2C\n  initHooksExist\x2C\n  destroyHooksExist\x2C\n  emitInit\x2C\n  emitBefore\x2C\n  emitAfter\x2C\n  emitDestroy\x2C\n  symbols: { async_id_symbol\x2C trigger_async_id_symbol }\n} = require('internal/async_hooks');\nconst FixedQueue = require('internal/fixed_queue');\n\nconst {\n  validateFunction\x2C\n} = require('internal/validators');\n\nconst { AsyncResource } = require('async_hooks');\n\n// *Must* match Environment::TickInfo::Fields in src/env.h.\nconst kHasTickScheduled = 0;\n\nfunction hasTickScheduled() {\n  return tickInfo[kHasTickScheduled] === 1;\n}\n\nfunction setHasTickScheduled(value) {\n  tickInfo[kHasTickScheduled] = value ? 1 : 0;\n}\n\nconst queue = new FixedQueue();\n\n// Should be in sync with RunNextTicksNative in node_task_queue.cc\nfunction runNextTicks() {\n  if (!hasTickScheduled() && !hasRejectionToWarn())\n    runMicrotasks();\n  if (!hasTickScheduled() && !hasRejectionToWarn())\n    return;\n\n  processTicksAndRejections();\n}\n\nfunction processTicksAndRejections() {\n  let tock;\n  do {\n    while ((tock = queue.shift()) !== null) {\n      const asyncId = tock[async_id_symbol];\n      emitBefore(asyncId\x2C tock[trigger_async_id_symbol]\x2C tock);\n\n      try {\n        const callback = tock.callback;\n        if (tock.args === undefined) {\n          callback();\n        } else {\n          const args = tock.args;\n          switch (args.length) {\n            case 1: callback(args[0]); break;\n            case 2: callback(args[0]\x2C args[1]); break;\n            case 3: callback(args[0]\x2C args[1]\x2C args[2]); break;\n            case 4: callback(args[0]\x2C args[1]\x2C args[2]\x2C args[3]); break;\n            default: callback(...args);\n          }\n        }\n      } finally {\n        if (destroyHooksExist())\n          emitDestroy(asyncId);\n      }\n\n      emitAfter(asyncId);\n    }\n    runMicrotasks();\n  } while (!queue.isEmpty() || processPromiseRejections());\n  setHasTickScheduled(false);\n  setHasRejectionToWarn(false);\n}\n\n// `nextTick()` will not enqueue any callback when the process is about to\n// exit since the callback would not have a chance to be executed.\nfunction nextTick(callback) {\n  validateFunction(callback\x2C 'callback');\n\n  if (process._exiting)\n    return;\n\n  let args;\n  switch (arguments.length) {\n    case 1: break;\n    case 2: args = [arguments[1]]; break;\n    case 3: args = [arguments[1]\x2C arguments[2]]; break;\n    case 4: args = [arguments[1]\x2C arguments[2]\x2C arguments[3]]; break;\n    default:\n      args = new Array(arguments.length - 1);\n      for (let i = 1; i < arguments.length; i++)\n        args[i - 1] = arguments[i];\n  }\n\n  if (queue.isEmpty())\n    setHasTickScheduled(true);\n  const asyncId = newAsyncId();\n  const triggerAsyncId = getDefaultTriggerAsyncId();\n  const tickObject = {\n    [async_id_symbol]: asyncId\x2C\n    [trigger_async_id_symbol]: triggerAsyncId\x2C\n    callback\x2C\n    args\n  };\n  if (initHooksExist())\n    emitInit(asyncId\x2C 'TickObject'\x2C triggerAsyncId\x2C tickObject);\n  queue.push(tickObject);\n}\n\nfunction runMicrotask() {\n  this.runInAsyncScope(() => {\n    const callback = this.callback;\n    try {\n      callback();\n    } finally {\n      this.emitDestroy();\n    }\n  });\n}\n\nconst defaultMicrotaskResourceOpts = { requireManualDestroy: true };\n\nfunction queueMicrotask(callback) {\n  validateFunction(callback\x2C 'callback');\n\n  const asyncResource = new AsyncResource(\n    'Microtask'\x2C\n    defaultMicrotaskResourceOpts\n  );\n  asyncResource.callback = callback;\n\n  enqueueMicrotask(FunctionPrototypeBind(runMicrotask\x2C asyncResource));\n}\n\nmodule.exports = {\n  setupTaskQueue() {\n    // Sets the per-isolate promise rejection callback\n    listenForRejections();\n    // Sets the callback to be run in every tick.\n    setTickCallback(processTicksAndRejections);\n    return {\n      nextTick\x2C\n      runNextTicks\n    };\n  }\x2C\n  queueMicrotask\n};\n
code-source-info,0x3685f0220c
code-creation,LazyCompile,10,120416,0x3685f02214b8,16,get node:internal/bootstrap/node:79:8,0x3d9b80192a38,~
code-source-info,0x3685f02214b8,16,2633,2692,C0O2644C6O2676C12O2680C15O2686,,
code-creation,LazyCompile,10,120416,0x3685f02215a8,15,isEmpty node:internal/fixed_queue:95:10,0x111f698d4bd8,~
script-source,40,node:internal/fixed_queue,'use strict';\n\nconst {\n  Array\x2C\n} = primordials;\n\n// Currently optimal queue size\x2C tested on V8 6.0 - 6.6. Must be power of two.\nconst kSize = 2048;\nconst kMask = kSize - 1;\n\n// The FixedQueue is implemented as a singly-linked list of fixed-size\n// circular buffers. It looks something like this:\n//\n//  head                                                       tail\n//    |                                                          |\n//    v                                                          v\n// +-----------+ <-----\\       +-----------+ <------\\         +-----------+\n// |  [null]   |        \\----- |   next    |         \\------- |   next    |\n// +-----------+               +-----------+                  +-----------+\n// |   item    | <-- bottom    |   item    | <-- bottom       |  [empty]  |\n// |   item    |               |   item    |                  |  [empty]  |\n// |   item    |               |   item    |                  |  [empty]  |\n// |   item    |               |   item    |                  |  [empty]  |\n// |   item    |               |   item    |       bottom --> |   item    |\n// |   item    |               |   item    |                  |   item    |\n// |    ...    |               |    ...    |                  |    ...    |\n// |   item    |               |   item    |                  |   item    |\n// |   item    |               |   item    |                  |   item    |\n// |  [empty]  | <-- top       |   item    |                  |   item    |\n// |  [empty]  |               |   item    |                  |   item    |\n// |  [empty]  |               |  [empty]  | <-- top  top --> |  [empty]  |\n// +-----------+               +-----------+                  +-----------+\n//\n// Or\x2C if there is only one circular buffer\x2C it looks something\n// like either of these:\n//\n//  head   tail                                 head   tail\n//    |     |                                     |     |\n//    v     v                                     v     v\n// +-----------+                               +-----------+\n// |  [null]   |                               |  [null]   |\n// +-----------+                               +-----------+\n// |  [empty]  |                               |   item    |\n// |  [empty]  |                               |   item    |\n// |   item    | <-- bottom            top --> |  [empty]  |\n// |   item    |                               |  [empty]  |\n// |  [empty]  | <-- top            bottom --> |   item    |\n// |  [empty]  |                               |   item    |\n// +-----------+                               +-----------+\n//\n// Adding a value means moving `top` forward by one\x2C removing means\n// moving `bottom` forward by one. After reaching the end\x2C the queue\n// wraps around.\n//\n// When `top === bottom` the current queue is empty and when\n// `top + 1 === bottom` it's full. This wastes a single space of storage\n// but allows much quicker checks.\n\nclass FixedCircularBuffer {\n  constructor() {\n    this.bottom = 0;\n    this.top = 0;\n    this.list = new Array(kSize);\n    this.next = null;\n  }\n\n  isEmpty() {\n    return this.top === this.bottom;\n  }\n\n  isFull() {\n    return ((this.top + 1) & kMask) === this.bottom;\n  }\n\n  push(data) {\n    this.list[this.top] = data;\n    this.top = (this.top + 1) & kMask;\n  }\n\n  shift() {\n    const nextItem = this.list[this.bottom];\n    if (nextItem === undefined)\n      return null;\n    this.list[this.bottom] = undefined;\n    this.bottom = (this.bottom + 1) & kMask;\n    return nextItem;\n  }\n}\n\nmodule.exports = class FixedQueue {\n  constructor() {\n    this.head = this.tail = new FixedCircularBuffer();\n  }\n\n  isEmpty() {\n    return this.head.isEmpty();\n  }\n\n  push(data) {\n    if (this.head.isFull()) {\n      // Head is full: Creates a new queue\x2C sets the old queue's `.next` to it\x2C\n      // and sets it as the new main queue.\n      this.head = this.head.next = new FixedCircularBuffer();\n    }\n    this.head.push(data);\n  }\n\n  shift() {\n    const tail = this.tail;\n    const next = tail.shift();\n    if (tail.isEmpty() && tail.next !== null) {\n      // If there is another queue\x2C it forms the new tail.\n      this.tail = tail.next;\n    }\n    return next;\n  }\n};\n
code-source-info,0x3685f02215a8,40,3637,3677,C0O3658C5O3663C10O3663C14O3673,,
code-creation,LazyCompile,10,120583,0x3685f0221a58,13,isEmpty node:internal/fixed_queue:67:10,0x111f698d4928,~
code-source-info,0x3685f0221a58,40,3084,3129,C0O3105C5O3118C9O3109C12O3125,,
code-creation,LazyCompile,10,120583,0x3685f0221b48,25,setHasTickScheduled node:internal/process/task_queues:51:29,0x111f698cfbf8,~
code-source-info,0x3685f0221b48,38,1084,1142,C0O1096C7O1105C12O1126C19O1124C24O1141,,
code-creation,LazyCompile,10,120625,0x3685f0221c48,23,newAsyncId node:internal/async_hooks:416:20,0x3d9b801b5bf8,~
tick,0x1a4dd9a6c,120666,0,0x0,3,0x0,0x3685f02202ed,0x3685f021ffc6,0x3685f021f127,0x3685f021ee0d,0x3685f021eb83,0x3685f021e9f6,0x3685f021e6b4,0x3685f021e387,0x117768a1dfcf,0x1054080d0,0x104a6d958,0x117768a12ed4,0x105405ef4
script-source,19,node:internal/async_hooks,'use strict';\n\nconst {\n  ArrayPrototypeSlice\x2C\n  ErrorCaptureStackTrace\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectDefineProperty\x2C\n  Symbol\x2C\n} = primordials;\n\nconst promiseHooks = require('internal/promise_hooks');\n\nconst async_wrap = internalBinding('async_wrap');\nconst { setCallbackTrampoline } = async_wrap;\n/* async_hook_fields is a Uint32Array wrapping the uint32_t array of\n * Environment::AsyncHooks::fields_[]. Each index tracks the number of active\n * hooks for each type.\n *\n * async_id_fields is a Float64Array wrapping the double array of\n * Environment::AsyncHooks::async_id_fields_[]. Each index contains the ids for\n * the various asynchronous states of the application. These are:\n *  kExecutionAsyncId: The async_id assigned to the resource responsible for the\n *    current execution stack.\n *  kTriggerAsyncId: The async_id of the resource that caused (or 'triggered')\n *    the resource corresponding to the current execution stack.\n *  kAsyncIdCounter: Incremental counter tracking the next assigned async_id.\n *  kDefaultTriggerAsyncId: Written immediately before a resource's constructor\n *    that sets the value of the init()'s triggerAsyncId. The precedence order\n *    of retrieving the triggerAsyncId value is:\n *    1. the value passed directly to the constructor\n *    2. value set in kDefaultTriggerAsyncId\n *    3. executionAsyncId of the current resource.\n *\n * async_ids_stack is a Float64Array that contains part of the async ID\n * stack. Each pushAsyncContext() call adds two doubles to it\x2C and each\n * popAsyncContext() call removes two doubles from it.\n * It has a fixed size\x2C so if that is exceeded\x2C calls to the native\n * side are used instead in pushAsyncContext() and popAsyncContext().\n */\nconst {\n  async_hook_fields\x2C\n  async_id_fields\x2C\n  execution_async_resources\n} = async_wrap;\n// Store the pair executionAsyncId and triggerAsyncId in a AliasedFloat64Array\n// in Environment::AsyncHooks::async_ids_stack_ which tracks the resource\n// responsible for the current execution stack. This is unwound as each resource\n// exits. In the case of a fatal exception this stack is emptied after calling\n// each hook's after() callback.\nconst {\n  pushAsyncContext: pushAsyncContext_\x2C\n  popAsyncContext: popAsyncContext_\x2C\n  executionAsyncResource: executionAsyncResource_\x2C\n  clearAsyncIdStack\x2C\n} = async_wrap;\n// Properties in active_hooks are used to keep track of the set of hooks being\n// executed in case another hook is enabled/disabled. The new set of hooks is\n// then restored once the active set of hooks is finished executing.\nconst active_hooks = {\n  // Array of all AsyncHooks that will be iterated whenever an async event\n  // fires. Using var instead of (preferably const) in order to assign\n  // active_hooks.tmp_array if a hook is enabled/disabled during hook\n  // execution.\n  array: []\x2C\n  // Use a counter to track nested calls of async hook callbacks and make sure\n  // the active_hooks.array isn't altered mid execution.\n  call_depth: 0\x2C\n  // Use to temporarily store and updated active_hooks.array if the user\n  // enables or disables a hook while hooks are being processed. If a hook is\n  // enabled() or disabled() during hook execution then the current set of\n  // active hooks is duplicated and set equal to active_hooks.tmp_array. Any\n  // subsequent changes are on the duplicated array. When all hooks have\n  // completed executing active_hooks.tmp_array is assigned to\n  // active_hooks.array.\n  tmp_array: null\x2C\n  // Keep track of the field counts held in active_hooks.tmp_array. Because the\n  // async_hook_fields can't be reassigned\x2C store each uint32 in an array that\n  // is written back to async_hook_fields when active_hooks.array is restored.\n  tmp_fields: null\n};\n\nconst { registerDestroyHook } = async_wrap;\nconst { enqueueMicrotask } = internalBinding('task_queue');\nconst { resource_symbol\x2C owner_symbol } = internalBinding('symbols');\n\n// Each constant tracks how many callbacks there are for any given step of\n// async execution. These are tracked so if the user didn't include callbacks\n// for a given step\x2C that step can bail out early.\nconst {\n  kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x2C\n  kCheck\x2C kExecutionAsyncId\x2C kAsyncIdCounter\x2C kTriggerAsyncId\x2C\n  kDefaultTriggerAsyncId\x2C kStackLength\x2C kUsesExecutionAsyncResource\x2C\n} = async_wrap.constants;\n\nconst { async_id_symbol\x2C\n        trigger_async_id_symbol } = internalBinding('symbols');\n\n// Lazy load of internal/util/inspect;\nlet inspect;\n\n// Used in AsyncHook and AsyncResource.\nconst init_symbol = Symbol('init');\nconst before_symbol = Symbol('before');\nconst after_symbol = Symbol('after');\nconst destroy_symbol = Symbol('destroy');\nconst promise_resolve_symbol = Symbol('promiseResolve');\nconst emitBeforeNative = emitHookFactory(before_symbol\x2C 'emitBeforeNative');\nconst emitAfterNative = emitHookFactory(after_symbol\x2C 'emitAfterNative');\nconst emitDestroyNative = emitHookFactory(destroy_symbol\x2C 'emitDestroyNative');\nconst emitPromiseResolveNative =\n    emitHookFactory(promise_resolve_symbol\x2C 'emitPromiseResolveNative');\n\nlet domain_cb;\nfunction useDomainTrampoline(fn) {\n  domain_cb = fn;\n}\n\nfunction callbackTrampoline(asyncId\x2C resource\x2C cb\x2C ...args) {\n  const index = async_hook_fields[kStackLength] - 1;\n  execution_async_resources[index] = resource;\n\n  if (asyncId !== 0 && hasHooks(kBefore))\n    emitBeforeNative(asyncId);\n\n  let result;\n  if (asyncId === 0 && typeof domain_cb === 'function') {\n    args.unshift(cb);\n    result = domain_cb.apply(this\x2C args);\n  } else {\n    result = cb.apply(this\x2C args);\n  }\n\n  if (asyncId !== 0 && hasHooks(kAfter))\n    emitAfterNative(asyncId);\n\n  execution_async_resources.pop();\n  return result;\n}\n\nconst topLevelResource = {};\n\nfunction executionAsyncResource() {\n  // Indicate to the native layer that this function is likely to be used\x2C\n  // in which case it will inform JS about the current async resource via\n  // the trampoline above.\n  async_hook_fields[kUsesExecutionAsyncResource] = 1;\n\n  const index = async_hook_fields[kStackLength] - 1;\n  if (index === -1) return topLevelResource;\n  const resource = execution_async_resources[index] ||\n    executionAsyncResource_(index);\n  return lookupPublicResource(resource);\n}\n\nfunction inspectExceptionValue(e) {\n  inspect ??= require('internal/util/inspect').inspect;\n  return { message: inspect(e) };\n}\n\n// Used to fatally abort the process if a callback throws.\nfunction fatalError(e) {\n  if (typeof e?.stack === 'string') {\n    process._rawDebug(e.stack);\n  } else {\n    const o = inspectExceptionValue(e);\n    ErrorCaptureStackTrace(o\x2C fatalError);\n    process._rawDebug(o.stack);\n  }\n\n  const { getOptionValue } = require('internal/options');\n  if (getOptionValue('--abort-on-uncaught-exception')) {\n    process.abort();\n  }\n  process.exit(1);\n}\n\nfunction lookupPublicResource(resource) {\n  if (typeof resource !== 'object' || resource === null) return resource;\n  // TODO(addaleax): Merge this with owner_symbol and use it across all\n  // AsyncWrap instances.\n  const publicResource = resource[resource_symbol];\n  if (publicResource !== undefined)\n    return publicResource;\n  return resource;\n}\n\n// Emit From Native //\n\n// Used by C++ to call all init() callbacks. Because some state can be setup\n// from C++ there's no need to perform all the same operations as in\n// emitInitScript.\nfunction emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\n  active_hooks.call_depth += 1;\n  resource = lookupPublicResource(resource);\n  // Use a single try/catch for all hooks to avoid setting up one per iteration.\n  try {\n    // Using var here instead of let because "for (var ...)" is faster than let.\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\n    // eslint-disable-next-line no-var\n    for (var i = 0; i < active_hooks.array.length; i++) {\n      if (typeof active_hooks.array[i][init_symbol] === 'function') {\n        active_hooks.array[i][init_symbol](\n          asyncId\x2C type\x2C triggerAsyncId\x2C\n          resource\n        );\n      }\n    }\n  } catch (e) {\n    fatalError(e);\n  } finally {\n    active_hooks.call_depth -= 1;\n  }\n\n  // Hooks can only be restored if there have been no recursive hook calls.\n  // Also the active hooks do not need to be restored if enable()/disable()\n  // weren't called during hook execution\x2C in which case active_hooks.tmp_array\n  // will be null.\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\n    restoreActiveHooks();\n  }\n}\n\n// Called from native. The asyncId stack handling is taken care of there\n// before this is called.\nfunction emitHook(symbol\x2C asyncId) {\n  active_hooks.call_depth += 1;\n  // Use a single try/catch for all hook to avoid setting up one per\n  // iteration.\n  try {\n    // Using var here instead of let because "for (var ...)" is faster than let.\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\n    // eslint-disable-next-line no-var\n    for (var i = 0; i < active_hooks.array.length; i++) {\n      if (typeof active_hooks.array[i][symbol] === 'function') {\n        active_hooks.array[i][symbol](asyncId);\n      }\n    }\n  } catch (e) {\n    fatalError(e);\n  } finally {\n    active_hooks.call_depth -= 1;\n  }\n\n  // Hooks can only be restored if there have been no recursive hook calls.\n  // Also the active hooks do not need to be restored if enable()/disable()\n  // weren't called during hook execution\x2C in which case\n  // active_hooks.tmp_array will be null.\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\n    restoreActiveHooks();\n  }\n}\n\nfunction emitHookFactory(symbol\x2C name) {\n  const fn = emitHook.bind(undefined\x2C symbol);\n\n  // Set the name property of the function as it looks good in the stack trace.\n  ObjectDefineProperty(fn\x2C 'name'\x2C {\n    __proto__: null\x2C\n    value: name\n  });\n  return fn;\n}\n\n// Manage Active Hooks //\n\nfunction getHookArrays() {\n  if (active_hooks.call_depth === 0)\n    return [active_hooks.array\x2C async_hook_fields];\n  // If this hook is being enabled while in the middle of processing the array\n  // of currently active hooks then duplicate the current set of active hooks\n  // and store this there. This shouldn't fire until the next time hooks are\n  // processed.\n  if (active_hooks.tmp_array === null)\n    storeActiveHooks();\n  return [active_hooks.tmp_array\x2C active_hooks.tmp_fields];\n}\n\n\nfunction storeActiveHooks() {\n  active_hooks.tmp_array = ArrayPrototypeSlice(active_hooks.array);\n  // Don't want to make the assumption that kInit to kDestroy are indexes 0 to\n  // 4. So do this the long way.\n  active_hooks.tmp_fields = [];\n  copyHooks(active_hooks.tmp_fields\x2C async_hook_fields);\n}\n\nfunction copyHooks(destination\x2C source) {\n  destination[kInit] = source[kInit];\n  destination[kBefore] = source[kBefore];\n  destination[kAfter] = source[kAfter];\n  destination[kDestroy] = source[kDestroy];\n  destination[kPromiseResolve] = source[kPromiseResolve];\n}\n\n\n// Then restore the correct hooks array in case any hooks were added/removed\n// during hook callback execution.\nfunction restoreActiveHooks() {\n  active_hooks.array = active_hooks.tmp_array;\n  copyHooks(async_hook_fields\x2C active_hooks.tmp_fields);\n\n  active_hooks.tmp_array = null;\n  active_hooks.tmp_fields = null;\n}\n\nfunction trackPromise(promise\x2C parent) {\n  if (promise[async_id_symbol]) {\n    return;\n  }\n\n  // Get trigger id from parent async id before making the async id of the\n  // child so if a new one must be made it will be lower than the child.\n  const triggerAsyncId = parent ? getOrSetAsyncId(parent) :\n    getDefaultTriggerAsyncId();\n\n  promise[async_id_symbol] = newAsyncId();\n  promise[trigger_async_id_symbol] = triggerAsyncId;\n}\n\nfunction promiseInitHook(promise\x2C parent) {\n  trackPromise(promise\x2C parent);\n  const asyncId = promise[async_id_symbol];\n  const triggerAsyncId = promise[trigger_async_id_symbol];\n  emitInitScript(asyncId\x2C 'PROMISE'\x2C triggerAsyncId\x2C promise);\n}\n\nfunction promiseInitHookWithDestroyTracking(promise\x2C parent) {\n  promiseInitHook(promise\x2C parent);\n  destroyTracking(promise\x2C parent);\n}\n\nfunction destroyTracking(promise\x2C parent) {\n  trackPromise(promise\x2C parent);\n  const asyncId = promise[async_id_symbol];\n  registerDestroyHook(promise\x2C asyncId);\n}\n\nfunction promiseBeforeHook(promise) {\n  trackPromise(promise);\n  const asyncId = promise[async_id_symbol];\n  const triggerId = promise[trigger_async_id_symbol];\n  emitBeforeScript(asyncId\x2C triggerId\x2C promise);\n}\n\nfunction promiseAfterHook(promise) {\n  trackPromise(promise);\n  const asyncId = promise[async_id_symbol];\n  if (hasHooks(kAfter)) {\n    emitAfterNative(asyncId);\n  }\n  if (asyncId === executionAsyncId()) {\n    // This condition might not be true if async_hooks was enabled during\n    // the promise callback execution.\n    // Popping it off the stack can be skipped in that case\x2C because it is\n    // known that it would correspond to exactly one call with\n    // PromiseHookType::kBefore that was not witnessed by the PromiseHook.\n    popAsyncContext(asyncId);\n  }\n}\n\nfunction promiseResolveHook(promise) {\n  trackPromise(promise);\n  const asyncId = promise[async_id_symbol];\n  emitPromiseResolveNative(asyncId);\n}\n\nlet wantPromiseHook = false;\nfunction enableHooks() {\n  async_hook_fields[kCheck] += 1;\n\n  setCallbackTrampoline(callbackTrampoline);\n}\n\nlet stopPromiseHook;\nfunction updatePromiseHookMode() {\n  wantPromiseHook = true;\n  let initHook;\n  if (initHooksExist()) {\n    initHook = destroyHooksExist() ? promiseInitHookWithDestroyTracking :\n      promiseInitHook;\n  } else if (destroyHooksExist()) {\n    initHook = destroyTracking;\n  }\n  if (stopPromiseHook) stopPromiseHook();\n  stopPromiseHook = promiseHooks.createHook({\n    init: initHook\x2C\n    before: promiseBeforeHook\x2C\n    after: promiseAfterHook\x2C\n    settled: promiseResolveHooksExist() ? promiseResolveHook : undefined\n  });\n}\n\nfunction disableHooks() {\n  async_hook_fields[kCheck] -= 1;\n\n  wantPromiseHook = false;\n\n  setCallbackTrampoline();\n\n  // Delay the call to `disablePromiseHook()` because we might currently be\n  // between the `before` and `after` calls of a Promise.\n  enqueueMicrotask(disablePromiseHookIfNecessary);\n}\n\nfunction disablePromiseHookIfNecessary() {\n  if (!wantPromiseHook && stopPromiseHook) {\n    stopPromiseHook();\n  }\n}\n\n// Internal Embedder API //\n\n// Increment the internal id counter and return the value. Important that the\n// counter increment first. Since it's done the same way in\n// Environment::new_async_uid()\nfunction newAsyncId() {\n  return ++async_id_fields[kAsyncIdCounter];\n}\n\nfunction getOrSetAsyncId(object) {\n  if (ObjectPrototypeHasOwnProperty(object\x2C async_id_symbol)) {\n    return object[async_id_symbol];\n  }\n\n  return object[async_id_symbol] = newAsyncId();\n}\n\n\n// Return the triggerAsyncId meant for the constructor calling it. It's up to\n// the user to safeguard this call and make sure it's zero'd out when the\n// constructor is complete.\nfunction getDefaultTriggerAsyncId() {\n  const defaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\n  // If defaultTriggerAsyncId isn't set\x2C use the executionAsyncId\n  if (defaultTriggerAsyncId < 0)\n    return async_id_fields[kExecutionAsyncId];\n  return defaultTriggerAsyncId;\n}\n\n\nfunction clearDefaultTriggerAsyncId() {\n  async_id_fields[kDefaultTriggerAsyncId] = -1;\n}\n\n/**\n * Sets a default top level trigger ID to be used\n *\n * @template {Array<unknown>} T\n * @template {unknown} R\n * @param {number} triggerAsyncId\n * @param { (...T: args) => R } block\n * @param  {T} args\n * @returns {R}\n */\nfunction defaultTriggerAsyncIdScope(triggerAsyncId\x2C block\x2C ...args) {\n  if (triggerAsyncId === undefined)\n    return block.apply(null\x2C args);\n  // CHECK(NumberIsSafeInteger(triggerAsyncId))\n  // CHECK(triggerAsyncId > 0)\n  const oldDefaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\n  async_id_fields[kDefaultTriggerAsyncId] = triggerAsyncId;\n\n  try {\n    return block.apply(null\x2C args);\n  } finally {\n    async_id_fields[kDefaultTriggerAsyncId] = oldDefaultTriggerAsyncId;\n  }\n}\n\nfunction hasHooks(key) {\n  return async_hook_fields[key] > 0;\n}\n\nfunction enabledHooksExist() {\n  return hasHooks(kCheck);\n}\n\nfunction initHooksExist() {\n  return hasHooks(kInit);\n}\n\nfunction afterHooksExist() {\n  return hasHooks(kAfter);\n}\n\nfunction destroyHooksExist() {\n  return hasHooks(kDestroy);\n}\n\nfunction promiseResolveHooksExist() {\n  return hasHooks(kPromiseResolve);\n}\n\n\nfunction emitInitScript(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\n  // Short circuit all checks for the common case. Which is that no hooks have\n  // been set. Do this to remove performance impact for embedders (and core).\n  if (!hasHooks(kInit))\n    return;\n\n  if (triggerAsyncId === null) {\n    triggerAsyncId = getDefaultTriggerAsyncId();\n  }\n\n  emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource);\n}\n\n\nfunction emitBeforeScript(asyncId\x2C triggerAsyncId\x2C resource) {\n  pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource);\n\n  if (hasHooks(kBefore))\n    emitBeforeNative(asyncId);\n}\n\n\nfunction emitAfterScript(asyncId) {\n  if (hasHooks(kAfter))\n    emitAfterNative(asyncId);\n\n  popAsyncContext(asyncId);\n}\n\n\nfunction emitDestroyScript(asyncId) {\n  // Return early if there are no destroy callbacks\x2C or invalid asyncId.\n  if (!hasHooks(kDestroy) || asyncId <= 0)\n    return;\n  async_wrap.queueDestroyAsyncId(asyncId);\n}\n\n\nfunction hasAsyncIdStack() {\n  return hasHooks(kStackLength);\n}\n\n\n// This is the equivalent of the native push_async_ids() call.\nfunction pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource) {\n  const offset = async_hook_fields[kStackLength];\n  execution_async_resources[offset] = resource;\n  if (offset * 2 >= async_wrap.async_ids_stack.length)\n    return pushAsyncContext_(asyncId\x2C triggerAsyncId);\n  async_wrap.async_ids_stack[offset * 2] = async_id_fields[kExecutionAsyncId];\n  async_wrap.async_ids_stack[offset * 2 + 1] = async_id_fields[kTriggerAsyncId];\n  async_hook_fields[kStackLength]++;\n  async_id_fields[kExecutionAsyncId] = asyncId;\n  async_id_fields[kTriggerAsyncId] = triggerAsyncId;\n}\n\n\n// This is the equivalent of the native pop_async_ids() call.\nfunction popAsyncContext(asyncId) {\n  const stackLength = async_hook_fields[kStackLength];\n  if (stackLength === 0) return false;\n\n  if (enabledHooksExist() && async_id_fields[kExecutionAsyncId] !== asyncId) {\n    // Do the same thing as the native code (i.e. crash hard).\n    return popAsyncContext_(asyncId);\n  }\n\n  const offset = stackLength - 1;\n  async_id_fields[kExecutionAsyncId] = async_wrap.async_ids_stack[2 * offset];\n  async_id_fields[kTriggerAsyncId] = async_wrap.async_ids_stack[2 * offset + 1];\n  execution_async_resources.pop();\n  async_hook_fields[kStackLength] = offset;\n  return offset > 0;\n}\n\n\nfunction executionAsyncId() {\n  return async_id_fields[kExecutionAsyncId];\n}\n\nfunction triggerAsyncId() {\n  return async_id_fields[kTriggerAsyncId];\n}\n\n\nmodule.exports = {\n  executionAsyncId\x2C\n  triggerAsyncId\x2C\n  // Private API\n  getHookArrays\x2C\n  symbols: {\n    async_id_symbol\x2C trigger_async_id_symbol\x2C\n    init_symbol\x2C before_symbol\x2C after_symbol\x2C destroy_symbol\x2C\n    promise_resolve_symbol\x2C owner_symbol\n  }\x2C\n  constants: {\n    kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\n  }\x2C\n  enableHooks\x2C\n  disableHooks\x2C\n  updatePromiseHookMode\x2C\n  clearDefaultTriggerAsyncId\x2C\n  clearAsyncIdStack\x2C\n  hasAsyncIdStack\x2C\n  executionAsyncResource\x2C\n  // Internal Embedder API\n  newAsyncId\x2C\n  getOrSetAsyncId\x2C\n  getDefaultTriggerAsyncId\x2C\n  defaultTriggerAsyncIdScope\x2C\n  enabledHooksExist\x2C\n  initHooksExist\x2C\n  afterHooksExist\x2C\n  destroyHooksExist\x2C\n  emitInit: emitInitScript\x2C\n  emitBefore: emitBeforeScript\x2C\n  emitAfter: emitAfterScript\x2C\n  emitDestroy: emitDestroyScript\x2C\n  pushAsyncContext\x2C\n  popAsyncContext\x2C\n  registerDestroyHook\x2C\n  useDomainTrampoline\x2C\n  nativeHooks: {\n    init: emitInitNative\x2C\n    before: emitBeforeNative\x2C\n    after: emitAfterNative\x2C\n    destroy: emitDestroyNative\x2C\n    promise_resolve: emitPromiseResolveNative\n  }\x2C\n  asyncWrap: {\n    Providers: async_wrap.Providers\x2C\n  }\n};\n
code-source-info,0x3685f0221c48,19,14473,14524,C0O14480C7O14505C16O14520C22O14522,,
code-creation,LazyCompile,10,121375,0x3685f0223120,35,getDefaultTriggerAsyncId node:internal/async_hooks:432:34,0x3d9b801b5c98,~
code-source-info,0x3685f0223120,19,14932,15189,C0O14969C7O14985C9O14984C13O15078C14O15104C19O15113C26O15136C28O15135C31O15155C32O15158C34O15187,,
code-creation,LazyCompile,10,121416,0x3685f0223230,13,initHooksExist node:internal/async_hooks:478:24,0x3d9b801b5e28,~
code-source-info,0x3685f0223230,19,16153,16185,C0O16160C5O16176C8O16167C12O16183,,
code-creation,LazyCompile,10,121416,0x3685f0223318,16,hasHooks node:internal/async_hooks:470:18,0x3d9b801b5d88,~
code-source-info,0x3685f0223318,19,16021,16067,C0O16031C7O16055C12O16061C15O16065,,
code-creation,LazyCompile,10,121416,0x3685f0223420,59,push node:internal/fixed_queue:99:7,0x111f698d4c28,~
code-source-info,0x3685f0223420,40,3685,3945,C0O3707C5O3712C10O3712C16O3871C23O3887C26O3883C32O3881C38O3864C42O3925C47O3930C52O3930C58O3944,,
code-creation,LazyCompile,10,121458,0x3685f0223560,24,isFull node:internal/fixed_queue:71:9,0x111f698d4978,~
code-source-info,0x3685f0223560,40,3139,3200,C0O3162C4O3166C10O3173C12O3171C16O3189C20O3180C23O3196,,
code-creation,LazyCompile,10,121458,0x3685f0223668,37,push node:internal/fixed_queue:75:7,0x111f698d49c8,~
code-source-info,0x3685f0223668,40,3208,3291,C0O3226C5O3236C12O3241C16O3270C20O3274C26O3281C28O3279C31O3262C36O3290,,
code-creation,LazyCompile,10,121500,0x3685f0223778,23,fromJson file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/message-type.js:35:17,0x3685f020f198,~
code-source-info,0x3685f0223778,508,1428,1520,C0O1463C5O1470C11O1481C16O1481C22O1510,,
code-creation,LazyCompile,10,121500,0x3685f0223878,39,type file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/message-type.js:22:31,0x3685f020f0f8,~
code-source-info,0x3685f0223878,508,1005,1116,C0O1026C3O1034C8O1039C13O1039C18O1069C21O1077C26O1082C31O1082C38O1115,,
code-creation,LazyCompile,10,121541,0x3685f0223a70,273,initFields file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/proto3.js:29:15,0xf2c007961e8,~
code-source-info,0x3685f0223a70,466,1508,2474,C0O1555C5O1555C10O1564C15O1571C20O1572C49O1538C77O1538C80O1609C86O1632C88O1688C93O1703C96O1734C102O1764C104O1770C108O1792C110O1843C152O1903C158O1919C164O1909C168O1952C170O2008C171O2016C175O2041C177O2098C178O2104C182O2130C184O2198C190O2224C196O2198C200O2196C204O2311C206O2438C208O1527C272O2473,,
code-creation,LazyCompile,10,121625,0x3685f0223cd8,20,getType file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/message.js:113:12,0xf2c0079dd08,~
code-source-info,0x3685f0223cd8,473,4047,4345,C0O4292C4O4306C9O4306C15O4326C19O4339,,
tick,0x1a4d3d9dc,121625,0,0x0,3,0x0,0x3685f0223885,0x3685f022377d,0x117768a1e011,0x1054080d0,0x104a6d958,0x117768a12ed4,0x105405ef4
code-creation,LazyCompile,10,121666,0x3685f0223e48,197,byMember file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/field-list.js:53:13,0x13959b2a0a8,~
code-source-info,0x3685f0223e48,498,1633,2110,C0O1656C6O1679C8O1692C12O1725C17O1750C19O1786C24O1786C53O1776C81O1776C84O1818C90O1853C97O1859C102O1898C107O1931C112O1931C119O2025C124O2025C129O1765C192O2096C196O2104,,
code-creation,LazyCompile,10,121666,0x3685f0224038,30,list file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/field-list.js:39:9,0x13959b2a008,~
code-source-info,0x3685f0224038,498,1284,1409,C0O1307C6O1342C11O1359C16O1342C21O1335C25O1399C29O1403,,
code-creation,LazyCompile,10,121750,0x3685f0224218,429,normalizeFieldInfosProto3 file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/proto3.js:59:35,0xf2c00796148,~
code-source-info,0x3685f0224218,466,2691,4244,C0O2740C3O2752C5O2779C11O2821C19O2844C43O2770C73O2770C76O2876C79O2905C86O2926C92O2938C97O2944C100O2905C105O2903C109O2993C130O3036C137O3056C143O3036C147O2979C151O3096C170O3082C174O3579C192O3627C200O3632C205O3668C213O3673C218O3714C224O3719C231O3730C235O3716C241O3765C247O3770C254O3781C258O3767C262O3553C266O3920C272O3983C280O4009C286O4023C292O4029C297O4047C301O4059C309O4064C314O4093C323O4097C329O4154C331O4162C335O4181C341O4181C346O4214C352O4214C357O2759C426O4233C428O4242,,
code-creation,LazyCompile,10,121791,0x3685f0224700,31, file:///Users/sayers/Projects/protobuf-es/packages/protobuf-performance/gen/protobuf-es/data/bench_pb.js:25:52,0xf2c00786390,~
code-source-info,0x3685f0224700,463,902,1195,C0O908C13O1107C30O1195,,
code-creation,LazyCompile,10,121791,0x3685f0224848,48,localFieldName file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/names.js:66:31,0x13959b2b870,~
code-source-info,0x3685f0224848,500,2395,2719,C0O2433C3O2433C8O2464C12O2572C14O2584C15O2595C22O2623C29O2633C34O2658C39O2676C41O2688C45O2705C47O2717,,
code-creation,LazyCompile,10,121833,0x3685f0224a70,177,protoCamelCase file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/names.js:119:24,0x13959b2b9b0,~
code-source-info,0x3685f0224a70,500,4089,4871,C0O4121C2O4142C5O4163C7O4180C11O4168C16O4221C21O4221C27O4240C109O4291C111O4323C113O4568C118O4568C123O4593C125O4626C127O4670C131O4705C133O4748C138O4748C143O4799C148O4799C153O4824C155O4189C160O4150C163O4860C171O4860C176O4869,,
code-creation,Function,11,121916,0x109d10960,1512,protoCamelCase file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/names.js:119:24,0x13959b2b9b0,^
code-source-info,0x109d10960,500,4089,4871,,,
code-creation,Function,11,121916,0x109d10fc0,304, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/enum.js:32:68,0x3685f020d558,^
code-source-info,0x109d10fc0,507,1525,1618,,,
code-creation,Function,11,121916,0x109d11160,128,InternalFieldList file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/field-list.js:15:16,0x13959b29f18,^
code-source-info,0x109d11160,498,653,751,,,
code-creation,Function,11,121958,0x109d11240,224,newFieldList file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/proto2.js:24:165,0xf2c00798990,^
code-source-info,0x109d11240,469,1303,1392,,,
code-creation,Function,11,122000,0x109d11380,2168,makeEnumType file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/enum.js:41:29,0x13959b31520,^
code-source-info,0x109d11380,507,1713,2542,,,
code-creation,Function,11,122000,0x109d11c60,224,newFieldList file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/proto3.js:26:165,0xf2c00796198,^
code-source-info,0x109d11c60,466,1403,1492,,,
code-creation,Function,11,122041,0x109d11da0,464,normalizeEnumValue file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/enum.js:82:28,0x13959b315f0,^
code-source-info,0x109d11da0,507,2980,3130,,,
code-creation,Function,11,122041,0x109d11fe0,488,setEnumType file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/enum.js:30:28,0x13959b314d0,^
code-source-info,0x109d11fe0,507,1309,1628,,,
code-creation,Function,11,122041,0x109d12240,152,get node:net:1907:6,0x1e372ce38130,^
code-source-info,0x109d12240,441,51635,51663,,,
code-creation,LazyCompile,10,122125,0x3685f0225098,189,scalarDefaultValue file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/scalars.js:60:35,0x13959b29598,~
code-source-info,0x3685f0225098,497,2210,2892,C0O2252C6O2263C18O2308C24O2319C33O2340C39O2351C48O2373C54O2384C63O2404C69O2415C78O2438C84O2449C93O2506C99O2517C108O2538C114O2549C123O2593C129O2604C138O2662C144O2673C155O2281C156O2294C157O2469C163O2487C167O2492C168O2568C169O2579C170O2623C178O2630C183O2648C184O2693C186O2703C187O2875C188O2884,,
code-creation,LazyCompile,10,122166,0x3685f0225580,832,initPartial file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/util-common.js:22:20,0x3685f020c380,~
code-source-info,0x3685f0225580,495,1097,4200,C0O1128C4O1172C5O1179C6O1226C12O1226C17O1275C23O1282C29O1282C63O1260C94O1260C97O1337C102O1352C105O1364C108O1388C110O1393C115O1442C117O1501C122O1501C135O1486C175O1578C177O1579C182O1591C187O1621C191O1673C195O1760C203O1770C205O1760C211O1809C213O1810C218O1822C223O1853C231O1900C233O1912C241O1917C248O1963C252O1978C254O1990C258O1967C263O2024C267O2046C275O2048C279O2030C288O2028C295O2106C303O2127C311O2138C319O2117C323O2169C325O2268C327O2284C330O2281C334O2321C336O2399C342O2401C349O2384C375O2525C380O2532C388O2540C395O2554C400O2532C406O2600C408O2710C414O2712C419O2770C424O2770C432O2776C437O2770C472O2758C503O2758C506O2838C508O2839C515O2850C520O2891C524O2908C533O3183C539O3189C546O3285C548O3286C555O3301C559O2747C637O3374C639O3431C641O3516C645O3509C647O3554C653O3594C655O3610C660O3622C672O3622C677O3607C683O3730C685O3735C690O3804C692O3805C696O3846C702O3853C708O3901C710O3914C716O4018C718O4048C720O4037C737O4063C743O4059C748O4031C752O4152C756O1249C831O4199,,
code-creation,LazyCompile,10,122250,0x3685f0225b38,59,fromJson file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/message.js:51:13,0xf2c0079db28,~
code-source-info,0x3685f0225b38,473,1709,1918,C0O1758C5O1758C10O1783C15O1791C20O1810C25O1810C31O1851C51O1851C56O1900C58O1912,,
code-creation,LazyCompile,10,122250,0x3685f0225c78,49,makeReadOptions file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/json-format-common.js:31:25,0x13959b347e8,~
code-source-info,0x3685f0225c78,510,1446,1560,C0O1462C4O1479C8O1486C13O1493C17O1500C26O1511C29O1500C36O1486C46O1541C48O1558,,
code-creation,LazyCompile,10,122416,0x3685f0226410,2972,readMessage file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/json-format-common.js:42:20,0x3685f020b738,~
code-source-info,0x3685f
code-creation,LazyCompile,10,122500,0x3685f02274a8,178,findJsonName file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/field-list.js:19:17,0x13959b29f68,~
code-source-info,0x3685f02274a8,498,768,1030,C0O799C6O834C8O871C13O871C42O861C70O861C73O901C78O917C85O923C91O911C98O850C161O954C163O969C167O1004C174O1013C177O1024,,
code-creation,LazyCompile,10,122583,0x3685f02278c8,801,readScalar file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/json-format-common.js:264:20,0x13959b348d8,~
code-source-info,0x3685f02278c
code-creation,LazyCompile,10,122666,0x3685f0227ec0,82,assertUInt32 file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/assert.js:36:29,0x13959b30138,~
code-source-info,0x3685f0227ec0,505,1563,1889,C0O1575C6O1612C16O1648C22O1618C27O1612C28O1667C32O1679C37O1679C46O1703C48O1701C54O1721C59O1734C68O1770C74O1740C79O1734C81O1888,,
code-creation,LazyCompile,10,122708,0x3685f0228180,54,proto3.makeMessageType.localName file:///Users/sayers/Projects/protobuf-es/packages/protobuf-performance/gen/protobuf-es/data/bench_pb.js:48:3,0xf2c007863e0,~
code-source-info,0x3685f0228180,463,1550,1771,C0O1556C13O1686C36O1759C53O1771,,
code-creation,LazyCompile,10,122750,0x3685f0228358,85,assertInt32 file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/assert.js:27:28,0x13959b300e8,~
code-source-info,0x3685f0228358,505,1143,1474,C0O1155C6O1192C16O1227C22O1198C27O1192C28O1246C32O1258C37O1258C46O1282C48O1280C55O1301C57O1299C62O1320C71O1355C77O1326C82O1320C84O1473,,
code-creation,LazyCompile,10,122750,0x3685f0228620,48,proto3.makeMessageType.localName file:///Users/sayers/Projects/protobuf-es/packages/protobuf-performance/gen/protobuf-es/data/bench_pb.js:61:3,0xf2c007864b0,~
code-source-info,0x3685f0228620,463,1954,2199,C0O1960C13O2085C19O2092C24O2104C30O2092C47O2199,,
code-creation,LazyCompile,10,122791,0x3685f0228838,62,parse file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/proto-int64.js:32:18,0x3685f020a350,~
code-source-info,0x3685f0228838,468,1527,1780,C0O1564C10O1591C14O1599C19O1630C21O1639C23O1637C30O1651C32O1649C37O1678C46O1712C53O1684C58O1678C59O1756C61O1766,,
code-creation,LazyCompile,10,122833,0x3685f02289e0,139,readEnum file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/json-format-common.js:375:18,0x13959b34928,~
code-source-info,0x3685f02289e0,510,17312,18025,C0O17352C4O17444C5O17453C12O17543C31O17601C35O17612C40O17612C47O17647C49O17659C50O17686C52O17747C57O17747C63O17775C69O17788C71O17827C79O17852C88O17880C90O17886C94O17889C95O17916C97O17933C104O17976C122O17999C133O17939C138O17933,,
tick,0x104e725d0,122875,0,0x0,3,0x0,0x3685f0226e5f,0x3685f0225b6b,0x3685f0223788,0x3685f0226dec,0x3685f0225b6b,0x3685f0223788,0x3685f0226dec,0x3685f0225b6b,0x3685f0223788,0x117768a1e011,0x1054080d0,0x104a6d958,0x117768a12ed4,0x105405ef4
code-creation,LazyCompile,10,122916,0x3685f0228bd0,87,assertFloat32 file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/assert.js:45:30,0x13959b30188,~
code-source-info,0x3685f0228bd0,505,1967,2327,C0O1979C6O2016C16O2053C22O2022C27O2016C28O2072C32O2084C37O2084C44O2107C45O2114C46O2119C48O2129C50O2127C57O2150C59O2148C64O2171C73O2208C79O2177C84O2171C86O2326,,
code-creation,LazyCompile,10,122916,0x3685f0228d58,73,toBinary file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/message.js:72:13,0xf2c0079dbc8,~
code-source-info,0x3685f0228d58,473,2389,2611,C0O2427C5O2427C10O2449C15O2457C20O2472C25O2472C31O2512C36O2512C41O2541C58O2541C63O2596C68O2596C72O2605,,
code-creation,LazyCompile,10,122958,0x3685f0228ea8,49,makeWriteOptions file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/binary-format-common.js:35:26,0x13959b330e8,~
code-source-info,0x3685f0228ea8,509,1786,1894,C0O1802C4O1819C8O1826C13O1833C17O1840C26O1851C29O1840C36O1826C46O1878C48O1892,,
code-creation,LazyCompile,10,122958,0x3685f0228fc0,12,writerFactory file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/binary-format-common.js:30:20,0x13959b33268,~
code-source-info,0x3685f0228fc0,509,1601,1625,C0O1607C6O1607C11O1625,,
code-creation,LazyCompile,10,123000,0x3685f02290c8,48,BinaryWriter file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/binary-encoding.js:62:16,0xf2c007a4098,~
code-source-info,0x3685f02290c8,477,2282,2543,C0O2363C2O2374C6O2388C21O2474C25O2470C30O2405C34O2497C36O2509C40O2523C42O2532C47O2542,,
code-creation,LazyCompile,10,123083,0x3685f0229410,1172,writeMessage file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/binary-format-proto3.js:18:85,0x3685f020bce8,~
code-source-info,0x3685f
code-creation,LazyCompile,10,123125,0x3685f0229b38,50,byNumber file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/field-list.js:45:13,0x13959b2a058,~
code-source-info,0x3685f0229b38,498,1422,1620,C0O1445C6O1494C11O1494C16O1517C21O1518C26O1543C36O1544C41O1487C45O1603C49O1614,,
code-creation,LazyCompile,10,123166,0x3685f0229c90,13, file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/field-list.js:49:23,0x3685f0229a78,~
code-source-info,0x3685f0229c90,498,1549,1570,C0O1561C5O1568C9O1564C12O1570,,
code-creation,LazyCompile,10,123166,0x3685f0229dd0,238,writeScalar file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/binary-format-common.js:236:28,0x13959b32ff8,~
code-source-info,0x3685f0229dd0,509,9817,10066,C0O9921C6O9921C12O9921C34O9881C71O9891C108O9899C205O9954C211O9981C213O10020C218O10020C227O10042C231O10050C237O10065,,
code-creation,LazyCompile,10,123208,0x3685f022a0a8,447,scalarTypeInfo file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/scalars.js:93:31,0x13959b295e8,~
code-source-info,0x3685f022a0a8,497,3215,5055,C0O3255C4O3295C10O3304C15O3341C16O3347C20O3519C26O3530C38O3682C44O3693C53O3781C59O3792C68O3871C74O3882C83O3960C89O3971C98O4070C104O4081C113O4181C119O4192C128O4332C134O4343C143O4498C149O4509C158O4589C164O4600C173O4681C179O4692C188O4833C194O4844C205O3550C209O3593C215O3613C221O3633C226O3662C228O3711C229O3738C233O3761C235O3812C241O3832C246O3851C248O3901C254O3921C259O3940C261O3990C266O4032C270O4050C272O4101C277O4143C281O4161C283O4213C288O4255C292O4273C298O4293C303O4312C305O4362C309O4405C315O4429C321O4449C326O4478C328O4530C334O4550C339O4569C341O4622C347O4642C352O4661C354O4714C359O4756C363O4774C369O4794C374O4813C376O4864C381O4906C385O4924C387O4956C395O4966C399O4973C404O4973C409O4992C418O5000C427O5010C436O5018C440O5033C446O5053,,
code-creation,LazyCompile,10,123250,0x3685f022a420,26,tag file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/binary-encoding.js:124:8,0xf2c007a41d8,~
code-source-info,0x3685f022a420,477,4171,4253,C0O4209C7O4226C13O4232C16O4240C20O4209C25O4247,,
code-creation,LazyCompile,10,123291,0x3685f022a530,72,uint32 file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/binary-encoding.js:141:11,0xf2c007a4278,~
code-source-info,0x3685f022a530,477,4590,4864,C0O4608C6O4608C10O4705C12O4705C17O4732C22O4736C29O4748C32O4756C39O4736C44O4777C46O4791C51O4692C54O4821C59O4825C64O4825C69O4846C71O4858,,
code-creation,LazyCompile,10,123291,0x3685f022a698,42,string file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/binary-encoding.js:176:11,0xf2c007a43b8,~
code-source-info,0x3685f022a698,477,5502,5675,C0O5537C5O5549C10O5549C16O5577C21O5590C26O5577C31O5658C36O5658C41O5669,,
code-creation,LazyCompile,10,123333,0x3685f022a7b8,36,encode node:internal/encoding:335:9,0x111f698c94f0,~
code-source-info,0x3685f022a7b8,33,9073,9159,C11O9092C16O9092C20O9119C29O9146C31O9126C35O9155,,
code-creation,LazyCompile,10,123333,0x3685f022a8c8,37,validateEncoder node:internal/encoding:63:25,0x111f698c91d8,~
code-source-info,0x3685f022a8c8,33,1222,1323,C0O1232C7O1255C9O1254C14O1265C19O1279C29O1285C34O1279C36O1322,,
code-creation,LazyCompile,10,123375,0x3685f022a9f0,67,raw file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/binary-encoding.js:130:8,0xf2c007a4228,~
code-source-info,0x3685f022a9f0,477,4312,4505,C0O4339C5O4343C11O4370C16O4377C21O4386C25O4402C32O4382C38O4377C43O4421C45O4430C49O4459C54O4466C59O4466C64O4487C66O4499,,
code-creation,LazyCompile,10,123416,0x3685f022ab60,62,writeMessageField file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/binary-format-common.js:228:34,0x13959b32fa8,~
code-source-info,0x3685f022ab60,509,9547,9789,C0O9593C4O9644C10O9644C16O9696C21O9709C27O9718C32O9696C39O9747C44O9762C49O9762C55O9748C61O9788,,
code-creation,LazyCompile,10,123416,0x3685f022aca8,35,wrapField file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/field-wrapper.js:20:26,0x13959b30938,~
code-source-info,0x3685f022aca8,506,831,981,C0O872C5O861C10O889C16O913C18O926C19O949C24O962C29O962C34O979,,
code-creation,LazyCompile,10,123458,0x3685f022ae30,29,int32 file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/binary-encoding.js:154:10,0xf2c007a42c8,~
code-source-info,0x3685f022ae30,477,4944,5048,C0O4962C6O4962C10O4990C16O5016C21O4990C26O5030C28O5042,,
code-creation,LazyCompile,10,123500,0x3685f022af30,118,varint32write file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/google/varint.js:256:30,0x13959b2d118,~
code-source-info,0x3685f022af30,501,10070,10465,C0O10091C1O10101C6O10166C8O10166C13O10194C20O10206C23O10214C30O10194C35O10235C37O10249C42O10153C45O10280C50O10280C57O10331C59O10336C61O10336C66O10366C73O10378C76O10385C83O10366C88O10405C90O10419C95O10342C100O10318C103O10449C111O10449C117O10464,,
code-creation,LazyCompile,10,123541,0x3685f022b0e8,46,int64 file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/binary-encoding.js:247:10,0xf2c007a4638,~
code-source-info,0x3685f022b0e8,477,7752,7875,C0O7779C6O7790C11O7790C17O7810C23O7827C28O7834C33O7843C38O7810C43O7857C45O7869,,
code-creation,LazyCompile,10,123541,0x3685f022b268,93,enc file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/proto-int64.js:46:16,0x3685f020a3f0,~
code-source-info,0x3685f022b268,468,2073,2292,C0O2099C7O2102C14O2122C19O2122C27O2102C32O2159C41O2192C44O2195C53O2195C67O2238C70O2241C80O2241C92O2278,,
code-creation,LazyCompile,10,123583,0x3685f022b3c0,245,varint64write file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/google/varint.js:82:30,0x13959b2cfb0,~
code-source-info,0x3685f022b3c0,501,3471,4290,C0O3506C2O3511C4O3511C9O3552C11O3555C15O3594C20O3600C26O3611C31O3639C35O3656C45O3672C52O3694C57O3694C62O3714C66O3742C67O3749C68O3519C70O3523C74O3493C77O3788C79O3793C82O3801C88O3816C91O3824C94O3809C98O3855C100O3860C105O3865C110O3882C120O3888C124O3912C134O3932C141O3882C146O3945C150O3973C151O3980C152O4004C155O4009C157O4009C162O4050C164O4053C168O4092C173O4098C178O4126C182O4143C192O4159C199O4181C204O4181C209O4201C213O4229C214O4236C215O4017C217O4021C221O3991C224O4263C231O4272C234O4280C238O4263C244O4289,,
code-creation,LazyCompile,10,123625,0x3685f022b628,48,sint32 file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/binary-encoding.js:219:11,0xf2c007a4548,~
code-source-info,0x3685f022b628,477,6832,7015,C0O6850C6O6850C10O6903C12O6919C18O6934C21O6925C24O6942C29O6957C35O6983C40O6957C45O6997C47O7009,,
code-creation,LazyCompile,10,123666,0x3685f022b7b8,174,writeUnknownFields file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/binary-format-common.js:49:27,0x3685f020bf88,~
code-source-info,0x3685f022b7b8,509,2288,2546,C0O2330C3O2361C5O2363C7O2362C11O2397C13O2438C37O2433C65O2433C68O2470C73O2476C78O2482C84O2470C91O2491C96O2498C101O2492C109O2422C173O2545,,
code-creation,LazyCompile,10,123666,0x3685f022b998,171,finish file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/binary-encoding.js:74:11,0xf2c007a40e8,~
code-source-info,0x3685f022b998,477,2625,3093,C0O2643C5O2650C10O2659C14O2675C21O2655C27O2650C32O2720C34O2744C36O2756C41O2763C45O2749C50O2800C57O2806C61O2810C72O2772C77O2731C80O2838C86O2838C92O2880C94O2904C96O2916C101O2923C105O2909C110O2956C115O2965C122O2971C126O2956C132O3012C139O3018C143O3022C154O2932C159O2891C162O3048C164O3060C168O3074C170O3087,,
code-creation,LazyCompile,10,123708,0x3685f022bb98,26,bytes file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/binary-encoding.js:169:10,0xf2c007a4368,~
code-source-info,0x3685f022bb98,477,5276,5397,C0O5299C5O5312C10O5299C15O5380C20O5380C25O5391,,
code-creation,LazyCompile,10,123750,0x3685f022bd28,70,float file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/binary-encoding.js:184:10,0xf2c007a4408,~
code-source-info,0x3685f022bd28,477,5761,5940,C0O5779C6O5779C10O5821C19O5821C25O5848C29O5867C36O5848C42O5875C54O5875C59O5923C64O5923C69O5934,,
code-creation,Function,11,123833,0x109d12340,2032,scalarDefaultValue file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/scalars.js:60:35,0x13959b29598,^
code-source-info,0x109d12340,497,2210,2892,,,
code-creation,Function,11,123833,0x109d12ba0,464,localFieldName file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/names.js:66:31,0x13959b2b870,^
code-source-info,0x109d12ba0,500,2395,2719,,,
code-creation,Function,11,123833,0x109d12de0,184,getType file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/message.js:113:12,0xf2c0079dd08,^
code-source-info,0x109d12de0,473,4047,4345,,,
code-creation,Function,11,123875,0x109d12f00,184,tag file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/binary-encoding.js:124:8,0xf2c007a41d8,^
code-source-info,0x109d12f00,477,4171,4253,,,
code-creation,Function,11,123875,0x109d13020,1296,finish file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/binary-encoding.js:74:11,0xf2c007a40e8,^
code-source-info,0x109d13020,477,2625,3093,,,
code-creation,Function,11,123916,0x109d135a0,2384,initFields file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/proto3.js:29:15,0xf2c007961e8,^
code-source-info,0x109d135a0,466,1508,2474,,,
code-creation,Function,11,124041,0x109d13f60,4328,scalarTypeInfo file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/scalars.js:93:31,0x13959b295e8,^
code-source-info,0x109d13f60,497,3215,5055,,,
code-creation,Function,11,124083,0x109d150c0,744,assertUInt32 file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/assert.js:36:29,0x13959b30138,^
code-source-info,0x109d150c0,505,1563,1889,,,
code-creation,Function,11,124083,0x109d15420,616,uint32 file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/binary-encoding.js:141:11,0xf2c007a4278,^
code-source-info,0x109d15420,477,4590,4864,,,
code-creation,Function,11,124125,0x109d15700,2040,writeScalar file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/binary-format-common.js:236:28,0x13959b32ff8,^
code-source-info,0x109d15700,509,9817,10066,,,
code-creation,Function,11,124125,0x109d15f60,280,type file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/message-type.js:22:31,0x3685f020f0f8,^
code-source-info,0x109d15f60,508,1005,1116,,,
tick,0x104c46bb4,124166,0,0x0,0,0x0,0x3685f022a266,0x3685f0229dd6,0x3685f02295fa,0x3685f0228d92,0x3685f022ab91,0x3685f02296d1,0x3685f0228d92,0x117768a1e01c,0x1054080d0,0x104a6d958,0x117768a12ed4,0x105405ef4
code-creation,Function,11,124166,0x109d160e0,384,fromJson file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/message.js:51:13,0xf2c0079db28,^
code-source-info,0x109d160e0,473,1709,1918,,,
code-creation,Function,11,124166,0x109d162c0,248,fromJson file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/message-type.js:35:17,0x3685f020f198,^
code-source-info,0x109d162c0,508,1428,1520,,,
code-creation,Function,11,124208,0x109d16420,504,raw file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/binary-encoding.js:130:8,0xf2c007a4228,^
code-source-info,0x109d16420,477,4312,4505,,,
code-creation,Function,11,124291,0x109d16680,560,writeMessageField file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/binary-format-common.js:228:34,0x13959b32fa8,^
code-source-info,0x109d16680,509,9547,9789,,,
code-creation,Function,11,124333,0x109d16920,176,TextEncoder node:internal/encoding:326:14,0x111f698c9318,^
code-source-info,0x109d16920,33,8957,8992,,,
code-creation,Function,11,124333,0x109d16a40,416,BinaryWriter file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/binary-encoding.js:62:16,0xf2c007a4098,^
code-source-info,0x109d16a40,477,2282,2543,,,
code-creation,Function,11,124333,0x109d16c40,184,writerFactory file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/binary-format-common.js:30:20,0x13959b33268,^
code-source-info,0x109d16c40,509,1601,1625,,,
code-creation,Function,11,124375,0x109d16d60,480,toBinary file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/message.js:72:13,0xf2c0079dbc8,^
code-source-info,0x109d16d60,473,2389,2611,,,
code-creation,Function,11,124375,0x109d16fa0,496,makeReadOptions file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/json-format-common.js:31:25,0x13959b347e8,^
code-source-info,0x109d16fa0,510,1446,1560,,,
code-creation,Function,11,124375,0x109d17200,808,assertInt32 file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/assert.js:27:28,0x13959b300e8,^
code-source-info,0x109d17200,505,1143,1474,,,
code-creation,Function,11,124416,0x109d175a0,496,makeWriteOptions file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/binary-format-common.js:35:26,0x13959b330e8,^
code-source-info,0x109d175a0,509,1786,1894,,,
code-creation,Function,11,124416,0x109d17800,1712,varint64write file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/google/varint.js:82:30,0x13959b2cfb0,^
code-source-info,0x109d17800,501,3471,4290,,,
code-creation,Function,11,124583,0x109d17f20,10048,writeMessage file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/binary-format-proto3.js:18:85,0x3685f020bce8,^
code-source-info,0x109d17f20,496,1175,3717,,,
code-creation,Function,11,124583,0x109d1a6c0,1520,findJsonName file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/field-list.js:19:17,0x13959b29f68,^
code-source-info,0x109d1a6c0,498,768,1030,,,
code-creation,Function,11,124625,0x109d1ad20,336,int32 file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/binary-encoding.js:154:10,0xf2c007a42c8,^
code-source-info,0x109d1ad20,477,4944,5048,,,
code-creation,Function,11,124625,0x109d1aee0,920,varint32write file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/google/varint.js:256:30,0x13959b2d118,^
code-source-info,0x109d1aee0,501,10070,10465,,,
code-creation,Function,11,124625,0x109d1b2e0,216,bytes file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/binary-encoding.js:169:10,0xf2c007a4368,^
code-source-info,0x109d1b2e0,477,5276,5397,,,
code-creation,Function,11,124750,0x109d1b420,8144,readScalar file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/json-format-common.js:264:20,0x13959b348d8,^
code-source-info,0x109d1b420,510,13033,17294,,,
code-creation,Function,11,125000,0x109d1d460,21328,readMessage file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/json-format-common.js:42:20,0x3685f020b738,^
code-source-info,0x109d1d460,510,1904,10842,,,
code-creation,Function,11,125000,0x109d22820,632,parse file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/proto-int64.js:32:18,0x3685f020a350,^
code-source-info,0x109d22820,468,1527,1780,,,
new,MemoryChunk,0x2c0236b80000,262144
new,MemoryChunk,0x1ac1e9ec0000,262144
tick,0x1a4e3e270,125375,0,0x0,1
code-creation,Function,11,125708,0x109d22b00,1744,byMember file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/field-list.js:53:13,0x13959b2a0a8,^
code-source-info,0x109d22b00,498,1633,2110,,,
code-creation,Function,11,125708,0x109d23240,832,assertFloat32 file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/assert.js:45:30,0x13959b30188,^
code-source-info,0x109d23240,505,1967,2327,,,
code-creation,Function,11,125750,0x109d235e0,312,string file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/binary-encoding.js:176:11,0xf2c007a43b8,^
code-source-info,0x109d235e0,477,5502,5675,,,
code-creation,Function,11,125750,0x109d23780,400,byNumber file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/field-list.js:45:13,0x13959b2a058,^
code-source-info,0x109d23780,498,1422,1620,,,
code-creation,Function,11,125750,0x109d23980,720,enc file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/proto-int64.js:46:16,0x3685f020a3f0,^
code-source-info,0x109d23980,468,2073,2292,,,
code-creation,Function,11,125791,0x109d23cc0,448,int64 file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/binary-encoding.js:247:10,0xf2c007a4638,^
code-source-info,0x109d23cc0,477,7752,7875,,,
code-creation,Function,11,125791,0x109d23ee0,416,sint32 file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/binary-encoding.js:219:11,0xf2c007a4548,^
code-source-info,0x109d23ee0,477,6832,7015,,,
code-creation,Function,11,125833,0x109d240e0,528,float file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/binary-encoding.js:184:10,0xf2c007a4408,^
code-source-info,0x109d240e0,477,5761,5940,,,
code-creation,Function,11,125833,0x109d24360,320,encode node:internal/encoding:335:9,0x111f698c94f0,^
code-source-info,0x109d24360,33,9073,9159,,,
code-creation,Function,11,125833,0x109d24500,376,wrapField file:///Users/sayers/Projects/protobuf-es/packages/protobuf/dist/esm/private/field-wrapper.js:20:26,0x13959b30938,^
code-source-info,0x109d24500,506,831,981,,,
code-creation,Function,11,125875,0x109d246e0,456,validateEncoder node:internal/encoding:63:25,0x111f698c91d8,^
code-source-info,0x109d246e0,33,1222,1323,,,
tick,0x10541040c,126625,0,0x0,0,0x109d1ac38,0x109d1dfd0,0x109d16214,0x109d1637c,0x117768a1e011,0x1054080d0,0x104a6d958,0x117768a12ed4,0x105405ef4
code-creation,LazyCompile,10,126958,0x3685f0230878,15, node:internal/modules/esm/loader:525:15,0x1a3e29cbfa90,~
code-source-info,0x3685f0230878,433,15520,15557,C0O15523C5O15543C10O15543C14O15557,,
code-creation,LazyCompile,10,127000,0x3685f02309e0,307,removeListener node:events:675:28,0xa0ae21e7000,~
code-source-info,0x3685f02309e
code-creation,LazyCompile,10,127041,0x3685f0230cc0,64,stopListeningIfSignal node:internal/process/signal:43:31,0x1e27ac64af68,~
script-source,129,node:internal/process/signal,'use strict';\n\nconst {\n  FunctionPrototypeBind\x2C\n  SafeMap\x2C\n} = primordials;\n\nconst {\n  errnoException\x2C\n} = require('internal/errors');\n\nconst { signals } = internalBinding('constants').os;\n\nlet Signal;\nconst signalWraps = new SafeMap();\n\nfunction isSignal(event) {\n  return typeof event === 'string' && signals[event] !== undefined;\n}\n\n// Detect presence of a listener for the special signal types\nfunction startListeningIfSignal(type) {\n  if (isSignal(type) && !signalWraps.has(type)) {\n    if (Signal === undefined)\n      Signal = internalBinding('signal_wrap').Signal;\n    const wrap = new Signal();\n\n    wrap.unref();\n\n    wrap.onsignal = FunctionPrototypeBind(process.emit\x2C process\x2C type\x2C type);\n\n    const signum = signals[type];\n    const err = wrap.start(signum);\n    if (err) {\n      wrap.close();\n      throw errnoException(err\x2C 'uv_signal_start');\n    }\n\n    signalWraps.set(type\x2C wrap);\n  }\n}\n\nfunction stopListeningIfSignal(type) {\n  const wrap = signalWraps.get(type);\n  if (wrap !== undefined && process.listenerCount(type) === 0) {\n    wrap.close();\n    signalWraps.delete(type);\n  }\n}\n\nmodule.exports = {\n  startListeningIfSignal\x2C\n  stopListeningIfSignal\n};\n
code-source-info,0x3685f0230cc0,129,936,1101,C0O960C5O972C10O972C16O985C21O1019C26O1019C33O1039C38O1057C43O1057C47O1070C52O1082C57O1088C63O1100,,
code-creation,LazyCompile,10,127166,0x3685f0231060,318,processTicksAndRejections node:internal/process/task_queues:67:35,0x111f698cfc98,~
code-source-info,0x3685f
code-creation,LazyCompile,10,127208,0x3685f0231330,43,shift node:internal/fixed_queue:108:8,0x111f698d4c78,~
code-source-info,0x3685f0231330,40,3954,4180,C0O3981C5O4009C10O4009C15O4031C20O4031C26O4049C32O4148C36O4141C40O4164C42O4176,,
code-creation,LazyCompile,10,127208,0x3685f0231470,54,shift node:internal/fixed_queue:80:8,0x111f698d4a18,~
code-source-info,0x3685f0231470,40,3300,3510,C0O3331C5O3341C9O3335C13O3354C15O3388C16O3400C17O3410C22O3420C28O3428C32O3465C36O3472C42O3479C44O3477C47O3457C51O3490C53O3506,,
code-creation,LazyCompile,10,127250,0x3685f02315a8,42,emitBeforeScript node:internal/async_hooks:509:26,0x3d9b801b5fb8,~
code-source-info,0x3685f02315a8,19,16823,16974,C0O16863C12O16863C17O16919C22O16932C25O16923C31O16946C36O16946C41O16973,,
code-creation,LazyCompile,10,127250,0x3685f0231700,180,pushAsyncContext node:internal/async_hooks:539:26,0x3d9b801b60f8,~
code-source-info,0x3685f0231700,19,17467,18012,C0O17522C7O17540C9O17539C13O17557C20O17591C24O17605C26O17616C32O17623C35O17634C40O17650C44O17620C49O17662C54O17669C59O17712C60O17715C65O17726C72O17749C78O17756C83O17772C85O17771C88O17754C92O17794C97O17805C104O17828C107O17832C113O17839C118O17855C120O17854C123O17837C127O17875C134O17893C142O17906C146O17912C153O17928C158O17947C162O17960C169O17976C174O17993C179O18011,,
code-creation,LazyCompile,10,127291,0x3685f0231908,46,afterWriteTick node:internal/streams/writable:485:24,0x25eb221e1658,~
code-source-info,0x3685f0231908,65,15111,15227,C0O15114C5O15122C10O15129C15O15136C20O15146C21O15171C25O15181C40O15188C45O15225,,
code-creation,LazyCompile,10,127333,0x3685f0231a60,104,afterWrite node:internal/streams/writable:490:20,0x25eb221e16a8,~
code-source-info,0x3685f0231a60,65,15248,15604,C0O15304C7O15322C14O15341C20O15348C25O15367C30O15380C32O15401C33O15417C37O15437C45O15437C50O15474C60O15474C65O15485C71O15500C75O15508C78O15459C81O15531C87O15548C90O15548C94O15575C97O15575C103O15603,,
code-creation,LazyCompile,10,127333,0x3685f0231be8,35,get node:internal/streams/duplex:103:8,0x25eb221c79e0,~
code-source-info,0x3685f0231be8,57,3814,4023,C0O3834C6O3879C12O3919C13O3932C14O3959C19O3974C25O3992C30O4007C34O4017,,
code-creation,LazyCompile,10,127375,0x3685f0231cd8,2,nop node:internal/streams/writable:73:13,0x25eb221e0ce8,~
code-source-info,0x3685f0231cd8,65,2399,2404,C1O2403,,
code-creation,LazyCompile,10,127375,0x3685f0231df8,97,finishMaybe node:internal/streams/writable:718:21,0x25eb221e19a8,~
code-source-info,0x3685f0231df8,65,21012,21491,C0O21038C3O21042C9O21067C12O21067C17O21107C23O21117C28O21132C32O21152C38O21167C42O21179C45O21187C61O21187C68O21389C71O21393C77O21422C83O21437C87O21449C90O21449C96O21490,,
code-creation,LazyCompile,10,127416,0x3685f0231fd8,80,needFinish node:internal/streams/writable:653:20,0x25eb221e1890,~
code-source-info,0x3685f0231fd8,65,19414,19735,C0O19440C6O19467C13O19496C19O19527C25O19534C30O19560C37O19587C42O19596C48O19603C53O19629C60O19658C67O19686C74O19719C79O19733,,
code-creation,LazyCompile,10,127458,0x3685f0232120,13,destroyHooksExist node:internal/async_hooks:486:27,0x3d9b801b5ec8,~
code-source-info,0x3685f0232120,19,16272,16307,C0O16279C5O16295C8O16286C12O16305,,
code-creation,LazyCompile,10,127458,0x3685f0232210,32,emitAfterScript node:internal/async_hooks:517:25,0x3d9b801b6008,~
code-source-info,0x3685f0232210,19,17001,17097,C0O17015C5O17028C8O17019C14O17041C19O17041C23O17070C26O17070C31O17096,,
code-creation,LazyCompile,10,127500,0x3685f0232378,167,popAsyncContext node:internal/async_hooks:553:25,0x3d9b801b6148,~
code-source-info,0x3685f0232378,19,18101,18688,C0O18135C7O18153C9O18152C13O18170C14O18186C19O18193C20O18206C21O18210C24O18214C31O18237C36O18253C38O18252C44O18272C49O18354C54O18361C58O18387C59O18410C61O18422C65O18429C72O18445C77O18466C80O18477C87O18495C90O18492C93O18464C97O18508C104O18524C109O18543C112O18554C119O18572C122O18581C125O18569C128O18541C132O18589C137O18615C142O18615C146O18624C153O18642C158O18656C162O18668C163O18682C166O18686,,
code-creation,LazyCompile,10,127500,0x3685f0232558,13,enabledHooksExist node:internal/async_hooks:474:27,0x3d9b801b5dd8,~
code-source-info,0x3685f0232558,19,16095,16128,C0O16102C5O16118C8O16109C12O16126,,
code-creation,LazyCompile,10,127583,0x3685f0232820,627,processPromiseRejections node:internal/process/promises:220:34,0x111f698d32b8,~
script-source,39,node:internal/process/promises,'use strict';\n\nconst {\n  ArrayPrototypePush\x2C\n  ArrayPrototypeShift\x2C\n  Error\x2C\n  ObjectDefineProperty\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  SafeWeakMap\x2C\n} = primordials;\n\nconst {\n  tickInfo\x2C\n  promiseRejectEvents: {\n    kPromiseRejectWithNoHandler\x2C\n    kPromiseHandlerAddedAfterReject\x2C\n    kPromiseResolveAfterResolved\x2C\n    kPromiseRejectAfterResolved\n  }\x2C\n  setPromiseRejectCallback\n} = internalBinding('task_queue');\n\nconst { deprecate } = require('internal/util');\n\nconst {\n  noSideEffectsToString\x2C\n  triggerUncaughtException\n} = internalBinding('errors');\n\nconst {\n  pushAsyncContext\x2C\n  popAsyncContext\x2C\n  symbols: {\n    async_id_symbol: kAsyncIdSymbol\x2C\n    trigger_async_id_symbol: kTriggerAsyncIdSymbol\n  }\n} = require('internal/async_hooks');\nconst { isErrorStackTraceLimitWritable } = require('internal/errors');\n\n// *Must* match Environment::TickInfo::Fields in src/env.h.\nconst kHasRejectionToWarn = 1;\n\nconst maybeUnhandledPromises = new SafeWeakMap();\nconst pendingUnhandledRejections = [];\nconst asyncHandledRejections = [];\nlet lastPromiseId = 0;\n\n// --unhandled-rejections=none:\n// Emit 'unhandledRejection'\x2C but do not emit any warning.\nconst kIgnoreUnhandledRejections = 0;\n\n// --unhandled-rejections=warn:\n// Emit 'unhandledRejection'\x2C then emit 'UnhandledPromiseRejectionWarning'.\nconst kAlwaysWarnUnhandledRejections = 1;\n\n// --unhandled-rejections=strict:\n// Emit 'uncaughtException'. If it's not handled\x2C print the error to stderr\n// and exit the process.\n// Otherwise\x2C emit 'unhandledRejection'. If 'unhandledRejection' is not\n// handled\x2C emit 'UnhandledPromiseRejectionWarning'.\nconst kStrictUnhandledRejections = 2;\n\n// --unhandled-rejections=throw:\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\n// 'uncaughtException'. If it's not handled\x2C print the error to stderr\n// and exit the process.\nconst kThrowUnhandledRejections = 3;\n\n// --unhandled-rejections=warn-with-error-code:\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\n// 'UnhandledPromiseRejectionWarning'\x2C then set process exit code to 1.\n\nconst kWarnWithErrorCodeUnhandledRejections = 4;\n\nlet unhandledRejectionsMode;\n\nfunction setHasRejectionToWarn(value) {\n  tickInfo[kHasRejectionToWarn] = value ? 1 : 0;\n}\n\nfunction hasRejectionToWarn() {\n  return tickInfo[kHasRejectionToWarn] === 1;\n}\n\nfunction isErrorLike(o) {\n  return typeof o === 'object' &&\n         o !== null &&\n         ObjectPrototypeHasOwnProperty(o\x2C 'stack');\n}\n\nfunction getUnhandledRejectionsMode() {\n  const { getOptionValue } = require('internal/options');\n  switch (getOptionValue('--unhandled-rejections')) {\n    case 'none':\n      return kIgnoreUnhandledRejections;\n    case 'warn':\n      return kAlwaysWarnUnhandledRejections;\n    case 'strict':\n      return kStrictUnhandledRejections;\n    case 'throw':\n      return kThrowUnhandledRejections;\n    case 'warn-with-error-code':\n      return kWarnWithErrorCodeUnhandledRejections;\n    default:\n      return kThrowUnhandledRejections;\n  }\n}\n\nfunction promiseRejectHandler(type\x2C promise\x2C reason) {\n  if (unhandledRejectionsMode === undefined) {\n    unhandledRejectionsMode = getUnhandledRejectionsMode();\n  }\n  switch (type) {\n    case kPromiseRejectWithNoHandler:\n      unhandledRejection(promise\x2C reason);\n      break;\n    case kPromiseHandlerAddedAfterReject:\n      handledRejection(promise);\n      break;\n    case kPromiseResolveAfterResolved:\n      resolveError('resolve'\x2C promise\x2C reason);\n      break;\n    case kPromiseRejectAfterResolved:\n      resolveError('reject'\x2C promise\x2C reason);\n      break;\n  }\n}\n\nconst multipleResolvesDeprecate = deprecate(\n  () => {}\x2C\n  'The multipleResolves event has been deprecated.'\x2C\n  'DEP0160'\n);\nfunction resolveError(type\x2C promise\x2C reason) {\n  // We have to wrap this in a next tick. Otherwise the error could be caught by\n  // the executed promise.\n  process.nextTick(() => {\n    if (process.emit('multipleResolves'\x2C type\x2C promise\x2C reason)) {\n      multipleResolvesDeprecate();\n    }\n  });\n}\n\nfunction unhandledRejection(promise\x2C reason) {\n  const emit = (reason\x2C promise\x2C promiseInfo) => {\n    if (promiseInfo.domain) {\n      return promiseInfo.domain.emit('error'\x2C reason);\n    }\n    return process.emit('unhandledRejection'\x2C reason\x2C promise);\n  };\n\n  maybeUnhandledPromises.set(promise\x2C {\n    reason\x2C\n    uid: ++lastPromiseId\x2C\n    warned: false\x2C\n    domain: process.domain\x2C\n    emit\n  });\n  // This causes the promise to be referenced at least for one tick.\n  ArrayPrototypePush(pendingUnhandledRejections\x2C promise);\n  setHasRejectionToWarn(true);\n}\n\nfunction handledRejection(promise) {\n  const promiseInfo = maybeUnhandledPromises.get(promise);\n  if (promiseInfo !== undefined) {\n    maybeUnhandledPromises.delete(promise);\n    if (promiseInfo.warned) {\n      const { uid } = promiseInfo;\n      // Generate the warning object early to get a good stack trace.\n      // eslint-disable-next-line no-restricted-syntax\n      const warning = new Error('Promise rejection was handled ' +\n                                `asynchronously (rejection id: ${uid})`);\n      warning.name = 'PromiseRejectionHandledWarning';\n      warning.id = uid;\n      ArrayPrototypePush(asyncHandledRejections\x2C { promise\x2C warning });\n      setHasRejectionToWarn(true);\n      return;\n    }\n  }\n  if (maybeUnhandledPromises.size === 0 && asyncHandledRejections.length === 0)\n    setHasRejectionToWarn(false);\n}\n\nconst unhandledRejectionErrName = 'UnhandledPromiseRejectionWarning';\nfunction emitUnhandledRejectionWarning(uid\x2C reason) {\n  const warning = getErrorWithoutStack(\n    unhandledRejectionErrName\x2C\n    'Unhandled promise rejection. This error originated either by ' +\n      'throwing inside of an async function without a catch block\x2C ' +\n      'or by rejecting a promise which was not handled with .catch(). ' +\n      'To terminate the node process on unhandled promise ' +\n      'rejection\x2C use the CLI flag `--unhandled-rejections=strict` (see ' +\n      'https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). ' +\n      `(rejection id: ${uid})`\n  );\n  try {\n    if (isErrorLike(reason)) {\n      warning.stack = reason.stack;\n      process.emitWarning(reason.stack\x2C unhandledRejectionErrName);\n    } else {\n      process.emitWarning(\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\n    }\n  } catch {\n    try {\n      process.emitWarning(\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\n    } catch {\n      // Ignore.\n    }\n  }\n\n  process.emitWarning(warning);\n}\n\n// If this method returns true\x2C we've executed user code or triggered\n// a warning to be emitted which requires the microtask and next tick\n// queues to be drained again.\nfunction processPromiseRejections() {\n  let maybeScheduledTicksOrMicrotasks = asyncHandledRejections.length > 0;\n\n  while (asyncHandledRejections.length > 0) {\n    const { promise\x2C warning } = ArrayPrototypeShift(asyncHandledRejections);\n    if (!process.emit('rejectionHandled'\x2C promise)) {\n      process.emitWarning(warning);\n    }\n  }\n\n  let len = pendingUnhandledRejections.length;\n  while (len--) {\n    const promise = ArrayPrototypeShift(pendingUnhandledRejections);\n    const promiseInfo = maybeUnhandledPromises.get(promise);\n    if (promiseInfo === undefined) {\n      continue;\n    }\n    promiseInfo.warned = true;\n    const { reason\x2C uid\x2C emit } = promiseInfo;\n\n    let needPop = true;\n    const {\n      [kAsyncIdSymbol]: promiseAsyncId\x2C\n      [kTriggerAsyncIdSymbol]: promiseTriggerAsyncId\x2C\n    } = promise;\n    // We need to check if async_hooks are enabled\n    // don't use enabledHooksExist as a Promise could\n    // come from a vm.* context and not have an async id\n    if (typeof promiseAsyncId !== 'undefined') {\n      pushAsyncContext(\n        promiseAsyncId\x2C\n        promiseTriggerAsyncId\x2C\n        promise\n      );\n    }\n    try {\n      switch (unhandledRejectionsMode) {\n        case kStrictUnhandledRejections: {\n          const err = isErrorLike(reason) ?\n            reason : generateUnhandledRejectionError(reason);\n          // This destroys the async stack\x2C don't clear it after\n          triggerUncaughtException(err\x2C true /* fromPromise */);\n          if (typeof promiseAsyncId !== 'undefined') {\n            pushAsyncContext(\n              promise[kAsyncIdSymbol]\x2C\n              promise[kTriggerAsyncIdSymbol]\x2C\n              promise\n            );\n          }\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\n          if (!handled) emitUnhandledRejectionWarning(uid\x2C reason);\n          break;\n        }\n        case kIgnoreUnhandledRejections: {\n          emit(reason\x2C promise\x2C promiseInfo);\n          break;\n        }\n        case kAlwaysWarnUnhandledRejections: {\n          emit(reason\x2C promise\x2C promiseInfo);\n          emitUnhandledRejectionWarning(uid\x2C reason);\n          break;\n        }\n        case kThrowUnhandledRejections: {\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\n          if (!handled) {\n            const err = isErrorLike(reason) ?\n              reason : generateUnhandledRejectionError(reason);\n              // This destroys the async stack\x2C don't clear it after\n            triggerUncaughtException(err\x2C true /* fromPromise */);\n            needPop = false;\n          }\n          break;\n        }\n        case kWarnWithErrorCodeUnhandledRejections: {\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\n          if (!handled) {\n            emitUnhandledRejectionWarning(uid\x2C reason);\n            process.exitCode = 1;\n          }\n          break;\n        }\n      }\n    } finally {\n      if (needPop) {\n        if (typeof promiseAsyncId !== 'undefined') {\n          popAsyncContext(promiseAsyncId);\n        }\n      }\n    }\n    maybeScheduledTicksOrMicrotasks = true;\n  }\n  return maybeScheduledTicksOrMicrotasks ||\n         pendingUnhandledRejections.length !== 0;\n}\n\nfunction getErrorWithoutStack(name\x2C message) {\n  // Reset the stack to prevent any overhead.\n  const tmp = Error.stackTraceLimit;\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\n  // eslint-disable-next-line no-restricted-syntax\n  const err = new Error(message);\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmp;\n  ObjectDefineProperty(err\x2C 'name'\x2C {\n    __proto__: null\x2C\n    value: name\x2C\n    enumerable: false\x2C\n    writable: true\x2C\n    configurable: true\x2C\n  });\n  return err;\n}\n\nfunction generateUnhandledRejectionError(reason) {\n  const message =\n    'This error originated either by ' +\n    'throwing inside of an async function without a catch block\x2C ' +\n    'or by rejecting a promise which was not handled with .catch().' +\n    ' The promise rejected with the reason ' +\n    `"${noSideEffectsToString(reason)}".`;\n\n  const err = getErrorWithoutStack('UnhandledPromiseRejection'\x2C message);\n  err.code = 'ERR_UNHANDLED_REJECTION';\n  return err;\n}\n\nfunction listenForRejections() {\n  setPromiseRejectCallback(promiseRejectHandler);\n}\nmodule.exports = {\n  hasRejectionToWarn\x2C\n  setHasRejectionToWarn\x2C\n  listenForRejections\x2C\n  processPromiseRejections\x2C\n};\n
code-source-info,0x3685f
code-creation,LazyCompile,10,128083,0x3685f02337c8,25,setHasRejectionToWarn node:internal/process/promises:77:31,0x111f698d2ca0,~
code-source-info,0x3685f02337c8,39,2144,2204,C0O2156C7O2165C12O2188C19O2186C24O2203,,
tick,0x1a4e72c28,128083,0,0x0,3,0x0,0x3685f023117d
profiler,end
delete,MemoryChunk,0x3492b5ac0000
delete,MemoryChunk,0x3d9b80180000
delete,MemoryChunk,0xa0ae21c0000
delete,MemoryChunk,0x111f698c0000
delete,MemoryChunk,0x25eb221c0000
delete,MemoryChunk,0x3b46b2000000
delete,MemoryChunk,0xd141ccc0000
delete,MemoryChunk,0x1e055ae40000
delete,MemoryChunk,0x1e27ac640000
delete,MemoryChunk,0x2fcdfef80000
delete,MemoryChunk,0x31015f6c0000
delete,MemoryChunk,0x26353d840000
delete,MemoryChunk,0x24471db00000
delete,MemoryChunk,0x1a3e29c80000
delete,MemoryChunk,0x1f083e6c0000
delete,MemoryChunk,0x1e372ce00000
delete,MemoryChunk,0xf2c00780000
delete,MemoryChunk,0x3685f0200000
delete,MemoryChunk,0x1715ca040000
delete,MemoryChunk,0x13959b00000
delete,MemoryChunk,0x25edec7c0000
delete,MemoryChunk,0x117768a00000
delete,MemoryChunk,0x2c0236b80000
delete,MemoryChunk,0xc1101d80000
delete,MemoryChunk,0x1ac1e9ec0000
delete,MemoryChunk,0x109c80000
delete,MemoryChunk,0x109cc0000
delete,MemoryChunk,0x109d00000
delete,MemoryChunk,0x130e98300000
delete,MemoryChunk,0x11d49cc80000
delete,MemoryChunk,0x21b1e54c0000
delete,LargeObjectChunk,0x130d36c40000
delete,MemoryChunk,0x130d36c40000
delete,MemoryChunk,0x170c25400000
delete,MemoryChunk,0x99aa4ec0000
delete,MemoryChunk,0x14727140000
delete,MemoryChunk,0x27cc95800000
delete,MemoryChunk,0x3cff4e500000
delete,MemoryChunk,0x1a4c4f500000
delete,MemoryChunk,0x34becee80000
delete,MemoryChunk,0xce51b040000
delete,MemoryChunk,0xe2358a80000
delete,MemoryChunk,0x30fa23380000
delete,MemoryChunk,0x14a0cebc0000
delete,MemoryChunk,0x1b40fffc0000
delete,MemoryChunk,0x6044c0c0000
delete,MemoryChunk,0x17313f500000
delete,MemoryChunk,0x1f8889000000
delete,MemoryChunk,0x108bdd040000
